package pb0u;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import pc.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=PB0U ****
// This program displays the Production Progress Report Menu.
// It provides entry to the subordinate applications.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 03/14/97   AELKIN   New application.
// 10/27/97   KGRAHA   PCA400 - Add date maintenance selection.
// 12/23/97   KGRAHA   PCA400 - Add check for selection 3 in
//                     PB0U400.
// 09/30/98   NREDDY   PCF999-TO DISPLAY APPL. NAMES ON SCREEN
// *********************
Program PB0U type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PC00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  PCWREC PCWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use PB0UM.PB0UM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPC001: XPPC001();
     /* ------------------------------------------------------------*/
     /* Execute the main process.*/
     /* ------------------------------------------------------------*/

    goto PB0U001;


    PB0U001: PB0U001();
     /* ------------------------------------------------------------*/
     /* Execute the main process.*/
     /* ------------------------------------------------------------*/

    goto PB0U001;


  end // end main
end // end PB0U

// Main process
Function PB0U001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  PB0U100(); /* Format and display the map*/

  PB0U200(); /* Check attention identifier*/

  PB0U300(); /* Reset fields to normal intensity*/

  PB0U400(); /* Verify the data that was entered*/

  PB0U500(); /* Process valid input request*/


end // end PB0U001

// Format and display the map
Function PB0U100()
   /* ------------------------------------------------------------*/
   /* If no error to display, format the map output area.*/
   /* Indicate sound audible alarm for any error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message*/

    set PB0UM001 initial; /* Clear map output area*/

    PB0UM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

    PB0UM001.XGPCD = PCWREC.XGPCD;

    if (PB0UM001.XGPCD in XGPTBL.XGPCD)
      PB0UM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end

    PB0UM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
    COMMAREA.CAITEM = " "; /* Clear application data*/

  else

    set PB0UM001 alarm; /* Indicate sound alarm*/

  end

  if (PCWREC.XXXMSGNO != 0)

    if (PCWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(PCWREC.XXXMSGNO);
    end
                                   /* Error message passed back from*/
                                  /* called application*/
    PCWREC.XXXMSGNO = 0; /* Rest error message*/

    set PB0UM001 alarm; /* Indicate sound alarm*/

  end

  converse PB0UM001 ;


end // end PB0U100

// Check attention identifier
Function PB0U200()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set PB0UM001 initial; /* Clear the map fields*/

    exit stack; /* Exit to redisplay map*/

  end

  if (PB0UM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      COMMAREA.CATOAP = PB0UM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = PB0UM001.CAITEM; /* Application data*/

      XSPCS01(); /* Exit to another application*/

    else

      converseLib.validationFailed(5); /* Indicate PF key not valid*/

    end

    set PB0UM001.CATOAP cursor, modified, bold; /* Highlight*/

    PB0UM001.XXXPRCNM = "PB0U200"; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "PB0UM001"; /* Move map name for help*/
    else

      if (converseVar.eventKey is pf3) /* PF3 was pressed*/
        COMMAREA.CATOAP = "PC0A"; /* Transfer to P.O. menu*/
      end
    end

    XSPCS01(); /* Exit to another application*/

    PB0UM001.XXXPRCNM = "PB0U200"; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    PB0UM001.XXXPRCNM = "PB0U200"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      set PB0UM001 initial; /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end


end // end PB0U200

// Reset highlighted fields
Function PB0U300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set PB0UM001.PB0UMSEL initialAttributes; /* Menu selection*/
  set PB0UM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set PB0UM001.CAITEM initialAttributes; /* FAST PATH application data*/


end // end PB0U300

// Verify data that was entered
Function PB0U400()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Verify the menu selection that was entered.*/
   /* Exit to redisplay the map if any error was found.*/
   /* ------------------------------------------------------------*/

  if (PB0UM001.CAITEM > " ") /* Application data was entered*/

    set PB0UM001.CAITEM cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(7); /* Indicate enter only with FAST PATH*/
    PB0UM001.XXXPRCNM = "PB0U400"; /* Process name*/

  end


  if (PB0UM001.PB0UMSEL > 0) /* Menu selection was entered*/

    if ((PB0UM001.PB0UMSEL != 1 /* If selection is wrong*/
     && PB0UM001.PB0UMSEL != 2  
     && PB0UM001.PB0UMSEL != 3) 
     || PB0UM001.XGPCD != "03") /* If gpc code not equal apparel*/

      set PB0UM001.PB0UMSEL cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(9); /* Indicate invalid selection*/
      PB0UM001.XXXPRCNM = "PB0U400"; /* Process name*/

    end

  end


  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end


end // end PB0U400

// Process valid input request
Function PB0U500()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/


  PCWREC.XGPCD = COMMAREA.XGPCD;

  if (PB0UM001.PB0UMSEL > 0) /* Menu selection was entered*/

    COMMAREA.CAUSERA = PCWREC.CAUSERA; /* Move common user record to*/
                                  /* commarea*/
    if (PB0UM001.PB0UMSEL == 1)
      COMMAREA.CATOAP = "PB0V"; /* To application*/
    else
      if (PB0UM001.PB0UMSEL == 2)
        COMMAREA.CATOAP = "PB0W";
      else
        if (PB0UM001.PB0UMSEL == 3)
          COMMAREA.CATOAP = "PB0Y";
        end
      end
    end

    sysVar.transferName = COMMAREA.CATOAP;

    XSPCS01(); /* Exit to another application*/

    set PB0UM001.PB0UMSEL cursor, modified, bold; /* Highlight*/

    PB0UM001.XXXPRCNM = "PB0U500"; /* Process name*/

  end

end // end PB0U500

