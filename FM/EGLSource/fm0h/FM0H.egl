package fm0h;

import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPTA0P;
import corpcom3.XPXCL01;
import corpcom3.XPXCT01;
import corpcom3.XPXX001;
import corpcom4.XSFKS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XCLCD;
import corpx1.XCLTBL;
import corpx1.XCTCD;
import corpx1.XCTTBL;
import fb.common.FB9REC;
import fk.common.*;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ta.common.TARJCL;
import vv.common.VLRPSH01;
import vv.common.VMATRL01;
import vv.common.VMATWH01;
import vv.common.VMCOLR01;
import vv.common.VMGRP001;
import vv.common.VVNDR001;
//*** PROGRAM=FM0H ****
// THIS APPLICATION IS PART OF THE FOOTWEAR MATERIALS SYSTEM.
// 
// THIS APPLICATION PROVIDES THE CAPABLILITY OF SUBMITTING
// BATCH APPLICATIONS TO CREATE INVENTORY TRACKING REPORTS.
// USERS WILL FIRST SPECIFY AN OUTPUT DESTINATION, THEN WILL
// BE ALLOWED TO SUBMIT ONE OR MORE REPORTS FROM THE
// DISPLAYED OPTIONS.  WHEN A REPORT IS SELECTED, SUBSEQUENT
// MAPS WILL BE DISPLAYED TO ALLOW THE USERS TO ASSIGN
// SELECTION CRITERIA.  AFTER A REPORT IS SUBMITTED CONTROL
// WILL RETURN TO THE MAIN MAP.
// 
// USERS WILL BE ALLOWED TO EXIT THIS APPLICATION VIA PFKEYS
// OR FASTPATH, WITH THE 'OPTION' FIELD AVAILABLE FOR USE WITH
// ANY APPLICATION TRANSFER.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      07/30/93  JALLE1  New application.
// y2kfix   10/31/97  oricha  y2k modifications made to
//                            maps 110,210,310,410 to zero fill
//                            fm0im-inv-mo.
// *********************
Program FM0H type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FKWREC FKWREC; // record
  FM0HW00 FM0HW00; // record
  FM0HW01 FM0HW01; // record
  FM0HW02 FM0HW02; // record
  FM0HW03 FM0HW03; // record
  FM0HW04 FM0HW04; // record
  FM0HW05 FM0HW05; // record
  FM0HW06 FM0HW06; // record
  FM0HW07 FM0HW07; // record
  FM0HW08 FM0HW08; // record
  FY1REC FY1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  VLRPSH01 VLRPSH01; // record
  VMATRL01 VMATRL01; // record
  VMATWH01 VMATWH01; // record
  VMCOLR01 VMCOLR01; // record
  VMGRP001 VMGRP001; // record
  VVNDR001 VVNDR001; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FM0HT01 {deleteAfterUse = yes}; // table
  use FM0HT02 {deleteAfterUse = yes}; // table
  use FM0HT03 {deleteAfterUse = yes}; // table
  use FM0HT04 {deleteAfterUse = yes}; // table
  use FM0HT05 {deleteAfterUse = yes}; // table
  use FM0HT06 {deleteAfterUse = yes}; // table
  use FM0HT07; // table
  use FM0HT08; // table
  use FM0HT51 {deleteAfterUse = yes}; // table
  use FM0HT52 {deleteAfterUse = yes}; // table
  use FM0HT53 {deleteAfterUse = yes}; // table
  use FM0HT54 {deleteAfterUse = yes}; // table
  use FM0HT55 {deleteAfterUse = yes}; // table
  use FM0HT56 {deleteAfterUse = yes}; // table
  use FM0HT57; // table
  use FM0HT58; // table
  use XCLTBL; // table
  use XCTTBL; // table
  use FM0HM
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FM0HM110 initial; /* M001 input/output*/
    set FM0HM002 initial; /* M002 input/output*/
    set FM0HM007 initial; /* M007 input/output*/
    set FM0HM008 initial; /* M008 input/output*/
    set FM0HW00 empty; /* Working storage*/
    set FM0HW02 empty; /* Working storage*/
    set FM0HW07 empty; /* Working storage*/
    set FM0HW08 empty; /* Working storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA6REC empty; /* Internal reader record*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Initialize application variables.*/
     /* ------------------------------------------------------------*/
    ;
    FM0HW00.FM0HW-OUTPUT-SPECIFIED-SW = "N"; /* Output spec switch*/
    FM0HW00.FM0HW-NBR-SELECTIONS = 9; /* Nbr of select fields*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0H-0001; /* Converse the main process*/
    ;
    ;
    FM0H-0001: FM0H-0001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0H-0002; /* Converse the main process*/
    ;
    ;
    FM0H-0002: FM0H-0002();
     /* ---------------------------------------------------------------*/
     /* Flow to converse the main process.*/
     /* ---------------------------------------------------------------*/
    goto FM0H-0002;
  end // end main
end // end FM0H

// Determine region (prod/test)
Function FM0H-0001()
   /* ------------------------------------------------------------*/
   /* Call sub-routine to find which environment*/
   /* the program is executing in, development*/
   /* or production.*/
   /* ------------------------------------------------------------*/
  ;
  set TA3REC empty;
  ;
  TA3REC.TA3OPTN = "ASSIGN ";
  ;
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)          /* Good return code*/
    ;
     /* next sentence*/
    ;
  else
    ;
    FKWREC.XXX-MOD-ID = "0001"; /* module identification*/
    converseLib.validationFailed(10); /* System error*/
    exit stack;
  end
  ;
  ;
end // end FM0H-0001

// Determine which selections
Function FM0H-0002()
   /* ------------------------------------------------------------*/
   /* This process will determine which reports are to be*/
   /* submitted.  For each report selected, process all logic*/
   /* necessary to submit the report.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HW00.FM0HM-SELECT[1] == "S")
    FM0H-0100(); /* Get output destination*/
  end
  ;
  if (FM0HW00.FM0HM-SELECT[2] == "S")
    FM0H-0200(); /* Inventory Position*/
  end
  ;
  if (FM0HW00.FM0HM-SELECT[3] == "S")
    FM0H-0300(); /* Maximum Capacity*/
  end
  ;
  if (FM0HW00.FM0HM-SELECT[4] == "S")
    FM0H-0400(); /* Fcty P.O. vs LRPS by Mtl*/
  end
  ;
  if (FM0HW00.FM0HM-SELECT[5] == "S")
    FM0H-0500(); /* Material Needs vs. Capacity*/
  end
  ;
  if (FM0HW00.FM0HM-SELECT[6] == "S")
    FM0H-0600(); /* Fcty P.O. vs LRPS by Ctry/Fcty*/
  end
  ;
  if (FM0HW00.FM0HM-SELECT[7] == "S")
    FM0H-0700(); /* Ordered vs. Shipped*/
  end
  ;
  if (FM0HW00.FM0HM-SELECT[8] == "S")
    FM0H-0800(); /* Non-usable Excess Mtls Summary*/
  end
  ;
  if (FM0HW00.FM0HM-SELECT[9] == "S")
    FM0H-0900(); /* Non-usable Excess Mtls Detail*/
  end
  ;
  ;
  FM0H-9900(); /* Main map*/
  ;
  ;
end // end FM0H-0002

// Specify output destination
Function FM0H-0100()
   /* --------------------------------------------------------------*/
   /* IF SPECIFY OUTPUT DESTINATION IS SELECTED ;*/
   /* SETUP CALL TO TA0P TO GET DESTINATION.*/
   /* --------------------------------------------------------------*/
  ;
  set TA6REC empty;
  TA6REC.TA6SUBSW = "N"; /* GET REPORT DISTRIBUTION ONLY*/
  TA6REC.TA6MSGSW = "N"; /* DONT DISPLAY MSG WHEN DONE*/
  ;
  XPTA0P();
  ;
  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && TA6REC.TA6RTNCD == "0")        /* AND NORMAL RETURN*/
    FM0HW00.FM0HM-SELECT[1] = "*"; /* Output dest specified*/
    FM0HW00.FM0HW-OUTPUT-SPECIFIED-SW = "Y";
  else
    ;
    if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
     && TA6REC.TA6RTNCD == "1")        /* USER CANCELLED*/
      FM0HM110.FM0HM-SELECT[1] = "S"; /* Reset select*/
      FM0HW00.FM0HW-OUTPUT-SPECIFIED-SW = "N";
      set FM0HM110.FM0HM-SELECT[1] cursor; /* Reset cursor*/
      converseLib.validationFailed(35); /* INDICATE USER CANCELLED*/
      FKWREC.XXX-MOD-ID = "0100"; /* MODULE ID.*/
      exit stack; /* EXIT TO DISPLAY MAP.*/
    else
      ;
      FM0HM110.FM0HM-SELECT[1] = "S"; /* Reset select*/
      FM0HW00.FM0HW-OUTPUT-SPECIFIED-SW = "N";
      set FM0HM110.FM0HM-SELECT[1] cursor; /* Reset cursor*/
      converseLib.validationFailed(10); /* System error*/
      FKWREC.XXX-MOD-ID = "0100"; /* MODULE ID.*/
    end
  end
  ;
  ;
end // end FM0H-0100

// Inventory Position
Function FM0H-0200()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0H-0210(); /* Obtain the data to display*/
  ;
  FM0H-0220(); /* Format and display the map*/
  ;
  FM0H-0230(); /* Check attention identifier*/
  ;
  FM0H-0240(); /* Reset fields to normal intensity*/
  ;
  FM0H-0250(); /* Verify the entered data*/
  ;
  FM0H-0260(); /* Process valid input request*/
  ;
  ;
end // end FM0H-0200

// Obtain data to display
Function FM0H-0210()
   /* --------------------------------------------------------------------*/
   /* Set up default values.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No error*/
   || converseVar.validationMsgNum == 27) /* Job submitted*/
    ;
    FM0H-0211(); /* Select MAX DCMPNT.VLRPSH01*/
    FM0H-0212(); /* Select DCMPNT.VLRPSH01 (get model nbr)*/
    ;
    FM0HM001.FBAMDNBR = VLRPSH01.FBAMDNBR; /* Model nbr*/
    ;
    FM0HW00.FM0HW-FMAT-CCYYMMDD = VLRPSH01.FB8BUYDT;
    if (FM0HW00.FM0HW-FMAT-MM < 7)
      FM0HW00.FM0HW-FMAT-CCYY = FM0HW00.FM0HW-FMAT-CCYY - 1;
      FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-FMAT-MM + 6;
    else
      FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-FMAT-MM - 6;
    end
    FM0HW00.FM0HW-BEG-MO-YY = FM0HW00.FM0HW-FMAT-YY;
    FM0HW00.FM0HW-BEG-MO-MM = FM0HW00.FM0HW-FMAT-MM;
    FM0HM001.FM0HM-BEG-MO = FM0HW00.FM0HM-BEG-MO;
    ;
    FM0HM001.FK-VEND-CD = "*"; /* Vendor*/
    FM0HM001.FK-MAT-NBR = "*"; /* Material*/
    FM0HM001.XCLCD = "*"; /* Color*/
    FM0HM001.XCTCD = "*"; /* Country*/
    FM0HM001.FY1FCTYC = "*"; /* Factory*/
    ;
  end
  ;
  ;
end // end FM0H-0210

// Select MAX DCMPNT.VLRPSH01
Function FM0H-0211()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  ;
  try
    call "IO6250" ("SM", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* * Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0211"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT MAX DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0211

// Select DCMPNT.VLRPSH01
Function FM0H-0212()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6250" ("SB", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0212"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0212

// Format and converse map
Function FM0H-0220()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0HM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0HM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0HM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0HM001 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0HM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0HM001.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Job was submitted*/
    ;
    set FM0HM001.FBAMDNBR cursor;
  end
  ;
  ;
  converse FM0HM001 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0HM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0HM001.CAITEM; /* Application data*/
  ;
  ;
end // end FM0H-0220

// Check attention identifier
Function FM0H-0230()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    COMMAREA.CATOAP = "FM0H"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM001.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM001.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      COMMAREA.CATOAP = FM0HM001.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0HM001.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0HM001.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "0230"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0HM001"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0HM001.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0HM001.CAITEM; /* item*/
    end
    ;
    ;
    set FKWREC empty;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "0230"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0H-0230

// Reset Highlighted fields
Function FM0H-0240()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0HM001.FBAMDNBR initialAttributes;
  set FM0HM001.FM0HM-BEG-MO initialAttributes;
  set FM0HM001.FK-VEND-CD initialAttributes;
  set FM0HM001.FK-MAT-NBR initialAttributes;
  set FM0HM001.XCLCD initialAttributes;
  set FM0HM001.XCTCD initialAttributes;
  set FM0HM001.FY1FCTYC initialAttributes;
  ;
  set FM0HM001.CATOAP initialAttributes;
  set FM0HM001.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM001.XCLCD == "?" /* XCL list requested*/
   || FM0HM001.XCTCD == "?") /* XCT list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "0240"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCT codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM001.XCTCD == "?") /* XCT list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM001.XCTCD = "*"; /* Restore prior code*/
    else
      FM0HM001.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM001.XCTCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM001.XCLCD == "?") /* XCL list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM001.XCLCD = "*"; /* Restore prior code*/
    else
      FM0HM001.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM001.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "0240"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0H-0240

// Verify entered fields
Function FM0H-0250()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM001.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0HM001.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0250"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify factory.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM001.FY1FCTYC == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HM001.FY1FCTYC == " ") /* If blank*/
      ;
      set FM0HM001.FY1FCTYC cursor, bold;
      converseLib.validationFailed(121); /* Factory code is missing or invalid*/
      FKWREC.XXX-MOD-ID = "0250"; /* Module identification*/
    else
      ;
      FM0H-0251(); /* Select DFCTY.VFCTY001*/
      ;
      if (FM0HM001.XCTCD != "*")
        ;
        if (FM0HM001.XCTCD != FY1REC.XCTCD)
          ;
          set FM0HM001.XCTCD cursor, bold;
          set FM0HM001.FY1FCTYC bold;
          converseLib.validationFailed(80); /* Fcty does not exist in ctry*/
          FKWREC.XXX-MOD-ID = "0250"; /* Module identification*/
        end
      end
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify country.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM001.XCTCD == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HM001.XCTCD in XCTTBL.XCTCD /* If in table*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0HM001.XCTCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0250"; /* Module identification*/
      converseLib.validationFailed(122); /* Country code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material/color combination.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM001.FK-MAT-NBR != "*"
   && FM0HM001.FK-MAT-NBR != " "
   && FM0HM001.XCLCD != "*"
   && FM0HM001.XCLCD != " ") /* If both material and color entered*/
    ;
    FM0H-0255(); /* Declare DCMPNT.VMCOLR01 csr*/
    FM0H-0256(); /* Fetch DCMPNT.VMCOLR01 csr*/
    FM0H-0257(); /* Close DCMPNT.VMCOLR01 csr*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify color code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM001.XCLCD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    if (FM0HM001.XCLCD in XCLTBL.XCLCD /* If in XCL table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* next sentence*/
    else
      ;
      set FM0HM001.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0250"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM001.FK-MAT-NBR == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0252(); /* Select DCMPNT.VMATRL01*/
    ;
    if (FM0HM001.FK-VEND-CD != "*")
      ;
      if (VMATRL01.FK-VEND-CD != FM0HM001.FK-VEND-CD)
        ;
        set FM0HM001.FK-VEND-CD cursor, bold;
        set FM0HM001.FK-MAT-NBR bold;
        converseLib.validationFailed(76); /* Vend/mtl combo not valid*/
        FKWREC.XXX-MOD-ID = "0250"; /* Module identification*/
      end
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM001.FK-VEND-CD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0253(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify either vendor, material, color, ctry, or fcty was*/
   /* specified.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM001.FK-VEND-CD == "*" /* Vendor wildcard*/
   && FM0HM001.FK-MAT-NBR == "*" /* Mat wildcard*/
   && FM0HM001.XCLCD == "*"      /* Clr wildcarded*/
   && FM0HM001.FY1FCTYC == "*"   /* Factory wildcarded*/
   && FM0HM001.XCTCD == "*")     /* Country wildcarded*/
    ;
    ;
    set FM0HM001.FK-VEND-CD cursor, bold; /* Highlight*/
    set FM0HM001.FK-MAT-NBR bold; /* Highlight*/
    set FM0HM001.XCLCD bold; /* Highlight*/
    set FM0HM001.FY1FCTYC bold; /* Highlight*/
    set FM0HM001.XCTCD bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0250"; /* Module identification*/
    converseLib.validationFailed(149); /* At least 1 field must be specified*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify beginning month.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0HW00.FM0HM-BEG-MO = FM0HM001.FM0HM-BEG-MO;
  ;
  if (FM0HW00.FM0HW-BEG-MO-MM > 0
   && FM0HW00.FM0HW-BEG-MO-MM <= 12)
    ;
     /* Next sentence*/
  else
    ;
    set FM0HM001.FM0HM-BEG-MO cursor, bold;
    converseLib.validationFailed(84); /* Date is missing or invalid*/
    FKWREC.XXX-MOD-ID = "0250";
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify lrps nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0H-0254(); /* Select DCMPNT.VLRPSH01*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0H-0250

// Select DFCTY.VFCTY001
Function FM0H-0251()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0HM001.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM001.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0251"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0251"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DFCTY.VFCTY001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0251

// Select DCMPNT.VMATRL01
Function FM0H-0252()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0HM001.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM001.FK-MAT-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0252"; /* Module identification*/
      converseLib.validationFailed(26); /* Material nbr missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0252"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0252

// Select DCMPNT.VVNDR001
Function FM0H-0253()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0HM001.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM001.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0253"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0253"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0253

// Select DCMPNT.VLRPSH01
Function FM0H-0254()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  VLRPSH01.FBAMDNBR = FM0HM001.FBAMDNBR;
  ;
  ;
  try
    call "IO6250" ("S ", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM001.FBAMDNBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0254"; /* Module identification*/
      converseLib.validationFailed(46); /* LRPS nbr does not exist*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0254"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0254

// Declare DCMPNT.VMCOLR01 csr
Function FM0H-0255()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FM0HM001.FK-MAT-NBR;
  VMCOLR01.XCLCD = FM0HM001.XCLCD;
  ;
  ;
  try
    call "IO6210" ("S2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0255"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0255

// Fetch DCMPNT.VMCOLR01 csr
Function FM0H-0256()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6210" ("N2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM001.FK-MAT-NBR cursor, bold; /* Highlight*/
      set FM0HM001.XCLCD bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0256"; /* Module identification*/
      converseLib.validationFailed(139); /* Material/color not defined*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0256"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0256

// Close DCMPNT.VMCOLR01 csr
Function FM0H-0257()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6210" ("C2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0257"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0257

// Process valid input request
Function FM0H-0260()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  FM0HW00.FM0HW-TBL-IDX = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format parameters to be passed to bath applications.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0HW01 empty; /* Clear parameter area*/
  ;
  FM0HW01.FM0HW-LRPS-NBR = FM0HM001.FBAMDNBR; /* Lrps nbr*/
  ;
  FM0HW00.FM0HM-BEG-MO = FM0HM001.FM0HM-BEG-MO;
  FM0HW00.FM0HW-FMAT-YY = FM0HW00.FM0HW-BEG-MO-YY;
  FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-BEG-MO-MM;
  FM0HW00.FM0HW-FMAT-DD = 1;
  if (FM0HW00.FM0HW-FMAT-YY < 80)
    FM0HW00.FM0HW-FMAT-CC = 20;
  else
    FM0HW00.FM0HW-FMAT-CC = 19;
  end
  ;
  FM0HW01.FM0HW-BEG-MO-CCYYMMDD = FM0HW00.FM0HW-FMAT-CCYYMMDD;
  FM0HW01.FK-VEND-CD = FM0HM001.FK-VEND-CD; /* Vendor*/
  FM0HW01.FK-MAT-NBR = FM0HM001.FK-MAT-NBR; /* Material*/
  FM0HW01.XCLCD = FM0HM001.XCLCD; /* Color*/
  FM0HW01.XCTCD = FM0HM001.XCTCD; /* Country*/
  FM0HW01.FY1FCTYC = FM0HM001.FY1FCTYC; /* Factory*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA3REC.TA3RGNID == "03") /* If production environment*/
    ;
    FM0H-0261(); /* Format and submit production JCL*/
  else
    ;
    FM0H-0262(); /* Format and submit test JCL*/
  end
  ;
  ;
end // end FM0H-0260

// Submit FM1001 prod jcl
Function FM0H-0261()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT01.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW01.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT01.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT01.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT01.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[2] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0261"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM001 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0261"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0261

// Submit FM1001 test jcl
Function FM0H-0262()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT51.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW01.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT51.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT51.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT51.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[2] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0262"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM001 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0262"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0262

// Maximum Capacity Rpt
Function FM0H-0300()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0H-0310(); /* Obtain the data to display*/
  ;
  FM0H-0320(); /* Format and display the map*/
  ;
  FM0H-0330(); /* Check attention identifier*/
  ;
  FM0H-0340(); /* Reset fields to normal intensity*/
  ;
  FM0H-0350(); /* Verify the entered data*/
  ;
  FM0H-0360(); /* Process valid input request*/
  ;
  ;
end // end FM0H-0300

// Obtain data to display
Function FM0H-0310()
   /* --------------------------------------------------------------------*/
   /* Set up default values.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No error*/
   || converseVar.validationMsgNum == 27) /* Job submitted*/
    ;
    /* -------------------------------------------------------------------*/
    /* Calculate beginning month*/
    /* -------------------------------------------------------------------*/
    ;
    FM0H-0311(); /* Select DFBUY.VFMCTL01*/
    ;
    FM0HW00.FM0HW-FMAT-CCYYMMDD = FB9REC.FB8BUYDT;
    FM0HW00.FM0HW-FMAT-PO-CCYY = FM0HW00.FM0HW-FMAT-CCYY;
    FM0HW00.FM0HW-FMAT-PO-DD = FM0HW00.FM0HW-FMAT-MM;
    FM0HW00.FM0HW-FMAT-PO-PP = FM0HW00.FM0HW-FMAT-MM;
    ;
    if (FM0HW00.FM0HW-FMAT-PO-PP < 3)
      ;
      FM0HW00.FM0HW-FMAT-PO-CCYY = FM0HW00.FM0HW-FMAT-PO-CCYY - 1;
      FM0HW00.FM0HW-FMAT-PO-PP = FM0HW00.FM0HW-FMAT-PO-PP + 10;
    else
      ;
      FM0HW00.FM0HW-FMAT-PO-PP = FM0HW00.FM0HW-FMAT-PO-PP - 2;
    end
    ;
     /* == > Format PO date to map*/
    ;
    FM0HM002.FM0HM-FK-NIKE-PO-YY = FM0HW00.FM0HW-FMAT-PO-YY;
    FM0HM002.FM0HM-FK-NIKE-PO-PP = FM0HW00.FM0HW-FMAT-PO-PP;
    FM0HM002.FM0HM-FK-NIKE-PO-DD = FM0HW00.FM0HW-FMAT-PO-DD;
    ;
    ;
    /* -------------------------------------------------------------------*/
    /* Set up other default values.*/
    /* -------------------------------------------------------------------*/
    ;
    FM0HM002.FK-VEND-CD = "*"; /* Vendor*/
    FM0HM002.FK-MAT-GRP-CD = "*"; /* Material group*/
  end
  ;
  ;
end // end FM0H-0310

// Select DFBUY.VFMCTL01
Function FM0H-0311()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FB9REC empty;
  ;
  ;
  try
    call "IO3650" ("S ", SQLCA, FB9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0311"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DFBUY.VFMCTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFMCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB9REC.FB9GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0311

// Format and converse the map
Function FM0H-0320()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0HM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0HM002.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0HM002.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0HM002 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0HM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0HM002.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Job was submitted*/
    ;
    set FM0HM002.FM0HM-FK-NIKE-PO-YY cursor;
  end
  ;
  ;
  converse FM0HM002 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0HM002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0HM002.CAITEM; /* Application data*/
  ;
  ;
end // end FM0H-0320

// Check attention identifier
Function FM0H-0330()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    COMMAREA.CATOAP = "FM0H"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM002.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM002.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      COMMAREA.CATOAP = FM0HM002.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0HM002.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0HM002.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "0330"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      exit stack;
      ;
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM002.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0HM002"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0HM002.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0HM002.CAITEM; /* item*/
    end
    ;
    ;
    set FKWREC empty;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "0330"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0H-0330

// Reset Highlighted fields
Function FM0H-0340()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0HM002.FM0HM-FK-NIKE-PO-YY initialAttributes;
  set FM0HM002.FM0HM-FK-NIKE-PO-PP initialAttributes;
  set FM0HM002.FM0HM-FK-NIKE-PO-DD initialAttributes;
  set FM0HM002.FK-VEND-CD initialAttributes;
  set FM0HM002.FK-MAT-GRP-CD initialAttributes;
  ;
  set FM0HM002.CATOAP initialAttributes;
  set FM0HM002.CAITEM initialAttributes;
  ;
end // end FM0H-0340

// Verify entered fields
Function FM0H-0350()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM002.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0HM002.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0350"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material group code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM002.FK-MAT-GRP-CD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0351(); /* Select DCMPNT.VMGRP001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM002.FK-VEND-CD == "*") /* If wildcard*/
    ;
    if (FM0HM002.FK-MAT-GRP-CD == "*" /* If mat grp wildcarded*/
     || FM0HM002.FK-MAT-GRP-CD == " ") /* Or blank*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0HM002.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0350"; /* Module identification*/
      converseLib.validationFailed(146); /* You must specify vendor for this*/
                                   /* material grp*/
    end
  else
    FM0H-0352(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify beginning po date.*/
   /* ---------------------------------------------------------------*/
  ;
   /* Verify production and delivery months always 2 months apart.*/
  ;
  if (FM0HM002.FM0HM-FK-NIKE-PO-PP == 11)
    if (FM0HM002.FM0HM-FK-NIKE-PO-DD != 1)
      ;
      converseLib.validationFailed(129); /* PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "0350"; /* Module identification*/
      set FM0HM002.FM0HM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
      set FM0HM002.FM0HM-FK-NIKE-PO-DD bold; /* Highlight*/
    end
  else
    ;
    if (FM0HM002.FM0HM-FK-NIKE-PO-PP == 12)
      if (FM0HM002.FM0HM-FK-NIKE-PO-DD != 2)
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "0350"; /* Module identification*/
        set FM0HM002.FM0HM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
        set FM0HM002.FM0HM-FK-NIKE-PO-DD bold; /* Highlight*/
      end
    else
      ;
      FM0HW00.FM0HW-COUNT = FM0HM002.FM0HM-FK-NIKE-PO-DD       - FM0HM002.FM0HM-FK-NIKE-PO-PP;
      ;
      if (FM0HW00.FM0HW-COUNT != 2) /* Not 2 months different*/
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "0350"; /* Module identification*/
        set FM0HM002.FM0HM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
        set FM0HM002.FM0HM-FK-NIKE-PO-DD bold; /* Highlight*/
      end
    end
  end
  ;
  ;
   /* Verify delivery month is valid*/
  ;
  if (FM0HM002.FM0HM-FK-NIKE-PO-DD >= 1
   && FM0HM002.FM0HM-FK-NIKE-PO-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "0350"; /* Module identification*/
    set FM0HM002.FM0HM-FK-NIKE-PO-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* Verify production month is valid*/
  ;
  if (FM0HM002.FM0HM-FK-NIKE-PO-PP >= 1
   && FM0HM002.FM0HM-FK-NIKE-PO-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "0350"; /* Module identification*/
    set FM0HM002.FM0HM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0H-0350

// Select DCMPNT.VMGRP001
Function FM0H-0351()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0HM002.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0HM002.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM002.FK-VEND-CD cursor, bold; /* Highlight*/
      set FM0HM002.FK-MAT-GRP-CD bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0351"; /* Module identification*/
      converseLib.validationFailed(123); /* Material group code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0351"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0351

// Select DCMPNT.VVNDR001
Function FM0H-0352()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0HM002.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM002.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0352"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0352"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0352

// Process valid input request
Function FM0H-0360()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  FM0HW00.FM0HW-TBL-IDX = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format parameters to be passed to batch applications.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0HW02 empty; /* Clear parameter area*/
  ;
  FM0HW00.FM0HW-FMAT-PO-YY = FM0HM002.FM0HM-FK-NIKE-PO-YY;
  FM0HW00.FM0HW-FMAT-PO-PP = FM0HM002.FM0HM-FK-NIKE-PO-PP;
  FM0HW00.FM0HW-FMAT-PO-DD = FM0HM002.FM0HM-FK-NIKE-PO-DD;
  if (FM0HW00.FM0HW-FMAT-PO-YY < 80)
    FM0HW00.FM0HW-FMAT-PO-CC = 20;
  else
    FM0HW00.FM0HW-FMAT-PO-CC = 19;
  end
  FM0HW02.FM0HW-BEG-PO-DT = FM0HW00.FM0HW-FMAT-PO-DT;
  ;
  FM0HW02.FK-VEND-CD = FM0HM002.FK-VEND-CD; /* Vendor*/
  FM0HW02.FK-MAT-GRP-CD = FM0HM002.FK-MAT-GRP-CD; /* Mtl group*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA3REC.TA3RGNID == "03") /* If production environment*/
    ;
    FM0H-0361(); /* Format and submit production JCL*/
  else
    ;
    FM0H-0362(); /* Format and submit test JCL*/
  end
  ;
  ;
end // end FM0H-0360

// Submit FM1201 prod jcl
Function FM0H-0361()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT02.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW02.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT02.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT02.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT02.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[3] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0361"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM002 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0361"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0361

// Submit FM1201 test jcl
Function FM0H-0362()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT52.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW02.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT52.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT52.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT52.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[3] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0362"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM002 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0362"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0362

// Fcty PO vs LRPS by Mtl
Function FM0H-0400()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0H-0410(); /* Obtain the data to display*/
  ;
  FM0H-0420(); /* Format and display the map*/
  ;
  FM0H-0430(); /* Check attention identifier*/
  ;
  FM0H-0440(); /* Reset fields to normal intensity*/
  ;
  FM0H-0450(); /* Verify the entered data*/
  ;
  FM0H-0460(); /* Process valid input request*/
  ;
  ;
end // end FM0H-0400

// Obtain data to display
Function FM0H-0410()
   /* --------------------------------------------------------------------*/
   /* Set up default values.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No error*/
   || converseVar.validationMsgNum == 27) /* Job submitted*/
    ;
    FM0H-0411(); /* Select MAX DCMPNT.VLRPSH01*/
    FM0H-0412(); /* Select DCMPNT.VLRPSH01 (get model nbr)*/
    ;
    FM0HM003.FBAMDNBR = VLRPSH01.FBAMDNBR; /* Model nbr*/
    ;
    FM0HW00.FM0HW-FMAT-CCYYMMDD = VLRPSH01.FB8BUYDT;
    if (FM0HW00.FM0HW-FMAT-MM < 7)
      FM0HW00.FM0HW-FMAT-CCYY = FM0HW00.FM0HW-FMAT-CCYY - 1;
      FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-FMAT-MM + 6;
    else
      FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-FMAT-MM - 6;
    end
    FM0HW00.FM0HW-BEG-MO-YY = FM0HW00.FM0HW-FMAT-YY;
    FM0HW00.FM0HW-BEG-MO-MM = FM0HW00.FM0HW-FMAT-MM;
    FM0HM003.FM0HM-BEG-MO = FM0HW00.FM0HM-BEG-MO;
    ;
    FM0HM003.FK-VEND-CD = "*"; /* Vendor*/
    FM0HM003.FK-MAT-NBR = "*"; /* Material*/
    FM0HM003.XCLCD = "*"; /* Color*/
    FM0HM003.XCTCD = "*"; /* Country*/
    FM0HM003.FY1FCTYC = "*"; /* Factory*/
    FM0HM003.FM0HM-TOL-PCT = 5; /* Tolerance pct*/
    ;
  end
  ;
  ;
end // end FM0H-0410

// Select MAX DCMPNT.VLRPSH01
Function FM0H-0411()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  ;
  try
    call "IO6250" ("SM", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* * Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0411"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT MAX DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0411

// Select DCMPNT.VLRPSH01
Function FM0H-0412()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6250" ("SB", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0412"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0412

// Format and converse map
Function FM0H-0420()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0HM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0HM003.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0HM003.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0HM003 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0HM003.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0HM003.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Job was submitted*/
    ;
    set FM0HM003.FBAMDNBR cursor;
  end
  ;
  ;
  converse FM0HM003 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0HM003.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0HM003.CAITEM; /* Application data*/
  ;
  ;
end // end FM0H-0420

// Check attention identifier
Function FM0H-0430()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    COMMAREA.CATOAP = "FM0H"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM003.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM003.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      COMMAREA.CATOAP = FM0HM003.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0HM003.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0HM003.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "0430"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0HM003"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0HM003.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0HM003.CAITEM; /* item*/
    end
    ;
    ;
    set FKWREC empty;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "0430"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0H-0430

// Reset Highlighted fields
Function FM0H-0440()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0HM003.FBAMDNBR initialAttributes;
  set FM0HM003.FM0HM-BEG-MO initialAttributes;
  set FM0HM003.FK-VEND-CD initialAttributes;
  set FM0HM003.FK-MAT-NBR initialAttributes;
  set FM0HM003.XCLCD initialAttributes;
  set FM0HM003.XCTCD initialAttributes;
  set FM0HM003.FY1FCTYC initialAttributes;
  set FM0HM003.FM0HM-TOL-PCT initialAttributes;
  ;
  set FM0HM003.CATOAP initialAttributes;
  set FM0HM003.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM003.XCLCD == "?" /* XCL list requested*/
   || FM0HM003.XCTCD == "?") /* XCT list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "0440"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCT codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM003.XCTCD == "?") /* XCT list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM003.XCTCD = "*"; /* Restore prior code*/
    else
      FM0HM003.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM003.XCTCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM003.XCLCD == "?") /* XCL list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM003.XCLCD = "*"; /* Restore prior code*/
    else
      FM0HM003.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM003.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "0440"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0H-0440

// Verify entered fields
Function FM0H-0450()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM003.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0HM003.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0450"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify factory.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM003.FY1FCTYC == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HM003.FY1FCTYC == " ") /* If blank*/
      ;
      set FM0HM003.FY1FCTYC cursor, bold;
      converseLib.validationFailed(121); /* Factory code is missing or invalid*/
      FKWREC.XXX-MOD-ID = "0450"; /* Module identification*/
    else
      ;
      FM0H-0451(); /* Select DFCTY.VFCTY001*/
      ;
      if (FM0HM003.XCTCD != "*")
        ;
        if (FM0HM003.XCTCD != FY1REC.XCTCD)
          ;
          set FM0HM003.XCTCD cursor, bold;
          set FM0HM003.FY1FCTYC bold;
          converseLib.validationFailed(80); /* Fcty does not exist in ctry*/
          FKWREC.XXX-MOD-ID = "0450"; /* Module identification*/
        end
      end
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify country.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM003.XCTCD == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HM003.XCTCD in XCTTBL.XCTCD /* If in table*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0HM003.XCTCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0450"; /* Module identification*/
      converseLib.validationFailed(122); /* Country code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material/color combination.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM003.FK-MAT-NBR != "*"
   && FM0HM003.FK-MAT-NBR != " "
   && FM0HM003.XCLCD != "*"
   && FM0HM003.XCLCD != " ") /* If both material and color entered*/
    ;
    FM0H-0455(); /* Declare DCMPNT.VMCOLR01 csr*/
    FM0H-0456(); /* Fetch DCMPNT.VMCOLR01 csr*/
    FM0H-0457(); /* Close DCMPNT.VMCOLR01 csr*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify color code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM003.XCLCD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    if (FM0HM003.XCLCD in XCLTBL.XCLCD /* If in XCL table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* next sentence*/
    else
      ;
      set FM0HM003.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0450"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM003.FK-MAT-NBR == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0452(); /* Select DCMPNT.VMATRL01*/
    ;
    if (FM0HM003.FK-VEND-CD != "*")
      ;
      if (VMATRL01.FK-VEND-CD != FM0HM003.FK-VEND-CD)
        ;
        set FM0HM003.FK-VEND-CD cursor, bold;
        set FM0HM003.FK-MAT-NBR bold;
        converseLib.validationFailed(76); /* Vend/mtl combo not valid*/
        FKWREC.XXX-MOD-ID = "0450"; /* Module identification*/
      end
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM003.FK-VEND-CD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0453(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify beginning month.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0HW00.FM0HM-BEG-MO = FM0HM003.FM0HM-BEG-MO;
  ;
  if (FM0HW00.FM0HW-BEG-MO-MM > 0
   && FM0HW00.FM0HW-BEG-MO-MM <= 12)
    ;
     /* Next sentence*/
  else
    ;
    set FM0HM003.FM0HM-BEG-MO cursor, bold;
    converseLib.validationFailed(84); /* Date is missing or invalid*/
    FKWREC.XXX-MOD-ID = "0450";
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify lrps nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0H-0454(); /* Select DCMPNT.VLRPSH01*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0H-0450

// Select DFCTY.VFCTY001
Function FM0H-0451()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0HM003.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM003.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0451"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0451"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DFCTY.VFCTY001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0451

// Select DCMPNT.VMATRL01
Function FM0H-0452()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0HM003.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM003.FK-MAT-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0452"; /* Module identification*/
      converseLib.validationFailed(26); /* Material nbr missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0452"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0452

// Select DCMPNT.VVNDR001
Function FM0H-0453()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0HM003.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM003.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0453"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0453"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0453

// Select DCMPNT.VLRPSH01
Function FM0H-0454()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  VLRPSH01.FBAMDNBR = FM0HM003.FBAMDNBR;
  ;
  ;
  try
    call "IO6250" ("S ", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM003.FBAMDNBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0454"; /* Module identification*/
      converseLib.validationFailed(46); /* LRPS nbr does not exist*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0454"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0454

// Declare DCMPNT.VMCOLR01 csr
Function FM0H-0455()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FM0HM003.FK-MAT-NBR;
  VMCOLR01.XCLCD = FM0HM003.XCLCD;
  ;
  ;
  try
    call "IO6210" ("S2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0455"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0455

// Fetch DCMPNT.VMCOLR01 csr
Function FM0H-0456()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6210" ("N2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM003.FK-MAT-NBR cursor, bold; /* Highlight*/
      set FM0HM003.XCLCD bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0456"; /* Module identification*/
      converseLib.validationFailed(139); /* Material/color not defined*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0456"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0456

// Close DCMPNT.VMCOLR01 csr
Function FM0H-0457()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6210" ("C2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0457"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0457

// Process valid input request
Function FM0H-0460()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  FM0HW00.FM0HW-TBL-IDX = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format parameters to be passed to bath applications.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0HW03 empty; /* Clear parameter area*/
  ;
  FM0HW03.FM0HW-LRPS-NBR = FM0HM003.FBAMDNBR; /* Lrps nbr*/
  ;
  FM0HW00.FM0HM-BEG-MO = FM0HM003.FM0HM-BEG-MO;
  FM0HW00.FM0HW-FMAT-YY = FM0HW00.FM0HW-BEG-MO-YY;
  FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-BEG-MO-MM;
  FM0HW00.FM0HW-FMAT-DD = 1;
  if (FM0HW00.FM0HW-FMAT-YY < 80)
    FM0HW00.FM0HW-FMAT-CC = 20;
  else
    FM0HW00.FM0HW-FMAT-CC = 19;
  end
  ;
  FM0HW03.FM0HW-BEG-MO-CCYYMMDD = FM0HW00.FM0HW-FMAT-CCYYMMDD;
  FM0HW03.FK-VEND-CD = FM0HM003.FK-VEND-CD; /* Vendor*/
  FM0HW03.FK-MAT-NBR = FM0HM003.FK-MAT-NBR; /* Material*/
  FM0HW03.XCLCD = FM0HM003.XCLCD; /* Color*/
  FM0HW03.XCTCD = FM0HM003.XCTCD; /* Country*/
  FM0HW03.FY1FCTYC = FM0HM003.FY1FCTYC; /* Factory*/
  FM0HW03.FM0HM-TOL-PCT = FM0HM003.FM0HM-TOL-PCT;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA3REC.TA3RGNID == "03") /* If production environment*/
    ;
    FM0H-0461(); /* Format and submit production JCL*/
  else
    ;
    FM0H-0462(); /* Format and submit test JCL*/
  end
  ;
  ;
end // end FM0H-0460

// Submit FM1101 prod jcl
Function FM0H-0461()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT03.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW03.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT03.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT03.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT03.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[4] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0461"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM003 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0461"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0461

// Submit FM1101 test jcl
Function FM0H-0462()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT53.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW03.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT53.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT53.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT53.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[4] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0462"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM003 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0462"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0462

// Mat Needs vs. Capacity
Function FM0H-0500()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0H-0510(); /* Obtain the data to display*/
  ;
  FM0H-0520(); /* Format and display the map*/
  ;
  FM0H-0530(); /* Check attention identifier*/
  ;
  FM0H-0540(); /* Reset fields to normal intensity*/
  ;
  FM0H-0550(); /* Verify the entered data*/
  ;
  FM0H-0560(); /* Process valid input request*/
  ;
  ;
end // end FM0H-0500

// Obtain data to display
Function FM0H-0510()
   /* --------------------------------------------------------------------*/
   /* Set up default values.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No error*/
   || converseVar.validationMsgNum == 27) /* Job submitted*/
    ;
    FM0H-0511(); /* Select MAX DCMPNT.VLRPSH01*/
    FM0H-0512(); /* Select DCMPNT.VLRPSH01 (get model nbr)*/
    ;
    FM0HM004.FBAMDNBR = VLRPSH01.FBAMDNBR; /* Model nbr*/
    ;
     /* ==> subtract 4 months for default beginning month*/
    ;
    FM0HW00.FM0HW-FMAT-CCYYMMDD = VLRPSH01.FB8BUYDT;
    if (FM0HW00.FM0HW-FMAT-MM < 5)
      FM0HW00.FM0HW-FMAT-CCYY = FM0HW00.FM0HW-FMAT-CCYY - 1;
      FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-FMAT-MM + 8;
    else
      FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-FMAT-MM - 4;
    end
    ;
     /* ==> Now format it in P.O. form*/
    ;
    FM0HW00.FM0HW-FMAT-PO-CCYY = FM0HW00.FM0HW-FMAT-CCYY;
    FM0HW00.FM0HW-FMAT-PO-DD = FM0HW00.FM0HW-FMAT-MM;
    if (FM0HW00.FM0HW-FMAT-PO-DD < 3)
      FM0HW00.FM0HW-FMAT-PO-CCYY = FM0HW00.FM0HW-FMAT-PO-CCYY - 1;
      FM0HW00.FM0HW-FMAT-PO-PP = FM0HW00.FM0HW-FMAT-PO-DD + 10;
    else
      FM0HW00.FM0HW-FMAT-PO-PP = FM0HW00.FM0HW-FMAT-PO-DD - 2;
    end
    ;
    FM0HM004.FM0HM-FK-NIKE-PO-YY = FM0HW00.FM0HW-FMAT-PO-YY;
    FM0HM004.FM0HM-FK-NIKE-PO-PP = FM0HW00.FM0HW-FMAT-PO-PP;
    FM0HM004.FM0HM-FK-NIKE-PO-DD = FM0HW00.FM0HW-FMAT-PO-DD;
    ;
    FM0HM004.FK-VEND-CD = "*"; /* Vendor*/
    FM0HM004.FK-MAT-GRP-CD = "*"; /* Material group*/
  end
  ;
  ;
end // end FM0H-0510

// Select MAX DCMPNT.VLRPSH01
Function FM0H-0511()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  ;
  try
    call "IO6250" ("SM", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* * Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0511"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT MAX DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0511

// Select DCMPNT.VLRPSH01
Function FM0H-0512()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6250" ("SB", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0512"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0512

// Format and converse the map
Function FM0H-0520()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0HM004.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0HM004.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0HM004.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0HM004 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0HM004.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0HM004.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Job was submitted*/
    ;
    set FM0HM004.FBAMDNBR cursor;
  end
  ;
  ;
  converse FM0HM004 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0HM004.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0HM004.CAITEM; /* Application data*/
  ;
  ;
end // end FM0H-0520

// Check attention identifier
Function FM0H-0530()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    COMMAREA.CATOAP = "FM0H"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM004.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM004.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      COMMAREA.CATOAP = FM0HM004.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0HM004.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0HM004.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "0530"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      exit stack;
      ;
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM004.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0HM004"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0HM004.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0HM004.CAITEM; /* item*/
    end
    ;
    ;
    set FKWREC empty;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "0530"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0H-0530

// Reset Highlighted fields
Function FM0H-0540()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0HM004.FBAMDNBR initialAttributes;
  set FM0HM004.FM0HM-FK-NIKE-PO-YY initialAttributes;
  set FM0HM004.FM0HM-FK-NIKE-PO-PP initialAttributes;
  set FM0HM004.FM0HM-FK-NIKE-PO-DD initialAttributes;
  set FM0HM004.FK-VEND-CD initialAttributes;
  set FM0HM004.FK-MAT-GRP-CD initialAttributes;
  ;
  set FM0HM004.CATOAP initialAttributes;
  set FM0HM004.CAITEM initialAttributes;
  ;
end // end FM0H-0540

// Verify entered fields
Function FM0H-0550()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM004.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0HM004.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0550"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material group code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM004.FK-MAT-GRP-CD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0551(); /* Select DCMPNT.VMGRP001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM004.FK-VEND-CD == "*") /* If wildcard*/
    ;
    if (FM0HM004.FK-MAT-GRP-CD == "*" /* If mat grp wildcarded*/
     || FM0HM004.FK-MAT-GRP-CD == " ") /* Or blank*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0HM004.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0550"; /* Module identification*/
      converseLib.validationFailed(146); /* You must specify vendor for this*/
                                   /* material grp*/
    end
  else
    FM0H-0552(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify beginning po date.*/
   /* ---------------------------------------------------------------*/
  ;
   /* Verify production and delivery months always 2 months apart.*/
  ;
  if (FM0HM004.FM0HM-FK-NIKE-PO-PP == 11)
    if (FM0HM004.FM0HM-FK-NIKE-PO-DD != 1)
      ;
      converseLib.validationFailed(129); /* PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "0550"; /* Module identification*/
      set FM0HM004.FM0HM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
      set FM0HM004.FM0HM-FK-NIKE-PO-DD bold; /* Highlight*/
    end
  else
    ;
    if (FM0HM004.FM0HM-FK-NIKE-PO-PP == 12)
      if (FM0HM004.FM0HM-FK-NIKE-PO-DD != 2)
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "0550"; /* Module identification*/
        set FM0HM004.FM0HM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
        set FM0HM004.FM0HM-FK-NIKE-PO-DD bold; /* Highlight*/
      end
    else
      ;
      FM0HW00.FM0HW-COUNT = FM0HM004.FM0HM-FK-NIKE-PO-DD       - FM0HM004.FM0HM-FK-NIKE-PO-PP;
      ;
      if (FM0HW00.FM0HW-COUNT != 2) /* Not 2 months different*/
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "0550"; /* Module identification*/
        set FM0HM004.FM0HM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
        set FM0HM004.FM0HM-FK-NIKE-PO-DD bold; /* Highlight*/
      end
    end
  end
  ;
  ;
   /* Verify delivery month is valid*/
  ;
  if (FM0HM004.FM0HM-FK-NIKE-PO-DD >= 1
   && FM0HM004.FM0HM-FK-NIKE-PO-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "0550"; /* Module identification*/
    set FM0HM004.FM0HM-FK-NIKE-PO-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* Verify production month is valid*/
  ;
  if (FM0HM004.FM0HM-FK-NIKE-PO-PP >= 1
   && FM0HM004.FM0HM-FK-NIKE-PO-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "0550"; /* Module identification*/
    set FM0HM004.FM0HM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the LRPS number.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0H-0553(); /* Select DMCPNT.VLRPSH01*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0H-0550

// Select DCMPNT.VMGRP001
Function FM0H-0551()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0HM004.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0HM004.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM004.FK-VEND-CD cursor, bold; /* Highlight*/
      set FM0HM004.FK-MAT-GRP-CD bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0551"; /* Module identification*/
      converseLib.validationFailed(123); /* Material group code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0551"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0551

// Select DCMPNT.VVNDR001
Function FM0H-0552()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0HM004.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM004.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0552"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0552"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0552

// Select DCMPNT.VLRPSH01
Function FM0H-0553()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  VLRPSH01.FBAMDNBR = FM0HM004.FBAMDNBR;
  ;
  ;
  try
    call "IO6250" ("S ", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM004.FBAMDNBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0454"; /* Module identification*/
      converseLib.validationFailed(46); /* LRPS nbr does not exist*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0553"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0553

// Process valid input request
Function FM0H-0560()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  FM0HW00.FM0HW-TBL-IDX = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format parameters to be passed to batch applications.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0HW04 empty; /* Clear parameter area*/
  ;
  FM0HW04.FM0HW-LRPS-NBR = FM0HM004.FBAMDNBR; /* LRPS nbr*/
  FM0HW00.FM0HW-FMAT-PO-YY = FM0HM004.FM0HM-FK-NIKE-PO-YY;
  FM0HW00.FM0HW-FMAT-PO-PP = FM0HM004.FM0HM-FK-NIKE-PO-PP;
  FM0HW00.FM0HW-FMAT-PO-DD = FM0HM004.FM0HM-FK-NIKE-PO-DD;
  if (FM0HW00.FM0HW-FMAT-PO-YY < 80)
    FM0HW00.FM0HW-FMAT-PO-CC = 20;
  else
    FM0HW00.FM0HW-FMAT-PO-CC = 19;
  end
  FM0HW04.FM0HW-BEG-PO-DT = FM0HW00.FM0HW-FMAT-PO-DT;
  ;
  FM0HW04.FK-VEND-CD = FM0HM004.FK-VEND-CD; /* Vendor*/
  FM0HW04.FK-MAT-GRP-CD = FM0HM004.FK-MAT-GRP-CD; /* Mtl group*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA3REC.TA3RGNID == "03") /* If production environment*/
    ;
    FM0H-0561(); /* Format and submit production JCL*/
  else
    ;
    FM0H-0562(); /* Format and submit test JCL*/
  end
  ;
  ;
end // end FM0H-0560

// Submit FM1131 prod jcl
Function FM0H-0561()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT04.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW04.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT04.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT04.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT04.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[5] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0561"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM004 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0361"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0561

// Submit FM1131 test jcl
Function FM0H-0562()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT54.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW04.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT54.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT54.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT54.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[5] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0362"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM004 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0362"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0562

// Fcty PO vs. LRPS by Ctry/Fcty
Function FM0H-0600()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0H-0610(); /* Obtain the data to display*/
  ;
  FM0H-0620(); /* Format and display the map*/
  ;
  FM0H-0630(); /* Check attention identifier*/
  ;
  FM0H-0640(); /* Reset fields to normal intensity*/
  ;
  FM0H-0650(); /* Verify the entered data*/
  ;
  FM0H-0660(); /* Process valid input request*/
  ;
  ;
end // end FM0H-0600

// Obtain data to display
Function FM0H-0610()
   /* --------------------------------------------------------------------*/
   /* Set up default values.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No error*/
   || converseVar.validationMsgNum == 27) /* Job submitted*/
    ;
    FM0H-0611(); /* Select MAX DCMPNT.VLRPSH01*/
    FM0H-0612(); /* Select DCMPNT.VLRPSH01 (get model nbr)*/
    ;
    FM0HM005.FBAMDNBR = VLRPSH01.FBAMDNBR; /* Model nbr*/
    ;
    FM0HW00.FM0HW-FMAT-CCYYMMDD = VLRPSH01.FB8BUYDT;
    if (FM0HW00.FM0HW-FMAT-MM < 7)
      FM0HW00.FM0HW-FMAT-CCYY = FM0HW00.FM0HW-FMAT-CCYY - 1;
      FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-FMAT-MM + 6;
    else
      FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-FMAT-MM - 6;
    end
    FM0HW00.FM0HW-BEG-MO-YY = FM0HW00.FM0HW-FMAT-YY;
    FM0HW00.FM0HW-BEG-MO-MM = FM0HW00.FM0HW-FMAT-MM;
    FM0HM005.FM0HM-BEG-MO = FM0HW00.FM0HM-BEG-MO;
    ;
    FM0HM005.FK-VEND-CD = "*"; /* Vendor*/
    FM0HM005.FK-MAT-NBR = "*"; /* Material*/
    FM0HM005.XCLCD = "*"; /* Color*/
    FM0HM005.XCTCD = "*"; /* Country*/
    FM0HM005.FY1FCTYC = "*"; /* Factory*/
    FM0HM005.FM0HM-TOL-PCT = 5; /* Tolerance pct*/
    ;
  end
  ;
  ;
end // end FM0H-0610

// Select MAX DCMPNT.VLRPSH01
Function FM0H-0611()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  ;
  try
    call "IO6250" ("SM", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* * Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0611"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT MAX DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0611

// Select DCMPNT.VLRPSH01
Function FM0H-0612()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6250" ("SB", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0612"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0612

// Format and converse the map
Function FM0H-0620()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0HM005.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0HM005.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0HM005.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0HM005 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0HM005.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0HM005.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Job was submitted*/
    ;
    set FM0HM005.FBAMDNBR cursor;
  end
  ;
  ;
  converse FM0HM005 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0HM005.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0HM005.CAITEM; /* Application data*/
  ;
  ;
end // end FM0H-0620

// Check attention identifier
Function FM0H-0630()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    COMMAREA.CATOAP = "FM0H"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM005.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM005.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      COMMAREA.CATOAP = FM0HM005.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0HM005.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0HM005.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "0630"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0HM005"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0HM005.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0HM005.CAITEM; /* item*/
    end
    ;
    ;
    set FKWREC empty;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "0630"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0H-0630

// Reset Highlighted fields
Function FM0H-0640()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0HM005.FBAMDNBR initialAttributes;
  set FM0HM005.FM0HM-BEG-MO initialAttributes;
  set FM0HM005.FK-VEND-CD initialAttributes;
  set FM0HM005.FK-MAT-NBR initialAttributes;
  set FM0HM005.XCLCD initialAttributes;
  set FM0HM005.XCTCD initialAttributes;
  set FM0HM005.FY1FCTYC initialAttributes;
  set FM0HM005.FM0HM-TOL-PCT initialAttributes;
  ;
  set FM0HM005.CATOAP initialAttributes;
  set FM0HM005.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM005.XCLCD == "?" /* XCL list requested*/
   || FM0HM005.XCTCD == "?") /* XCT list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "0640"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCT codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM005.XCTCD == "?") /* XCT list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM005.XCTCD = "*"; /* Restore prior code*/
    else
      FM0HM005.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM005.XCTCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM005.XCLCD == "?") /* XCL list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM005.XCLCD = "*"; /* Restore prior code*/
    else
      FM0HM005.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM005.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "0640"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0H-0640

// Verify entered fields
Function FM0H-0650()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM005.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0HM005.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0650"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify factory.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM005.FY1FCTYC == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HM005.FY1FCTYC == " ") /* If blank*/
      ;
      set FM0HM005.FY1FCTYC cursor, bold;
      converseLib.validationFailed(121); /* Factory code is missing or invalid*/
      FKWREC.XXX-MOD-ID = "0650"; /* Module identification*/
    else
      ;
      FM0H-0651(); /* Select DFCTY.VFCTY001*/
      ;
      if (FM0HM005.XCTCD != "*")
        ;
        if (FM0HM005.XCTCD != FY1REC.XCTCD)
          ;
          set FM0HM005.XCTCD cursor, bold;
          set FM0HM005.FY1FCTYC bold;
          converseLib.validationFailed(80); /* Fcty does not exist in ctry*/
          FKWREC.XXX-MOD-ID = "0650"; /* Module identification*/
        end
      end
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify country.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM005.XCTCD == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HM005.XCTCD in XCTTBL.XCTCD /* If in table*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0HM005.XCTCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0650"; /* Module identification*/
      converseLib.validationFailed(122); /* Country code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material/color combination.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM005.FK-MAT-NBR != "*"
   && FM0HM005.FK-MAT-NBR != " "
   && FM0HM005.XCLCD != " "
   && FM0HM005.XCLCD != "*") /* If both material and color entered*/
    ;
    FM0H-0655(); /* Declare DCMPNT.VMCOLR01 csr*/
    FM0H-0656(); /* Fetch DCMPNT.VMCOLR01 csr*/
    FM0H-0657(); /* Close DCMPNT.VMCOLR01 csr*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify color code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM005.XCLCD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    if (FM0HM005.XCLCD in XCLTBL.XCLCD /* If in XCL table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* next sentence*/
    else
      ;
      set FM0HM005.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0650"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM005.FK-MAT-NBR == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0652(); /* Select DCMPNT.VMATRL01*/
    ;
    if (FM0HM005.FK-VEND-CD != "*")
      ;
      if (VMATRL01.FK-VEND-CD != FM0HM005.FK-VEND-CD)
        ;
        set FM0HM005.FK-VEND-CD cursor, bold;
        set FM0HM005.FK-MAT-NBR bold;
        converseLib.validationFailed(76); /* Vend/mtl combo not valid*/
        FKWREC.XXX-MOD-ID = "0650"; /* Module identification*/
      end
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM005.FK-VEND-CD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0653(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify beginning month.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0HW00.FM0HM-BEG-MO = FM0HM005.FM0HM-BEG-MO;
  ;
  if (FM0HW00.FM0HW-BEG-MO-MM > 0
   && FM0HW00.FM0HW-BEG-MO-MM <= 12)
    ;
     /* Next sentence*/
  else
    ;
    set FM0HM005.FM0HM-BEG-MO cursor, bold;
    converseLib.validationFailed(84); /* Date is missing or invalid*/
    FKWREC.XXX-MOD-ID = "0650";
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify lrps nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0H-0654(); /* Select DCMPNT.VLRPSH01*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0H-0650

// Select DFCTY.VFCTY001
Function FM0H-0651()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0HM005.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM005.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0651"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0651"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DFCTY.VFCTY001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0651

// Select DCMPNT.VMATRL01
Function FM0H-0652()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0HM005.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM005.FK-MAT-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0652"; /* Module identification*/
      converseLib.validationFailed(26); /* Material nbr missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0652"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0652

// Select DCMPNT.VVNDR001
Function FM0H-0653()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0HM005.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM005.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0653"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0653"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0653

// Select DCMPNT.VLRPSH01
Function FM0H-0654()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  VLRPSH01.FBAMDNBR = FM0HM005.FBAMDNBR;
  ;
  ;
  try
    call "IO6250" ("S ", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM005.FBAMDNBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0654"; /* Module identification*/
      converseLib.validationFailed(46); /* LRPS nbr does not exist*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0654"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0654

// Declare DCMPNT.VMCOLR01 csr
Function FM0H-0655()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FM0HM005.FK-MAT-NBR;
  VMCOLR01.XCLCD = FM0HM005.XCLCD;
  ;
  ;
  try
    call "IO6210" ("S2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0655"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0655

// Fetch DCMPNT.VMCOLR01 csr
Function FM0H-0656()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6210" ("N2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM005.FK-MAT-NBR cursor, bold; /* Highlight*/
      set FM0HM005.XCLCD bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0656"; /* Module identification*/
      converseLib.validationFailed(139); /* Material/color not defined*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0656"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0656

// Close DCMPNT.VMCOLR01 csr
Function FM0H-0657()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6210" ("C2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0657"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0657

// Process valid input request
Function FM0H-0660()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  FM0HW00.FM0HW-TBL-IDX = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format parameters to be passed to bath applications.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0HW05 empty; /* Clear parameter area*/
  ;
  FM0HW05.FM0HW-LRPS-NBR = FM0HM005.FBAMDNBR; /* Lrps nbr*/
  ;
  FM0HW00.FM0HM-BEG-MO = FM0HM005.FM0HM-BEG-MO;
  FM0HW00.FM0HW-FMAT-YY = FM0HW00.FM0HW-BEG-MO-YY;
  FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-BEG-MO-MM;
  FM0HW00.FM0HW-FMAT-DD = 1;
  if (FM0HW00.FM0HW-FMAT-YY < 80)
    FM0HW00.FM0HW-FMAT-CC = 20;
  else
    FM0HW00.FM0HW-FMAT-CC = 19;
  end
  ;
  FM0HW05.FM0HW-BEG-MO-CCYYMMDD = FM0HW00.FM0HW-FMAT-CCYYMMDD;
  FM0HW05.FK-VEND-CD = FM0HM005.FK-VEND-CD; /* Vendor*/
  FM0HW05.FK-MAT-NBR = FM0HM005.FK-MAT-NBR; /* Material*/
  FM0HW05.XCLCD = FM0HM005.XCLCD; /* Color*/
  FM0HW05.XCTCD = FM0HM005.XCTCD; /* Country*/
  FM0HW05.FY1FCTYC = FM0HM005.FY1FCTYC; /* Factory*/
  FM0HW05.FM0HM-TOL-PCT = FM0HM005.FM0HM-TOL-PCT;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA3REC.TA3RGNID == "03") /* If production environment*/
    ;
    FM0H-0661(); /* Format and submit production JCL*/
  else
    ;
    FM0H-0662(); /* Format and submit test JCL*/
  end
  ;
  ;
end // end FM0H-0660

// Submit FM1102 prod jcl
Function FM0H-0661()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT05.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW05.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT05.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT05.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT05.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[6] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0661"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM005 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0661"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0661

// Submit FM1102 test jcl
Function FM0H-0662()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT55.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW05.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT55.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT55.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT55.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[6] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0662"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM005 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0662"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0662

// Ordered vs. Shipped rpt
Function FM0H-0700()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0H-0710(); /* Obtain the data to display*/
  ;
  FM0H-0720(); /* Format and display the map*/
  ;
  FM0H-0730(); /* Check attention identifier*/
  ;
  FM0H-0740(); /* Reset fields to normal intensity*/
  ;
  FM0H-0750(); /* Verify the entered data*/
  ;
  FM0H-0760(); /* Process valid input request*/
  ;
  ;
end // end FM0H-0700

// Obtain data to display
Function FM0H-0710()
   /* --------------------------------------------------------------------*/
   /* Set up default values.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No error*/
   || converseVar.validationMsgNum == 27) /* Job submitted*/
    ;
    /* -------------------------------------------------------------------*/
    /* Calculate NIKE PO date*/
    /* -------------------------------------------------------------------*/
    ;
    FM0H-0711(); /* Select DFBUY.VFMCTL01*/
    ;
    FM0HW00.FM0HW-FMAT-CCYYMMDD = FB9REC.FB8BUYDT;
    ;
     /* == > Subtract 2 months from the prelim date*/
    ;
    FM0HW00.FM0HW-FMAT-PO-CCYY = FM0HW00.FM0HW-FMAT-CCYY;
    FM0HW00.FM0HW-FMAT-PO-DD = FM0HW00.FM0HW-FMAT-MM;
    if (FM0HW00.FM0HW-FMAT-PO-DD < 3)
      FM0HW00.FM0HW-FMAT-PO-PP = FM0HW00.FM0HW-FMAT-PO-DD + 10;
      FM0HW00.FM0HW-FMAT-PO-CCYY = FM0HW00.FM0HW-FMAT-PO-CCYY - 1;
    else
      FM0HW00.FM0HW-FMAT-PO-PP = FM0HW00.FM0HW-FMAT-PO-DD - 2;
    end
    ;
    FM0HM006.FM0HM-FK-NIKE-PO-YY = FM0HW00.FM0HW-FMAT-PO-YY;
    FM0HM006.FM0HM-FK-NIKE-PO-PP = FM0HW00.FM0HW-FMAT-PO-PP;
    FM0HM006.FM0HM-FK-NIKE-PO-DD = FM0HW00.FM0HW-FMAT-PO-DD;
    ;
    ;
    /* -------------------------------------------------------------------*/
    /* Set up other default values.*/
    /* -------------------------------------------------------------------*/
    ;
    FM0HM006.FY1FCTYC = "*"; /* NIKE PO factory*/
    FM0HM006.FM0HM-ORD-MO = "*"; /* Order month*/
    FM0HM006.FK-VEND-CD = "*"; /* Vendor*/
    FM0HM006.FK-MAT-NBR = "*"; /* Material*/
    FM0HM006.XCLCD = "*"; /* Color*/
    FM0HM006.FK-FCTY-PO-ID = "*"; /* Fcty PO id*/
  end
  ;
  ;
end // end FM0H-0710

// Select DFBUY.VFMCTL01
Function FM0H-0711()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FB9REC empty;
  ;
  ;
  try
    call "IO3650" ("S ", SQLCA, FB9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0711"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DFBUY.VFMCTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFMCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB9REC.FB9GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0711

// Format and converse the map
Function FM0H-0720()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0HM006.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0HM006.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0HM006.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0HM006 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0HM006.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0HM006.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Job was submitted*/
    ;
    set FM0HM006.FM0HM-FK-NIKE-PO-YY cursor;
  end
  ;
  ;
  converse FM0HM006 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0HM006.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0HM006.CAITEM; /* Application data*/
  ;
  ;
end // end FM0H-0720

// Check attention identifier
Function FM0H-0730()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    COMMAREA.CATOAP = "FM0H"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM006.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM006.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      COMMAREA.CATOAP = FM0HM006.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0HM006.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0HM006.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "0730"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      exit stack;
      ;
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM006.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0HM006"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0HM006.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0HM006.CAITEM; /* item*/
    end
    ;
    ;
    set FKWREC empty;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "0730"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0H-0730

// Reset Highlighted fields
Function FM0H-0740()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0HM006.FM0HM-FK-NIKE-PO-YY initialAttributes;
  set FM0HM006.FM0HM-FK-NIKE-PO-PP initialAttributes;
  set FM0HM006.FM0HM-FK-NIKE-PO-DD initialAttributes;
  set FM0HM006.FY1FCTYC initialAttributes;
  set FM0HM006.FM0HM-ORD-MO initialAttributes;
  set FM0HM006.FK-VEND-CD initialAttributes;
  set FM0HM006.FK-MAT-NBR initialAttributes;
  set FM0HM006.XCLCD initialAttributes;
  set FM0HM006.FK-FCTY-PO-ID initialAttributes;
  ;
  set FM0HM006.CATOAP initialAttributes;
  set FM0HM006.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM006.XCLCD == "?") /* XCL list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "0740"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM006.XCLCD == "?") /* XCL list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM006.XCLCD = "*"; /* Restore prior code*/
    else
      FM0HM006.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM006.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "0740"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0H-0740

// Verify entered fields
Function FM0H-0750()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM006.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0HM006.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify factory p.o. number.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM006.FK-FCTY-PO-ID == " ") /* If po id not entered*/
    ;
    set FM0HM006.FK-FCTY-PO-ID cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
    converseLib.validationFailed(128); /* Factory P.O. nbr missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If material and color entered, verify combination.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM006.FK-MAT-NBR != "*"
   && FM0HM006.XCLCD != "*")
    ;
    FM0H-0751(); /* Declare DCMPNT.VMCOLR01 csr*/
    FM0H-0752(); /* Fetch DCMPNT.VMCOLR01 csr*/
    FM0H-0753(); /* Close DCMPNT.VMCOLR01 csr*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify color code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM006.XCLCD == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HM006.XCLCD in XCLTBL.XCLCD /* If color in color table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0HM006.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
      converseLib.validationFailed(32); /* Color code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material number.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM006.FK-MAT-NBR == "*")
    ;
     /* Next sentence*/
  else
    ;
    FM0H-0754(); /* Select DCMPNT.VMATRL01*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM006.FK-VEND-CD == "*")
    ;
     /* Next sentence*/
  else
    ;
    FM0H-0755(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify order month.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM006.FM0HM-ORD-MO == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HM006.FM0HM-ORD-MO is numeric) /* If order is numeric*/
      ;
      FM0HW00.FM0HM-ORD-MO = FM0HM006.FM0HM-ORD-MO;
      if (FM0HW00.FM0HW-ORD-MO-MM >= 1
       && FM0HW00.FM0HW-ORD-MO-MM <= 12)
        ;
         /* next sentence*/
      else
        set FM0HM006.FM0HM-ORD-MO cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
        converseLib.validationFailed(84); /* Date is missing or invalid*/
      end
    else
      ;
      set FM0HM006.FM0HM-ORD-MO cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
      converseLib.validationFailed(148); /* Entered value must be numeric*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify NIKE PO id.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM006.FY1FCTYC == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HM006.FY1FCTYC == " ") /* If blank*/
      ;
      converseLib.validationFailed(121); /* Factory code is missing or invalid*/
      FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
      set FM0HM006.FY1FCTYC cursor, bold;
    else
      ;
      FM0H-0756(); /* Select DFCTY.VFCTY001*/
    end
  end
  ;
  ;
  if (FM0HM006.FM0HM-FK-NIKE-PO-YY == "*") /* If wildcarded*/
    ;
    if ((FM0HM006.FM0HM-FK-NIKE-PO-PP == " " /* If pp blank*/
     || FM0HM006.FM0HM-FK-NIKE-PO-PP == "*") /* or wildcarded*/
     && (FM0HM006.FM0HM-FK-NIKE-PO-DD == " " /* and dd blank*/
     || FM0HM006.FM0HM-FK-NIKE-PO-DD == "*")) /* or wildcarded*/
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(150); /* NIKE PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
      set FM0HM006.FM0HM-FK-NIKE-PO-YY cursor, bold;
      set FM0HM006.FM0HM-FK-NIKE-PO-PP bold;
      set FM0HM006.FM0HM-FK-NIKE-PO-DD bold;
    end
  else
    ;
     /* PO year entered, verify entire PO date*/
    ;
    if (FM0HM006.FM0HM-FK-NIKE-PO-DD is numeric)
      ;
      if (FM0HM006.FM0HM-FK-NIKE-PO-DD <= 0 /* If date not valid*/
       || FM0HM006.FM0HM-FK-NIKE-PO-DD > 12)
        ;
        converseLib.validationFailed(150); /* NIKE PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
        set FM0HM006.FM0HM-FK-NIKE-PO-DD cursor, bold;
      end
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
      set FM0HM006.FM0HM-FK-NIKE-PO-DD cursor, bold;
    end
    ;
    if (FM0HM006.FM0HM-FK-NIKE-PO-PP is numeric)
      ;
      if (FM0HM006.FM0HM-FK-NIKE-PO-PP <= 0 /* If date not valid*/
       || FM0HM006.FM0HM-FK-NIKE-PO-PP > 12)
        ;
        converseLib.validationFailed(150); /* NIKE PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
        set FM0HM006.FM0HM-FK-NIKE-PO-PP cursor, bold;
      end
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
      set FM0HM006.FM0HM-FK-NIKE-PO-PP cursor, bold;
    end
    ;
    if (FM0HM006.FM0HM-FK-NIKE-PO-YY is numeric)
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
      set FM0HM006.FM0HM-FK-NIKE-PO-YY cursor, bold;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify at least some data selected.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM006.FM0HM-FK-NIKE-PO-YY == "*" /* If everything wildcarded*/
   && FM0HM006.FM0HM-ORD-MO == "*"        
   && FM0HM006.FK-VEND-CD == "*"          
   && FM0HM006.FK-MAT-NBR == "*"          
   && FM0HM006.XCLCD == "*"               
   && FM0HM006.FK-FCTY-PO-ID == "*")     
    ;
    converseLib.validationFailed(149); /* At least 1 value must be entered*/
    FKWREC.XXX-MOD-ID = "0750"; /* Module identification*/
    set FM0HM006.FM0HM-FK-NIKE-PO-YY cursor, bold;
    set FM0HM006.FM0HM-FK-NIKE-PO-PP bold;
    set FM0HM006.FM0HM-FK-NIKE-PO-DD bold;
    set FM0HM006.FM0HM-ORD-MO bold;
    set FM0HM006.FY1FCTYC bold;
    set FM0HM006.FK-VEND-CD bold;
    set FM0HM006.FK-MAT-NBR bold;
    set FM0HM006.XCLCD bold;
    set FM0HM006.FK-FCTY-PO-ID bold;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0H-0750

// Declare DCMPNT.VMCOLR01 csr
Function FM0H-0751()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FM0HM006.FK-MAT-NBR;
  VMCOLR01.XCLCD = FM0HM006.XCLCD;
  ;
  ;
  try
    call "IO6210" ("S2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0751"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0751

// Fetch DCMPNT.VMCOLR01 csr
Function FM0H-0752()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6210" ("N2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM006.FK-MAT-NBR cursor, bold; /* Highlight*/
      set FM0HM006.XCLCD bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0752"; /* Module identification*/
      converseLib.validationFailed(139); /* Material/color not defined*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0752"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0752

// Close DCMPNT.VMCOLR01 csr
Function FM0H-0753()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6210" ("C2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0753"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0753

// Verify material nbr
Function FM0H-0754()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0HM006.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FM0HM006.FK-VEND-CD != "*" /* If vendor entered*/
       && FM0HM006.FK-VEND-CD != " ")
        ;
        if (VMATRL01.FK-VEND-CD != FM0HM006.FK-VEND-CD)
          ;
          set FM0HM006.FK-VEND-CD cursor, bold; /* Highlight*/
          set FM0HM006.FK-MAT-NBR bold; /* Highlight*/
          FKWREC.XXX-MOD-ID = "0754"; /* Module identification*/
          converseLib.validationFailed(76); /* Material/vendor combination invalid*/
        end
      end
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM006.FK-MAT-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0754"; /* Module identification*/
      converseLib.validationFailed(26); /* Material nbr is missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0754"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0754

// Select DCMPNT.VVNDR001
Function FM0H-0755()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0HM006.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM006.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0755"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code is missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0755"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0755

// Verify factory code
Function FM0H-0756()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0HM006.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM006.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0756"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0756"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0756

// Process valid input request
Function FM0H-0760()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  FM0HW00.FM0HW-TBL-IDX = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format parameters to be passed to batch applications.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0HW06 empty; /* Clear parameter area*/
  ;
  if (FM0HM006.FM0HM-FK-NIKE-PO-YY == "*")
    ;
    FM0HW06.FM0HW-PC3POIDT = -1;
  else
    ;
    FM0HW00.FM0HW-FMAT-PO-YY = FM0HM006.FM0HM-FK-NIKE-PO-YY;
    FM0HW00.FM0HW-FMAT-PO-PP = FM0HM006.FM0HM-FK-NIKE-PO-PP;
    FM0HW00.FM0HW-FMAT-PO-DD = FM0HM006.FM0HM-FK-NIKE-PO-DD;
    if (FM0HW00.FM0HW-FMAT-PO-YY <= 80)
      FM0HW00.FM0HW-FMAT-PO-CC = 20;
    else
      FM0HW00.FM0HW-FMAT-PO-CC = 19;
    end
    FM0HW06.FM0HW-PC3POIDT = FM0HW00.FM0HW-FMAT-PO-DT;
  end
  ;
  if (FM0HM006.FM0HM-ORD-MO == "*") /* If wildcarded*/
    ;
    FM0HW06.FM0HW-FK-FCTY-PO-DT-CCYYMM = -1;
  else
    ;
    FM0HW00.FM0HM-ORD-MO = FM0HM006.FM0HM-ORD-MO;
    FM0HW00.FM0HW-FMAT-YY = FM0HW00.FM0HW-ORD-MO-YY;
    FM0HW00.FM0HW-FMAT-MM = FM0HW00.FM0HW-ORD-MO-MM;
    if (FM0HW00.FM0HW-FMAT-YY <= 80)
      FM0HW00.FM0HW-FMAT-CC = 20;
    else
      FM0HW00.FM0HW-FMAT-CC = 19;
    end
    FM0HW06.FM0HW-FK-FCTY-PO-DT-CCYYMM = FM0HW00.FM0HW-FMAT-CCYYMM;
  end
  ;
  FM0HW06.FK-VEND-CD = FM0HM006.FK-VEND-CD; /* Vendor*/
  FM0HW06.FK-MAT-NBR = FM0HM006.FK-MAT-NBR; /* Material*/
  FM0HW06.XCLCD = FM0HM006.XCLCD; /* Color*/
  FM0HW06.FY1FCTYC = FM0HM006.FY1FCTYC; /* Factory*/
  FM0HW06.FK-FCTY-PO-ID = FM0HM006.FK-FCTY-PO-ID; /* Fcty po id*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA3REC.TA3RGNID == "03") /* If production environment*/
    ;
    FM0H-0761(); /* Format and submit production JCL*/
  else
    ;
    FM0H-0762(); /* Format and submit test JCL*/
  end
  ;
  ;
end // end FM0H-0760

// Submit FM1141 prod jcl
Function FM0H-0761()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT06.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW06.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT06.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT06.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT06.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[7] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0761"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM002 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0761"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0761

// Submit FM1141 test jcl
Function FM0H-0762()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT56.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW06.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT56.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT56.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT56.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[7] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0762"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM002 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0762"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0762

// Nonusable Mtl Summary Rpt
Function FM0H-0800()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0H-0810(); /* Obtain the data to display*/
  ;
  FM0H-0820(); /* Format and display the map*/
  ;
  FM0H-0830(); /* Check attention identifier*/
  ;
  FM0H-0840(); /* Reset fields to normal intensity*/
  ;
  FM0H-0850(); /* Verify the entered data*/
  ;
  FM0H-0860(); /* Process valid input request*/
  ;
  ;
end // end FM0H-0800

// Obtain data to display
Function FM0H-0810()
   /* --------------------------------------------------------------------*/
   /* Set up default values.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No error*/
   || converseVar.validationMsgNum == 27) /* Job submitted*/
    ;
    FM0H-0811(); /* Select MAX DCMPNT.VLRPSH01*/
    FM0H-0812(); /* Select DCMPNT.VLRPSH01 (get model nbr)*/
    ;
    FM0HM007.FK-VEND-CD = "*"; /* Vendor*/
    FM0HM007.FK-MAT-NBR = "*"; /* Material*/
    FM0HM007.XCLCD = "*"; /* Color*/
    FM0HM007.FK-NIKE-RSP-FL = "*"; /* Nike resp*/
    ;
    FM0HM007.FM0HM-SHOW-VEND-FL = "Y"; /* Show vendor*/
    FM0HM007.FM0HM-SHOW-WHSE-FL = "Y"; /* Show mtl warehouse*/
    FM0HM007.FM0HM-SHOW-FCTY-FL = "Y"; /* Show factory*/
  end
  ;
  ;
end // end FM0H-0810

// Select MAX DCMPNT.VLRPSH01
Function FM0H-0811()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  ;
  try
    call "IO6250" ("SM", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0811"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT MAX DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0811

// Select DCMPNT.VLRPSH01
Function FM0H-0812()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6250" ("SB", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0HM007.FBAMDNBR = VLRPSH01.FBAMDNBR; /* Default mdl nbr*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0812"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0812

// Format and converse MAIN map
Function FM0H-0820()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0HM007.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0HM007.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0HM007.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0HM007 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0HM007.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0HM007.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Job was submitted*/
    ;
    set FM0HM007.FBAMDNBR cursor;
  end
  ;
  ;
  converse FM0HM007 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0HM007.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0HM007.CAITEM; /* Application data*/
  ;
  ;
end // end FM0H-0820

// Check attention identifier
Function FM0H-0830()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    COMMAREA.CATOAP = "FM0H"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM007.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM007.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      COMMAREA.CATOAP = FM0HM007.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0HM007.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0HM007.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "0830"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0HM007"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0HM007.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0HM007.CAITEM; /* item*/
    end
    ;
    ;
    set FKWREC empty;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "0830"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0H-0830

// Reset Highlighted fields
Function FM0H-0840()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0HM007.FBAMDNBR initialAttributes;
  set FM0HM007.FK-VEND-CD initialAttributes;
  set FM0HM007.FK-MAT-NBR initialAttributes;
  set FM0HM007.XCLCD initialAttributes;
  set FM0HM007.FK-NIKE-RSP-FL initialAttributes;
  set FM0HM007.FM0HM-SHOW-VEND-FL initialAttributes;
  set FM0HM007.FM0HM-SHOW-WHSE-FL initialAttributes;
  set FM0HM007.FM0HM-SHOW-FCTY-FL initialAttributes;
  ;
  set FM0HM007.CATOAP initialAttributes;
  set FM0HM007.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM007.XCLCD == "?") /* XCL list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "0840"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM007.XCLCD == "?") /* XCL list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM007.XCLCD = "*"; /* Restore prior code*/
    else
      FM0HM007.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM007.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "0840"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0H-0840

// Verify entered fields
Function FM0H-0850()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM007.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0HM007.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0850"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify inventory locations.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM007.FM0HM-SHOW-FCTY-FL == "Y" /* If yes*/
   || FM0HM007.FM0HM-SHOW-FCTY-FL == "N") /* or no*/
    ;
     /* next sentence*/
  else
    ;
    set FM0HM007.FM0HM-SHOW-FCTY-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0850"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be "y" or "n"*/
  end
  ;
  ;
  if (FM0HM007.FM0HM-SHOW-WHSE-FL == "Y" /* If yes*/
   || FM0HM007.FM0HM-SHOW-WHSE-FL == "N") /* or no*/
    ;
     /* next sentence*/
  else
    ;
    set FM0HM007.FM0HM-SHOW-WHSE-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0850"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be "y" or "n"*/
  end
  ;
  ;
  if (FM0HM007.FM0HM-SHOW-VEND-FL == "Y" /* If yes*/
   || FM0HM007.FM0HM-SHOW-VEND-FL == "N") /* or no*/
    ;
     /* next sentence*/
  else
    ;
    set FM0HM007.FM0HM-SHOW-VEND-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0850"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be "y" or "n"*/
  end
  ;
  ;
  if (FM0HM007.FM0HM-SHOW-VEND-FL == "N" /* If no*/
   && FM0HM007.FM0HM-SHOW-WHSE-FL == "N" /* If no*/
   && FM0HM007.FM0HM-SHOW-FCTY-FL == "N") /* If no*/
    ;
    set FM0HM007.FM0HM-SHOW-VEND-FL cursor, bold; /* Highlight*/
    set FM0HM007.FM0HM-SHOW-WHSE-FL bold; /* Highlight*/
    set FM0HM007.FM0HM-SHOW-FCTY-FL bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0850"; /* Module identification*/
    converseLib.validationFailed(141); /* At least 1 location must be specified*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify nike resp.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM007.FK-NIKE-RSP-FL == "Y" /* If yes*/
   || FM0HM007.FK-NIKE-RSP-FL == "N" /* or no*/
   || FM0HM007.FK-NIKE-RSP-FL == "*") /* or all*/
    ;
     /* next sentence*/
  else
    ;
    set FM0HM007.FK-NIKE-RSP-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0850"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify color code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM007.XCLCD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    if (FM0HM007.XCLCD in XCLTBL.XCLCD /* If in XCL table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* next sentence*/
    else
      ;
      set FM0HM007.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0850"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM007.FK-MAT-NBR == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0851(); /* Select DCMPNT.VMATRL01*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM007.FK-VEND-CD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0852(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify lrps nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0H-0853(); /* Select DCMPNT.VLRPSH01*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0H-0850

// Select DCMPNT.VMATRL01
Function FM0H-0851()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0HM007.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM007.FK-MAT-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0851"; /* Module identification*/
      converseLib.validationFailed(26); /* Material nbr missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0851"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0851

// Select DCMPNT.VVNDR001
Function FM0H-0852()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0HM007.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM007.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0852"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0852"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "0852 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FM0HM007"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0852

// Select DCMPNT.VLRPSH01
Function FM0H-0853()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  VLRPSH01.FBAMDNBR = FM0HM007.FBAMDNBR;
  ;
  ;
  try
    call "IO6250" ("S ", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM007.FBAMDNBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0853"; /* Module identification*/
      converseLib.validationFailed(46); /* LRPS nbr does not exist*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0853"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0853

// Process valid input request
Function FM0H-0860()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  FM0HW00.FM0HW-TBL-IDX = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format parameters to be passed to bath applications.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0HW07 empty; /* Clear parameter area*/
  ;
  FM0HW07.FM0HW-LRPS-NBR = FM0HM007.FBAMDNBR; /* Lrps nbr*/
  FM0HW07.FK-VEND-CD = FM0HM007.FK-VEND-CD; /* Vendor*/
  FM0HW07.FK-MAT-NBR = FM0HM007.FK-MAT-NBR; /* Material*/
  FM0HW07.XCLCD = FM0HM007.XCLCD; /* Color*/
  FM0HW07.FK-NIKE-RSP-FL = FM0HM007.FK-NIKE-RSP-FL; /* NIKE rsp*/
  FM0HW07.XCTCD = "*"; /* Country*/
  FM0HW07.FY1FCTYC = "*"; /* Factory*/
  FM0HW07.FK-MAT-WHSE-CD = "*"; /* Material whse*/
  FM0HW07.FM0HM-SHOW-VEND-FL = FM0HM007.FM0HM-SHOW-VEND-FL;
  FM0HW07.FM0HM-SHOW-WHSE-FL = FM0HM007.FM0HM-SHOW-WHSE-FL;
  FM0HW07.FM0HM-SHOW-FCTY-FL = FM0HM007.FM0HM-SHOW-FCTY-FL;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA3REC.TA3RGNID == "03") /* If production environment*/
    ;
    FM0H-0861(); /* Format and submit production JCL*/
  else
    ;
    FM0H-0862(); /* Format and submit test JCL*/
  end
  ;
  ;
end // end FM0H-0860

// Submit FM1301 prod jcl
Function FM0H-0861()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT07.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW07.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT07.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT07.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT07.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[8] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0861"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM007 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0861"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0861

// Submit FM1301 test jcl
Function FM0H-0862()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT57.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW07.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT57.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT57.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT57.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[8] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0862"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM007 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0862"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0862

// Nonusable Mtl Summary Rpt
Function FM0H-0900()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0H-0910(); /* Obtain the data to display*/
  ;
  FM0H-0920(); /* Format and display the map*/
  ;
  FM0H-0930(); /* Check attention identifier*/
  ;
  FM0H-0940(); /* Reset fields to normal intensity*/
  ;
  FM0H-0950(); /* Verify the entered data*/
  ;
  FM0H-0960(); /* Process valid input request*/
  ;
  ;
end // end FM0H-0900

// Obtain data to display
Function FM0H-0910()
   /* --------------------------------------------------------------------*/
   /* Set up default values.*/
   /* --------------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No error*/
   || converseVar.validationMsgNum == 27) /* Job submitted*/
    ;
    FM0H-0911(); /* Select MAX DCMPNT.VLRPSH01*/
    FM0H-0912(); /* Select DCMPNT.VLRPSH01 (get model nbr)*/
    ;
    FM0HM008.FK-VEND-CD = "*"; /* Vendor*/
    FM0HM008.FK-MAT-NBR = "*"; /* Material*/
    FM0HM008.XCLCD = "*"; /* Color*/
    FM0HM008.FK-NIKE-RSP-FL = "*"; /* Nike resp*/
    ;
    FM0HM008.XCTCD = "*"; /* Country*/
    FM0HM008.FY1FCTYC = "*"; /* Factory*/
    FM0HM008.FK-MAT-WHSE-CD = "*"; /* Mtl whse*/
    ;
    FM0HM008.FM0HM-SHOW-VEND-FL = "Y"; /* Show vendor*/
    FM0HM008.FM0HM-SHOW-WHSE-FL = "Y"; /* Show mtl warehouse*/
    FM0HM008.FM0HM-SHOW-FCTY-FL = "Y"; /* Show factory*/
  end
  ;
  ;
end // end FM0H-0910

// Select MAX DCMPNT.VLRPSH01
Function FM0H-0911()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  ;
  try
    call "IO6250" ("SM", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0911"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT MAX DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0911

// Select DCMPNT.VLRPSH01
Function FM0H-0912()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6250" ("SB", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0HM008.FBAMDNBR = VLRPSH01.FBAMDNBR; /* Default mdl nbr*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0912"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0912

// Format and converse the map
Function FM0H-0920()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0HM008.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0HM008.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0HM008.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0HM008 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0HM008.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0HM008.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Job was submitted*/
    ;
    set FM0HM008.FBAMDNBR cursor;
  end
  ;
  ;
  converse FM0HM008 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0HM008.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0HM008.CAITEM; /* Application data*/
  ;
  ;
end // end FM0H-0920

// Check attention identifier
Function FM0H-0930()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    COMMAREA.CATOAP = "FM0H"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM008.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM008.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      COMMAREA.CATOAP = FM0HM008.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0HM008.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0HM008.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "0930"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0HM008"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0HM008.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0HM008.CAITEM; /* item*/
    end
    ;
    ;
    set FKWREC empty;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "0930"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0H-0930

// Reset Highlighted fields
Function FM0H-0940()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0HM008.FBAMDNBR initialAttributes;
  set FM0HM008.FK-VEND-CD initialAttributes;
  set FM0HM008.FK-MAT-NBR initialAttributes;
  set FM0HM008.XCLCD initialAttributes;
  set FM0HM008.FK-NIKE-RSP-FL initialAttributes;
  set FM0HM008.XCTCD initialAttributes;
  set FM0HM008.FY1FCTYC initialAttributes;
  set FM0HM008.FK-MAT-WHSE-CD initialAttributes;
  set FM0HM008.FM0HM-SHOW-VEND-FL initialAttributes;
  set FM0HM008.FM0HM-SHOW-WHSE-FL initialAttributes;
  set FM0HM008.FM0HM-SHOW-FCTY-FL initialAttributes;
  ;
  set FM0HM008.CATOAP initialAttributes;
  set FM0HM008.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM008.XCLCD == "?" /* XCL list requested*/
   || FM0HM008.XCTCD == "?") /* XCT list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "0940"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM008.XCLCD == "?") /* XCL list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM008.XCLCD = "*"; /* Restore prior code*/
    else
      FM0HM008.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM008.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCT codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0HM008.XCTCD == "?") /* XCT list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0HM008.XCLCD = "*"; /* Restore prior code*/
    else
      FM0HM008.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0HM008.XCTCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "0940"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0H-0940

// Verify entered fields
Function FM0H-0950()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM008.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0HM008.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0950"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify inventory locations.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM008.FM0HM-SHOW-FCTY-FL == "Y" /* If yes*/
   || FM0HM008.FM0HM-SHOW-FCTY-FL == "N") /* or no*/
    ;
     /* next sentence*/
  else
    ;
    set FM0HM008.FM0HM-SHOW-FCTY-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0950"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be "y" or "n"*/
  end
  ;
  ;
  if (FM0HM008.FM0HM-SHOW-WHSE-FL == "Y" /* If yes*/
   || FM0HM008.FM0HM-SHOW-WHSE-FL == "N") /* or no*/
    ;
     /* next sentence*/
  else
    ;
    set FM0HM008.FM0HM-SHOW-WHSE-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0950"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be "y" or "n"*/
  end
  ;
  ;
  if (FM0HM008.FM0HM-SHOW-VEND-FL == "Y" /* If yes*/
   || FM0HM008.FM0HM-SHOW-VEND-FL == "N") /* or no*/
    ;
     /* next sentence*/
  else
    ;
    set FM0HM008.FM0HM-SHOW-VEND-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0950"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be "y" or "n"*/
  end
  ;
  ;
  if (FM0HM008.FM0HM-SHOW-VEND-FL == "N" /* If no*/
   && FM0HM008.FM0HM-SHOW-WHSE-FL == "N" /* If no*/
   && FM0HM008.FM0HM-SHOW-FCTY-FL == "N") /* If no*/
    ;
    set FM0HM008.FM0HM-SHOW-VEND-FL cursor, bold; /* Highlight*/
    set FM0HM008.FM0HM-SHOW-WHSE-FL bold; /* Highlight*/
    set FM0HM008.FM0HM-SHOW-FCTY-FL bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0950"; /* Module identification*/
    converseLib.validationFailed(141); /* At least 1 location must be specified*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify mtl whse code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM008.FK-MAT-WHSE-CD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    ;
    FM0H-0954(); /* Select DMCPNT.VMATRL01*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify Fcty code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM008.FY1FCTYC == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    ;
    FM0H-0955(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify Country code*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM008.XCTCD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    if (FM0HM008.XCTCD in XCTTBL.XCTCD /* If in XCT table*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* next sentence*/
    else
      ;
      set FM0HM008.XCTCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0950"; /* Module identification*/
      converseLib.validationFailed(122); /* Country code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify nike resp.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM008.FK-NIKE-RSP-FL == "Y" /* If yes*/
   || FM0HM008.FK-NIKE-RSP-FL == "N" /* or no*/
   || FM0HM008.FK-NIKE-RSP-FL == "*") /* or all*/
    ;
     /* next sentence*/
  else
    ;
    set FM0HM008.FK-NIKE-RSP-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "0950"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify color code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM008.XCLCD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    if (FM0HM008.XCLCD in XCLTBL.XCLCD /* If in XCL table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
      ;
       /* next sentence*/
    else
      ;
      set FM0HM008.XCLCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0950"; /* Module identification*/
      converseLib.validationFailed(32); /* Material color code is missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM008.FK-MAT-NBR == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0951(); /* Select DCMPNT.VMATRL01*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM008.FK-VEND-CD == "*") /* If wildcard*/
    ;
     /* next sentence*/
  else
    FM0H-0952(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify lrps nbr.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0H-0953(); /* Select DCMPNT.VLRPSH01*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0H-0950

// Select DCMPNT.VMATRL01
Function FM0H-0951()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0HM008.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM008.FK-MAT-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0951"; /* Module identification*/
      converseLib.validationFailed(26); /* Material nbr missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0951"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0951

// Select DCMPNT.VVNDR001
Function FM0H-0952()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0HM008.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM008.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0952"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0952"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0952

// Select DCMPNT.VLRPSH01
Function FM0H-0953()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VLRPSH01 empty;
  ;
  VLRPSH01.FBAMDNBR = FM0HM008.FBAMDNBR;
  ;
  ;
  try
    call "IO6250" ("S ", SQLCA, VLRPSH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM008.FBAMDNBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0953"; /* Module identification*/
      converseLib.validationFailed(46); /* LRPS nbr does not exist*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0953"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VLRPSH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VLRPSH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VLRPSH01.VLRPSH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0953

// Select DMCPNT.VMATWH01
Function FM0H-0954()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0HM008.FK-MAT-WHSE-CD;
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM008.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0954"; /* Module identification*/
      converseLib.validationFailed(119); /* Material whse code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0954"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0954

// Select DFCTY.VFCTY001
Function FM0H-0955()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0HM008.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FM0HM008.XCTCD != "*") /* If country specified*/
        if (FM0HM008.XCTCD == FY1REC.XCTCD) /* If same count*/
           /* next sentence*/
        else
          ;
          set FM0HM008.XCTCD cursor, bold; /* Highlight*/
          set FM0HM008.FY1FCTYC bold; /* Highlight*/
          FKWREC.XXX-MOD-ID = "0955"; /* Module identification*/
          converseLib.validationFailed(80); /* Factory does not exist in country*/
        end
      end
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0HM008.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "0955"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0955"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0H-0955

// Process valid input request
Function FM0H-0960()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  FM0HW00.FM0HW-TBL-IDX = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format parameters to be passed to bath applications.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0HW08 empty; /* Clear parameter area*/
  ;
  FM0HW08.FM0HW-LRPS-NBR = FM0HM008.FBAMDNBR; /* Lrps nbr*/
  FM0HW08.FK-VEND-CD = FM0HM008.FK-VEND-CD; /* Vendor*/
  FM0HW08.FK-MAT-NBR = FM0HM008.FK-MAT-NBR; /* Material*/
  FM0HW08.XCLCD = FM0HM008.XCLCD; /* Color*/
  FM0HW08.FK-NIKE-RSP-FL = FM0HM008.FK-NIKE-RSP-FL; /* NIKE rsp*/
  FM0HW08.XCTCD = FM0HM008.XCTCD; /* Country*/
  FM0HW08.FY1FCTYC = FM0HM008.FY1FCTYC; /* Factory*/
  FM0HW08.FK-MAT-WHSE-CD = FM0HM008.FK-MAT-WHSE-CD; /* Material whse*/
  FM0HW08.FM0HM-SHOW-VEND-FL = FM0HM008.FM0HM-SHOW-VEND-FL;
  FM0HW08.FM0HM-SHOW-WHSE-FL = FM0HM008.FM0HM-SHOW-WHSE-FL;
  FM0HW08.FM0HM-SHOW-FCTY-FL = FM0HM008.FM0HM-SHOW-FCTY-FL;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA3REC.TA3RGNID == "03") /* If production environment*/
    ;
    FM0H-0961(); /* Format and submit production JCL*/
  else
    ;
    FM0H-0962(); /* Format and submit test JCL*/
  end
  ;
  ;
end // end FM0H-0960

// Submit FM1302 prod jcl
Function FM0H-0961()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT08.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW08.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT08.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT08.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT08.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[9] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0961"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM008 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0961"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0961

// Submit FM1302 test jcl
Function FM0H-0962()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FM0HT58.TARTYPE[FM0HW-TBL-IDX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HW08.TARJCL; /* Parameters*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FM0HT58.TARJCL[FM0HW-TBL-IDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FM0HT58.TARTYPE[FM0HW-TBL-IDX];
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FM0HT58.TARJCL[FM0HW-TBL-IDX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      ;
      FM0HW00.FM0HW-TBL-IDX = FM0HW00.FM0HW-TBL-IDX + 1;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FM0HW00.FM0HM-SELECT[9] = "*"; /* Job complete*/
    FKWREC.XXX-MOD-ID = "0962"; /* Module identification*/
    FKWREC.XXXMSGNO = 27; /* Job was submitted*/
    ;
    set FM0HM008 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
  else
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, indicate unexpected error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    FKWREC.XXX-MOD-ID = "0962"; /* Module identification*/
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FM0H-0962

// Process Main map
Function FM0H-9900()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
   /* PERFORM fm0h-9910;                /* Obtain the data to be displayed*/
  ;
  FM0H-9920(); /* Format and display the map*/
  ;
  FM0H-9930(); /* Check attention identifier*/
  ;
  FM0H-9940(); /* Reset fields to normal intensity*/
  ;
  FM0H-9950(); /* Verify the entered data*/
  ;
  FM0H-9960(); /* Process valid input request*/
  ;
  ;
end // end FM0H-9900

// Format and converse the map
Function FM0H-9920()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0HM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0HM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0HM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0HM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0HM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
    ;
    set FM0HM110 alarm; /* Indicate sound alarm*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* re-establish select fields.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Report submitted*/
    ;
    FM0HW00.FM0HW-IDX = 1;
    while (FM0HW00.FM0HW-IDX <= FM0HW00.FM0HW-NBR-SELECTIONS)
      ;
      FM0HM110.FM0HM-SELECT[FM0HW-IDX] = FM0HW00.FM0HM-SELECT[FM0HW-IDX]; /* Select field*/
      ;
      FM0HW00.FM0HW-IDX = FM0HW00.FM0HW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* DETERMINE CURSOR POSITION.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 27) /* Report submitted*/
    ;
    if (FM0HW00.FM0HW-OUTPUT-SPECIFIED-SW == "Y") /* If output specified*/
      ;
      set FM0HM110.FM0HM-SELECT[2] cursor; /* Set cursor at 1st report*/
    else
      set FM0HM110.FM0HM-SELECT[1] cursor; /* Set cursor at output dest*/
    end
  end
  ;
  converse FM0HM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0HM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0HM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0H-9920

// Check attention identifier
Function FM0H-9930()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    ;
    COMMAREA.CATOAP = "FM0H"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0HM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      ;
      COMMAREA.CATOAP = FM0HM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0HM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0HM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "9930"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* POMNT requested*/
   || converseVar.eventKey is pf14 /* POSHP requested*/
   || converseVar.eventKey is pf15 /* POSUM requested*/
   || converseVar.eventKey is pf16 /* POLST requested*/
   || converseVar.eventKey is pf17) /* POMLT requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0HM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0HM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0HM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0B"; /* TO application*/
      COMMAREA.CAITEM = FM0HM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0D"; /* TO application*/
      COMMAREA.CAITEM = FM0HM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FM0J"; /* TO application*/
      COMMAREA.CAITEM = FM0HM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FM0K"; /* TO application*/
      COMMAREA.CAITEM = FM0HM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0L"; /* TO application*/
      COMMAREA.CAITEM = FM0HM110.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "9930"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0H-9930

// Reset highlighted fields
Function FM0H-9940()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  FM0HW00.FM0HW-IDX = 1; /* Init index*/
  ;
  while (FM0HW00.FM0HW-IDX <= FM0HW00.FM0HW-NBR-SELECTIONS)
    ;
    set FM0HM110.FM0HM-SELECT[FM0HW-IDX] initialAttributes; /* Set defined*/
    FM0HW00.FM0HW-IDX = FM0HW00.FM0HW-IDX + 1;
  end
  ;
  set FM0HM110.CATOAP initialAttributes; /* TO application*/
  set FM0HM110.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FM0H-9940

// Verify data that was entered
Function FM0H-9950()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0HM110.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0HM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "9950"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the select fields*/
   /* ------------------------------------------------------------*/
  ;
  FM0HW00.FM0HW-IDX = FM0HW00.FM0HW-NBR-SELECTIONS;
  ;
  while (FM0HW00.FM0HW-IDX >= 1) /* For each select field*/
    ;
    if (FM0HM110.FM0HM-SELECT[FM0HW-IDX] == " " /* If blank*/
     || FM0HM110.FM0HM-SELECT[FM0HW-IDX] == "S" /* or selected*/
     || FM0HM110.FM0HM-SELECT[FM0HW-IDX] == "*") /* or prev selected*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0HM110.FM0HM-SELECT[FM0HW-IDX] cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "9950"; /* Module identification*/
      converseLib.validationFailed(13); /* Only "s" valid to select a line*/
    end
    ;
    FM0HW00.FM0HW-IDX = FM0HW00.FM0HW-IDX - 1; /* Decrement index*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify report destination was specified.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0HM110.FM0HM-SELECT[1] == "S") /* If selected*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0HW00.FM0HW-OUTPUT-SPECIFIED-SW != "Y") /* Not specified*/
      ;
      set FM0HM110.FM0HM-SELECT[1] cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "9950"; /* Module identification*/
      converseLib.validationFailed(23); /* Output destination must be specified*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0H-9950

// Process valid input request
Function FM0H-9960()
   /* --------------------------------------------------------------*/
   /* Save the selected lines in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0HW00.FM0HW-IDX = 1; /* Init index*/
  ;
  while (FM0HW00.FM0HW-IDX <= FM0HW00.FM0HW-NBR-SELECTIONS)
    ;
    FM0HW00.FM0HM-SELECT[FM0HW-IDX] = FM0HM110.FM0HM-SELECT[FM0HW-IDX];
    ;
    FM0HW00.FM0HW-IDX = FM0HW00.FM0HW-IDX + 1;
  end
  ;
  ;
end // end FM0H-9960

//*** RECORD=FM0HW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0HW00 type basicRecord
  10 FM0HW-IDX FM0HW-IDX ; 
  10 FM0HW-TBL-IDX FM0HW-TBL-IDX ; 
  10 FM0HW-OUTPUT-SPECIFIED-SW FM0HW-OUTPUT-SPECIFIED-SW ; 
  10 FM0HW-NBR-SELECTIONS FM0HW-NBR-SELECTIONS ; 
  10 FM0HM-SELECT FM0HM-SELECT [9] ; 
  10 FM0HW-FMAT-PO-DT FM0HW-FMAT-PO-DT ; 
    15 FM0HW-FMAT-PO-CCYY FM0HW-FMAT-PO-CCYY ; 
      20 FM0HW-FMAT-PO-CC FM0HW-FMAT-PO-CC ; 
      20 FM0HW-FMAT-PO-YY FM0HW-FMAT-PO-YY ; 
    15 FM0HW-FMAT-PO-PP FM0HW-FMAT-PO-PP ; 
    15 FM0HW-FMAT-PO-DD FM0HW-FMAT-PO-DD ; 
  10 FM0HW-FMAT-CCYYMMDD FM0HW-FMAT-CCYYMMDD ; 
    15 FM0HW-FMAT-CCYYMM FM0HW-FMAT-CCYYMM ; 
      20 FM0HW-FMAT-CCYY FM0HW-FMAT-CCYY ; 
        25 FM0HW-FMAT-CC FM0HW-FMAT-CC ; 
        25 FM0HW-FMAT-YY FM0HW-FMAT-YY ; 
      20 FM0HW-FMAT-MM FM0HW-FMAT-MM ; 
    15 FM0HW-FMAT-DD FM0HW-FMAT-DD ; 
  10 FM0HM-BEG-MO FM0HM-BEG-MO ; 
    15 FM0HW-BEG-MO-YY FM0HW-BEG-MO-YY ; 
    15 FM0HW-BEG-MO-MM FM0HW-BEG-MO-MM ; 
  10 FM0HM-ORD-MO FM0HM-ORD-MO ; 
    15 FM0HW-ORD-MO-YY FM0HW-ORD-MO-YY ; 
    15 FM0HW-ORD-MO-MM FM0HW-ORD-MO-MM ; 
  10 FM0HW-COUNT FM0HW-COUNT ; 
end // end FM0HW00

//*** RECORD=FM0HW01 ****
// ---------------------------------------------------
// Parameters for Inventory Position rpt.
// ---------------------------------------------------
// ***********************
Record FM0HW01 type basicRecord
  5 TARJCL TARJCL ; 
    10 FM0HW-LRPS-NBR FM0HW-LRPS-NBR ; 
    10 FM0HW-BEG-MO-CCYYMMDD FM0HW-BEG-MO-CCYYMMDD ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-MAT-NBR FK-MAT-NBR ; 
    10 XCLCD XCLCD ; 
    10 XCTCD XCTCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 * char(48) ; 
end // end FM0HW01

//*** RECORD=FM0HW02 ****
// ---------------------------------------------------
// Parameters for Maximum Capacity Report.
// ---------------------------------------------------
// ***********************
Record FM0HW02 type basicRecord
  5 TARJCL TARJCL ; 
    10 FM0HW-BEG-PO-DT FM0HW-BEG-PO-DT ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-MAT-GRP-CD FK-MAT-GRP-CD ; 
    10 * char(68) ; 
end // end FM0HW02

//*** RECORD=FM0HW03 ****
// ---------------------------------------------------
// Parameters for Fcty P.O. VS. LRPS by Material rpt.
// ---------------------------------------------------
// ***********************
Record FM0HW03 type basicRecord
  5 TARJCL TARJCL ; 
    10 FM0HW-LRPS-NBR FM0HW-LRPS-NBR ; 
    10 FM0HW-BEG-MO-CCYYMMDD FM0HW-BEG-MO-CCYYMMDD ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-MAT-NBR FK-MAT-NBR ; 
    10 XCLCD XCLCD ; 
    10 XCTCD XCTCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FM0HM-TOL-PCT FM0HM-TOL-PCT ; 
    10 * char(46) ; 
end // end FM0HW03

//*** RECORD=FM0HW04 ****
// ---------------------------------------------------
// Parameters for Material Needs vs. Capacity Rpt.
// ---------------------------------------------------
// ***********************
Record FM0HW04 type basicRecord
  5 TARJCL TARJCL ; 
    10 FM0HW-LRPS-NBR FM0HW-LRPS-NBR ; 
    10 FM0HW-BEG-PO-DT FM0HW-BEG-PO-DT ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-MAT-GRP-CD FK-MAT-GRP-CD ; 
    10 * char(63) ; 
end // end FM0HW04

//*** RECORD=FM0HW05 ****
// ---------------------------------------------------
// Parameters for Fcty P.O. VS. LRPS by Material rpt.
// ---------------------------------------------------
// ***********************
Record FM0HW05 type basicRecord
  5 TARJCL TARJCL ; 
    10 FM0HW-LRPS-NBR FM0HW-LRPS-NBR ; 
    10 FM0HW-BEG-MO-CCYYMMDD FM0HW-BEG-MO-CCYYMMDD ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-MAT-NBR FK-MAT-NBR ; 
    10 XCLCD XCLCD ; 
    10 XCTCD XCTCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FM0HM-TOL-PCT FM0HM-TOL-PCT ; 
    10 * char(46) ; 
end // end FM0HW05

//*** RECORD=FM0HW06 ****
// ---------------------------------------------------
// Parameters for Fcty P.O. - Ordered Vs. Shipped Rpt.
// ---------------------------------------------------
// ***********************
Record FM0HW06 type basicRecord
  5 TARJCL TARJCL ; 
    10 FM0HW-FK-FCTY-PO-DT-CCYYMM FM0HW-FK-FCTY-PO-DT-CCYYMM ; 
    10 FM0HW-PC3POIDT FM0HW-PC3POIDT ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-MAT-NBR FK-MAT-NBR ; 
    10 XCLCD XCLCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FK-FCTY-PO-ID FK-FCTY-PO-ID ; 
    10 * char(36) ; 
end // end FM0HW06

//*** RECORD=FM0HW07 ****
// ---------------------------------------------------
// Parameters for Non-usable Excess Materials Summary
// ---------------------------------------------------
// ***********************
Record FM0HW07 type basicRecord
  5 TARJCL TARJCL ; 
    10 FM0HW-LRPS-NBR FM0HW-LRPS-NBR ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-MAT-NBR FK-MAT-NBR ; 
    10 XCLCD XCLCD ; 
    10 FK-NIKE-RSP-FL FK-NIKE-RSP-FL ; 
    10 XCTCD XCTCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FK-MAT-WHSE-CD FK-MAT-WHSE-CD ; 
    10 FM0HM-SHOW-VEND-FL FM0HM-SHOW-VEND-FL ; 
    10 FM0HM-SHOW-WHSE-FL FM0HM-SHOW-WHSE-FL ; 
    10 FM0HM-SHOW-FCTY-FL FM0HM-SHOW-FCTY-FL ; 
    10 * char(50) ; 
end // end FM0HW07

//*** RECORD=FM0HW08 ****
// ---------------------------------------------------
// Parameters for Non-usable Excess Materials Detail
// ---------------------------------------------------
// ***********************
Record FM0HW08 type basicRecord
  5 TARJCL TARJCL ; 
    10 FM0HW-LRPS-NBR FM0HW-LRPS-NBR ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-MAT-NBR FK-MAT-NBR ; 
    10 XCLCD XCLCD ; 
    10 FK-NIKE-RSP-FL FK-NIKE-RSP-FL ; 
    10 XCTCD XCTCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FK-MAT-WHSE-CD FK-MAT-WHSE-CD ; 
    10 FM0HM-SHOW-VEND-FL FM0HM-SHOW-VEND-FL ; 
    10 FM0HM-SHOW-WHSE-FL FM0HM-SHOW-WHSE-FL ; 
    10 FM0HM-SHOW-FCTY-FL FM0HM-SHOW-FCTY-FL ; 
    10 * char(50) ; 
end // end FM0HW08

// Beginning month
DataItem FM0HM-BEG-MO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Order month
DataItem FM0HM-ORD-MO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Select fields
DataItem FM0HM-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Show factory flag
DataItem FM0HM-SHOW-FCTY-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Show vendor flag
DataItem FM0HM-SHOW-VEND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Show mtl whse flag
DataItem FM0HM-SHOW-WHSE-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Tolerance pct
DataItem FM0HM-TOL-PCT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Beginning month ccyymmdd
DataItem FM0HW-BEG-MO-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Beginning month mm
DataItem FM0HW-BEG-MO-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Beginning month yy
DataItem FM0HW-BEG-MO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Beginning PC-PO-ID-MO-RNG
DataItem FM0HW-BEG-PO-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Generic counter
DataItem FM0HW-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Factory P.O. ccyymm
DataItem FM0HW-FK-FCTY-PO-DT-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Format date cc
DataItem FM0HW-FMAT-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date ccyy
DataItem FM0HW-FMAT-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date ccyymm
DataItem FM0HW-FMAT-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date ccyymmdd
DataItem FM0HW-FMAT-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date dd
DataItem FM0HW-FMAT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date mm
DataItem FM0HW-FMAT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format NIKE PO cc
DataItem FM0HW-FMAT-PO-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format NIKE PO ccyy
DataItem FM0HW-FMAT-PO-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format NIKE PO dd
DataItem FM0HW-FMAT-PO-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format NIKE PO id
DataItem FM0HW-FMAT-PO-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format NIKE PO pp
DataItem FM0HW-FMAT-PO-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format NIKE PO yy
DataItem FM0HW-FMAT-PO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date yy
DataItem FM0HW-FMAT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index for application table
DataItem FM0HW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// LRPS number
DataItem FM0HW-LRPS-NBR num(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of selections on map
DataItem FM0HW-NBR-SELECTIONS num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Order month mm
DataItem FM0HW-ORD-MO-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Order month yy
DataItem FM0HW-ORD-MO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Output was specified switch
DataItem FM0HW-OUTPUT-SPECIFIED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PO ID date ccyymmdd
DataItem FM0HW-PC3POIDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index for table
DataItem FM0HW-TBL-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

