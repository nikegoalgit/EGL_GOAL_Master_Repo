package fm0i;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPXCL01;
import corpcom3.XPXX001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XCLCD;
import corpx1.XCLDESC;
import corpx1.XCLTBL;
import corpx2.XMG-COLR-GRP-CD;
import corpx2.XMU-MAT-UOM-CD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import fk.common.*;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VFYINV01;
import vv.common.VFYINV01-GROUP;
import vv.common.VMATRL01;
import vv.common.VMATWH01;
import vv.common.VMCOLR01;
import vv.common.VVNDR001;
import vv.common.VVNINV01;
import vv.common.VVNINV01-GROUP;
import vv.common.VWHINV01;
import vv.common.VWHINV01-GROUP;
//*** PROGRAM=FM0I ****
// THIS APPLICATION IS PART OF THE FOOTWEAR MATERIALS SYSTEM.
// 
// THIS APPLICATION PROVIDES MAINTENANCE CAPABILITY FOR
// MATERIAL INVENTORIES.  USERS WILL BE ALLOWED TO INQUIRE,
// ADD, CHANGE, AND DELETE MATERIAL INVENTORIES THROUGH
// THE FOUR MAPS PROVIDED IN THIS APPLICATION.
// 
// INQUIRE MAP - MAP FM0IM110 IS PROVIDED FOR USERS TO INQUIRE
// UPON MATERIAL INVENTORY INFORMATION.  USERS WILL BE ALLOWED
// TO SELECT A VENDOR, MATERIAL WAREHOUSE, OR FACTORY AND
// ALL THE MATERIALS AT THE SPECIFIED LOCATION WILL BE
// RETRIEVED AND DISPLAYED ON THE MAP.
// 
// ADD MAP - MAP FM0IM210 IS PROVIDED FOR USERS TO ADD
// MATERIAL INVENTORY INFORMATION.  USERS WILL BE ALLOWED TO
// SELECT A VENDOR, MATERIAL WAREHOUSE, OR FACTORY AND ADD
// MATERIAL INVENTORIES TO THE SYSTEM FOR THAT LOCATION.
// 
// CHANGE MAP - MAP FM0IM310 IS PROVIDED FOR USERS TO CHANGE
// INFORMATION ON AN EXISTING MATERIAL INVENTORY.  USERS WILL
// SPECIFY WHICH LOCATION THEY WISH TO CHANGE INFORMATION FOR
// AND A LIST OF MATERIAL INVENTORIES WILL APPEAR.  USERS MAY
// THEN SELECT A LINE AND CHANGE THE INVNETORY QUANTITY FOR
// THAT MATERIAL.  UPDATES WILL BE MADE TO THE APPROPRIATE
// MATERIAL INVENTORY DATABASE TABLE.
// 
// DELETE MAP - MAP FM0IM410 IS PROVIDED FOR USERS TO DELETE
// MATERIAL INVENTORY QUANTITIES.  USERS WILL SPECIFY A
// LOCATION FROM WHICH INVENTORY IS TO BE DELETED.  A LIST OF
// MATERIALS AT THAT LOCATION WILL THEN APPEAR.  USERS MAY
// THEN SELECT A LINE TO DELETE, VERIFY THE DELETE, AND THE
// APPROPRIATE ROW(S) WILL BE DELETED FORM THE APPROPRIATE
// MATERIAL INVENTORY DATABASE TABLE.
// 
// TRANSFER FROM ONE FM0I MAP TO ANOTHER FM0I MAP IS NOT
// POSSIBLE EXCEPT THROUGH FASTPATH.  USERS WILL BE ALLOWED
// TO EXIT THIS APPLICATION VIA PFKEYS OR FASTPATH, WITH THE
// 'OPTION' FIELD AVAILABLE FOR USE WITH ANY APPLICATION
// TRANSFER.
// 
// 
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          07/08/93  JALLE1  New application.
// FK-9994  09/15/93  JALLE1  CSP 4.1 conversion.
//          12/03/93  JALLE1  Fix abend code.
// y2kfix   10/31/97  oricha  y2k modifications made to maps
//                            m001,m003,m005 to zero fill
//                            fm0hm-beg-mo field.
// *********************
Program FM0I type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FKWREC FKWREC; // record
  FM0IW00 FM0IW00; // record
  FM0IW01 FM0IW01; // record
  FMAREC FMAREC; // record
  FMBREC FMBREC; // record
  FY1REC FY1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VFYINV01 VFYINV01; // record
  VMATRL01 VMATRL01; // record
  VMATWH01 VMATWH01; // record
  VMCOLR01 VMCOLR01; // record
  VVNDR001 VVNDR001; // record
  VVNINV01 VVNINV01; // record
  VWHINV01 VWHINV01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCLTBL; // table
  use FM0IM.FM0IM110,  // forms
      FM0IM.FM0IM210, 
      FM0IM.FM0IM310, 
      FM0IM.FM0IM410,
      FM0IM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Flow to the application initialization.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0I-0005; /* Application initialization*/
    ;
    ;
    FM0I-0005: FM0I-0005();
     /* ----------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ----------------------------------------------------------------*/
    ;
    goto FM0I-0010; /* Converse the main process*/
    FM0I-0010: FM0I-0010();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0I-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FM0I

// Special application init
Function FM0I-0005()
   /* ------------------------------------------------------------*/
   /* Initialize working storage and display storage areas.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0IM110 initial; /* M110 inquiry map input/output*/
  set FM0IM210 initial; /* M210 add map input/output*/
  set FM0IM310 initial; /* M310 change map input/output*/
  set FM0IM410 initial; /* M410 delete map input/output*/
  set FM0IW00 empty; /* Working storage*/
  set FM0IW01 empty; /* Display storage*/
  set SQLCA empty; /* SQL communication area*/
  set TAEREC empty; /* Error diagnosis information*/
  set TA1REC empty; /* Error diagnosis parameters*/
  set XX0XW01 empty; /* Date/time subroutine parameters*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize switches.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-REQUEST-DATA-SW = "N"; /* Init data switch*/
  FM0IW00.FM0IW-FMAT-MAP-SW = "N"; /* Format the map switch*/
  FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N"; /* Confirm delete switch*/
  FM0IW00.FM0IW-CONFIRM-ADD-SW = "N"; /* Confirm add switch*/
  ;
  FM0IW00.FM0IW-NBR-MAP-ROWS = 4; /* Nbr of rows on map*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data was passed in the COMMAREA, use as initial key.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FK-VEND-CD[1] != " ") /* If vendor passed*/
    ;
    FM0IM110.FM0IM-HDR-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Save*/
    FM0IM210.FM0IM-HDR-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Save*/
    FM0IM310.FM0IM-HDR-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Save*/
    FM0IM410.FM0IM-HDR-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Save*/
    FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
  else
    ;
    if (FKWREC.FK-MAT-WHSE-CD != " ") /* If mtl whse passed*/
      ;
      FM0IM110.FK-MAT-WHSE-CD = FKWREC.FK-MAT-WHSE-CD; /* Save*/
      FM0IM210.FK-MAT-WHSE-CD = FKWREC.FK-MAT-WHSE-CD; /* Save*/
      FM0IM310.FK-MAT-WHSE-CD = FKWREC.FK-MAT-WHSE-CD; /* Save*/
      FM0IM410.FK-MAT-WHSE-CD = FKWREC.FK-MAT-WHSE-CD; /* Save*/
      FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
    else
      ;
      if (FKWREC.FY1FCTYC != " ") /* If factory passed*/
        ;
        FM0IM110.FY1FCTYC = FKWREC.FY1FCTYC; /* Save*/
        FM0IM210.FY1FCTYC = FKWREC.FY1FCTYC; /* Save*/
        FM0IM310.FY1FCTYC = FKWREC.FY1FCTYC; /* Save*/
        FM0IM410.FY1FCTYC = FKWREC.FY1FCTYC; /* Save*/
        FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Request data*/
      end
    end
  end
  ;
  if (FKWREC.FK-MAT-INV-MO > 0) /* Mtl inv passed*/
    ;
    FM0IW00.FM0IW-WORK-DT = FKWREC.FK-MAT-INV-MO; /* Move to work dt*/
    FM0IW01.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
    FM0IM110.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
    FM0IM210.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
    FM0IM310.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
    FM0IM410.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
  else
    ;
    XX0XS01(); /* Get current date and time*/
    FM0IW00.FM0IW-WORK-DT = XX0XW01.XX0XWCYM; /* Move to work dt*/
    FM0IW01.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
    FM0IM110.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
    FM0IM210.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
    FM0IM310.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
    FM0IM410.FM0IM-INV-MO = FM0IW00.FM0IW-WORK-YYMM; /* Save*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Determine which map to process.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
    FM0IW00.FM0IW-MAP-SW = "2"; /* Map switch - ADD*/
  else
    if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* CHG requested*/
      FM0IW00.FM0IW-MAP-SW = "3"; /* Map switch - CHG*/
    else
      if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* DEL requested*/
        FM0IW00.FM0IW-MAP-SW = "4"; /* Map switch - DEL*/
      else
        FM0IW00.FM0IW-MAP-SW = "1"; /* Map switch - INQ*/
      end
    end
  end
  ;
  ;
  set FKWREC empty; /* Intitialize FKWREC*/
  ;
  ;
  ;
end // end FM0I-0005

// Main process to display a map
Function FM0I-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the second map.*/
   /* 2) Otherwise, if specified, display the third map.*/
   /* 3) Otherwise, if specified, display the fourth map.*/
   /* 4) Otherwise, display the first map.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-MAP-SW == "2") /* Map 2 was requested*/
    FM0I-2000(); /* Display map 2*/
  else
    ;
    if (FM0IW00.FM0IW-MAP-SW == "3") /* Map 3 was requested*/
      FM0I-3000(); /* Display map 3*/
    else
      ;
      if (FM0IW00.FM0IW-MAP-SW == "4") /* Map 4 was requested*/
        FM0I-4000(); /* Display map 4*/
      else
        ;
        FM0I-1000(); /* Display map 1*/
      end
    end
  end
  ;
  ;
end // end FM0I-0010

// Process inquiry map
Function FM0I-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-1100(); /* Obtain the data to display*/
  ;
  FM0I-1200(); /* Format and display the map*/
  ;
  FM0I-1300(); /* Check attention identifier*/
  ;
  FM0I-1400(); /* Reset fields to normal intensity*/
  ;
  FM0I-1500(); /* Verify the entered data*/
  ;
  FM0I-1600(); /* Process valid input request*/
  ;
  ;
end // end FM0I-1000

// Obtain data to display
Function FM0I-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.XXXTSLEN = 1683; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IM-HDR-VEND-CD = FM0IM110.FM0IM-HDR-VEND-CD;
  FM0IW00.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD;
  FM0IW00.FY1FCTYC = FM0IM110.FY1FCTYC;
  FM0IW00.FM0IM-INV-MO = FM0IM110.FM0IM-INV-MO;
  ;
  FM0IM110.FK-VEND-SNM = " ";
  FM0IM110.FK-MAT-WHSE-ABRV = " ";
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0IW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0I-1110(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If vendor was entered, obtain the vendor inventory.*/
   /* Otherwise, if whse entered, obtain the material whse inventory.*/
   /* Otherwise, if fcty entered, obtain the factory inventory.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IM110.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    ;
    FM0I-1120(); /* Get vendor inventory*/
  else
    if (FM0IM110.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
      ;
      FM0I-1130(); /* Get mtl whse inventory*/
    else
      ;
      if (FM0IM110.FY1FCTYC != " ") /* If factory entered*/
        ;
        FM0I-1140(); /* Get fcty inventory*/
      end
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If data was not found, set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    converseLib.validationFailed(18); /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "1000"; /* Module identification*/
    set FM0IM110.FM0IM-INV-MO bold; /* Highlight*/
    if (FM0IM110.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
      set FM0IM110.FM0IM-HDR-VEND-CD cursor, bold;
    else
      if (FM0IM110.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
        set FM0IM110.FK-MAT-WHSE-CD cursor, bold;
      else
        set FM0IM110.FY1FCTYC cursor, bold;
      end
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-REQUEST-DATA-SW = "N";
  FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0I-1100

// Purge any temporary storage
Function FM0I-1110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0IW01 empty; /* m110 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0IW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1110

// Obtain vendor inventory
Function FM0I-1120()
   /* ------------------------------------------------------------*/
   /* Select the vendor record from DCMPNT.VVNDR001.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-1121(); /* Select DCMPNT.VVNDR001*/
  ;
  FM0IW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
  FM0IW00.FK-MAT-WHSE-ABRV = " ";
  ;
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the vendor inventory table DCMPNT.VVNINV01.*/
   /* Fetch the first record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-1122(); /* Declare DCMPNT.VVNINV01 cursor*/
  ;
  ;
  FM0IW00.FM0IW-END-VVNINV01-CSR-SW = "N"; /* Init end of csr switch*/
  ;
  FM0I-1123(); /* Fetch DCMPNT.VVNINV01 record*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format inventory records to display storage until end of cursor.*/
   /* When necessary, save to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 0; /* Initialize index*/
  ;
  while (FM0IW00.FM0IW-END-VVNINV01-CSR-SW == "N") /* While not end of csr*/
    ;
    FM0I-1124(); /* Select DCMPNT.VMATRL01 record*/
    ;
    FM0I-1125(); /* Save record in display storage*/
    ;
    if (FM0IW00.FM0IW-IDX == FM0IW00.FM0IW-NBR-MAP-ROWS) /* Full page*/
      FM0I-1126(); /* Add record to temporary storage*/
      FM0IW00.FM0IW-IDX = 0; /* Reset index*/
    end
    ;
    FM0I-1123(); /* Fetch DCMPNT.VVNINV01 record*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX > 0) /* If any records on current page*/
    FM0I-1126(); /* Add record to temporary storage*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the DCMPNT.VVNINV01 cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-1127(); /* Close DCMPNT.VVNINV01*/
  ;
  ;
end // end FM0I-1120

// Select DCMPNT.VVNDR001
Function FM0I-1121()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0IM110.FM0IM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VVNDR001.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1121 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1121

// Declare DCMPNT.VVNINV01
Function FM0I-1122()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNINV01 empty;
  ;
  VVNINV01.FK-VEND-CD = FM0IM110.FM0IM-HDR-VEND-CD;
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM110.FM0IM-INV-MO;
  if (FM0IW-WORK-YY < 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  VVNINV01.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  ;
  ;
  try
    call "IO6800" ("S1", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1122"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1122 DECLARE DCMPNT.VVNINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1122

// Fetch DCMPNT.VVNINV01
Function FM0I-1123()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6800" ("N1", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0IW00.FM0IW-END-VVNINV01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1123"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1123 FETCH DCMPNT.VVNINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1123

// Select DCMPNT.VMATRL01
Function FM0I-1124()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = VVNINV01.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1124"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1124 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1124

// Save data in display storage
Function FM0I-1125()
   /* --------------------------------------------------------------*/
   /* Increment the map index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM110.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = " "; /* Mtl whse abrv*/
    FM0IW01.FY1FCTYC = FM0IM110.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM110.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = VVNINV01.FK-MAT-NBR; /* Mtl*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
  FM0IW01.XCLCD[FM0IW-IDX] = VVNINV01.XCLCD; /* Clr*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = VVNINV01.FK-MAT-INV-QTY; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = VVNINV01.FK-NIKE-RSP-FL; /* Flg*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = VVNINV01.FK-COPY-INV-FL; /* Flg*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = VVNINV01.FK-MAT-INV-COMNT;
  ;
  if (VVNINV01.XCLCD in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  FM0IW01.VVNINV01-GROUP[FM0IW-IDX] = VVNINV01.VVNINV01-GROUP;
  FM0IW01.VWHINV01-GROUP[FM0IW-IDX] = " ";
  FM0IW01.VFYINV01-GROUP[FM0IW-IDX] = " ";
  ;
  ;
end // end FM0I-1125

// Add record to temporary store
Function FM0I-1126()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0IW01 empty; /* m110 display storage*/
    ;
    FM0IW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1126"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1126

// Close DCMPNT.VVNINV01
Function FM0I-1127()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6800" ("C1", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1127"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1127 CLOSE DCMPNT.VVNINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1127

// Obtain mtl whse inventory
Function FM0I-1130()
   /* ------------------------------------------------------------*/
   /* Select the material whse record from DMCPNT.VMATWH01.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-1131(); /* Select DCMPNT.VMATWH01*/
  ;
  FM0IW00.FK-MAT-WHSE-ABRV = VMATWH01.FK-MAT-WHSE-ABRV;
  FM0IW00.FK-VEND-SNM = " ";
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the vendor inventory table DCMPNT.VWHINV01.*/
   /* Fetch the first record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-1132(); /* Declare DCMPNT.VWHINV01 cursor*/
  ;
  ;
  FM0IW00.FM0IW-END-VWHINV01-CSR-SW = "N"; /* Init end of csr switch*/
  ;
  FM0I-1133(); /* Fetch DCMPNT.VWHINV01 record*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format inventory records to display storage until end of cursor.*/
   /* When necessary, save to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 0; /* Initialize index*/
  ;
  while (FM0IW00.FM0IW-END-VWHINV01-CSR-SW == "N") /* While not end of csr*/
    ;
    FM0I-1134(); /* Select DCMPNT.VMATRL01 record*/
    ;
    FM0I-1135(); /* Save record in display storage*/
    ;
    if (FM0IW00.FM0IW-IDX == FM0IW00.FM0IW-NBR-MAP-ROWS) /* Page is full*/
      FM0I-1136(); /* Add record to temporary storage*/
      FM0IW00.FM0IW-IDX = 0; /* Reset index*/
    end
    ;
    FM0I-1133(); /* Fetch DCMPNT.VWHINV01 record*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX > 0) /* If any records on current page*/
    FM0I-1136(); /* Add record to temporary storage*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the DCMPNT.VWHINV01 cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-1137(); /* Close DCMPNT.VWHINV01*/
  ;
  ;
end // end FM0I-1130

// Select DCMPNT.VMATWH01
Function FM0I-1131()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD;
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATWH01.FK-MAT-WHSE-ABRV = "***************"; /* Whse abrv*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1131"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1131 SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1131

// Declare DCMPNT.VWHINV01
Function FM0I-1132()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set FMBREC empty;
  ;
  FMBREC.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD;
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM110.FM0IM-INV-MO;
  if (FM0IW-WORK-YY < 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  FMBREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  ;
  ;
  try
    call "FM1420" ("S1", SQLCA, FMBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1132"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1132 DECLARE DCMPNT.VWHINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMBREC.FMBREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1132

// Fetch DCMPNT.VWHINV01
Function FM0I-1133()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1420" ("N1", SQLCA, FMBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0IW00.FM0IW-END-VWHINV01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1133"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1133 FETCH DCMPNT.VWHINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMBREC.FMBREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1133

// Select DCMPNT.VMATRL01
Function FM0I-1134()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FMBREC.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1134"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1134 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1134

// Save data in display storage
Function FM0I-1135()
   /* --------------------------------------------------------------*/
   /* Increment the map index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM110.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = " "; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = VMATWH01.FK-MAT-WHSE-ABRV;
    FM0IW01.FY1FCTYC = FM0IM110.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM110.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = FMBREC.FK-MAT-NBR; /* Mtl*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
  FM0IW01.XCLCD[FM0IW-IDX] = FMBREC.XCLCD; /* Clr*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = FMBREC.FK-MAT-INV-QTY; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = FMBREC.FK-NIKE-RSP-FL; /* Flg*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = FMBREC.FK-COPY-INV-FL; /* Flg*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = FMBREC.FK-MAT-INV-COMNT;
  ;
  if (FMBREC.XCLCD in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  FM0IW01.VVNINV01-GROUP = " ";
  FM0IW01.VWHINV01-GROUP[FM0IW-IDX] = FMBREC.VWHINV01-GROUP;
  FM0IW01.VFYINV01-GROUP = " ";
  ;
  ;
end // end FM0I-1135

// Add record to temporary store
Function FM0I-1136()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0IW01 empty; /* m110 display storage*/
    ;
    FM0IW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1136"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1136

// Close DCMPNT.VWHINV01
Function FM0I-1137()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1420" ("C1", SQLCA, FMBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1137"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1137 CLOSE DCMPNT.VWHINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMBREC.FMBREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1137

// Obtain factory inventory
Function FM0I-1140()
  FM0IW00.FK-VEND-SNM = " ";
  FM0IW00.FK-MAT-WHSE-ABRV = " ";
  ;
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the vendor inventory table DCMPNT.VFYINV01.*/
   /* Fetch the first record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-1142(); /* Declare DCMPNT.VFYINV01 cursor*/
  ;
  ;
  FM0IW00.FM0IW-END-VFYINV01-CSR-SW = "N"; /* Init end of csr switch*/
  ;
  FM0I-1143(); /* Fetch DCMPNT.VFYINV01 record*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format inventory records to display storage until end of cursor.*/
   /* When necessary, save to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 0; /* Initialize index*/
  ;
  while (FM0IW00.FM0IW-END-VFYINV01-CSR-SW == "N") /* While not end of csr*/
    ;
    FM0I-1144(); /* Select DCMPNT.VMATRL01 record*/
    ;
    FM0I-1145(); /* Save record in display storage*/
    ;
    if (FM0IW00.FM0IW-IDX == FM0IW00.FM0IW-NBR-MAP-ROWS) /* Page is full*/
      FM0I-1146(); /* Add record to temporary storage*/
      FM0IW00.FM0IW-IDX = 0; /* Reset index*/
    end
    ;
    FM0I-1143(); /* Fetch DCMPNT.VFYINV01 record*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX > 0) /* If any records on current page*/
    FM0I-1146(); /* Add record to temporary storage*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the DCMPNT.VFYINV01 cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-1147(); /* Close DCMPNT.VFYINV01*/
  ;
  ;
end // end FM0I-1140

// Declare DCMPNT.VFYINV01
Function FM0I-1142()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set FMAREC empty;
  ;
  FMAREC.FY1FCTYC = FM0IM110.FY1FCTYC;
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM110.FM0IM-INV-MO;
  if (FM0IW-WORK-YY < 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  FMAREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  ;
  ;
  try
    call "FM1410" ("S1", SQLCA, FMAREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1142"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1142 DECLARE DCMPNT.VFYINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMAREC.FMAREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1142

// Fetch DCMPNT.VFYINV01
Function FM0I-1143()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1410" ("N1", SQLCA, FMAREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0IW00.FM0IW-END-VFYINV01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1143"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1143 FETCH DCMPNT.VFYINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMAREC.FMAREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1143

// Select DCMPNT.VMATRL01
Function FM0I-1144()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FMAREC.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1144"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1144 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1144

// Save data in display storage
Function FM0I-1145()
   /* --------------------------------------------------------------*/
   /* Increment the map index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM110.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = " "; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = " "; /* Mtl whse abrv*/
    FM0IW01.FY1FCTYC = FM0IM110.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM110.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = FMAREC.FK-MAT-NBR; /* Mtl*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
  FM0IW01.XCLCD[FM0IW-IDX] = FMAREC.XCLCD; /* Clr*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = FMAREC.FK-MAT-INV-QTY; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = FMAREC.FK-NIKE-RSP-FL; /* Flg*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = FMAREC.FK-COPY-INV-FL; /* Flg*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = FMAREC.FK-MAT-INV-COMNT;
  ;
  if (FMAREC.XCLCD in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  ;
  FM0IW01.VVNINV01-GROUP = " ";
  FM0IW01.VWHINV01-GROUP = " ";
  FM0IW01.VFYINV01-GROUP[FM0IW-IDX] = FMAREC.VFYINV01-GROUP;
  ;
  ;
end // end FM0I-1145

// Add record to temporary store
Function FM0I-1146()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0IW01 empty; /* m110 display storage*/
    ;
    FM0IW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1146"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1146

// Close DCMPNT.VFYINV01
Function FM0I-1147()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1410" ("C1", SQLCA, FMAREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1147"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1147 CLOSE DCMPNT.VFYINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMAREC.FMAREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1147

// Format and converse the map
Function FM0I-1200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0I-1210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0IM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0IM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0IM110 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0IM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0IM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format all key descriptions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IM110.FK-VEND-SNM = FM0IW00.FK-VEND-SNM;
  FM0IM110.FK-MAT-WHSE-ABRV = FM0IW00.FK-MAT-WHSE-ABRV;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (no detail lines formatted to temporary storage).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX == 0) /* No data formatted*/
    ;
    set FM0IM110.XXXTSPAG invisible, skip;
    set FM0IM110.TA5TSQIX invisible, skip;
    ;
    FM0IW00.FM0IW-IDX = 1; /* Init index*/
    ;
    while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For all lines*/
      ;
      set FM0IM110.FM0IM-SELECT[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-VEND-CD[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-MAT-NBR[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-DEPT-MAT-DESC[FM0IW-IDX] invisible, skip;
      set FM0IM110.XCLCD[FM0IW-IDX] invisible, skip;
      set FM0IM110.XCLDESC[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-MAT-INV-QTY[FM0IW-IDX] invisible, skip;
      set FM0IM110.XMU-MAT-UOM-CD[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-NIKE-RSP-FL[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-COPY-INV-FL[FM0IW-IDX] invisible, skip;
      set FM0IM110.FM0IM-COMMENT-LIT[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-MAT-INV-COMNT[FM0IW-IDX] invisible, skip;
      ;
      FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but there is at least partial data on the map).*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Init index*/
  ;
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For all lines*/
    ;
    if (FM0IM110.FK-MAT-NBR[FM0IW-IDX] == " ") /* No data*/
      ;
      set FM0IM110.FM0IM-SELECT[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-VEND-CD[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-MAT-NBR[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-DEPT-MAT-DESC[FM0IW-IDX] invisible, skip;
      set FM0IM110.XCLCD[FM0IW-IDX] invisible, skip;
      set FM0IM110.XCLDESC[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-MAT-INV-QTY[FM0IW-IDX] invisible, skip;
      set FM0IM110.XMU-MAT-UOM-CD[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-NIKE-RSP-FL[FM0IW-IDX] invisible, skip;
      set FM0IM110.FM0IM-COMMENT-LIT[FM0IW-IDX] invisible, skip;
      set FM0IM110.FK-MAT-INV-COMNT[FM0IW-IDX] invisible, skip;
    end
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* If no message to display*/
    set FM0IM110.FM0IM-HDR-VEND-CD cursor;
  end
  ;
  ;
  converse FM0IM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0IM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0IM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0I-1200

// Format the data to display
Function FM0I-1210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0IM110 initial; /* Initialize map*/
  ;
  FM0IW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0IW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0IW00.XXXTSPAG > FM0IW00.TA5TSQIX) /* Desired page > highest*/
        FM0IW00.XXXTSPAG = FM0IW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0I-1211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX == 0) /* If no data was obtained*/
    ;
    FM0IM110.FM0IM-HDR-VEND-CD = FM0IW00.FM0IM-HDR-VEND-CD;
    FM0IM110.FK-MAT-WHSE-CD = FM0IW00.FK-MAT-WHSE-CD;
    FM0IM110.FY1FCTYC = FM0IW00.FY1FCTYC;
    FM0IM110.FM0IM-INV-MO = FM0IW00.FM0IM-INV-MO;
  else
    ;
    FM0IM110.FM0IM-HDR-VEND-CD = FM0IW01.FM0IM-HDR-VEND-CD;
    FM0IM110.FK-MAT-WHSE-CD = FM0IW01.FK-MAT-WHSE-CD;
    FM0IM110.FY1FCTYC = FM0IW01.FY1FCTYC;
    FM0IM110.FM0IM-INV-MO = FM0IW01.FM0IM-INV-MO;
  end
  ;
  FM0IM110.XXXTSPAG = FM0IW00.XXXTSPAG; /* Current page*/
  FM0IM110.TA5TSQIX = FM0IW00.TA5TSQIX; /* Max page*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Initialize idx*/
  ;
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For each line*/
    ;
    FM0IM110.FK-VEND-CD[FM0IW-IDX] = FM0IW01.FK-VEND-CD[FM0IW-IDX]; /* Vendor*/
    FM0IM110.FK-MAT-NBR[FM0IW-IDX] = FM0IW01.FK-MAT-NBR[FM0IW-IDX]; /* Material*/
    FM0IM110.FK-DEPT-MAT-DESC[FM0IW-IDX] = FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX]; /* Material desc*/
    FM0IM110.XCLCD[FM0IW-IDX] = FM0IW01.XCLCD[FM0IW-IDX]; /* Color code*/
    FM0IM110.XCLDESC[FM0IW-IDX] = FM0IW01.XCLDESC[FM0IW-IDX]; /* Color desc*/
    FM0IM110.FK-MAT-INV-QTY[FM0IW-IDX] = FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX]; /* Inventory qty*/
    FM0IM110.XMU-MAT-UOM-CD[FM0IW-IDX] = FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX]; /* Uom*/
    FM0IM110.FK-NIKE-RSP-FL[FM0IW-IDX] = FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX]; /* Nike responsibility flag*/
    FM0IM110.FK-COPY-INV-FL[FM0IW-IDX] = FM0IW01.FK-COPY-INV-FL[FM0IW-IDX]; /* Copy inventory flag*/
    FM0IM110.FK-MAT-INV-COMNT[FM0IW-IDX] = FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX]; /* Inventory comment*/
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  ;
end // end FM0I-1210

// Read page from temp storage
Function FM0I-1211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0IW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1211

// Check attention identifier
Function FM0I-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0IM110.FM0IM-HDR-VEND-CD;
    FKWREC.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD;
    FKWREC.FY1FCTYC = FM0IM110.FY1FCTYC;
    FM0IW00.FM0IW-WORK-YYMM = FM0IM110.FM0IM-INV-MO;
    if (FM0IW00.FM0IW-WORK-YY <= 80)
      FM0IW00.FM0IW-WORK-CC = 20;
    else
      FM0IW00.FM0IW-WORK-CC = 19;
    end
    FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
    ;
    COMMAREA.CATOAP = "FM0I"; /* to applicaiton*/
    COMMAREA.CAITEM = "I   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0IM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0IM110.FM0IM-HDR-VEND-CD;
      FKWREC.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD;
      FKWREC.FY1FCTYC = FM0IM110.FY1FCTYC;
      FM0IW00.FM0IW-WORK-YYMM = FM0IM110.FM0IM-INV-MO;
      if (FM0IW00.FM0IW-WORK-YY <= 80)
        FM0IW00.FM0IW-WORK-CC = 20;
      else
        FM0IW00.FM0IW-WORK-CC = 19;
      end
      FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
      ;
      COMMAREA.CATOAP = FM0IM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0IM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0IM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0IM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0IM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0IM110.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0IM110.FM0IM-HDR-VEND-CD;
    FKWREC.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD;
    FKWREC.FY1FCTYC = FM0IM110.FY1FCTYC;
    FM0IW00.FM0IW-WORK-YYMM = FM0IM110.FM0IM-INV-MO;
    if (FM0IW00.FM0IW-WORK-YY <= 80)
      FM0IW00.FM0IW-WORK-CC = 20;
    else
      FM0IW00.FM0IW-WORK-CC = 19;
    end
    FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* BACK was not pressed*/
   && converseVar.eventKey not pf8   /* FWRD was not pressed*/
   && converseVar.eventKey not pf17) /* INVM was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0I-1300

// Reset Highlighted fields
Function FM0I-1400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0IM110.XXXTSPAG initialAttributes;
  set FM0IM110.TA5TSQIX initialAttributes;
  set FM0IM110.FM0IM-HDR-VEND-CD initialAttributes;
  set FM0IM110.FK-VEND-SNM initialAttributes;
  set FM0IM110.FK-MAT-WHSE-CD initialAttributes;
  set FM0IM110.FK-MAT-WHSE-ABRV initialAttributes;
  set FM0IM110.FY1FCTYC initialAttributes;
  set FM0IM110.FM0IM-INV-MO initialAttributes;
  ;
  FM0IW00.FM0IW-IDX = 1;
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS)
    ;
    set FM0IM110.FM0IM-SELECT[FM0IW-IDX] initialAttributes;
    set FM0IM110.FK-VEND-CD[FM0IW-IDX] initialAttributes;
    set FM0IM110.FK-MAT-NBR[FM0IW-IDX] initialAttributes;
    set FM0IM110.FK-DEPT-MAT-DESC[FM0IW-IDX] initialAttributes;
    set FM0IM110.XCLCD[FM0IW-IDX] initialAttributes;
    set FM0IM110.XCLDESC[FM0IW-IDX] initialAttributes;
    set FM0IM110.FK-MAT-INV-QTY[FM0IW-IDX] initialAttributes;
    set FM0IM110.XMU-MAT-UOM-CD[FM0IW-IDX] initialAttributes;
    set FM0IM110.FK-NIKE-RSP-FL[FM0IW-IDX] initialAttributes;
    set FM0IM110.FK-COPY-INV-FL[FM0IW-IDX] initialAttributes;
    set FM0IM110.FK-MAT-INV-COMNT[FM0IW-IDX] initialAttributes;
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  set FM0IM110.CATOAP initialAttributes;
  set FM0IM110.CAITEM initialAttributes;
  ;
end // end FM0I-1400

// Verify entered fields
Function FM0I-1500()
   /* ---------------------------------------------------------------*/
   /* Exit edit session if pf17 pressed.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf17)
    return;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM110.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0IM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0I-1510(); /* Verify scroll request*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key was changed, verify it.*/
   /* Otherwise, verify the detail data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM110.FM0IM-HDR-VEND-CD != FM0IW01.FM0IM-HDR-VEND-CD /* Vend chg*/
   || FM0IM110.FK-MAT-WHSE-CD != FM0IW01.FK-MAT-WHSE-CD       /* Mtl whse chg*/
   || FM0IM110.FY1FCTYC != FM0IW01.FY1FCTYC                   /* Factory chg*/
   || FM0IM110.FM0IM-INV-MO != FM0IW01.FM0IM-INV-MO)          /* Month chg*/
    ;
    FM0I-1520(); /* Verify key*/
  else
    ;
    FM0I-1530(); /* Verify detail*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0I-1500

// Verify scroll request
Function FM0I-1510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0IW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0IW00.XXXTSPAG >= FM0IW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0I-1510

// Verify key data
Function FM0I-1520()
   /* ---------------------------------------------------------------*/
   /* Verify month.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM110.FM0IM-INV-MO;
  ;
  if (FM0IW00.FM0IW-WORK-MM < 1
   || FM0IW00.FM0IW-WORK-MM > 12)
    ;
    set FM0IM110.FM0IM-INV-MO cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
    converseLib.validationFailed(84); /* Date missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor, mtl whse, or factory was entered.  1 (and only 1)*/
   /* must be selected.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-COUNT = 0;
  ;
  if (FM0IM110.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  if (FM0IM110.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  if (FM0IM110.FY1FCTYC != " ") /* If factory entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  ;
  if (FM0IW00.FM0IW-COUNT > 1) /* If too many were entered;*/
    ;
    if (FM0IM110.FY1FCTYC != " ") /* If factory entered*/
      set FM0IM110.FY1FCTYC cursor, bold; /* Highlight*/
    end
    if (FM0IM110.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
      set FM0IM110.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
    end
    if (FM0IM110.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
      set FM0IM110.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
    end
    ;
    FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
    converseLib.validationFailed(125); /* Only 1 may be entered*/
  end
  ;
  if (FM0IW00.FM0IW-COUNT == 0) /* If none were entered*/
    ;
    set FM0IM110.FY1FCTYC bold; /* Highlight*/
    set FM0IM110.FK-MAT-WHSE-CD bold; /* Highlight*/
    set FM0IM110.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
    ;
    FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
    converseLib.validationFailed(138); /* One selection must be specified*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Exit if errors have been found.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If errors found*/
    return; /* exit to prev process*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify factory code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM110.FY1FCTYC != " ") /* If fcty entered*/
    FM0I-1521(); /* Verify factory*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material whse code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM110.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
    FM0I-1522(); /* Verify mtl whse*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM110.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    FM0I-1523(); /* Verify vendor*/
  end
  ;
  ;
end // end FM0I-1520

// Verify factory code
Function FM0I-1521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0IM110.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM110.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1521"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1521 VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1521

// Verify material whse
Function FM0I-1522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD;
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM110.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1522"; /* Module identification*/
      converseLib.validationFailed(124); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1522 VERIFY MATERIAL WHSE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1522

// Verify vendor code
Function FM0I-1523()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0IM110.FM0IM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM110.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1523"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1523"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1523 VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-1523

// Verify detail data
Function FM0I-1530()
   /* ---------------------------------------------------------------*/
   /* Verify select fields.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-NBR-MAP-ROWS;
  while (FM0IW00.FM0IW-IDX > 0)
    ;
    if (FM0IM110.FM0IM-SELECT[FM0IW-IDX] == " " /* If blank*/
     || FM0IM110.FM0IM-SELECT[FM0IW-IDX] == "S") /* or selected*/
       /* next sentence*/
    else
      ;
      set FM0IM110.FM0IM-SELECT[FM0IW-IDX] cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1530"; /* Module identification*/
      converseLib.validationFailed(13); /* Only S may be used to select a line*/
    end
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX - 1;
  end
end // end FM0I-1530

// Process valid request
Function FM0I-1600()
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IM110.FM0IM-HDR-VEND-CD != FM0IW01.FM0IM-HDR-VEND-CD
   || FM0IM110.FK-MAT-WHSE-CD != FM0IW01.FK-MAT-WHSE-CD
   || FM0IM110.FY1FCTYC != FM0IW01.FY1FCTYC
   || FM0IM110.FM0IM-INV-MO != FM0IW01.FM0IM-INV-MO)
    ;
    FM0IW00.FM0IW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0IW00.XXXTSPAG = FM0IW00.XXXTSPAG - 1; /* Decrement page*/
    FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0IW00.XXXTSPAG = FM0IW00.XXXTSPAG + 1; /* Increment page*/
    FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf17 pressed, process request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf17 /* pf17 was pressed*/
  )                               
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0IM110.FM0IM-HDR-VEND-CD;
    FKWREC.FK-MAT-WHSE-CD = FM0IM110.FK-MAT-WHSE-CD;
    FKWREC.FY1FCTYC = FM0IM110.FY1FCTYC;
    FM0IW00.FM0IW-WORK-YYMM = FM0IM110.FM0IM-INV-MO;
    if (FM0IW00.FM0IW-WORK-YY <= 80)
      FM0IW00.FM0IW-WORK-CC = 20;
    else
      FM0IW00.FM0IW-WORK-CC = 19;
    end
    FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT; /* Inventory month*/
    ;
    ;
    FM0IW00.FM0IW-IDX = 1;
    while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS)
      ;
      if (FM0IM110.FM0IM-SELECT[FM0IW-IDX] == "S") /* If line selected*/
        ;
        if (FM0IM110.FM0IM-HDR-VEND-CD != " ") /* If vendor inventory*/
          ;
          VVNINV01.VVNINV01-GROUP = FM0IW01.VVNINV01-GROUP[FM0IW-IDX];
          FKWREC.FK-MAT-NBR[1] = VVNINV01.FK-MAT-NBR; /* Mtl*/
          FKWREC.XMG-COLR-GRP-CD[1] = VVNINV01.XMG-COLR-GRP-CD;
          FKWREC.XCLCD[1] = VVNINV01.XCLCD; /* Color*/
        else
          ;
          if (FM0IM110.FK-MAT-WHSE-CD != " ") /* If whse inventory*/
            ;
            VWHINV01.VWHINV01-GROUP = FM0IW01.VWHINV01-GROUP[FM0IW-IDX];
            FKWREC.FK-MAT-NBR[1] = VWHINV01.FK-MAT-NBR; /* Mtl*/
            FKWREC.XMG-COLR-GRP-CD[1] = VWHINV01.XMG-COLR-GRP-CD;
            FKWREC.XCLCD[1] = VWHINV01.XCLCD; /* Color*/
          else
            ;
            VFYINV01.VFYINV01-GROUP = FM0IW01.VFYINV01-GROUP[FM0IW-IDX];
            FKWREC.FK-MAT-NBR[1] = VFYINV01.FK-MAT-NBR; /* Mtl*/
            FKWREC.XMG-COLR-GRP-CD[1] = VFYINV01.XMG-COLR-GRP-CD;
            FKWREC.XCLCD[1] = VFYINV01.XCLCD; /* Color*/
          end
        end
        FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + FM0IW00.FM0IW-NBR-MAP-ROWS;
      end
      ;
      FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
    end
    ;
    COMMAREA.CATOAP = "FM0E"; /* to applicaiton*/
    COMMAREA.CAITEM = FM0IM110.CAITEM; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0IM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0I-1600

// Process add map
Function FM0I-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-2100(); /* Obtain the data to display*/
  ;
  FM0I-2200(); /* Format and display the map*/
  ;
  FM0I-2300(); /* Check attention identifier*/
  ;
  FM0I-2400(); /* Reset fields to normal intensity*/
  ;
  FM0I-2500(); /* Verify the entered data*/
  ;
  FM0I-2600(); /* Process valid input request*/
  ;
  ;
end // end FM0I-2000

// Obtain data to display
Function FM0I-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Clear display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0IW01 empty; /* Clear display storage*/
  set VVNDR001 empty; /* Clear vendor record*/
  set VMATWH01 empty; /* Clear mtl whse record*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IM-HDR-VEND-CD = FM0IM210.FM0IM-HDR-VEND-CD;
  FM0IW00.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD;
  FM0IW00.FY1FCTYC = FM0IM210.FY1FCTYC;
  FM0IW00.FM0IM-INV-MO = FM0IM210.FM0IM-INV-MO;
  ;
  FM0IM210.FK-VEND-SNM = " ";
  FM0IM210.FK-MAT-WHSE-ABRV = " ";
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If vendor was entered, obtain the DCMPNT.VVNDR001 record.*/
   /* --------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  if (FM0IM210.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    ;
    FM0I-2110(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If mtl whse was entered, obtain the DCMPNT.VMATWH01 record.*/
   /* --------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  if (FM0IM210.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
    ;
    FM0I-2120(); /* Select DCMPNT.VMATWH01*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW01.FM0IM-HDR-VEND-CD = FM0IM210.FM0IM-HDR-VEND-CD;
  FM0IW01.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD;
  FM0IW01.FY1FCTYC = FM0IM210.FY1FCTYC;
  FM0IW01.FM0IM-INV-MO = FM0IM210.FM0IM-INV-MO;
  ;
  FM0IW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
  FM0IW01.FK-MAT-WHSE-ABRV = VMATWH01.FK-MAT-WHSE-ABRV;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If confirming the add, obtain the line data.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-CONFIRM-ADD-SW == "Y") /* If confirming add*/
    ;
    FM0IW00.FM0IW-IDX = 1; /* Init index*/
    ;
    while (FM0IW00.FM0IW-IDX <= 4) /* For each line on page*/
      ;
      if (FM0IM210.FK-MAT-NBR[FM0IW-IDX] != " ") /* If data entered*/
        ;
        FM0I-2130(); /* Obtain DCMPNT.VMATRL01 record*/
        FM0I-2140(); /* Add to display storage*/
      end
      ;
      FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Reset switches.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-REQUEST-DATA-SW = "N";
  FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0I-2100

// Select DCMPNT.VVNDR001
Function FM0I-2110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0IM210.FM0IM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VVNDR001.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2110 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2110

// Select DCMPNT.VMATWH01
Function FM0I-2120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD;
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATWH01.FK-MAT-WHSE-ABRV = "***************"; /* Whse abrv*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2120 SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2120

// Select DCMPNT.VMATRL01
Function FM0I-2130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0IM210.FK-MAT-NBR[FM0IW-IDX];
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2130 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2130

// Save data in display storage
Function FM0I-2140()
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM210.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = VMATWH01.FK-MAT-WHSE-ABRV; /**/
    FM0IW01.FY1FCTYC = FM0IM210.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM210.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = FM0IM210.FK-MAT-NBR[FM0IW-IDX]; /* Material*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0IW01.XCLCD[FM0IW-IDX] = FM0IM210.XCLCD[FM0IW-IDX]; /* Color*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX]; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX]; /* Nike resp flag*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = FM0IM210.FK-COPY-INV-FL[FM0IW-IDX]; /* Copy inventory flag*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = FM0IM210.FK-MAT-INV-COMNT[FM0IW-IDX]; /* Comment*/
  ;
  if (FM0IM210.XCLCD[FM0IW-IDX] in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  FM0IW01.VVNINV01-GROUP[FM0IW-IDX] = " ";
  FM0IW01.VWHINV01-GROUP[FM0IW-IDX] = " ";
  FM0IW01.VFYINV01-GROUP[FM0IW-IDX] = " ";
  ;
  ;
end // end FM0I-2140

// Format and converse the map
Function FM0I-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0I-2210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0IM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0IM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0IM210 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0IM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0IM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* If no message to display*/
    set FM0IM210.FM0IM-HDR-VEND-CD cursor;
  end
  ;
  ;
  converse FM0IM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0IM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0IM210.CAITEM; /* Application data*/
  ;
  ;
end // end FM0I-2200

// Format the data to display
Function FM0I-2210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0IM210 initial; /* Initialize map*/
  ;
  FM0IW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0IM210.FM0IM-HDR-VEND-CD = FM0IW01.FM0IM-HDR-VEND-CD;
  FM0IM210.FK-VEND-SNM = FM0IW01.FK-VEND-SNM;
  FM0IM210.FK-MAT-WHSE-CD = FM0IW01.FK-MAT-WHSE-CD;
  FM0IM210.FK-MAT-WHSE-ABRV = FM0IW01.FK-MAT-WHSE-ABRV;
  FM0IM210.FY1FCTYC = FM0IW01.FY1FCTYC;
  FM0IM210.FM0IM-INV-MO = FM0IW01.FM0IM-INV-MO;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Initialize idx*/
  ;
  while (FM0IW00.FM0IW-IDX <= 4) /* For each line*/
    ;
    FM0IM210.FK-VEND-CD[FM0IW-IDX] = FM0IW01.FK-VEND-CD[FM0IW-IDX]; /* Vendor*/
    FM0IM210.FK-MAT-NBR[FM0IW-IDX] = FM0IW01.FK-MAT-NBR[FM0IW-IDX]; /* Material*/
    FM0IM210.FK-DEPT-MAT-DESC[FM0IW-IDX] = FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX]; /* Material desc*/
    FM0IM210.XCLCD[FM0IW-IDX] = FM0IW01.XCLCD[FM0IW-IDX]; /* Color code*/
    FM0IM210.XCLDESC[FM0IW-IDX] = FM0IW01.XCLDESC[FM0IW-IDX]; /* Color desc*/
    FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX] = FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX]; /* Inventory qty*/
    FM0IM210.XMU-MAT-UOM-CD[FM0IW-IDX] = FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX]; /* Uom*/
    FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX] = FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX]; /* Nike responsibility flag*/
    FM0IM210.FK-COPY-INV-FL[FM0IW-IDX] = FM0IW01.FK-COPY-INV-FL[FM0IW-IDX]; /* Copy inventory flag*/
    FM0IM210.FK-MAT-INV-COMNT[FM0IW-IDX] = FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX]; /* Inventory comment*/
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  ;
end // end FM0I-2210

// Check attention identifier
Function FM0I-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0IM210.FM0IM-HDR-VEND-CD;
    FKWREC.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD;
    FKWREC.FY1FCTYC = FM0IM210.FY1FCTYC;
    FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
    if (FM0IW00.FM0IW-WORK-YY <= 80)
      FM0IW00.FM0IW-WORK-CC = 20;
    else
      FM0IW00.FM0IW-WORK-CC = 19;
    end
    FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
    ;
    COMMAREA.CATOAP = "FM0I"; /* to applicaiton*/
    COMMAREA.CAITEM = "A   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0IM210.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0IM210.FM0IM-HDR-VEND-CD;
      FKWREC.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD;
      FKWREC.FY1FCTYC = FM0IM210.FY1FCTYC;
      FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
      if (FM0IW00.FM0IW-WORK-YY <= 80)
        FM0IW00.FM0IW-WORK-CC = 20;
      else
        FM0IW00.FM0IW-WORK-CC = 19;
      end
      FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
      ;
      COMMAREA.CATOAP = FM0IM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0IM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0IM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4 /* MSTR MN requested*/
   || converseVar.eventKey is pf17) /* INVM requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0IM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0IM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0IM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0E"; /* TO application*/
      COMMAREA.CAITEM = FM0IM210.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0IM210.FM0IM-HDR-VEND-CD;
    FKWREC.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD;
    FKWREC.FY1FCTYC = FM0IM210.FY1FCTYC;
    FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
    if (FM0IW00.FM0IW-WORK-YY <= 80)
      FM0IW00.FM0IW-WORK-CC = 20;
    else
      FM0IW00.FM0IW-WORK-CC = 19;
    end
    FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0I-2300

// Reset Highlighted fields
Function FM0I-2400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0IM210.FM0IM-HDR-VEND-CD initialAttributes;
  set FM0IM210.FK-VEND-SNM initialAttributes;
  set FM0IM210.FK-MAT-WHSE-CD initialAttributes;
  set FM0IM210.FK-MAT-WHSE-ABRV initialAttributes;
  set FM0IM210.FY1FCTYC initialAttributes;
  set FM0IM210.FM0IM-INV-MO initialAttributes;
  ;
  FM0IW00.FM0IW-IDX = 1;
  while (FM0IW00.FM0IW-IDX <= 4)
    ;
    set FM0IM210.FK-VEND-CD[FM0IW-IDX] initialAttributes;
    set FM0IM210.FK-MAT-NBR[FM0IW-IDX] initialAttributes;
    set FM0IM210.FK-DEPT-MAT-DESC[FM0IW-IDX] initialAttributes;
    set FM0IM210.XCLCD[FM0IW-IDX] initialAttributes;
    set FM0IM210.XCLDESC[FM0IW-IDX] initialAttributes;
    set FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX] initialAttributes;
    set FM0IM210.XMU-MAT-UOM-CD[FM0IW-IDX] initialAttributes;
    set FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX] initialAttributes;
    set FM0IM210.FK-COPY-INV-FL[FM0IW-IDX] initialAttributes;
    set FM0IM210.FK-MAT-INV-COMNT[FM0IW-IDX] initialAttributes;
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  set FM0IM210.CATOAP initialAttributes;
  set FM0IM210.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0IM210.XCLCD[1] != "?" /* If not requested*/
   && FM0IM210.XCLCD[2] != "?" /* If not requested*/
   && FM0IM210.XCLCD[3] != "?" /* If not requested*/
   && FM0IM210.XCLCD[4] != "?") /* If not requested*/
    return;
  end
  ;
  ;
  ;
  ;
  FM0IW00.FM0IW-IDX = 1; /* Init index*/
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0IM210.XCLCD[FM0IW-IDX] == "?") /* XCL list requested*/
      ;
      if (converseVar.eventKey not enter) /* Enter not pressed*/
        ;
        FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
        converseLib.validationFailed(19); /* Pa/pf key may not be used*/
        exit stack; /* Exit to display the map*/
      end
    end
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Init index*/
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0IM210.XCLCD[FM0IW-IDX] == "?") /* XCL list requested*/
      ;
      XPXX001(); /* Window initialization*/
      XX0XW02.XX0XWHDR = "COLOR"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
        XPXCL01(); /* Display the list*/
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FM0IM210.XCLCD = FM0IW01.XCLCD[FM0IW-IDX]; /* Restore prior code*/
      else
        FM0IM210.XCLCD[FM0IW-IDX] = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
      end
      ;
      set FM0IM210.XCLCD[FM0IW-IDX] cursor; /* Establish cursor position*/
    end
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0I-2400

// Verify entered fields
Function FM0I-2500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM210.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0IM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the detail data.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0I-2510(); /* Verify detail data*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the key data.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0I-2520(); /* Verify key data*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FM0IW00.FM0IW-CONFIRM-ADD-SW = "N"; /* Reset confirm-add switch*/
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify record does not already exist on appropriate tables.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-NBR-MAP-ROWS;
  ;
  while (FM0IW00.FM0IW-IDX >= 1) /* For each line*/
    ;
    if (FM0IM210.FK-MAT-NBR[FM0IW-IDX] != " ") /* If line entered*/
      ;
      if (FM0IM210.FM0IM-HDR-VEND-CD != " ") /* Vendor entered*/
        FM0I-2530(); /* Select DCMPNT.VVNINV01*/
      else
        if (FM0IM210.FK-MAT-WHSE-CD != " ") /* Whse entered*/
          FM0I-2540(); /* Select DCMPNT.VWHINV01*/
        else
          FM0I-2550(); /* Select DCMPNT.VFYINV01*/
        end
      end
    end
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX - 1;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FM0IW00.FM0IW-CONFIRM-ADD-SW = "N"; /* Reset confirm-add switch*/
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If confirming the add, verify data was not changed.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-CONFIRM-ADD-SW == "Y") /* Confirming add*/
    ;
    if (FM0IM210.FM0IM-HDR-VEND-CD != FM0IW01.FM0IM-HDR-VEND-CD
     || FM0IM210.FK-MAT-WHSE-CD != FM0IW01.FK-MAT-WHSE-CD
     || FM0IM210.FY1FCTYC != FM0IW01.FY1FCTYC
     || FM0IM210.FM0IM-INV-MO != FM0IW01.FM0IM-INV-MO)
      ;
      FKWREC.XXXMSGNO = 30; /* Enter to continue, pa2 to cancel*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Get the data*/
      exit stack;
    end
    ;
    FM0IW00.FM0IW-IDX = 1;
    while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS)
      ;
      if (FM0IM210.FK-MAT-NBR[FM0IW-IDX] != FM0IW01.FK-MAT-NBR[FM0IW-IDX]
       || FM0IM210.XCLCD[FM0IW-IDX] != FM0IW01.XCLCD[FM0IW-IDX]
       || FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX]
       != FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX]
       || FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX]
       != FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX]
       || FM0IM210.FK-COPY-INV-FL[FM0IW-IDX]
       != FM0IW01.FK-COPY-INV-FL[FM0IW-IDX]
       || FM0IM210.FK-MAT-INV-COMNT[FM0IW-IDX]
       != FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX])
        ;
        FKWREC.XXXMSGNO = 30; /* Enter to continue, pa2 to cancel*/
        FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
        FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Get the data*/
        exit stack;
      end
      ;
      FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
    end
  end
  ;
  ;
end // end FM0I-2500

// Verify detail data
Function FM0I-2510()
   /* ---------------------------------------------------------------*/
   /* Verify each detail line.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-NBR-MAP-ROWS;
  while (FM0IW00.FM0IW-IDX > 0)
    ;
    if (FM0IM210.FK-MAT-NBR[FM0IW-IDX] != " " /* If material entered*/
     || FM0IM210.XCLCD[FM0IW-IDX] != " ")     /* or color entered*/
      ;
      /* ---------------------------------------------------------------*/
      /* Verify month-end copy inventory flag.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0IM210.FK-COPY-INV-FL[FM0IW-IDX] == "Y" /* If yes*/
       || FM0IM210.FK-COPY-INV-FL[FM0IW-IDX] == "N") /* If no*/
         /* next sentence*/
      else
        ;
        set FM0IM210.FK-COPY-INV-FL[FM0IW-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
        converseLib.validationFailed(34); /* Value must be "y" or "n"*/
      end
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify nike resp flag.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX] == "Y" /* If yes*/
       || FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX] == "N") /* If no*/
         /* next sentence*/
      else
        ;
        set FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
        converseLib.validationFailed(34); /* Value must be "y" or "n"*/
      end
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify quantity.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX] == 0) /* If not entered*/
        ;
        set FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
        converseLib.validationFailed(8); /* Required field missing or invalid*/
      end
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify material and color exist on DCMPNT.VMCOLR01.*/
      /* ---------------------------------------------------------------*/
      ;
      FM0I-2512(); /* Declare DCMPNT.VMCOLR01 csr*/
      FM0I-2513(); /* Fetch DCMPNT.VMCOLR01 csr*/
      FM0I-2514(); /* Close DCMPNT.VMCOLR01 csr*/
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* If adding vendor inventory, make sure detail vendor code matches*/
      /* header vendor code.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0IM210.FM0IM-HDR-VEND-CD != " ") /* If vendor inventory*/
        ;
        if (FM0IM210.FK-VEND-CD[FM0IW-IDX] != FM0IM210.FM0IM-HDR-VEND-CD)
          ;
          FM0I-2511(); /* Verify vendor on DCMPNT.VMATRL01*/
        end
      end
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify mtl and clr entered if other data is entered on the line.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0IM210.FK-MAT-NBR[FM0IW-IDX] == " " /* If material blank*/
     && FM0IM210.XCLCD[FM0IW-IDX] == " ")     /* and color blank*/
      ;
      if (FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX] > 0   /* Inventory entered*/
       || FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX] > " " /* Rsp flag entered*/
       || FM0IM210.FK-MAT-INV-COMNT[FM0IW-IDX] > " ") /* Comment entered*/
        ;
        set FM0IM210.FK-MAT-NBR[FM0IW-IDX] cursor, bold;
        set FM0IM210.XCLCD[FM0IW-IDX] bold;
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
        converseLib.validationFailed(26); /* Mtl nbr missing or invalid*/
      end
    end
    ;
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX - 1;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify at least 1 row of detail was entered.*/
   /* Count the number of rows with data to do the edit.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-COUNT = 0;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-NBR-MAP-ROWS;
  ;
  while (FM0IW00.FM0IW-IDX > 0)
    ;
    if (FM0IM210.FK-MAT-NBR[FM0IW-IDX] != " " /* Mtl entered*/
     || FM0IM210.XCLCD[FM0IW-IDX] != " ")     /* Clr entered*/
      ;
      FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1;
    end
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX - 1;
  end
  ;
  if (FM0IW00.FM0IW-COUNT == 0) /* If no data entered*/
    ;
    set FM0IM210.FK-MAT-NBR[1] cursor, bold;
    set FM0IM210.XCLCD[1] bold;
    set FM0IM210.FK-MAT-INV-QTY[1] bold;
    set FM0IM210.FK-NIKE-RSP-FL[1] bold;
    set FM0IM210.FK-COPY-INV-FL[1] bold;
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
end // end FM0I-2510

// Select DCMPNT.VMATRL01
Function FM0I-2511()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0IM210.FK-MAT-NBR[FM0IW-IDX];
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (VMATRL01.FK-VEND-CD != FM0IM210.FM0IM-HDR-VEND-CD) /* Diff vendor*/
        ;
        set FM0IM210.FK-MAT-NBR[FM0IW-IDX] cursor, bold;
        set FM0IM210.FM0IM-HDR-VEND-CD bold;
        FKWREC.XXX-MOD-ID = "2511"; /* Module identification*/
        converseLib.validationFailed(126); /* Mtl assigned to different vendor*/
      end
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM210.FK-MAT-NBR[FM0IW-IDX] cursor, bold;
      FKWREC.XXX-MOD-ID = "2511"; /* Module identification*/
      converseLib.validationFailed(26); /* Mtl nbr missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2511"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2511 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2511

// Declare DCMPNT.VMCOLR01
Function FM0I-2512()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FM0IM210.FK-MAT-NBR[FM0IW-IDX];
  VMCOLR01.XCLCD = FM0IM210.XCLCD[FM0IW-IDX];
  ;
  ;
  try
    call "IO6210" ("S2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2512"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2512 DECLARE DCMPNT.VMCOLR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2512

// Fetch DCMPNT.VMCOLR01
Function FM0I-2513()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6210" ("N2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0IW00.XMG-COLR-GRP-CD[FM0IW-IDX] = VMCOLR01.XMG-COLR-GRP-CD; /* Save color group*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No data found*/
      ;
      set FM0IM210.FK-MAT-NBR[FM0IW-IDX] cursor, bold;
      set FM0IM210.XCLCD[FM0IW-IDX] bold;
      FKWREC.XXX-MOD-ID = "2513"; /* Module identification*/
      converseLib.validationFailed(139); /* Material/color combination is invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2513"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2513 FETCH DCMPNT.VMCOLR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2513

// Close DCMPNT.VMCOLR01
Function FM0I-2514()
   /* ------------------------------------------------------------*/
   /* Close the requested table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6210" ("C2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2514"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2514 CLOSE DCMPNT.VMCOLR01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2514

// Verify key data
Function FM0I-2520()
   /* ---------------------------------------------------------------*/
   /* Verify month.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
  ;
  if (FM0IW00.FM0IW-WORK-MM < 1
   || FM0IW00.FM0IW-WORK-MM > 12)
    ;
    set FM0IM210.FM0IM-INV-MO cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    converseLib.validationFailed(84); /* Date missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor, mtl whse, or factory was entered.  1 (and only 1)*/
   /* must be selected.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-COUNT = 0;
  ;
  if (FM0IM210.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  if (FM0IM210.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  if (FM0IM210.FY1FCTYC != " ") /* If factory entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  ;
  if (FM0IW00.FM0IW-COUNT > 1) /* If too many were entered;*/
    ;
    if (FM0IM210.FY1FCTYC != " ") /* If factory entered*/
      set FM0IM210.FY1FCTYC cursor, bold; /* Highlight*/
    end
    if (FM0IM210.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
      set FM0IM210.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
    end
    if (FM0IM210.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
      set FM0IM210.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
    end
    ;
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    converseLib.validationFailed(125); /* Only 1 may be entered*/
  end
  ;
  if (FM0IW00.FM0IW-COUNT == 0) /* If none were entered*/
    ;
    set FM0IM210.FY1FCTYC bold; /* Highlight*/
    set FM0IM210.FK-MAT-WHSE-CD bold; /* Highlight*/
    set FM0IM210.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
    ;
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    converseLib.validationFailed(138); /* One selection must be specified*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Exit if errors have been found.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If errors found*/
    FM0IW00.FM0IW-CONFIRM-ADD-SW = "N"; /* Reset confirm-add switch*/
    return; /* exit to prev process*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify factory code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM210.FY1FCTYC != " ") /* If fcty entered*/
    FM0I-2521(); /* Verify factory*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material whse code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM210.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
    FM0I-2522(); /* Verify mtl whse*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM210.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    FM0I-2523(); /* Verify vendor*/
  end
  ;
  ;
end // end FM0I-2520

// Verify factory code
Function FM0I-2521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0IM210.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM210.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2521"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2521 VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2521

// Verify material whse
Function FM0I-2522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD;
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM210.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2522"; /* Module identification*/
      converseLib.validationFailed(124); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2522 VERIFY MATERIAL WHSE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2522

// Verify vendor code
Function FM0I-2523()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0IM210.FM0IM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM210.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2523"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2523"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2523 VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2523

// Select DCMPNT.VVNINV01
Function FM0I-2530()
   /* ------------------------------------------------------------*/
   /* Select requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNINV01 empty;
  ;
  VVNINV01.FK-VEND-CD = FM0IM210.FM0IM-HDR-VEND-CD;
  VVNINV01.FK-MAT-NBR = FM0IM210.FK-MAT-NBR[FM0IW-IDX];
  VVNINV01.XMG-COLR-GRP-CD = FM0IW00.XMG-COLR-GRP-CD[FM0IW-IDX];
  VVNINV01.XCLCD = FM0IM210.XCLCD[FM0IW-IDX];
  FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
  if (FM0IW00.FM0IW-WORK-YY <= 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  VVNINV01.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  VVNINV01.FK-NIKE-RSP-FL = FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX];
  ;
  try
    call "IO6800" ("S ", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      return;
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      ;
      set FM0IM210.FK-MAT-NBR[FM0IW-IDX] cursor, bold;
      set FM0IM210.XCLCD[FM0IW-IDX] bold;
      set FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX] bold;
      FKWREC.XXX-MOD-ID = "2530";
      converseLib.validationFailed(16); /* Row already exists;*/
      ;
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2530 SELECT DCMPNT.VVNINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2530

// Select DCMPNT.VWHINV01
Function FM0I-2540()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VWHINV01 empty;
  ;
  VWHINV01.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD;
  VWHINV01.FK-MAT-NBR = FM0IM210.FK-MAT-NBR[FM0IW-IDX];
  VWHINV01.XMG-COLR-GRP-CD = FM0IW00.XMG-COLR-GRP-CD[FM0IW-IDX];
  VWHINV01.XCLCD = FM0IM210.XCLCD[FM0IW-IDX];
  FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
  if (FM0IW00.FM0IW-WORK-YY <= 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  VWHINV01.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  VWHINV01.FK-NIKE-RSP-FL = FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX];
  ;
  try
    call "IO6810" ("S ", SQLCA, VWHINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      return;
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      ;
      set FM0IM210.FK-MAT-NBR[FM0IW-IDX] cursor, bold;
      set FM0IM210.XCLCD[FM0IW-IDX] bold;
      set FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX] bold;
      FKWREC.XXX-MOD-ID = "2540";
      converseLib.validationFailed(16); /* Row already exists*/
      ;
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "2540"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2540 SELECT DCMPNT.VWHINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VWHINV01.VWHINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2540

// Select DCMPNT.VFYINV01
Function FM0I-2550()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFYINV01 empty;
  ;
  VFYINV01.FY1FCTYC = FM0IM210.FY1FCTYC;
  VFYINV01.FK-MAT-NBR = FM0IM210.FK-MAT-NBR[FM0IW-IDX];
  VFYINV01.XMG-COLR-GRP-CD = FM0IW00.XMG-COLR-GRP-CD[FM0IW-IDX];
  VFYINV01.XCLCD = FM0IM210.XCLCD[FM0IW-IDX];
  FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
  if (FM0IW00.FM0IW-WORK-YY <= 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  VFYINV01.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  VFYINV01.FK-NIKE-RSP-FL = FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX];
  ;
  try
    call "IO6790" ("S ", SQLCA, VFYINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100 /* Row not found*/
    )                              
      return;
    end
    ;
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      ;
      set FM0IM210.FK-MAT-NBR[FM0IW-IDX] cursor, bold;
      set FM0IM210.XCLCD[FM0IW-IDX] bold;
      set FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX] bold;
      FKWREC.XXX-MOD-ID = "2550";
      converseLib.validationFailed(16); /* Row already exists*/
      ;
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "2550"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2550 SELECT DCMPNT.VFYINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFYINV01.VFYINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2550

// Process valid request
Function FM0I-2600()
   /* ------------------------------------------------------------*/
   /* If necessary, exit to confirm the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-CONFIRM-ADD-SW == "N")
    ;
    FM0IW00.FM0IW-REQUEST-DATA-SW = "Y";
    FM0IW00.FM0IW-CONFIRM-ADD-SW = "Y";
    FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
    FKWREC.XXXMSGNO = 30; /* Press enter to continue, pa2 to cancel*/
    return;
  end
  ;
  FM0IW00.FM0IW-CONFIRM-ADD-SW = "N";
  ;
   /* ------------------------------------------------------------*/
   /* Get current date and time.*/
   /* ------------------------------------------------------------*/
  ;
  XX0XS01(); /* Get and fmat date and time*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process the add request.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-NBR-MAP-ROWS; /* Init index*/
  ;
  while (FM0IW00.FM0IW-IDX >= 1) /* For each line*/
    ;
    if (FM0IM210.FK-MAT-NBR[FM0IW-IDX] != " ") /* If material entered*/
      ;
      if (FM0IM210.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
        FM0I-2610(); /* Add record to DCMPNT.VVNINV01*/
      else
        if (FM0IM210.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
          FM0I-2620(); /* Add record to DCMPNT.VWHINV01*/
        else
          FM0I-2630(); /* Add record to DCMPNT.VFYINV01*/
        end
      end
    end
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX - 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear all working storage and the map.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0IW01 empty; /* Clear display storage*/
  ;
  FM0IW00.FM0IM-HDR-VEND-CD = " ";
  FM0IW00.FK-MAT-WHSE-CD = " ";
  FM0IW00.FY1FCTYC = " ";
  ;
  set FM0IM210 initial; /* Clear the map*/
  ;
  FM0IM210.FM0IM-INV-MO = FM0IW00.FM0IM-INV-MO; /* Replace the date*/
  ;
  FM0IW00.FM0IM-INV-MO = 0; /* Clear the date*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set update complete message.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXXMSGNO = 1; /* Update was complete*/
  FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
  ;
  ;
end // end FM0I-2600

// Insert DCMPNT.VVNINV01
Function FM0I-2610()
   /* ------------------------------------------------------------*/
   /* Insert the requested row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNINV01 empty;
  ;
  VVNINV01.FK-VEND-CD = FM0IM210.FM0IM-HDR-VEND-CD;
  VVNINV01.FK-MAT-NBR = FM0IM210.FK-MAT-NBR[FM0IW-IDX];
  VVNINV01.XMG-COLR-GRP-CD = FM0IW00.XMG-COLR-GRP-CD[FM0IW-IDX];
  VVNINV01.XCLCD = FM0IM210.XCLCD[FM0IW-IDX];
  FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
  if (FM0IW00.FM0IW-WORK-YY <= 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  VVNINV01.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  VVNINV01.FK-MAT-INV-QTY = FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX];
  VVNINV01.FK-NIKE-RSP-FL = FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX];
  VVNINV01.FK-COPY-INV-FL = FM0IM210.FK-COPY-INV-FL[FM0IW-IDX];
  VVNINV01.FK-MAT-INV-COMNT = FM0IM210.FK-MAT-INV-COMNT[FM0IW-IDX];
  ;
  VVNINV01.ZZZSDT = XX0XW01.XX0XWDAT;
  VVNINV01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VVNINV01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VVNINV01.ZZZCHGCT = 0;
  ;
  try
    call "IO6800" ("A ", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2610 INSERT DCMPNT.VVNINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2610

// Insert DCMPNT.VWHINV01
Function FM0I-2620()
   /* ------------------------------------------------------------*/
   /* Insert the requested row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VWHINV01 empty;
  ;
  VWHINV01.FK-MAT-WHSE-CD = FM0IM210.FK-MAT-WHSE-CD;
  VWHINV01.FK-MAT-NBR = FM0IM210.FK-MAT-NBR[FM0IW-IDX];
  VWHINV01.XMG-COLR-GRP-CD = FM0IW00.XMG-COLR-GRP-CD[FM0IW-IDX];
  VWHINV01.XCLCD = FM0IM210.XCLCD[FM0IW-IDX];
  FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
  if (FM0IW00.FM0IW-WORK-YY <= 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  VWHINV01.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  VWHINV01.FK-MAT-INV-QTY = FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX];
  VWHINV01.FK-NIKE-RSP-FL = FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX];
  VWHINV01.FK-COPY-INV-FL = FM0IM210.FK-COPY-INV-FL[FM0IW-IDX];
  VWHINV01.FK-MAT-INV-COMNT = FM0IM210.FK-MAT-INV-COMNT[FM0IW-IDX];
  ;
  VWHINV01.ZZZSDT = XX0XW01.XX0XWDAT;
  VWHINV01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VWHINV01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VWHINV01.ZZZCHGCT = 0;
  ;
  try
    call "IO6810" ("A ", SQLCA, VWHINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2620 INSERT DCMPNT.VWHINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VWHINV01.VWHINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2620

// Insert DCMPNT.VFYINV01
Function FM0I-2630()
   /* ------------------------------------------------------------*/
   /* Insert the requested row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFYINV01 empty;
  ;
  VFYINV01.FY1FCTYC = FM0IM210.FY1FCTYC;
  VFYINV01.FK-MAT-NBR = FM0IM210.FK-MAT-NBR[FM0IW-IDX];
  VFYINV01.XMG-COLR-GRP-CD = FM0IW00.XMG-COLR-GRP-CD[FM0IW-IDX];
  VFYINV01.XCLCD = FM0IM210.XCLCD[FM0IW-IDX];
  FM0IW00.FM0IW-WORK-YYMM = FM0IM210.FM0IM-INV-MO;
  if (FM0IW00.FM0IW-WORK-YY <= 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  VFYINV01.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  VFYINV01.FK-MAT-INV-QTY = FM0IM210.FK-MAT-INV-QTY[FM0IW-IDX];
  VFYINV01.FK-NIKE-RSP-FL = FM0IM210.FK-NIKE-RSP-FL[FM0IW-IDX];
  VFYINV01.FK-COPY-INV-FL = FM0IM210.FK-COPY-INV-FL[FM0IW-IDX];
  VFYINV01.FK-MAT-INV-COMNT = FM0IM210.FK-MAT-INV-COMNT[FM0IW-IDX];
  ;
  VFYINV01.ZZZSDT = XX0XW01.XX0XWDAT;
  VFYINV01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VFYINV01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VFYINV01.ZZZCHGCT = 0;
  ;
  try
    call "IO6790" ("A ", SQLCA, VFYINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2630 INSERT DCMPNT.VFYINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFYINV01.VFYINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-2630

// Process change map
Function FM0I-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-3100(); /* Obtain the data to display*/
  ;
  FM0I-3200(); /* Format and display the map*/
  ;
  FM0I-3300(); /* Check attention identifier*/
  ;
  FM0I-3400(); /* Reset fields to normal intensity*/
  ;
  FM0I-3500(); /* Verify the entered data*/
  ;
  FM0I-3600(); /* Process valid input request*/
  ;
  ;
end // end FM0I-3000

// Obtain data to display
Function FM0I-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.XXXTSLEN = 1683; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IM-HDR-VEND-CD = FM0IM310.FM0IM-HDR-VEND-CD;
  FM0IW00.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD;
  FM0IW00.FY1FCTYC = FM0IM310.FY1FCTYC;
  FM0IW00.FM0IM-INV-MO = FM0IM310.FM0IM-INV-MO;
  ;
  FM0IM310.FK-VEND-SNM = " ";
  FM0IM310.FK-MAT-WHSE-ABRV = " ";
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0IW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0I-3110(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If vendor was entered, obtain the vendor inventory.*/
   /* Otherwise, if whse entered, obtain the material whse inventory.*/
   /* Otherwise, if fcty entered, obtain the factory inventory.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IM310.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    ;
    FM0I-3120(); /* Get vendor inventory*/
  else
    if (FM0IM310.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
      ;
      FM0I-3130(); /* Get mtl whse inventory*/
    else
      ;
      if (FM0IM310.FY1FCTYC != " ") /* If factory entered*/
        ;
        FM0I-3140(); /* Get fcty inventory*/
      end
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If data was not found, set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    converseLib.validationFailed(18); /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "1000"; /* Module identification*/
    set FM0IM310.FM0IM-INV-MO bold; /* Highlight*/
    if (FM0IM310.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
      set FM0IM310.FM0IM-HDR-VEND-CD cursor, bold;
    else
      if (FM0IM310.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
        set FM0IM310.FK-MAT-WHSE-CD cursor, bold;
      else
        set FM0IM310.FY1FCTYC cursor, bold;
      end
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-REQUEST-DATA-SW = "N";
  FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0I-3100

// Purge any temporary storage
Function FM0I-3110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0IW01 empty; /* m310 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0IW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3110

// Obtain vendor inventory
Function FM0I-3120()
   /* ------------------------------------------------------------*/
   /* Select the vendor record from DCMPNT.VVNDR001.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-3121(); /* Select DCMPNT.VVNDR001*/
  ;
  FM0IW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
  FM0IW00.FK-MAT-WHSE-ABRV = " ";
  ;
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the vendor inventory table DCMPNT.VVNINV01.*/
   /* Fetch the first record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-3122(); /* Declare DCMPNT.VVNINV01 cursor*/
  ;
  ;
  FM0IW00.FM0IW-END-VVNINV01-CSR-SW = "N"; /* Init end of csr switch*/
  ;
  FM0I-3123(); /* Fetch DCMPNT.VVNINV01 record*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format inventory records to display storage until end of cursor.*/
   /* When necessary, save to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 0; /* Initialize index*/
  ;
  while (FM0IW00.FM0IW-END-VVNINV01-CSR-SW == "N") /* While not end of csr*/
    ;
    FM0I-3124(); /* Select DCMPNT.VMATRL01 record*/
    ;
    FM0I-3125(); /* Save record in display storage*/
    ;
    if (FM0IW00.FM0IW-IDX == FM0IW00.FM0IW-NBR-MAP-ROWS) /* Full page*/
      FM0I-3126(); /* Add record to temporary storage*/
      FM0IW00.FM0IW-IDX = 0; /* Reset index*/
    end
    ;
    FM0I-3123(); /* Fetch DCMPNT.VVNINV01 record*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX > 0) /* If any records on current page*/
    FM0I-3126(); /* Add record to temporary storage*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the DCMPNT.VVNINV01 cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-3127(); /* Close DCMPNT.VVNINV01*/
  ;
  ;
end // end FM0I-3120

// Select DCMPNT.VVNDR001
Function FM0I-3121()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0IM310.FM0IM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VVNDR001.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3121 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3121

// Declare DCMPNT.VVNINV01
Function FM0I-3122()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNINV01 empty;
  ;
  VVNINV01.FK-VEND-CD = FM0IM310.FM0IM-HDR-VEND-CD;
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM310.FM0IM-INV-MO;
  if (FM0IW-WORK-YY < 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  VVNINV01.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  ;
  ;
  try
    call "IO6800" ("S1", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3122"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3122 DECLARE DCMPNT.VVNINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3122

// Fetch DCMPNT.VVNINV01
Function FM0I-3123()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6800" ("N1", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0IW00.FM0IW-END-VVNINV01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3123"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3123 FETCH DCMPNT.VVNINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3123

// Select DCMPNT.VMATRL01
Function FM0I-3124()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = VVNINV01.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3124"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3124 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3124

// Save data in display storage
Function FM0I-3125()
   /* --------------------------------------------------------------*/
   /* Increment the map index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM310.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = " "; /* Mtl whse abrv*/
    FM0IW01.FY1FCTYC = FM0IM310.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM310.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = VVNINV01.FK-MAT-NBR; /* Mtl*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
  FM0IW01.XCLCD[FM0IW-IDX] = VVNINV01.XCLCD; /* Clr*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = VVNINV01.FK-MAT-INV-QTY; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = VVNINV01.FK-NIKE-RSP-FL; /* Flg*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = VVNINV01.FK-COPY-INV-FL; /* Flg*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = VVNINV01.FK-MAT-INV-COMNT;
  ;
  if (VVNINV01.XCLCD in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  FM0IW01.VVNINV01-GROUP[FM0IW-IDX] = VVNINV01.VVNINV01-GROUP;
  FM0IW01.VWHINV01-GROUP[FM0IW-IDX] = " ";
  FM0IW01.VFYINV01-GROUP[FM0IW-IDX] = " ";
  ;
  ;
end // end FM0I-3125

// Add record to temporary store
Function FM0I-3126()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0IW01 empty; /* m310 display storage*/
    ;
    FM0IW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3126"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3126

// Close DCMPNT.VVNINV01
Function FM0I-3127()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6800" ("C1", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3127"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3127 CLOSE DCMPNT.VVNINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3127

// Obtain mtl whse inventory
Function FM0I-3130()
   /* ------------------------------------------------------------*/
   /* Select the material whse record from DMCPNT.VMATWH01.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-3131(); /* Select DCMPNT.VMATWH01*/
  ;
  FM0IW00.FK-MAT-WHSE-ABRV = VMATWH01.FK-MAT-WHSE-ABRV;
  FM0IW00.FK-VEND-SNM = " ";
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the vendor inventory table DCMPNT.VWHINV01.*/
   /* Fetch the first record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-3132(); /* Declare DCMPNT.VWHINV01 cursor*/
  ;
  ;
  FM0IW00.FM0IW-END-VWHINV01-CSR-SW = "N"; /* Init end of csr switch*/
  ;
  FM0I-3133(); /* Fetch DCMPNT.VWHINV01 record*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format inventory records to display storage until end of cursor.*/
   /* When necessary, save to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 0; /* Initialize index*/
  ;
  while (FM0IW00.FM0IW-END-VWHINV01-CSR-SW == "N") /* While not end of csr*/
    ;
    FM0I-3134(); /* Select DCMPNT.VMATRL01 record*/
    ;
    FM0I-3135(); /* Save record in display storage*/
    ;
    if (FM0IW00.FM0IW-IDX == FM0IW00.FM0IW-NBR-MAP-ROWS) /* Page is full*/
      FM0I-3136(); /* Add record to temporary storage*/
      FM0IW00.FM0IW-IDX = 0; /* Reset index*/
    end
    ;
    FM0I-3133(); /* Fetch DCMPNT.VWHINV01 record*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX > 0) /* If any records on current page*/
    FM0I-3136(); /* Add record to temporary storage*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the DCMPNT.VWHINV01 cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-3137(); /* Close DCMPNT.VWHINV01*/
  ;
  ;
end // end FM0I-3130

// Select DCMPNT.VMATWH01
Function FM0I-3131()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD;
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATWH01.FK-MAT-WHSE-ABRV = "***************"; /* Whse abrv*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3131"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3131 SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3131

// Declare DCMPNT.VWHINV01
Function FM0I-3132()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set FMBREC empty;
  ;
  FMBREC.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD;
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM310.FM0IM-INV-MO;
  if (FM0IW-WORK-YY < 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  FMBREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  ;
  ;
  try
    call "FM1420" ("S1", SQLCA, FMBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3132"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3132 DECLARE DCMPNT.VWHINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMBREC.FMBREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3132

// Fetch DCMPNT.VWHINV01
Function FM0I-3133()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1420" ("N1", SQLCA, FMBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0IW00.FM0IW-END-VWHINV01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3133"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3133 FETCH DCMPNT.VWHINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMBREC.FMBREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3133

// Select DCMPNT.VMATRL01
Function FM0I-3134()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FMBREC.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3134"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3134 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3134

// Save data in display storage
Function FM0I-3135()
   /* --------------------------------------------------------------*/
   /* Increment the map index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM310.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = " "; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = VMATWH01.FK-MAT-WHSE-ABRV;
    FM0IW01.FY1FCTYC = FM0IM310.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM310.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = FMBREC.FK-MAT-NBR; /* Mtl*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
  FM0IW01.XCLCD[FM0IW-IDX] = FMBREC.XCLCD; /* Clr*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = FMBREC.FK-MAT-INV-QTY; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = FMBREC.FK-NIKE-RSP-FL; /* Flg*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = FMBREC.FK-COPY-INV-FL; /* Flg*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = FMBREC.FK-MAT-INV-COMNT;
  ;
  if (FMBREC.XCLCD in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  FM0IW01.VVNINV01-GROUP = " ";
  FM0IW01.VWHINV01-GROUP[FM0IW-IDX] = FMBREC.VWHINV01-GROUP;
  FM0IW01.VFYINV01-GROUP = " ";
  ;
  ;
end // end FM0I-3135

// Add record to temporary store
Function FM0I-3136()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0IW01 empty; /* m310 display storage*/
    ;
    FM0IW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3136"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3136

// Close DCMPNT.VWHINV01
Function FM0I-3137()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1420" ("C1", SQLCA, FMBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3137"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3137 CLOSE DCMPNT.VWHINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMBREC.FMBREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3137

// Obtain factory inventory
Function FM0I-3140()
  FM0IW00.FK-VEND-SNM = " ";
  FM0IW00.FK-MAT-WHSE-ABRV = " ";
  ;
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the vendor inventory table DCMPNT.VFYINV01.*/
   /* Fetch the first record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-3142(); /* Declare DCMPNT.VFYINV01 cursor*/
  ;
  ;
  FM0IW00.FM0IW-END-VFYINV01-CSR-SW = "N"; /* Init end of csr switch*/
  ;
  FM0I-3143(); /* Fetch DCMPNT.VFYINV01 record*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format inventory records to display storage until end of cursor.*/
   /* When necessary, save to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 0; /* Initialize index*/
  ;
  while (FM0IW00.FM0IW-END-VFYINV01-CSR-SW == "N") /* While not end of csr*/
    ;
    FM0I-3144(); /* Select DCMPNT.VMATRL01 record*/
    ;
    FM0I-3145(); /* Save record in display storage*/
    ;
    if (FM0IW00.FM0IW-IDX == FM0IW00.FM0IW-NBR-MAP-ROWS) /* Page is full*/
      FM0I-3146(); /* Add record to temporary storage*/
      FM0IW00.FM0IW-IDX = 0; /* Reset index*/
    end
    ;
    FM0I-3143(); /* Fetch DCMPNT.VFYINV01 record*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX > 0) /* If any records on current page*/
    FM0I-3146(); /* Add record to temporary storage*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the DCMPNT.VFYINV01 cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-3147(); /* Close DCMPNT.VFYINV01*/
  ;
  ;
end // end FM0I-3140

// Declare DCMPNT.VFYINV01
Function FM0I-3142()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set FMAREC empty;
  ;
  FMAREC.FY1FCTYC = FM0IM310.FY1FCTYC;
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM310.FM0IM-INV-MO;
  if (FM0IW-WORK-YY < 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  FMAREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  ;
  ;
  try
    call "FM1410" ("S1", SQLCA, FMAREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3142"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3142 DECLARE DCMPNT.VFYINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMAREC.FMAREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3142

// Fetch DCMPNT.VFYINV01
Function FM0I-3143()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1410" ("N1", SQLCA, FMAREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0IW00.FM0IW-END-VFYINV01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3143"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3143 FETCH DCMPNT.VFYINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMAREC.FMAREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3143

// Select DCMPNT.VMATRL01
Function FM0I-3144()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FMAREC.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3144"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3144 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3144

// Save data in display storage
Function FM0I-3145()
   /* --------------------------------------------------------------*/
   /* Increment the map index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM310.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = " "; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = " "; /* Mtl whse abrv*/
    FM0IW01.FY1FCTYC = FM0IM310.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM310.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = FMAREC.FK-MAT-NBR; /* Mtl*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
  FM0IW01.XCLCD[FM0IW-IDX] = FMAREC.XCLCD; /* Clr*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = FMAREC.FK-MAT-INV-QTY; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = FMAREC.FK-NIKE-RSP-FL; /* Flg*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = FMAREC.FK-COPY-INV-FL; /* Flg*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = FMAREC.FK-MAT-INV-COMNT;
  ;
  if (FMAREC.XCLCD in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  ;
  FM0IW01.VVNINV01-GROUP = " ";
  FM0IW01.VWHINV01-GROUP = " ";
  FM0IW01.VFYINV01-GROUP[FM0IW-IDX] = FMAREC.VFYINV01-GROUP;
  ;
  ;
end // end FM0I-3145

// Add record to temporary store
Function FM0I-3146()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0IW01 empty; /* m310 display storage*/
    ;
    FM0IW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3146"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3146

// Close DCMPNT.VFYINV01
Function FM0I-3147()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1410" ("C1", SQLCA, FMAREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3147"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3147 CLOSE DCMPNT.VFYINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMAREC.FMAREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3147

// Format and converse the map
Function FM0I-3200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0I-3210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0IM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0IM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0IM310 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0IM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0IM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format all key descriptions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IM310.FK-VEND-SNM = FM0IW00.FK-VEND-SNM;
  FM0IM310.FK-MAT-WHSE-ABRV = FM0IW00.FK-MAT-WHSE-ABRV;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (no detail lines formatted to temporary storage).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX == 0) /* No data formatted*/
    ;
    set FM0IM310.XXXTSPAG invisible, skip;
    set FM0IM310.TA5TSQIX invisible, skip;
    ;
    FM0IW00.FM0IW-IDX = 1; /* Init index*/
    ;
    while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For all lines*/
      ;
      set FM0IM310.FM0IM-SELECT[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-VEND-CD[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-MAT-NBR[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-DEPT-MAT-DESC[FM0IW-IDX] invisible, skip;
      set FM0IM310.XCLCD[FM0IW-IDX] invisible, skip;
      set FM0IM310.XCLDESC[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-MAT-INV-QTY[FM0IW-IDX] invisible, skip;
      set FM0IM310.XMU-MAT-UOM-CD[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-NIKE-RSP-FL[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-COPY-INV-FL[FM0IW-IDX] invisible, skip;
      set FM0IM310.FM0IM-COMMENT-LIT[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-MAT-INV-COMNT[FM0IW-IDX] invisible, skip;
      ;
      FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but there is at least partial data on the map).*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Init index*/
  ;
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For all lines*/
    ;
    if (FM0IM310.FK-MAT-NBR[FM0IW-IDX] == " ") /* No data*/
      ;
      set FM0IM310.FM0IM-SELECT[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-VEND-CD[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-MAT-NBR[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-DEPT-MAT-DESC[FM0IW-IDX] invisible, skip;
      set FM0IM310.XCLCD[FM0IW-IDX] invisible, skip;
      set FM0IM310.XCLDESC[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-MAT-INV-QTY[FM0IW-IDX] invisible, skip;
      set FM0IM310.XMU-MAT-UOM-CD[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-NIKE-RSP-FL[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-COPY-INV-FL[FM0IW-IDX] invisible, skip;
      set FM0IM310.FM0IM-COMMENT-LIT[FM0IW-IDX] invisible, skip;
      set FM0IM310.FK-MAT-INV-COMNT[FM0IW-IDX] invisible, skip;
    end
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* If no message to display*/
   || converseVar.validationMsgNum == 1) /* Update successful*/
    if (FM0IM310.FK-MAT-NBR[1] != " ") /* If data exists*/
      set FM0IM310.FM0IM-SELECT[1] cursor;
    else
      set FM0IM310.FM0IM-HDR-VEND-CD cursor;
    end
  end
  ;
  ;
  converse FM0IM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0IM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0IM310.CAITEM; /* Application data*/
  ;
  ;
end // end FM0I-3200

// Format the data to display
Function FM0I-3210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0IM310 initial; /* Initialize map*/
  ;
  FM0IW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0IW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0IW00.XXXTSPAG > FM0IW00.TA5TSQIX) /* Desired page > highest*/
        FM0IW00.XXXTSPAG = FM0IW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0I-3211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX == 0) /* If no data was obtained*/
    ;
    FM0IM310.FM0IM-HDR-VEND-CD = FM0IW00.FM0IM-HDR-VEND-CD;
    FM0IM310.FK-MAT-WHSE-CD = FM0IW00.FK-MAT-WHSE-CD;
    FM0IM310.FY1FCTYC = FM0IW00.FY1FCTYC;
    FM0IM310.FM0IM-INV-MO = FM0IW00.FM0IM-INV-MO;
  else
    ;
    FM0IM310.FM0IM-HDR-VEND-CD = FM0IW01.FM0IM-HDR-VEND-CD;
    FM0IM310.FK-MAT-WHSE-CD = FM0IW01.FK-MAT-WHSE-CD;
    FM0IM310.FY1FCTYC = FM0IW01.FY1FCTYC;
    FM0IM310.FM0IM-INV-MO = FM0IW01.FM0IM-INV-MO;
  end
  ;
  FM0IM310.XXXTSPAG = FM0IW00.XXXTSPAG; /* Current page*/
  FM0IM310.TA5TSQIX = FM0IW00.TA5TSQIX; /* Max page*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Initialize idx*/
  ;
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For each line*/
    ;
    FM0IM310.FK-VEND-CD[FM0IW-IDX] = FM0IW01.FK-VEND-CD[FM0IW-IDX]; /* Vendor*/
    FM0IM310.FK-MAT-NBR[FM0IW-IDX] = FM0IW01.FK-MAT-NBR[FM0IW-IDX]; /* Material*/
    FM0IM310.FK-DEPT-MAT-DESC[FM0IW-IDX] = FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX]; /* Material desc*/
    FM0IM310.XCLCD[FM0IW-IDX] = FM0IW01.XCLCD[FM0IW-IDX]; /* Color code*/
    FM0IM310.XCLDESC[FM0IW-IDX] = FM0IW01.XCLDESC[FM0IW-IDX]; /* Color desc*/
    FM0IM310.FK-MAT-INV-QTY[FM0IW-IDX] = FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX]; /* Inventory qty*/
    FM0IM310.XMU-MAT-UOM-CD[FM0IW-IDX] = FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX]; /* Uom*/
    FM0IM310.FK-NIKE-RSP-FL[FM0IW-IDX] = FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX]; /* Nike responsibility flag*/
    FM0IM310.FK-COPY-INV-FL[FM0IW-IDX] = FM0IW01.FK-COPY-INV-FL[FM0IW-IDX]; /* Copy inventory flag*/
    FM0IM310.FK-MAT-INV-COMNT[FM0IW-IDX] = FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX]; /* Inventory comment*/
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  ;
end // end FM0I-3210

// Read page from temp storage
Function FM0I-3211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0IW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3211

// Check attention identifier
Function FM0I-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0IM310.FM0IM-HDR-VEND-CD;
    FKWREC.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD;
    FKWREC.FY1FCTYC = FM0IM310.FY1FCTYC;
    FM0IW00.FM0IW-WORK-YYMM = FM0IM310.FM0IM-INV-MO;
    if (FM0IW00.FM0IW-WORK-YY <= 80)
      FM0IW00.FM0IW-WORK-CC = 20;
    else
      FM0IW00.FM0IW-WORK-CC = 19;
    end
    FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
    ;
    COMMAREA.CATOAP = "FM0I"; /* to applicaiton*/
    COMMAREA.CAITEM = "C   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0IM310.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0IM310.FM0IM-HDR-VEND-CD;
      FKWREC.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD;
      FKWREC.FY1FCTYC = FM0IM310.FY1FCTYC;
      FM0IW00.FM0IW-WORK-YYMM = FM0IM310.FM0IM-INV-MO;
      if (FM0IW00.FM0IW-WORK-YY <= 80)
        FM0IW00.FM0IW-WORK-CC = 20;
      else
        FM0IW00.FM0IW-WORK-CC = 19;
      end
      FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
      ;
      COMMAREA.CATOAP = FM0IM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0IM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0IM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4 /* MSTR MN requested*/
   || converseVar.eventKey is pf17) /* INVM requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0IM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0IM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0IM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0E"; /* TO application*/
      COMMAREA.CAITEM = FM0IM310.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0IM310.FM0IM-HDR-VEND-CD;
    FKWREC.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD;
    FKWREC.FY1FCTYC = FM0IM310.FY1FCTYC;
    FM0IW00.FM0IW-WORK-YYMM = FM0IM310.FM0IM-INV-MO;
    if (FM0IW00.FM0IW-WORK-YY <= 80)
      FM0IW00.FM0IW-WORK-CC = 20;
    else
      FM0IW00.FM0IW-WORK-CC = 19;
    end
    FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* Back requested*/
   && converseVar.eventKey not pf8)  /* Fwrd reqeusted*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0I-3300

// Reset Highlighted fields
Function FM0I-3400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0IM310.FM0IM-HDR-VEND-CD initialAttributes;
  set FM0IM310.FK-VEND-SNM initialAttributes;
  set FM0IM310.FK-MAT-WHSE-CD initialAttributes;
  set FM0IM310.FK-MAT-WHSE-ABRV initialAttributes;
  set FM0IM310.FY1FCTYC initialAttributes;
  set FM0IM310.FM0IM-INV-MO initialAttributes;
  ;
  FM0IW00.FM0IW-IDX = 1;
  while (FM0IW00.FM0IW-IDX <= 4)
    ;
    set FM0IM310.FM0IM-SELECT[FM0IW-IDX] initialAttributes;
    set FM0IM310.FK-VEND-CD[FM0IW-IDX] initialAttributes;
    set FM0IM310.FK-MAT-NBR[FM0IW-IDX] initialAttributes;
    set FM0IM310.FK-DEPT-MAT-DESC[FM0IW-IDX] initialAttributes;
    set FM0IM310.XCLCD[FM0IW-IDX] initialAttributes;
    set FM0IM310.XCLDESC[FM0IW-IDX] initialAttributes;
    set FM0IM310.FK-MAT-INV-QTY[FM0IW-IDX] initialAttributes;
    set FM0IM310.XMU-MAT-UOM-CD[FM0IW-IDX] initialAttributes;
    set FM0IM310.FK-NIKE-RSP-FL[FM0IW-IDX] initialAttributes;
    set FM0IM310.FK-COPY-INV-FL[FM0IW-IDX] initialAttributes;
    set FM0IM310.FK-MAT-INV-COMNT[FM0IW-IDX] initialAttributes;
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  set FM0IM310.CATOAP initialAttributes;
  set FM0IM310.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0IM310.XCLCD[1] != "?" /* If not requested*/
   && FM0IM310.XCLCD[2] != "?" /* If not requested*/
   && FM0IM310.XCLCD[3] != "?" /* If not requested*/
   && FM0IM310.XCLCD[4] != "?") /* If not requested*/
    return;
  end
  ;
  ;
  ;
  ;
  FM0IW00.FM0IW-IDX = 1; /* Init index*/
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0IM310.XCLCD[FM0IW-IDX] == "?") /* XCL list requested*/
      ;
      if (converseVar.eventKey not enter) /* Enter not pressed*/
        ;
        FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
        converseLib.validationFailed(19); /* Pa/pf key may not be used*/
        exit stack; /* Exit to display the map*/
      end
    end
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Init index*/
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0IM310.XCLCD[FM0IW-IDX] == "?") /* XCL list requested*/
      ;
      XPXX001(); /* Window initialization*/
      XX0XW02.XX0XWHDR = "COLOR"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
        XPXCL01(); /* Display the list*/
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FM0IM310.XCLCD = FM0IW01.XCLCD[FM0IW-IDX]; /* Restore prior code*/
      else
        FM0IM310.XCLCD[FM0IW-IDX] = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
      end
      ;
      set FM0IM310.XCLCD[FM0IW-IDX] cursor; /* Establish cursor position*/
    end
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0I-3400

// Verify entered fields
Function FM0I-3500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM310.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0IM310.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0I-3530(); /* Verify scroll*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If header changed, verify it.  Otherwise verify the detail data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM310.FM0IM-HDR-VEND-CD == FM0IW01.FM0IM-HDR-VEND-CD
   && FM0IM310.FK-MAT-WHSE-CD == FM0IW01.FK-MAT-WHSE-CD
   && FM0IM310.FY1FCTYC == FM0IW01.FY1FCTYC
   && FM0IM310.FM0IM-INV-MO == FM0IW01.FM0IM-INV-MO)
    ;
    FM0I-3510(); /* Verify detail data*/
  else
    ;
    FM0I-3520(); /* Verify key data*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FM0IW00.FM0IW-CONFIRM-ADD-SW = "N"; /* Reset confirm-add switch*/
    exit stack;
  end
  ;
  ;
end // end FM0I-3500

// Verify detail data
Function FM0I-3510()
   /* ---------------------------------------------------------------*/
   /* Verify each detail line.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-NBR-MAP-ROWS;
  while (FM0IW00.FM0IW-IDX > 0)
    ;
    if (FM0IM310.FK-MAT-NBR[FM0IW-IDX] != " ") /* If material exists*/
      ;
      /* ---------------------------------------------------------------*/
      /* Verify month-end copy inventory flag.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0IM310.FK-COPY-INV-FL[FM0IW-IDX] == "Y" /* If yes*/
       || FM0IM310.FK-COPY-INV-FL[FM0IW-IDX] == "N") /* If no*/
         /* next sentence*/
      else
        ;
        set FM0IM310.FK-COPY-INV-FL[FM0IW-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
        converseLib.validationFailed(34); /* Value must be "y" or "n"*/
      end
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify select field.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0IM310.FM0IM-SELECT[FM0IW-IDX] == "S" /* If selected*/
       || FM0IM310.FM0IM-SELECT[FM0IW-IDX] == " ") /* or blank*/
         /* next sentence*/
      else
        ;
        set FM0IM310.FM0IM-SELECT[FM0IW-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
        converseLib.validationFailed(13); /* Only "s" may be entered*/
      end
      ;
      ;
      if (FM0IM310.FM0IM-SELECT[FM0IW-IDX] == "S") /* If selected*/
        ;
        if (FM0IM310.FK-MAT-INV-QTY[FM0IW-IDX]
         == FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] /* Qty not changed*/
         && FM0IM310.FK-COPY-INV-FL[FM0IW-IDX]
         == FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] /* Copy inv flag not chgd*/
         && FM0IM310.FK-MAT-INV-COMNT[FM0IW-IDX]
         == FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX]) /* Comment not changed*/
          ;
          set FM0IM310.FM0IM-SELECT[FM0IW-IDX] cursor, bold;
          FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
          converseLib.validationFailed(25); /* No changes have been made to this row*/
        end
      end
      ;
      ;
      if (FM0IM310.FM0IM-SELECT[FM0IW-IDX] == " ") /* If blank*/
        ;
        if (FM0IM310.FK-MAT-INV-QTY[FM0IW-IDX]
         == FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] /* Qty not changed*/
         && FM0IM310.FK-COPY-INV-FL[FM0IW-IDX]
         == FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] /* Copy inv flag not chgd*/
         && FM0IM310.FK-MAT-INV-COMNT[FM0IW-IDX]
         == FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX]) /* Comment not changed*/
          ;
           /* next sentence*/
        else
          ;
          set FM0IM310.FM0IM-SELECT[FM0IW-IDX] cursor, bold;
          FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
          converseLib.validationFailed(24); /* Enter s to change a row of data*/
        end
      end
    end
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX - 1;
  end
  ;
  ;
end // end FM0I-3510

// Verify key data
Function FM0I-3520()
   /* ---------------------------------------------------------------*/
   /* Verify month.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM310.FM0IM-INV-MO;
  ;
  if (FM0IW00.FM0IW-WORK-MM < 1
   || FM0IW00.FM0IW-WORK-MM > 12)
    ;
    set FM0IM310.FM0IM-INV-MO cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    converseLib.validationFailed(84); /* Date missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor, mtl whse, or factory was entered.  1 (and only 1)*/
   /* must be selected.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-COUNT = 0;
  ;
  if (FM0IM310.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  if (FM0IM310.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  if (FM0IM310.FY1FCTYC != " ") /* If factory entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  ;
  if (FM0IW00.FM0IW-COUNT > 1) /* If too many were entered;*/
    ;
    if (FM0IM310.FY1FCTYC != " ") /* If factory entered*/
      set FM0IM310.FY1FCTYC cursor, bold; /* Highlight*/
    end
    if (FM0IM310.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
      set FM0IM310.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
    end
    if (FM0IM310.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
      set FM0IM310.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
    end
    ;
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    converseLib.validationFailed(125); /* Only 1 may be entered*/
  end
  ;
  if (FM0IW00.FM0IW-COUNT == 0) /* If none were entered*/
    ;
    set FM0IM310.FY1FCTYC bold; /* Highlight*/
    set FM0IM310.FK-MAT-WHSE-CD bold; /* Highlight*/
    set FM0IM310.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
    ;
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    converseLib.validationFailed(138); /* One selection must be specified*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Exit if errors have been found.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If errors found*/
    FM0IW00.FM0IW-CONFIRM-ADD-SW = "N"; /* Reset confirm-add switch*/
    return; /* exit to prev process*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify factory code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM310.FY1FCTYC != " ") /* If fcty entered*/
    FM0I-3521(); /* Verify factory*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material whse code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM310.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
    FM0I-3522(); /* Verify mtl whse*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM310.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    FM0I-3523(); /* Verify vendor*/
  end
  ;
  ;
end // end FM0I-3520

// Verify factory code
Function FM0I-3521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0IM310.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM310.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3521"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3521 VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3521

// Verify material whse
Function FM0I-3522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0IM310.FK-MAT-WHSE-CD;
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM310.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3522"; /* Module identification*/
      converseLib.validationFailed(124); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3522 VERIFY MATERIAL WHSE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3522

// Verify vendor code
Function FM0I-3523()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0IM310.FM0IM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM310.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3523"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3523"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3523 VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3523

// Verify scroll request
Function FM0I-3530()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0IW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0IW00.XXXTSPAG >= FM0IW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0I-3530

// Process valid request
Function FM0I-3600()
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IM310.FM0IM-HDR-VEND-CD != FM0IW01.FM0IM-HDR-VEND-CD
   || FM0IM310.FK-MAT-WHSE-CD != FM0IW01.FK-MAT-WHSE-CD
   || FM0IM310.FY1FCTYC != FM0IW01.FY1FCTYC
   || FM0IM310.FM0IM-INV-MO != FM0IW01.FM0IM-INV-MO)
    ;
    FM0IW00.FM0IW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0IW00.XXXTSPAG = FM0IW00.XXXTSPAG - 1; /* Decrement page*/
    FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0IW00.XXXTSPAG = FM0IW00.XXXTSPAG + 1; /* Increment page*/
    FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process update request(s).*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-UPDT-PERFORMED-SW = "N"; /* Init switch*/
  ;
  XX0XS01(); /* Get current date and time*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Init index*/
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* Check all rows*/
    ;
    if (FM0IM310.FM0IM-SELECT[FM0IW-IDX] == "S") /* If selected for change*/
      ;
      if (FM0IM310.FM0IM-HDR-VEND-CD != " ") /* If vendor data*/
        ;
        FM0I-3610(); /* Update DCMPNT.VVNINV01 record*/
      else
        ;
        if (FM0IM310.FK-MAT-WHSE-CD != " ") /* If mtl whse data*/
          ;
          FM0I-3620(); /* Update DCMPNT.VWHINV01 record*/
        else
          ;
          FM0I-3630(); /* Update DCMPNT.VFYINV01 record*/
        end
      end
    end
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment index*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set update complete message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-UPDT-PERFORMED-SW == "Y") /* If data updated*/
    ;
    FKWREC.XXXMSGNO = 1; /* Update was complete*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module identification*/
    FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
  end
  ;
  ;
end // end FM0I-3600

// Update DCMPNT.VVNINV01
Function FM0I-3610()
   /* ------------------------------------------------------------*/
   /* Update the requested row on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNINV01 empty;
  ;
   /* Restore original VVNINV01 record*/
  VVNINV01.VVNINV01-GROUP = FM0IW01.VVNINV01-GROUP[FM0IW-IDX];
  ;
   /* Change the data*/
  VVNINV01.FK-MAT-INV-QTY = FM0IM310.FK-MAT-INV-QTY[FM0IW-IDX];
  VVNINV01.FK-COPY-INV-FL = FM0IM310.FK-COPY-INV-FL[FM0IW-IDX];
  VVNINV01.FK-MAT-INV-COMNT = FM0IM310.FK-MAT-INV-COMNT[FM0IW-IDX];
  ;
  VVNINV01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VVNINV01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  try
    call "IO6800" ("U ", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0IW00.FM0IW-UPDT-PERFORMED-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback database changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another*/
      FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
      FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3610 UPDATE DCMPNT.VVNINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3610

// Update DCMPNT.VWHINV01
Function FM0I-3620()
   /* ------------------------------------------------------------*/
   /* Update the requested row on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VWHINV01 empty;
  ;
   /* Restore original VWHINV01 record*/
  VWHINV01.VWHINV01-GROUP = FM0IW01.VWHINV01-GROUP[FM0IW-IDX];
  ;
   /* Change the data*/
  VWHINV01.FK-MAT-INV-QTY = FM0IM310.FK-MAT-INV-QTY[FM0IW-IDX];
  VWHINV01.FK-COPY-INV-FL = FM0IM310.FK-COPY-INV-FL[FM0IW-IDX];
  VWHINV01.FK-MAT-INV-COMNT = FM0IM310.FK-MAT-INV-COMNT[FM0IW-IDX];
  ;
  VWHINV01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VWHINV01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  try
    call "IO6810" ("U ", SQLCA, VWHINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0IW00.FM0IW-UPDT-PERFORMED-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback database changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another*/
      FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
      FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3620 UPDATE DCMPNT.VWHINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VWHINV01.VWHINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3620

// Update DCMPNT.VFYINV01
Function FM0I-3630()
   /* ------------------------------------------------------------*/
   /* Update the requested row on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFYINV01 empty;
  ;
   /* Restore original VFYINV01 record*/
  VFYINV01.VFYINV01-GROUP = FM0IW01.VFYINV01-GROUP[FM0IW-IDX];
  ;
   /* Change the data*/
  VFYINV01.FK-MAT-INV-QTY = FM0IM310.FK-MAT-INV-QTY[FM0IW-IDX];
  VFYINV01.FK-COPY-INV-FL = FM0IM310.FK-COPY-INV-FL[FM0IW-IDX];
  VFYINV01.FK-MAT-INV-COMNT = FM0IM310.FK-MAT-INV-COMNT[FM0IW-IDX];
  ;
  VFYINV01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VFYINV01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  try
    call "IO6790" ("U ", SQLCA, VFYINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0IW00.FM0IW-UPDT-PERFORMED-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback database changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another*/
      FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/
      FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3630 UPDATE DCMPNT.VFYINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFYINV01.VFYINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-3630

// Process delete map
Function FM0I-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-4100(); /* Obtain the data to display*/
  ;
  FM0I-4200(); /* Format and display the map*/
  ;
  FM0I-4300(); /* Check attention identifier*/
  ;
  FM0I-4400(); /* Reset fields to normal intensity*/
  ;
  FM0I-4500(); /* Verify the entered data*/
  ;
  FM0I-4600(); /* Process valid input request*/
  ;
  ;
end // end FM0I-4000

// Obtain data to display
Function FM0I-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.XXXTSLEN = 1683; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IM-HDR-VEND-CD = FM0IM410.FM0IM-HDR-VEND-CD;
  FM0IW00.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD;
  FM0IW00.FY1FCTYC = FM0IM410.FY1FCTYC;
  FM0IW00.FM0IM-INV-MO = FM0IM410.FM0IM-INV-MO;
  ;
  FM0IM410.FK-VEND-SNM = " ";
  FM0IM410.FK-MAT-WHSE-ABRV = " ";
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0IW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0I-4110(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If vendor was entered, obtain the vendor inventory.*/
   /* Otherwise, if whse entered, obtain the material whse inventory.*/
   /* Otherwise, if fcty entered, obtain the factory inventory.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IM410.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    ;
    FM0I-4120(); /* Get vendor inventory*/
  else
    if (FM0IM410.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
      ;
      FM0I-4130(); /* Get mtl whse inventory*/
    else
      ;
      if (FM0IM410.FY1FCTYC != " ") /* If factory entered*/
        ;
        FM0I-4140(); /* Get fcty inventory*/
      end
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If data was not found, set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    converseLib.validationFailed(18); /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "1000"; /* Module identification*/
    set FM0IM410.FM0IM-INV-MO bold; /* Highlight*/
    if (FM0IM410.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
      set FM0IM410.FM0IM-HDR-VEND-CD cursor, bold;
    else
      if (FM0IM410.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
        set FM0IM410.FK-MAT-WHSE-CD cursor, bold;
      else
        set FM0IM410.FY1FCTYC cursor, bold;
      end
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-REQUEST-DATA-SW = "N";
  FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0I-4100

// Purge any temporary storage
Function FM0I-4110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0IW01 empty; /* m410 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0IW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4110

// Obtain vendor inventory
Function FM0I-4120()
   /* ------------------------------------------------------------*/
   /* Select the vendor record from DCMPNT.VVNDR001.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-4121(); /* Select DCMPNT.VVNDR001*/
  ;
  FM0IW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
  FM0IW00.FK-MAT-WHSE-ABRV = " ";
  ;
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the vendor inventory table DCMPNT.VVNINV01.*/
   /* Fetch the first record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-4122(); /* Declare DCMPNT.VVNINV01 cursor*/
  ;
  ;
  FM0IW00.FM0IW-END-VVNINV01-CSR-SW = "N"; /* Init end of csr switch*/
  ;
  FM0I-4123(); /* Fetch DCMPNT.VVNINV01 record*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format inventory records to display storage until end of cursor.*/
   /* When necessary, save to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 0; /* Initialize index*/
  ;
  while (FM0IW00.FM0IW-END-VVNINV01-CSR-SW == "N") /* While not end of csr*/
    ;
    FM0I-4124(); /* Select DCMPNT.VMATRL01 record*/
    ;
    FM0I-4125(); /* Save record in display storage*/
    ;
    if (FM0IW00.FM0IW-IDX == FM0IW00.FM0IW-NBR-MAP-ROWS) /* Full page*/
      FM0I-4126(); /* Add record to temporary storage*/
      FM0IW00.FM0IW-IDX = 0; /* Reset index*/
    end
    ;
    FM0I-4123(); /* Fetch DCMPNT.VVNINV01 record*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX > 0) /* If any records on current page*/
    FM0I-4126(); /* Add record to temporary storage*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the DCMPNT.VVNINV01 cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-4127(); /* Close DCMPNT.VVNINV01*/
  ;
  ;
end // end FM0I-4120

// Select DCMPNT.VVNDR001
Function FM0I-4121()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0IM410.FM0IM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VVNDR001.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4121 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4121

// Declare DCMPNT.VVNINV01
Function FM0I-4122()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNINV01 empty;
  ;
  VVNINV01.FK-VEND-CD = FM0IM410.FM0IM-HDR-VEND-CD;
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM410.FM0IM-INV-MO;
  if (FM0IW-WORK-YY < 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  VVNINV01.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  ;
  ;
  try
    call "IO6800" ("S1", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4122"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4122 DECLARE DCMPNT.VVNINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4122

// Fetch DCMPNT.VVNINV01
Function FM0I-4123()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6800" ("N1", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0IW00.FM0IW-END-VVNINV01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4123"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4123 FETCH DCMPNT.VVNINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4123

// Select DCMPNT.VMATRL01
Function FM0I-4124()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = VVNINV01.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4124"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4124 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4124

// Save data in display storage
Function FM0I-4125()
   /* --------------------------------------------------------------*/
   /* Increment the map index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM410.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = " "; /* Mtl whse abrv*/
    FM0IW01.FY1FCTYC = FM0IM410.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM410.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = VVNINV01.FK-MAT-NBR; /* Mtl*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
  FM0IW01.XCLCD[FM0IW-IDX] = VVNINV01.XCLCD; /* Clr*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = VVNINV01.FK-MAT-INV-QTY; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = VVNINV01.FK-NIKE-RSP-FL; /* Flg*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = VVNINV01.FK-COPY-INV-FL; /* Flg*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = VVNINV01.FK-MAT-INV-COMNT;
  ;
  if (VVNINV01.XCLCD in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  FM0IW01.VVNINV01-GROUP[FM0IW-IDX] = VVNINV01.VVNINV01-GROUP;
  FM0IW01.VWHINV01-GROUP[FM0IW-IDX] = " ";
  FM0IW01.VFYINV01-GROUP[FM0IW-IDX] = " ";
  ;
  ;
end // end FM0I-4125

// Add record to temporary store
Function FM0I-4126()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0IW01 empty; /* m410 display storage*/
    ;
    FM0IW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4126"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4126

// Close DCMPNT.VVNINV01
Function FM0I-4127()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6800" ("C1", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4127"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4127 CLOSE DCMPNT.VVNINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4127

// Obtain mtl whse inventory
Function FM0I-4130()
   /* ------------------------------------------------------------*/
   /* Select the material whse record from DMCPNT.VMATWH01.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-4131(); /* Select DCMPNT.VMATWH01*/
  ;
  FM0IW00.FK-MAT-WHSE-ABRV = VMATWH01.FK-MAT-WHSE-ABRV;
  FM0IW00.FK-VEND-SNM = " ";
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the vendor inventory table DCMPNT.VWHINV01.*/
   /* Fetch the first record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-4132(); /* Declare DCMPNT.VWHINV01 cursor*/
  ;
  ;
  FM0IW00.FM0IW-END-VWHINV01-CSR-SW = "N"; /* Init end of csr switch*/
  ;
  FM0I-4133(); /* Fetch DCMPNT.VWHINV01 record*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format inventory records to display storage until end of cursor.*/
   /* When necessary, save to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 0; /* Initialize index*/
  ;
  while (FM0IW00.FM0IW-END-VWHINV01-CSR-SW == "N") /* While not end of csr*/
    ;
    FM0I-4134(); /* Select DCMPNT.VMATRL01 record*/
    ;
    FM0I-4135(); /* Save record in display storage*/
    ;
    if (FM0IW00.FM0IW-IDX == FM0IW00.FM0IW-NBR-MAP-ROWS) /* Page is full*/
      FM0I-4136(); /* Add record to temporary storage*/
      FM0IW00.FM0IW-IDX = 0; /* Reset index*/
    end
    ;
    FM0I-4133(); /* Fetch DCMPNT.VWHINV01 record*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX > 0) /* If any records on current page*/
    FM0I-4136(); /* Add record to temporary storage*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the DCMPNT.VWHINV01 cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-4137(); /* Close DCMPNT.VWHINV01*/
  ;
  ;
end // end FM0I-4130

// Select DCMPNT.VMATWH01
Function FM0I-4131()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD;
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATWH01.FK-MAT-WHSE-ABRV = "***************"; /* Whse abrv*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4131"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4131 SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4131

// Declare DCMPNT.VWHINV01
Function FM0I-4132()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set FMBREC empty;
  ;
  FMBREC.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD;
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM410.FM0IM-INV-MO;
  if (FM0IW-WORK-YY < 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  FMBREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  ;
  ;
  try
    call "FM1420" ("S1", SQLCA, FMBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4132"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4132 DECLARE DCMPNT.VWHINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMBREC.FMBREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4132

// Fetch DCMPNT.VWHINV01
Function FM0I-4133()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1420" ("N1", SQLCA, FMBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0IW00.FM0IW-END-VWHINV01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4133"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4133 FETCH DCMPNT.VWHINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMBREC.FMBREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4133

// Select DCMPNT.VMATRL01
Function FM0I-4134()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FMBREC.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4134"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4134 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4134

// Save data in display storage
Function FM0I-4135()
   /* --------------------------------------------------------------*/
   /* Increment the map index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM410.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = " "; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = VMATWH01.FK-MAT-WHSE-ABRV;
    FM0IW01.FY1FCTYC = FM0IM410.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM410.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = FMBREC.FK-MAT-NBR; /* Mtl*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
  FM0IW01.XCLCD[FM0IW-IDX] = FMBREC.XCLCD; /* Clr*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = FMBREC.FK-MAT-INV-QTY; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = FMBREC.FK-NIKE-RSP-FL; /* Flg*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = FMBREC.FK-COPY-INV-FL; /* Flg*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = FMBREC.FK-MAT-INV-COMNT;
  ;
  if (FMBREC.XCLCD in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  FM0IW01.VVNINV01-GROUP = " ";
  FM0IW01.VWHINV01-GROUP[FM0IW-IDX] = FMBREC.VWHINV01-GROUP;
  FM0IW01.VFYINV01-GROUP = " ";
  ;
  ;
end // end FM0I-4135

// Add record to temporary store
Function FM0I-4136()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0IW01 empty; /* m410 display storage*/
    ;
    FM0IW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4136"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4136

// Close DCMPNT.VWHINV01
Function FM0I-4137()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1420" ("C1", SQLCA, FMBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4137"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4137 CLOSE DCMPNT.VWHINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMBREC.FMBREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4137

// Obtain factory inventory
Function FM0I-4140()
  FM0IW00.FK-VEND-SNM = " ";
  FM0IW00.FK-MAT-WHSE-ABRV = " ";
  ;
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the vendor inventory table DCMPNT.VFYINV01.*/
   /* Fetch the first record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-4142(); /* Declare DCMPNT.VFYINV01 cursor*/
  ;
  ;
  FM0IW00.FM0IW-END-VFYINV01-CSR-SW = "N"; /* Init end of csr switch*/
  ;
  FM0I-4143(); /* Fetch DCMPNT.VFYINV01 record*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format inventory records to display storage until end of cursor.*/
   /* When necessary, save to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 0; /* Initialize index*/
  ;
  while (FM0IW00.FM0IW-END-VFYINV01-CSR-SW == "N") /* While not end of csr*/
    ;
    FM0I-4144(); /* Select DCMPNT.VMATRL01 record*/
    ;
    FM0I-4145(); /* Save record in display storage*/
    ;
    if (FM0IW00.FM0IW-IDX == FM0IW00.FM0IW-NBR-MAP-ROWS) /* Page is full*/
      FM0I-4146(); /* Add record to temporary storage*/
      FM0IW00.FM0IW-IDX = 0; /* Reset index*/
    end
    ;
    FM0I-4143(); /* Fetch DCMPNT.VFYINV01 record*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX > 0) /* If any records on current page*/
    FM0I-4146(); /* Add record to temporary storage*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Close the DCMPNT.VFYINV01 cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0I-4147(); /* Close DCMPNT.VFYINV01*/
  ;
  ;
end // end FM0I-4140

// Declare DCMPNT.VFYINV01
Function FM0I-4142()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set FMAREC empty;
  ;
  FMAREC.FY1FCTYC = FM0IM410.FY1FCTYC;
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM410.FM0IM-INV-MO;
  if (FM0IW-WORK-YY < 80)
    FM0IW00.FM0IW-WORK-CC = 20;
  else
    FM0IW00.FM0IW-WORK-CC = 19;
  end
  FMAREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
  ;
  ;
  try
    call "FM1410" ("S1", SQLCA, FMAREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4142"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4142 DECLARE DCMPNT.VFYINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMAREC.FMAREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4142

// Fetch DCMPNT.VFYINV01
Function FM0I-4143()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1410" ("N1", SQLCA, FMAREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0IW00.FM0IW-END-VFYINV01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4143"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4143 FETCH DCMPNT.VFYINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMAREC.FMAREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4143

// Select DCMPNT.VMATRL01
Function FM0I-4144()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FMAREC.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-VEND-CD = "**";
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4144"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4144 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4144

// Save data in display storage
Function FM0I-4145()
   /* --------------------------------------------------------------*/
   /* Increment the map index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the header if this is the first record on the page.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-IDX == 1) /* If first record on page*/
    ;
    FM0IW01.FM0IM-HDR-VEND-CD = FM0IM410.FM0IM-HDR-VEND-CD; /* Vendor*/
    FM0IW01.FK-VEND-SNM = " "; /* Vendor name*/
    FM0IW01.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD; /* Mtl whse*/
    FM0IW01.FK-MAT-WHSE-ABRV = " "; /* Mtl whse abrv*/
    FM0IW01.FY1FCTYC = FM0IM410.FY1FCTYC; /* Factory*/
    FM0IW01.FM0IM-INV-MO = FM0IM410.FM0IM-INV-MO; /* Month*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0IW01.FK-VEND-CD[FM0IW-IDX] = VMATRL01.FK-VEND-CD; /* Vendor*/
  FM0IW01.FK-MAT-NBR[FM0IW-IDX] = FMAREC.FK-MAT-NBR; /* Mtl*/
  FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX] = VMATRL01.FK-DEPT-MAT-DESC;
  FM0IW01.XCLCD[FM0IW-IDX] = FMAREC.XCLCD; /* Clr*/
  FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX] = FMAREC.FK-MAT-INV-QTY; /* Qty*/
  FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Uom*/
  FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX] = FMAREC.FK-NIKE-RSP-FL; /* Flg*/
  FM0IW01.FK-COPY-INV-FL[FM0IW-IDX] = FMAREC.FK-COPY-INV-FL; /* Flg*/
  FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX] = FMAREC.FK-MAT-INV-COMNT;
  ;
  if (FMAREC.XCLCD in XCLTBL.XCLCD /* If color code in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0IW01.XCLDESC[FM0IW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Clr desc*/
  else
    FM0IW01.XCLDESC[FM0IW-IDX] = "************"; /* Clr desc*/
  end
  ;
  ;
  FM0IW01.VVNINV01-GROUP = " ";
  FM0IW01.VWHINV01-GROUP = " ";
  FM0IW01.VFYINV01-GROUP[FM0IW-IDX] = FMAREC.VFYINV01-GROUP;
  ;
  ;
end // end FM0I-4145

// Add record to temporary store
Function FM0I-4146()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0IW01 empty; /* m410 display storage*/
    ;
    FM0IW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4146"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4146

// Close DCMPNT.VFYINV01
Function FM0I-4147()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "FM1410" ("C1", SQLCA, FMAREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4147"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4147 CLOSE DCMPNT.VFYINV01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMAREC.FMAREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4147

// Format and converse the map
Function FM0I-4200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0I-4210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0IM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0IM410.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0IM410 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0IM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0IM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format all key descriptions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IM410.FK-VEND-SNM = FM0IW00.FK-VEND-SNM;
  FM0IM410.FK-MAT-WHSE-ABRV = FM0IW00.FK-MAT-WHSE-ABRV;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (no detail lines formatted to temporary storage).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX == 0) /* No data formatted*/
    ;
    set FM0IM410.XXXTSPAG invisible, skip;
    set FM0IM410.TA5TSQIX invisible, skip;
    ;
    FM0IW00.FM0IW-IDX = 1; /* Init index*/
    ;
    while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For all lines*/
      ;
      set FM0IM410.FM0IM-SELECT[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-VEND-CD[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-MAT-NBR[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-DEPT-MAT-DESC[FM0IW-IDX] invisible, skip;
      set FM0IM410.XCLCD[FM0IW-IDX] invisible, skip;
      set FM0IM410.XCLDESC[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-MAT-INV-QTY[FM0IW-IDX] invisible, skip;
      set FM0IM410.XMU-MAT-UOM-CD[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-NIKE-RSP-FL[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-COPY-INV-FL[FM0IW-IDX] invisible, skip;
      set FM0IM410.FM0IM-COMMENT-LIT[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-MAT-INV-COMNT[FM0IW-IDX] invisible, skip;
      ;
      FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but there is at least partial data on the map).*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Init index*/
  ;
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For all lines*/
    ;
    if (FM0IM410.FK-MAT-NBR[FM0IW-IDX] == " ") /* No data*/
      ;
      set FM0IM410.FM0IM-SELECT[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-VEND-CD[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-MAT-NBR[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-DEPT-MAT-DESC[FM0IW-IDX] invisible, skip;
      set FM0IM410.XCLCD[FM0IW-IDX] invisible, skip;
      set FM0IM410.XCLDESC[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-MAT-INV-QTY[FM0IW-IDX] invisible, skip;
      set FM0IM410.XMU-MAT-UOM-CD[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-NIKE-RSP-FL[FM0IW-IDX] invisible, skip;
      set FM0IM410.FM0IM-COMMENT-LIT[FM0IW-IDX] invisible, skip;
      set FM0IM410.FK-MAT-INV-COMNT[FM0IW-IDX] invisible, skip;
    end
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1; /* Increment*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* If no message to display*/
   || converseVar.validationMsgNum == 1) /* Update complete*/
    if (FM0IM410.FK-MAT-NBR[1] > " ") /* If map has data*/
      set FM0IM410.FM0IM-SELECT[1] cursor;
    else
      set FM0IM410.FM0IM-HDR-VEND-CD cursor;
    end
  end
  ;
  ;
  converse FM0IM410 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0IM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0IM410.CAITEM; /* Application data*/
  ;
  ;
end // end FM0I-4200

// Format the data to display
Function FM0I-4210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0IM410 initial; /* Initialize map*/
  ;
  FM0IW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0IW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0IW00.XXXTSPAG > FM0IW00.TA5TSQIX) /* Desired page > highest*/
        FM0IW00.XXXTSPAG = FM0IW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0I-4211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0IW00.TA5TSQIX == 0) /* If no data was obtained*/
    ;
    FM0IM410.FM0IM-HDR-VEND-CD = FM0IW00.FM0IM-HDR-VEND-CD;
    FM0IM410.FK-MAT-WHSE-CD = FM0IW00.FK-MAT-WHSE-CD;
    FM0IM410.FY1FCTYC = FM0IW00.FY1FCTYC;
    FM0IM410.FM0IM-INV-MO = FM0IW00.FM0IM-INV-MO;
  else
    ;
    FM0IM410.FM0IM-HDR-VEND-CD = FM0IW01.FM0IM-HDR-VEND-CD;
    FM0IM410.FK-MAT-WHSE-CD = FM0IW01.FK-MAT-WHSE-CD;
    FM0IM410.FY1FCTYC = FM0IW01.FY1FCTYC;
    FM0IM410.FM0IM-INV-MO = FM0IW01.FM0IM-INV-MO;
  end
  ;
  FM0IM410.XXXTSPAG = FM0IW00.XXXTSPAG; /* Current page*/
  FM0IM410.TA5TSQIX = FM0IW00.TA5TSQIX; /* Max page*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1; /* Initialize idx*/
  ;
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS) /* For each line*/
    ;
    FM0IM410.FK-VEND-CD[FM0IW-IDX] = FM0IW01.FK-VEND-CD[FM0IW-IDX]; /* Vendor*/
    FM0IM410.FK-MAT-NBR[FM0IW-IDX] = FM0IW01.FK-MAT-NBR[FM0IW-IDX]; /* Material*/
    FM0IM410.FK-DEPT-MAT-DESC[FM0IW-IDX] = FM0IW01.FK-DEPT-MAT-DESC[FM0IW-IDX]; /* Material desc*/
    FM0IM410.XCLCD[FM0IW-IDX] = FM0IW01.XCLCD[FM0IW-IDX]; /* Color code*/
    FM0IM410.XCLDESC[FM0IW-IDX] = FM0IW01.XCLDESC[FM0IW-IDX]; /* Color desc*/
    FM0IM410.FK-MAT-INV-QTY[FM0IW-IDX] = FM0IW01.FK-MAT-INV-QTY[FM0IW-IDX]; /* Inventory qty*/
    FM0IM410.XMU-MAT-UOM-CD[FM0IW-IDX] = FM0IW01.XMU-MAT-UOM-CD[FM0IW-IDX]; /* Uom*/
    FM0IM410.FK-NIKE-RSP-FL[FM0IW-IDX] = FM0IW01.FK-NIKE-RSP-FL[FM0IW-IDX]; /* Nike responsibility flag*/
    FM0IM410.FK-COPY-INV-FL[FM0IW-IDX] = FM0IW01.FK-COPY-INV-FL[FM0IW-IDX]; /* Copy inventory flag*/
    FM0IM410.FK-MAT-INV-COMNT[FM0IW-IDX] = FM0IW01.FK-MAT-INV-COMNT[FM0IW-IDX]; /* Inventory comment*/
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  ;
end // end FM0I-4210

// Read page from temp storage
Function FM0I-4211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW01.XXXTSLEN = FM0IW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0IW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0IW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4211

// Check attention identifier
Function FM0I-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0IM410.FM0IM-HDR-VEND-CD;
    FKWREC.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD;
    FKWREC.FY1FCTYC = FM0IM410.FY1FCTYC;
    FM0IW00.FM0IW-WORK-YYMM = FM0IM410.FM0IM-INV-MO;
    if (FM0IW00.FM0IW-WORK-YY <= 80)
      FM0IW00.FM0IW-WORK-CC = 20;
    else
      FM0IW00.FM0IW-WORK-CC = 19;
    end
    FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
    ;
    COMMAREA.CATOAP = "FM0I"; /* to applicaiton*/
    COMMAREA.CAITEM = "D   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0IM410.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IM410.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0IM410.FM0IM-HDR-VEND-CD;
      FKWREC.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD;
      FKWREC.FY1FCTYC = FM0IM410.FY1FCTYC;
      FM0IW00.FM0IW-WORK-YYMM = FM0IM410.FM0IM-INV-MO;
      if (FM0IW00.FM0IW-WORK-YY <= 80)
        FM0IW00.FM0IW-WORK-CC = 20;
      else
        FM0IW00.FM0IW-WORK-CC = 19;
      end
      FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
      ;
      COMMAREA.CATOAP = FM0IM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0IM410.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0IM410.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4 /* MSTR MN requested*/
   || converseVar.eventKey is pf17) /* INVM requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0IM410"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0IM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0IM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0E"; /* TO application*/
      COMMAREA.CAITEM = FM0IM410.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0IM410.FM0IM-HDR-VEND-CD;
    FKWREC.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD;
    FKWREC.FY1FCTYC = FM0IM410.FY1FCTYC;
    FM0IW00.FM0IW-WORK-YYMM = FM0IM410.FM0IM-INV-MO;
    if (FM0IW00.FM0IW-WORK-YY <= 80)
      FM0IW00.FM0IW-WORK-CC = 20;
    else
      FM0IW00.FM0IW-WORK-CC = 19;
    end
    FKWREC.FK-MAT-INV-MO = FM0IW00.FM0IW-WORK-DT;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* BACK was not pressed*/
   && converseVar.eventKey not pf8)  /* FWRD was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0I-4300

// Reset Highlighted fields
Function FM0I-4400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0IM410.XXXTSPAG initialAttributes;
  set FM0IM410.TA5TSQIX initialAttributes;
  set FM0IM410.FM0IM-HDR-VEND-CD initialAttributes;
  set FM0IM410.FK-VEND-SNM initialAttributes;
  set FM0IM410.FK-MAT-WHSE-CD initialAttributes;
  set FM0IM410.FK-MAT-WHSE-ABRV initialAttributes;
  set FM0IM410.FY1FCTYC initialAttributes;
  set FM0IM410.FM0IM-INV-MO initialAttributes;
  ;
  FM0IW00.FM0IW-IDX = 1;
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS)
    ;
    set FM0IM410.FM0IM-SELECT[FM0IW-IDX] initialAttributes;
    set FM0IM410.FK-VEND-CD[FM0IW-IDX] initialAttributes;
    set FM0IM410.FK-MAT-NBR[FM0IW-IDX] initialAttributes;
    set FM0IM410.FK-DEPT-MAT-DESC[FM0IW-IDX] initialAttributes;
    set FM0IM410.XCLCD[FM0IW-IDX] initialAttributes;
    set FM0IM410.XCLDESC[FM0IW-IDX] initialAttributes;
    set FM0IM410.FK-MAT-INV-QTY[FM0IW-IDX] initialAttributes;
    set FM0IM410.XMU-MAT-UOM-CD[FM0IW-IDX] initialAttributes;
    set FM0IM410.FK-NIKE-RSP-FL[FM0IW-IDX] initialAttributes;
    set FM0IM410.FK-COPY-INV-FL[FM0IW-IDX] initialAttributes;
    set FM0IM410.FK-MAT-INV-COMNT[FM0IW-IDX] initialAttributes;
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  set FM0IM410.CATOAP initialAttributes;
  set FM0IM410.CAITEM initialAttributes;
  ;
end // end FM0I-4400

// Verify entered fields
Function FM0I-4500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM410.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0IM410.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0I-4510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key was changed, verify it.*/
   /* Otherwise, verify the detail data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM410.FM0IM-HDR-VEND-CD != FM0IW01.FM0IM-HDR-VEND-CD /* Vend chg*/
   || FM0IM410.FK-MAT-WHSE-CD != FM0IW01.FK-MAT-WHSE-CD       /* Mtl whse chg*/
   || FM0IM410.FY1FCTYC != FM0IW01.FY1FCTYC                   /* Factory chg*/
   || FM0IM410.FM0IM-INV-MO != FM0IW01.FM0IM-INV-MO)          /* Month chg*/
    ;
    FM0I-4520(); /* Verify key*/
  else
    ;
    FM0I-4530(); /* Verify detail*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N";
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If confirming delete, verify no select lines changed.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-CONFIRM-DELETE-SW == "Y") /* If confirming delete*/
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-NBR-MAP-ROWS;
    while (FM0IW00.FM0IW-IDX > 0)
      ;
      if (FM0IM410.FM0IM-SELECT[FM0IW-IDX]
       != FM0IW00.FM0IM-SELECT[FM0IW-IDX])
        ;
        FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
        converseLib.validationFailed(30); /* Press enter to continue, pa2 to xcel*/
      end
      ;
      FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX - 1; /* Decrement*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Save the rows selected for delete*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-IDX = 1;
  while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS)
    ;
    FM0IW00.FM0IM-SELECT[FM0IW-IDX] = FM0IM410.FM0IM-SELECT[FM0IW-IDX];
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0I-4500

// Verify scroll request
Function FM0I-4510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0IW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0IW00.XXXTSPAG >= FM0IW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0I-4510

// Verify key data
Function FM0I-4520()
   /* ---------------------------------------------------------------*/
   /* Verify month.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-WORK-YYMM = FM0IM410.FM0IM-INV-MO;
  ;
  if (FM0IW00.FM0IW-WORK-MM < 1
   || FM0IW00.FM0IW-WORK-MM > 12)
    ;
    set FM0IM410.FM0IM-INV-MO cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
    converseLib.validationFailed(84); /* Date missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor, mtl whse, or factory was entered.  1 (and only 1)*/
   /* must be selected.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-COUNT = 0;
  ;
  if (FM0IM410.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  if (FM0IM410.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  if (FM0IM410.FY1FCTYC != " ") /* If factory entered*/
    FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1; /* Increment counter*/
  end
  ;
  if (FM0IW00.FM0IW-COUNT > 1) /* If too many were entered;*/
    ;
    if (FM0IM410.FY1FCTYC != " ") /* If factory entered*/
      set FM0IM410.FY1FCTYC cursor, bold; /* Highlight*/
    end
    if (FM0IM410.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
      set FM0IM410.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
    end
    if (FM0IM410.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
      set FM0IM410.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
    end
    ;
    FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
    converseLib.validationFailed(125); /* Only 1 may be entered*/
  end
  ;
  if (FM0IW00.FM0IW-COUNT == 0) /* If none were entered*/
    ;
    set FM0IM410.FY1FCTYC bold; /* Highlight*/
    set FM0IM410.FK-MAT-WHSE-CD bold; /* Highlight*/
    set FM0IM410.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
    ;
    FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
    converseLib.validationFailed(138); /* One selection must be specified*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Exit if errors have been found.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If errors found*/
    return; /* exit to prev process*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify factory code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM410.FY1FCTYC != " ") /* If fcty entered*/
    FM0I-4521(); /* Verify factory*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material whse code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM410.FK-MAT-WHSE-CD != " ") /* If mtl whse entered*/
    FM0I-4522(); /* Verify mtl whse*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0IM410.FM0IM-HDR-VEND-CD != " ") /* If vendor entered*/
    FM0I-4523(); /* Verify vendor*/
  end
  ;
  ;
end // end FM0I-4520

// Verify factory code
Function FM0I-4521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0IM410.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM410.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4521"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4521 VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4521

// Verify material whse
Function FM0I-4522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0IM410.FK-MAT-WHSE-CD;
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM410.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4522"; /* Module identification*/
      converseLib.validationFailed(124); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4522 VERIFY MATERIAL WHSE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4522

// Verify vendor code
Function FM0I-4523()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0IM410.FM0IM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0IM410.FM0IM-HDR-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4523"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4523"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4523 VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4523

// Verify detail data
Function FM0I-4530()
   /* ---------------------------------------------------------------*/
   /* Verify select fields.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-COUNT = 0;
  FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-NBR-MAP-ROWS;
  ;
  while (FM0IW00.FM0IW-IDX > 0)
    ;
    if (FM0IM410.FM0IM-SELECT[FM0IW-IDX] == "S") /* or selected*/
      ;
      FM0IW00.FM0IW-COUNT = FM0IW00.FM0IW-COUNT + 1;
    else
      ;
      if (FM0IM410.FM0IM-SELECT[FM0IW-IDX] == " ") /* If blank*/
         /* Next sentence*/
      else
        ;
        set FM0IM410.FM0IM-SELECT[FM0IW-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "4530"; /* Module identification*/
        converseLib.validationFailed(13); /* Only S may be used to select a line*/
      end
    end
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX - 1;
  end
  ;
  ;
  if (FM0IW00.FM0IW-COUNT == 0) /* No data selected*/
    ;
    FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-NBR-MAP-ROWS;
    while (FM0IW00.FM0IW-IDX > 0)
      set FM0IM410.FM0IM-SELECT[FM0IW-IDX] cursor, bold;
      FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX - 1;
    end
    FKWREC.XXX-MOD-ID = "4530"; /* Module identification*/
    converseLib.validationFailed(140); /* Enter 's' to delete a row*/
  end
  ;
  ;
end // end FM0I-4530

// Process valid request
Function FM0I-4600()
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IM410.FM0IM-HDR-VEND-CD != FM0IW01.FM0IM-HDR-VEND-CD
   || FM0IM410.FK-MAT-WHSE-CD != FM0IW01.FK-MAT-WHSE-CD
   || FM0IM410.FY1FCTYC != FM0IW01.FY1FCTYC
   || FM0IM410.FM0IM-INV-MO != FM0IW01.FM0IM-INV-MO)
    ;
    FM0IW00.FM0IW-REQUEST-DATA-SW = "Y";
    FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0IW00.XXXTSPAG = FM0IW00.XXXTSPAG - 1; /* Decrement page*/
    FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0IW00.XXXTSPAG = FM0IW00.XXXTSPAG + 1; /* Increment page*/
    FM0IW00.FM0IW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Confirm the delete.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-CONFIRM-DELETE-SW == "N") /* Need to confirm delete*/
    ;
    FM0IW00.FM0IW-CONFIRM-DELETE-SW = "Y";
    FKWREC.XXXMSGNO = 30; /* Press enter to continue, pa2 to xcel*/
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* At this point we know there is a delete to perform.*/
   /* Process the delete request.*/
   /* ------------------------------------------------------------*/
  ;
  FM0IW00.FM0IW-UPDT-PERFORMED-SW = "N";
  ;
  if (FM0IW00.FM0IW-CONFIRM-DELETE-SW == "Y") /* Delete has been confirmed*/
    ;
    FM0IW00.FM0IW-IDX = 1;
    while (FM0IW00.FM0IW-IDX <= FM0IW00.FM0IW-NBR-MAP-ROWS)
      ;
      if (FM0IM410.FM0IM-SELECT[FM0IW-IDX] == "S") /* Selected for delete*/
        ;
        if (FM0IM410.FM0IM-HDR-VEND-CD != " ") /* If vendor data*/
          ;
          FM0I-4610(); /* Delete DCMPNT.VVNINV01*/
        else
          ;
          if (FM0IM410.FK-MAT-WHSE-CD != " ") /* If mtl whse data*/
            ;
            FM0I-4620(); /* Delete DCMPNT.VWHINV01*/
          else
            ;
            FM0I-4630(); /* Delete DCMPNT.VFYINV01*/
          end
        end
      end
      FM0IW00.FM0IW-IDX = FM0IW00.FM0IW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If deletes were successful, display message and exit to*/
   /* obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0IW00.FM0IW-UPDT-PERFORMED-SW == "Y") /* If update was performed*/
    ;
    FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
    FKWREC.XXXMSGNO = 1; /* Update successful*/
    FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N";
    FM0IW00.FM0IW-REQUEST-DATA-SW = "Y";
  end
  ;
  ;
end // end FM0I-4600

// Delete DCMPNT.VVNINV01
Function FM0I-4610()
   /* ------------------------------------------------------------*/
   /* Delete the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNINV01 empty;
  ;
   /* Restore original VVNINV01 record*/
  VVNINV01.VVNINV01-GROUP = FM0IW01.VVNINV01-GROUP[FM0IW-IDX];
  ;
  ;
  try
    call "IO6800" ("D ", SQLCA, VVNINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0IW00.FM0IW-UPDT-PERFORMED-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback database changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another*/
      FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
      FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
      FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N";
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N";
  FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4610 DELETE DCMPNT.VVNINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNINV01.VVNINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4610

// Delete DCMPNT.VWHINV01
Function FM0I-4620()
   /* ------------------------------------------------------------*/
   /* Delete the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VWHINV01 empty;
  ;
   /* Restore original VWHINV01 record*/
  VWHINV01.VWHINV01-GROUP = FM0IW01.VWHINV01-GROUP[FM0IW-IDX];
  ;
  ;
  try
    call "IO6810" ("D ", SQLCA, VWHINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0IW00.FM0IW-UPDT-PERFORMED-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback database changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another*/
      FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
      FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
      FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N";
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N";
  FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4620 DELETE DCMPNT.VWHINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VWHINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VWHINV01.VWHINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4620

// Delete DCMPNT.VFYINV01
Function FM0I-4630()
   /* ------------------------------------------------------------*/
   /* Delete the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFYINV01 empty;
  ;
   /* Restore original VFYINV01 record*/
  VFYINV01.VFYINV01-GROUP = FM0IW01.VFYINV01-GROUP[FM0IW-IDX];
  ;
  ;
  try
    call "IO6790" ("D ", SQLCA, VFYINV01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0IW00.FM0IW-UPDT-PERFORMED-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback database changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another*/
      FKWREC.XXX-MOD-ID = "4630"; /* Module identification*/
      FM0IW00.FM0IW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
      FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N";
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0IW00.FM0IW-CONFIRM-DELETE-SW = "N";
  FKWREC.XXX-MOD-ID = "4630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4630 DELETE DCMPNT.VFYINV01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYINV01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFYINV01.VFYINV01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0I-4630

//*** RECORD=FM0IW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0IW00 type basicRecord
  10 FM0IW-MAP-SW FM0IW-MAP-SW ; 
  10 FM0IW-REQUEST-DATA-SW FM0IW-REQUEST-DATA-SW ; 
  10 FM0IW-FMAT-MAP-SW FM0IW-FMAT-MAP-SW ; 
  10 FM0IW-UPDT-PERFORMED-SW FM0IW-UPDT-PERFORMED-SW ; 
  10 FM0IW-CONFIRM-ADD-SW FM0IW-CONFIRM-ADD-SW ; 
  10 FM0IW-CONFIRM-DELETE-SW FM0IW-CONFIRM-DELETE-SW ; 
  10 FM0IW-END-VVNINV01-CSR-SW FM0IW-END-VVNINV01-CSR-SW ; 
  10 FM0IW-END-VWHINV01-CSR-SW FM0IW-END-VWHINV01-CSR-SW ; 
  10 FM0IW-END-VFYINV01-CSR-SW FM0IW-END-VFYINV01-CSR-SW ; 
  10 FM0IW-WORK-DT FM0IW-WORK-DT ; 
    15 FM0IW-WORK-CC FM0IW-WORK-CC ; 
    15 FM0IW-WORK-YYMM FM0IW-WORK-YYMM ; 
      20 FM0IW-WORK-YY FM0IW-WORK-YY ; 
      20 FM0IW-WORK-MM FM0IW-WORK-MM ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 XCLDESC XCLDESC ; 
  10 FM0IW-IDX FM0IW-IDX ; 
  10 FM0IW-NBR-MAP-ROWS FM0IW-NBR-MAP-ROWS ; 
  10 FM0IW-COUNT FM0IW-COUNT ; 
  10 FM0IW-MAP-KEY FM0IW-MAP-KEY ; 
    15 FM0IM-HDR-VEND-CD FM0IM-HDR-VEND-CD ; 
    15 FK-MAT-WHSE-CD FK-MAT-WHSE-CD ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 FM0IM-INV-MO FM0IM-INV-MO ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 FK-MAT-WHSE-ABRV FK-MAT-WHSE-ABRV ; 
  10 XMG-COLR-GRP-CD XMG-COLR-GRP-CD [4] ; 
  10 FM0IM-SELECT FM0IM-SELECT [4] ; 
end // end FM0IW00

//*** RECORD=FM0IW01 ****
// ------------------------------------------------------------
// Application display storage.
// ------------------------------------------------------------
// 
// ***********************
Record FM0IW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(1683) ; 
    10 FM0IM-HDR-VEND-CD FM0IM-HDR-VEND-CD ; 
    10 FK-VEND-SNM FK-VEND-SNM ; 
    10 FK-MAT-WHSE-CD FK-MAT-WHSE-CD ; 
    10 FK-MAT-WHSE-ABRV FK-MAT-WHSE-ABRV ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FM0IM-INV-MO FM0IM-INV-MO ; 
    10 FK-VEND-CD FK-VEND-CD [4] ; 
    10 FK-MAT-NBR FK-MAT-NBR [4] ; 
    10 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC [4] ; 
    10 XCLCD XCLCD [4] ; 
    10 XCLDESC XCLDESC [4] ; 
    10 FK-MAT-INV-QTY FK-MAT-INV-QTY [4] ; 
    10 XMU-MAT-UOM-CD XMU-MAT-UOM-CD [4] ; 
    10 FK-NIKE-RSP-FL FK-NIKE-RSP-FL [4] ; 
    10 FK-COPY-INV-FL FK-COPY-INV-FL [4] ; 
    10 FK-MAT-INV-COMNT FK-MAT-INV-COMNT [4] ; 
    10 * char(3) ; 
    10 VVNINV01-GROUP VVNINV01-GROUP [4] ; 
    10 VWHINV01-GROUP VWHINV01-GROUP [4] ; 
    10 VFYINV01-GROUP VFYINV01-GROUP [4] ; 
end // end FM0IW01

//*** RECORD=FMAREC ****
// DB2 TABLE VIEW:      DCMPNT.VFYINV01
//                  AND DCMPNT.VMATRL01
// 
// COPYLIB MEMBER:      DCL01153
//                  AND DCL00981
// 
// I/O MODULE:          FM1410
// 
// KEY TO DB2 TABLE:    (NONE)
// 
// 
// MAINTENANCE LOG:
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          07/14/93  JALLE1  New record definition.
// **********************
Record FMAREC type basicRecord
  5 FMAREC-GROUP FMAREC-GROUP ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 VFYINV01-GROUP VFYINV01-GROUP ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 FK-MAT-NBR FK-MAT-NBR ; 
      15 XMG-COLR-GRP-CD XMG-COLR-GRP-CD ; 
      15 XCLCD XCLCD ; 
      15 FK-MAT-INV-MO FK-MAT-INV-MO ; 
      15 FK-MAT-INV-QTY FK-MAT-INV-QTY ; 
      15 FK-NIKE-RSP-FL FK-NIKE-RSP-FL ; 
      15 FK-COPY-INV-FL FK-COPY-INV-FL ; 
      15 FK-MAT-INV-COMNT FK-MAT-INV-COMNT ; 
      15 ZZZSDT ZZZSDT ; 
      15 ZZZCHGDT ZZZCHGDT ; 
      15 ZZZCHGTM ZZZCHGTM ; 
      15 ZZZCHGCT ZZZCHGCT ; 
end // end FMAREC

//*** RECORD=FMBREC ****
// DB2 TABLE VIEW:      DCMPNT.VWHINV01
//                  AND DCMPNT.VMATRL01
// 
// COPYLIB MEMBER:      DCL01155
//                  AND DCL00981
// 
// I/O MODULE:          FM1420
// 
// KEY TO DB2 TABLE:    (NONE)
// 
// 
// MAINTENANCE LOG:
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          07/14/93  JALLE1  New record definition.
// **********************
Record FMBREC type basicRecord
  5 FMBREC-GROUP FMBREC-GROUP ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 VWHINV01-GROUP VWHINV01-GROUP ; 
      15 FK-MAT-WHSE-CD FK-MAT-WHSE-CD ; 
      15 FK-MAT-NBR FK-MAT-NBR ; 
      15 XMG-COLR-GRP-CD XMG-COLR-GRP-CD ; 
      15 XCLCD XCLCD ; 
      15 FK-MAT-INV-MO FK-MAT-INV-MO ; 
      15 FK-MAT-INV-QTY FK-MAT-INV-QTY ; 
      15 FK-NIKE-RSP-FL FK-NIKE-RSP-FL ; 
      15 FK-COPY-INV-FL FK-COPY-INV-FL ; 
      15 FK-MAT-INV-COMNT FK-MAT-INV-COMNT ; 
      15 ZZZSDT ZZZSDT ; 
      15 ZZZCHGDT ZZZCHGDT ; 
      15 ZZZCHGTM ZZZCHGTM ; 
      15 ZZZCHGCT ZZZCHGCT ; 
end // end FMBREC

// FK_VEND_CD
DataItem FM0IM-HDR-VEND-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Inventory month
DataItem FM0IM-INV-MO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Select field
DataItem FM0IM-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Confirm add switch
DataItem FM0IW-CONFIRM-ADD-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Confirm delete switch
DataItem FM0IW-CONFIRM-DELETE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic counter
DataItem FM0IW-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End DCMPNT.VFYINV01 csr switch
DataItem FM0IW-END-VFYINV01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VVNINV01 csr switch
DataItem FM0IW-END-VVNINV01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VWHINV01 csr switch
DataItem FM0IW-END-VWHINV01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem FM0IW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic index
DataItem FM0IW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map key
DataItem FM0IW-MAP-KEY char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem FM0IW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of rows on map
DataItem FM0IW-NBR-MAP-ROWS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Request for data switch
DataItem FM0IW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update performed switch
DataItem FM0IW-UPDT-PERFORMED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic work date century
DataItem FM0IW-WORK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic work date
DataItem FM0IW-WORK-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic work date month
DataItem FM0IW-WORK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic work date year
DataItem FM0IW-WORK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic work date year/month
DataItem FM0IW-WORK-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Group level
DataItem FMAREC-GROUP char(99)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Group level
DataItem FMBREC-GROUP char(97)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

