package fm0g;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XMUTBL;
import corpx2.XMU-MAT-UOM-CD;
import corpx2.XMU-MAT-UOM-DESC;
import fb.common.FB9REC;
import fk.common.*;
import pc.common.PC3POIDT;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VMGCAP01;
import vv.common.VMGCAP01-GROUP;
import vv.common.VMGRP001;
import vv.common.VVNDR001;
//*** PROGRAM=FM0G ****
// THIS APPLICATION IS PART OF THE FOOTWEAR MATERIALS SYSTEM.
// 
// THIS APPLICATION PROVIDES MAINTENANCE CAPABILITY FOR
// MATERIAL GROUP CAPACITIES.  USERS WILL BE ALLOWED TO INQUIRE
// ADD, CHANGE, AND DELETE MATERIAL GROUP INVENTORIES THROUGH
// THE FOUR MAPS PROVIDED IN THIS APPLICATION.
// 
// INQUIRE MAP - MAP FM0GM110 IS PROVIDED FOR USERS TO INQUIRE
// UPON MATERIAL CAPACITY INFORMATION.
// 
// ADD MAP - MAP FM0GM210 IS PROVIDED FOR USERS TO ADD
// MATERIAL CAPACITY INFORMATION.
// 
// CHANGE MAP - MAP FM0GM310 IS PROVIDED FOR USERS TO CHANGE
// MATERIAL CAPACITY INFORMATION.
// 
// DELETE MAP - MAP FM0GM410 IS PROVIDED FOR USERS TO DELETE
// MATERIAL CAPACITY INFORMATION.
// 
// TRANSFER FROM ONE FM0G MAP TO ANOTHER FM0G MAP IS NOT
// POSSIBLE EXCEPT THROUGH FASTPATH.  USERS WILL BE ALLOWED
// TO EXIT THIS APPLICATION VIA PFKEYS OR FASTPATH, WITH THE
// 'OPTION' FIELD AVAILABLE FOR USE WITH ANY APPLICATION
// TRANSFER.
// 
// 
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          11/18/93  JALLE1  New application.
// Y2KFIX   11/17/97  KSUMME  Y2K MODIFICATIONS MADE TO:
//                            REGEN FOR XX0XS01,and chng map.
// *********************
Program FM0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FKGREC FKGREC; // record
  FKWREC FKWREC; // record
  FM0GW00 FM0GW00; // record
  FM0GW01 FM0GW01; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VMGCAP01 VMGCAP01; // record
  VMGRP001 VMGRP001; // record
  VVNDR001 VVNDR001; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XMUTBL {deleteAfterUse = yes}; // table
  use FM0GM.FM0GM110,  // forms
      FM0GM.FM0GM210, 
      FM0GM.FM0GM310, 
      FM0GM.FM0GM410
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Flow to the application initialization.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0G-0005; /* Application initialization*/
    ;
    ;
    FM0G-0005: FM0G-0005();
     /* ----------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ----------------------------------------------------------------*/
    ;
    goto FM0G-0010; /* Converse the main process*/
    FM0G-0010: FM0G-0010();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0G-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FM0G

// Special application init
Function FM0G-0005()
   /* ------------------------------------------------------------*/
   /* Initialize working storage and display storage areas.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0GM110 initial; /* M110 inquiry map input/output*/
  set FM0GM210 initial; /* M210 add map input/output*/
  set FM0GM310 initial; /* M310 change map input/output*/
  set FM0GM410 initial; /* M410 delete map input/output*/
  set FM0GW00 empty; /* Working storage*/
  set FM0GW01 empty; /* Display storage*/
  set SQLCA empty; /* SQL communication area*/
  set TAEREC empty; /* Error diagnosis information*/
  set TA1REC empty; /* Error diagnosis parameters*/
  set XX0XW01 empty; /* Date/time subroutine parameters*/
  ;
   /* ------------------------------------------------------------*/
   /* Determine which map to process.*/
   /* Format any passed data to the appropriate map.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
    ;
    FM0GW00.FM0GW-MAP-SW = "2"; /* Map switch - ADD*/
    FM0GM210.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
    FM0GM210.FK-MAT-GRP-CD = FKWREC.FK-MAT-GRP-CD; /* Mat group*/
    ;
    if (FKWREC.PC3POIDT > 0) /* If po date passed*/
      FM0GW00.FM0GW-FMAT-PO-DT = FKWREC.PC3POIDT; /* Fmat PO date*/
    else
      ;
      FM0G-0006(); /* Select DFBUY.VFMCTL01*/
      ;
      FM0GW00.FM0GW-FMAT-BUY-DT = FB9REC.FB8BUYDT;
      FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-BUY-DT-CCYY; /* Prod century and year*/
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Delivery month*/
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Prod month (need to -2 months)*/
      ;
      if (FM0GW00.FM0GW-FMAT-PO-DT-PP < 3)
        FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-PO-DT-CCYY - 1; /* Subtract a year*/
        FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP + 10; /* Production month*/
      else
        FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP - 2; /* Production month*/
      end
    end
    ;
     /* Now format the date to the map*/
    ;
    FM0GM210.FM0GM-PO-DT-YY = FM0GW00.FM0GW-FMAT-PO-DT-YY;
    FM0GM210.FM0GM-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP;
    FM0GM210.FM0GM-PO-DT-DD = FM0GW00.FM0GW-FMAT-PO-DT-DD;
  else
    ;
    if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* CHG requested*/
      ;
      FM0GW00.FM0GW-MAP-SW = "3"; /* Map switch - CHG*/
      FM0GM310.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
      FM0GM310.FK-MAT-GRP-CD = FKWREC.FK-MAT-GRP-CD; /* Mat group*/
      ;
      if (FKWREC.PC3POIDT > 0) /* If po date passed*/
        FM0GW00.FM0GW-FMAT-PO-DT = FKWREC.PC3POIDT; /* Fmat PO date*/
      else
        ;
        FM0G-0006(); /* Select DFBUY.VFMCTL01*/
        ;
        FM0GW00.FM0GW-FMAT-BUY-DT = FB9REC.FB8BUYDT;
        FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-BUY-DT-CCYY; /* Prod century and year*/
        FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Delivery month*/
        FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Prod month (need to -2 months)*/
        ;
        if (FM0GW00.FM0GW-FMAT-PO-DT-PP < 3)
          FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-PO-DT-CCYY - 1; /* Subtract a year*/
          FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP + 10; /* Production month*/
        else
          FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP - 2; /* Production month*/
        end
      end
      ;
       /* Now format the date to the map*/
      ;
      FM0GM310.FM0GM-PO-DT-YY = FM0GW00.FM0GW-FMAT-PO-DT-YY;
      FM0GM310.FM0GM-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP;
      FM0GM310.FM0GM-PO-DT-DD = FM0GW00.FM0GW-FMAT-PO-DT-DD;
    else
      if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* DEL requested*/
        FM0GW00.FM0GW-MAP-SW = "4"; /* Map switch - DEL*/
        FM0GM410.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
        FM0GM410.FK-MAT-GRP-CD = FKWREC.FK-MAT-GRP-CD; /* Mat group*/
        ;
        if (FKWREC.PC3POIDT > 0) /* If po date passed*/
          FM0GW00.FM0GW-FMAT-PO-DT = FKWREC.PC3POIDT; /* Fmat po date*/
        else
          ;
          FM0G-0006(); /* Select DFBUY.VFMCTL01*/
          ;
          FM0GW00.FM0GW-FMAT-BUY-DT = FB9REC.FB8BUYDT;
          FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-BUY-DT-CCYY; /* Prod century and year*/
          FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Delivery month*/
          FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Prod month (need to -2 mo)*/
          ;
          if (FM0GW00.FM0GW-FMAT-PO-DT-PP < 3)
            FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-PO-DT-CCYY - 1; /* Subtract a year*/
            FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP + 10; /* Production month*/
          else
            FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP - 2; /* Production month*/
          end
        end
        ;
         /* Now format the date to the map*/
        ;
        FM0GM410.FM0GM-PO-DT-YY = FM0GW00.FM0GW-FMAT-PO-DT-YY;
        FM0GM410.FM0GM-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP;
        FM0GM410.FM0GM-PO-DT-DD = FM0GW00.FM0GW-FMAT-PO-DT-DD;
      else
        FM0GW00.FM0GW-MAP-SW = "1"; /* Map switch - INQ*/
        FM0GM110.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
        FM0GM110.FK-MAT-GRP-CD = FKWREC.FK-MAT-GRP-CD; /* Mat group*/
        ;
        if (FKWREC.PC3POIDT > 0) /* If po date passed*/
          FM0GW00.FM0GW-FMAT-PO-DT = FKWREC.PC3POIDT; /* Fmat PO date*/
        else
          ;
          FM0G-0006(); /* Select DFBUY.VFMCTL01*/
          ;
          FM0GW00.FM0GW-FMAT-BUY-DT = FB9REC.FB8BUYDT;
          FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-BUY-DT-CCYY; /* Prod century and year*/
          FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Delivery month*/
          FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Prod month (need to -2 mo)*/
          ;
          if (FM0GW00.FM0GW-FMAT-PO-DT-PP < 3)
            FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-PO-DT-CCYY - 1; /* Subtract a year*/
            FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP + 10; /* Production month*/
          else
            FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP - 2; /* Production month*/
          end
        end
        ;
         /* Now format the date to the map*/
        ;
        FM0GM110.FM0GM-PO-DT-YY = FM0GW00.FM0GW-FMAT-PO-DT-YY;
        FM0GM110.FM0GM-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP;
        FM0GM110.FM0GM-PO-DT-DD = FM0GW00.FM0GW-FMAT-PO-DT-DD;
      end
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize working storage variables.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-FMAT-MAP-SW = "N"; /* Format the map switch*/
  FM0GW00.FM0GW-CLEAR-MAP-SW = "Y"; /* Clear map switch*/
  FM0GW00.FM0GW-CONFIRM-DELETE-SW = "N"; /* Confirm delete switch*/
  FM0GW00.FM0GW-VMGCAP01-FND-SW = "N"; /* No capacities yet*/
  move "N" to FM0GW01.FM0GW-CAP-MO-FND-SW[1] for all; /* No capacities yet*/
  ;
  if (FKWREC.FK-VEND-CD[1] > " " /* If vendor passed*/
   && FKWREC.FK-MAT-GRP-CD > " ") /* and material group passed*/
    FM0GW00.FM0GW-REQUEST-DATA-SW = "Y"; /* Request data*/
  else
    FM0GW00.FM0GW-REQUEST-DATA-SW = "N"; /* Don't request data*/
  end
  ;
  ;
  set FKWREC empty; /* Intitialize FKWREC*/
  ;
  ;
end // end FM0G-0005

// Select DFBUY.VFMCTL01
Function FM0G-0006()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FB9REC empty;
  ;
  ;
  try
    call "IO3650" ("S ", SQLCA, FB9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0006"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DFBUY.VFMCTL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFMCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB9REC.FB9GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-0006

// Main process to display a map
Function FM0G-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the second map.*/
   /* 2) Otherwise, if specified, display the third map.*/
   /* 3) Otherwise, if specified, display the fourth map.*/
   /* 4) Otherwise, display the first map.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-MAP-SW == "2") /* Map 2 was requested*/
    FM0G-2000(); /* Display map 2*/
  else
    ;
    if (FM0GW00.FM0GW-MAP-SW == "3") /* Map 3 was requested*/
      FM0G-3000(); /* Display map 3*/
    else
      ;
      if (FM0GW00.FM0GW-MAP-SW == "4") /* Map 4 was requested*/
        FM0G-4000(); /* Display map 4*/
      else
        ;
        FM0G-1000(); /* Display map 1*/
      end
    end
  end
  ;
  ;
end // end FM0G-0010

// Process inquiry map
Function FM0G-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0G-1100(); /* Obtain the data to display*/
  ;
  FM0G-1200(); /* Format and display the map*/
  ;
  FM0G-1300(); /* Check attention identifier*/
  ;
  FM0G-1400(); /* Reset fields to normal intensity*/
  ;
  FM0G-1500(); /* Verify the entered data*/
  ;
  FM0G-1600(); /* Process valid input request*/
  ;
  ;
end // end FM0G-1000

// Obtain data to display
Function FM0G-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Initialize display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0GW01 empty; /* Init disp storage*/
  move "N" to FM0GW01.FM0GW-CAP-MO-FND-SW[1] for all; /* No data found yet*/
  FM0GW00.FM0GW-VMGCAP01-FND-SW = "N"; /* No capacity found yet*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Calculate the date range to be displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM110.FM0GM-PO-DT-YY;
  FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM110.FM0GM-PO-DT-PP;
  FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM110.FM0GM-PO-DT-DD;
  if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
  else
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
  end
  ;
  FM0GW01.PC3POIDT[1] = FM0GW00.FM0GW-FMAT-PO-DT;
  ;
  FM0GW00.FM0GW-IDX = 2;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GW00.FM0GW-FMAT-PO-DT-DD == 12)
      FM0GW00.FM0GW-FMAT-PO-DT-DD = 1;
    else
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GW00.FM0GW-FMAT-PO-DT-DD + 1;
    end
    ;
    if (FM0GW00.FM0GW-FMAT-PO-DT-PP == 12)
      FM0GW00.FM0GW-FMAT-PO-DT-PP = 1;
      FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-PO-DT-CCYY + 1;
    else
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP + 1;
    end
    ;
    FM0GW01.PC3POIDT[FM0GW-IDX] = FM0GW00.FM0GW-FMAT-PO-DT;
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0G-1110(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the material group record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0G-1120(); /* Select DCMPNT.VMGRP001*/
  ;
  if (VMGRP001.XMU-MAT-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
   && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If code in table and active*/
    ;
    FM0GW00.XMU-MAT-UOM-DESC = XMUTBL.XMU-MAT-UOM-DESC[sysVar.arrayIndex]; /* Save desc*/
  else
    ;
    FM0GW00.XMU-MAT-UOM-DESC = "***************";
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain capacity data from DCMPNT.VMGCAP01 for each of the*/
   /* dates formatted earlier.  Format each record to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1; /* Initialize index*/
  ;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    FM0G-1130(); /* Select DCMPNT.VMGCAP01*/
    FM0G-1140(); /* Add record to display storage*/
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1; /* Increment index*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-VMGCAP01-FND-SW == "N") /* If no cap records found*/
    ;
    FKWREC.XXXMSGNO = 18; /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-REQUEST-DATA-SW = "N";
  FM0GW00.FM0GW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0G-1100

// Select DCMPNT.VVNDR001
Function FM0G-1110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0GM110.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0GW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0GW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-1110

// Select DCMPNT.VMGRP001
Function FM0G-1120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0GM110.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0GM110.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-1120

// Select DCMPNT.VMGCAP01
Function FM0G-1130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0GM110.FK-VEND-CD;
  VMGCAP01.FK-MAT-GRP-CD = FM0GM110.FK-MAT-GRP-CD;
  VMGCAP01.PC3POIDT = FM0GW01.PC3POIDT[FM0GW-IDX];
  ;
  FKGREC.FKG-FUNCTION = "S "; /* Select unique*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0GW00.FM0GW-VMGCAP01-FND-SW = "Y";
      FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGCAP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-1130

// Format data to display storage
Function FM0G-1140()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-IDX == 1) /* If first line on page*/
    ;
    FM0GW01.FK-VEND-CD = FM0GM110.FK-VEND-CD; /* Vendor*/
    FM0GW01.FK-VEND-SNM = FM0GW00.FK-VEND-SNM; /* Vendor name*/
    FM0GW01.FK-MAT-GRP-CD = FM0GM110.FK-MAT-GRP-CD; /* Mtl group*/
    FM0GW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
    FM0GW01.XMU-MAT-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
    FM0GW01.XMU-MAT-UOM-DESC = FM0GW00.XMU-MAT-UOM-DESC; /* UOM desc*/
    FM0GW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
    FM0GW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
    FM0GW01.FM0GM-PO-DT-YY = FM0GM110.FM0GM-PO-DT-YY; /* PO year*/
    FM0GW01.FM0GM-PO-DT-PP = FM0GM110.FM0GM-PO-DT-PP; /* PO prod mo*/
    FM0GW01.FM0GM-PO-DT-DD = FM0GM110.FM0GM-PO-DT-DD; /* PO deliv mo*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the capacity month data.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "Y") /* Cap data found*/
    ;
    FM0GW01.FK-MAX-CAP-QTY[FM0GW-IDX] = VMGCAP01.FK-MAX-CAP-QTY; /* Capacity qty*/
    ;
    FM0GW01.VMGCAP01-GROUP[FM0GW-IDX] = VMGCAP01.VMGCAP01-GROUP; /* Save entire VMGCAP01 record*/
  end
  ;
  ;
end // end FM0G-1140

// Format and converse INQ map
Function FM0G-1200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-FMAT-MAP-SW == "Y"   /* Format requested*/
   && (converseVar.validationMsgNum == 0 /* and no error to display*/
   || FKWREC.XXXMSGNO == 18))            /* or no data found*/
    ;
    FM0G-1210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0GM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0GM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0GM110 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0GM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0GM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0GM110.FK-VEND-SNM = FM0GW00.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* For each capacity month with no data, set capacity qty dark.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "N") /* If no data found*/
      set FM0GM110.FK-MAX-CAP-QTY[FM0GW-IDX] invisible, skip;
    end
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    set FM0GM110.FK-VEND-CD cursor; /* Set at vendor code*/
  end
  ;
  ;
  converse FM0GM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0GM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0GM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0G-1200

// Format the data to display
Function FM0G-1210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0GM110 initial; /* Initialize map*/
  ;
  FM0GW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0GM110.FK-VEND-CD = FM0GW01.FK-VEND-CD; /* Vendor*/
  FM0GM110.FK-MAT-GRP-CD = FM0GW01.FK-MAT-GRP-CD; /* Material group*/
  FM0GM110.FK-MAT-GRP-DESC = FM0GW01.FK-MAT-GRP-DESC; /* Material group desc*/
  FM0GM110.XMU-MAT-UOM-CD = FM0GW01.XMU-MAT-UOM-CD; /* Material group UOM*/
  FM0GM110.XMU-MAT-UOM-DESC = FM0GW01.XMU-MAT-UOM-DESC; /* UOM description*/
  FM0GM110.FK-MAT-GRP-RPT-FL = FM0GW01.FK-MAT-GRP-RPT-FL; /* Show on report flag*/
  FM0GM110.FK-COPY-CAP-FL = FM0GW01.FK-COPY-CAP-FL; /* Copy capacity flag*/
  FM0GM110.FM0GM-PO-DT-YY = FM0GW01.FM0GM-PO-DT-YY; /* PO date year*/
  FM0GM110.FM0GM-PO-DT-PP = FM0GW01.FM0GM-PO-DT-PP; /* PO date prod month*/
  FM0GM110.FM0GM-PO-DT-DD = FM0GW01.FM0GM-PO-DT-DD; /* PO date delivery month*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1; /* Initialize idx*/
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    FM0GM110.PC3POIDT[FM0GW-IDX] = FM0GW01.PC3POIDT[FM0GW-IDX]; /* PO date*/
    FM0GM110.FK-MAX-CAP-QTY[FM0GW-IDX] = FM0GW01.FK-MAX-CAP-QTY[FM0GW-IDX]; /* Max capacity*/
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
end // end FM0G-1210

// Check attention identifier
Function FM0G-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0GM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0GM110.FK-MAT-GRP-CD; /* Mat group*/
    if (FM0GM110.FM0GM-PO-DT-PP > 0
     && FM0GM110.FM0GM-PO-DT-DD > 0)
      ;
      FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM110.FM0GM-PO-DT-YY;
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM110.FM0GM-PO-DT-PP;
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM110.FM0GM-PO-DT-DD;
      if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
      else
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
      end
      FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0G"; /* to applicaiton*/
    COMMAREA.CAITEM = "I   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0GM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0GM110.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-GRP-CD = FM0GM110.FK-MAT-GRP-CD; /* Mat group*/
      if (FM0GM110.FM0GM-PO-DT-PP > 0
       && FM0GM110.FM0GM-PO-DT-DD > 0)
        ;
        FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM110.FM0GM-PO-DT-YY;
        FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM110.FM0GM-PO-DT-PP;
        FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM110.FM0GM-PO-DT-DD;
        if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
          FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
        else
          FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
        end
        FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
      end
      ;
      COMMAREA.CATOAP = FM0GM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0GM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0GM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* MGRP requested*/
   || converseVar.eventKey is pf14) /* MGLST requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0GM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0GM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0GM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0F"; /* TO application*/
      COMMAREA.CAITEM = FM0GM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0M"; /* TO application*/
      COMMAREA.CAITEM = FM0GM110.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0GM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0GM110.FK-MAT-GRP-CD; /* Mat group*/
    if (FM0GM110.FM0GM-PO-DT-PP > 0
     && FM0GM110.FM0GM-PO-DT-DD > 0)
      ;
      FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM110.FM0GM-PO-DT-YY;
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM110.FM0GM-PO-DT-PP;
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM110.FM0GM-PO-DT-DD;
      if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
      else
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
      end
      FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0G-1300

// Reset Highlighted fields
Function FM0G-1400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0GM110.FK-VEND-CD initialAttributes;
  set FM0GM110.FK-VEND-SNM initialAttributes;
  set FM0GM110.FK-MAT-GRP-CD initialAttributes;
  set FM0GM110.FK-MAT-GRP-DESC initialAttributes;
  set FM0GM110.XMU-MAT-UOM-CD initialAttributes;
  set FM0GM110.XMU-MAT-UOM-DESC initialAttributes;
  set FM0GM110.FK-MAT-GRP-RPT-FL initialAttributes;
  set FM0GM110.FK-COPY-CAP-FL initialAttributes;
  set FM0GM110.FM0GM-PO-DT-YY initialAttributes;
  set FM0GM110.FM0GM-PO-DT-PP initialAttributes;
  set FM0GM110.FM0GM-PO-DT-DD initialAttributes;
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    set FM0GM110.PC3POIDT[FM0GW-IDX] initialAttributes;
    set FM0GM110.FK-MAX-CAP-QTY[FM0GW-IDX] initialAttributes;
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  set FM0GM110.CATOAP initialAttributes;
  set FM0GM110.CAITEM initialAttributes;
  ;
end // end FM0G-1400

// Verify entered fields
Function FM0G-1500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM110.CAITEM > " " /* Application data was entered*/
  )                        
    set FM0GM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify beginning po date.*/
   /* ---------------------------------------------------------------*/
  ;
   /* Verify production and delivery months always 2 months apart.*/
  ;
  if (FM0GM110.FM0GM-PO-DT-PP == 11)
    if (FM0GM110.FM0GM-PO-DT-DD != 1)
      ;
      converseLib.validationFailed(129); /* PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      set FM0GM110.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
      set FM0GM110.FM0GM-PO-DT-DD bold; /* Highlight*/
    end
  else
    ;
    if (FM0GM110.FM0GM-PO-DT-PP == 12)
      if (FM0GM110.FM0GM-PO-DT-DD != 2)
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
        set FM0GM110.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
        set FM0GM110.FM0GM-PO-DT-DD bold; /* Highlight*/
      end
    else
      ;
      FM0GW00.FM0GW-COUNT = FM0GM110.FM0GM-PO-DT-DD       - FM0GM110.FM0GM-PO-DT-PP;
      ;
      if (FM0GW00.FM0GW-COUNT != 2) /* Not 2 months different*/
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
        set FM0GM110.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
        set FM0GM110.FM0GM-PO-DT-DD bold; /* Highlight*/
      end
    end
  end


  if (FM0GM110.FM0GM-PO-DT-DD >= 1
   && FM0GM110.FM0GM-PO-DT-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    set FM0GM110.FM0GM-PO-DT-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0GM110.FM0GM-PO-DT-PP >= 1
   && FM0GM110.FM0GM-PO-DT-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    set FM0GM110.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material group code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0G-1510(); /* Select DCMPNT.VMGRP001*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0G-1520(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0G-1500

// Select DCMPNT.VMGRP001
Function FM0G-1510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0GM110.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0GM110.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      set FM0GM110.FK-VEND-CD cursor, bold;
      set FM0GM110.FK-MAT-GRP-CD bold;
      FKWREC.XXX-MOD-ID = "1510";
      converseLib.validationFailed(123); /* Material group code missing or*/
                                   /* invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-1510

// Select DCMPNT.VVNDR001
Function FM0G-1520()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0GM110.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0GM110.FK-VEND-CD cursor, bold;
      FKWREC.XXX-MOD-ID = "1520";
      converseLib.validationFailed(21); /* Vendor is missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-1520

// Process valid request
Function FM0G-1600()
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GM110.FK-VEND-CD != FM0GW01.FK-VEND-CD
   || FM0GM110.FK-MAT-GRP-CD != FM0GW01.FK-MAT-GRP-CD
   || FM0GM110.FM0GM-PO-DT-YY != FM0GW01.FM0GM-PO-DT-YY
   || FM0GM110.FM0GM-PO-DT-PP != FM0GW01.FM0GM-PO-DT-PP
   || FM0GM110.FM0GM-PO-DT-DD != FM0GW01.FM0GM-PO-DT-DD
  )
    FM0GW00.FM0GW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0G-1600

// Process add map
Function FM0G-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0G-2100(); /* Obtain the data to display*/
  ;
  FM0G-2200(); /* Format and display the map*/
  ;
  FM0G-2300(); /* Check attention identifier*/
  ;
  FM0G-2400(); /* Reset fields to normal intensity*/
  ;
  FM0G-2500(); /* Verify the entered data*/
  ;
  FM0G-2600(); /* Process valid input request*/
  ;
  ;
end // end FM0G-2000

// Obtain data to display
Function FM0G-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Initialize display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0GW01 empty; /* Init disp storage*/
  move "N" to FM0GW01.FM0GW-CAP-MO-FND-SW[1] for all; /* No data found yet*/
  FM0GW00.FM0GW-VMGCAP01-FND-SW = "N"; /* No capacity found yet*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Calculate the date range to be displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM210.FM0GM-PO-DT-YY;
  FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM210.FM0GM-PO-DT-PP;
  FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM210.FM0GM-PO-DT-DD;
  if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
  else
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
  end
  ;
  FM0GW01.PC3POIDT[1] = FM0GW00.FM0GW-FMAT-PO-DT;
  ;
  FM0GW00.FM0GW-IDX = 2;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GW00.FM0GW-FMAT-PO-DT-DD == 12)
      FM0GW00.FM0GW-FMAT-PO-DT-DD = 1;
    else
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GW00.FM0GW-FMAT-PO-DT-DD + 1;
    end
    ;
    if (FM0GW00.FM0GW-FMAT-PO-DT-PP == 12)
      FM0GW00.FM0GW-FMAT-PO-DT-PP = 1;
      FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-PO-DT-CCYY + 1;
    else
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP + 1;
    end
    ;
    FM0GW01.PC3POIDT[FM0GW-IDX] = FM0GW00.FM0GW-FMAT-PO-DT;
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0G-2110(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the material group record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0G-2120(); /* Select DCMPNT.VMGRP001*/
  ;
  if (VMGRP001.XMU-MAT-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
   && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If code in table and active*/
    ;
    FM0GW00.XMU-MAT-UOM-DESC = XMUTBL.XMU-MAT-UOM-DESC[sysVar.arrayIndex]; /* Save desc*/
  else
    ;
    FM0GW00.XMU-MAT-UOM-DESC = "***************";
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain capacity data from DCMPNT.VMGCAP01 for each of the*/
   /* dates formatted earlier.  Format each record to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1; /* Initialize index*/
  ;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    FM0G-2130(); /* Select DCMPNT.VMGCAP01*/
    FM0G-2140(); /* Add record to display storage*/
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1; /* Increment index*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Calculate a the date 11 months after the current buy date.*/
   /* This will be used later when determining valid dates to edit.*/
   /* --------------------------------------------------------------*/
  ;
  FM0G-0006(); /* Select DFBUY.VFMCTL01*/
  ;
  FM0GW00.FM0GW-FMAT-BUY-DT = FB9REC.FB8BUYDT;
  ;
   /* ===> Add 11 months to the buy date*/
  ;
  FM0GW00.FM0GW-FMAT-BUY-DT = FB9REC.FB8BUYDT;
  if (FM0GW00.FM0GW-FMAT-BUY-DT-MM > 1)
    ;
    FM0GW00.FM0GW-FMAT-BUY-DT-MM = FM0GW00.FM0GW-FMAT-BUY-DT-MM - 1;
    FM0GW00.FM0GW-FMAT-BUY-DT-CCYY = FM0GW00.FM0GW-FMAT-BUY-DT-CCYY + 1;
  else
    ;
    FM0GW00.FM0GW-FMAT-BUY-DT-MM = FM0GW00.FM0GW-FMAT-BUY-DT-MM + 11;
  end
  ;
  ;
   /* ===> Reformat to PC-PO-ID-MO-RNG format*/
  ;
  FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-BUY-DT-CCYY; /* Prod century and year*/
  FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Delivery month*/
  FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-BUY-DT-MM; /* Prod month (need to -2 months)*/
  ;
  if (FM0GW00.FM0GW-FMAT-PO-DT-PP < 3)
    FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-PO-DT-CCYY - 1; /* Subtract a year*/
    FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP + 10; /* Production month*/
  else
    FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP - 2; /* Production month*/
  end
  ;
  FM0GW00.FM0GW-YEAR-END-PO-DT = FM0GW00.FM0GW-FMAT-PO-DT;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-REQUEST-DATA-SW = "N";
  FM0GW00.FM0GW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0G-2100

// Select DCMPNT.VVNDR001
Function FM0G-2110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0GM210.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0GW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0GW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-2110

// Select DCMPNT.VMGRP001
Function FM0G-2120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0GM210.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-2120

// Select DCMPNT.VMGCAP01
Function FM0G-2130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0GM210.FK-VEND-CD;
  VMGCAP01.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD;
  VMGCAP01.PC3POIDT = FM0GW01.PC3POIDT[FM0GW-IDX];
  ;
  FKGREC.FKG-FUNCTION = "S "; /* Select unique*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0GW00.FM0GW-VMGCAP01-FND-SW = "Y";
      FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGCAP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-2130

// Format data to display storage
Function FM0G-2140()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-IDX == 1) /* If first line on page*/
    ;
    FM0GW01.FK-VEND-CD = FM0GM210.FK-VEND-CD; /* Vendor*/
    FM0GW01.FK-VEND-SNM = FM0GW00.FK-VEND-SNM; /* Vendor name*/
    FM0GW01.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD; /* Mtl group*/
    FM0GW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
    FM0GW01.XMU-MAT-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
    FM0GW01.XMU-MAT-UOM-DESC = FM0GW00.XMU-MAT-UOM-DESC; /* UOM desc*/
    FM0GW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
    FM0GW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
    FM0GW01.FM0GM-PO-DT-YY = FM0GM210.FM0GM-PO-DT-YY; /* PO year*/
    FM0GW01.FM0GM-PO-DT-PP = FM0GM210.FM0GM-PO-DT-PP; /* PO prod mo*/
    FM0GW01.FM0GM-PO-DT-DD = FM0GM210.FM0GM-PO-DT-DD; /* PO deliv mo*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the capacity month data.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "Y") /* Cap data found*/
    ;
    FM0GW01.FK-MAX-CAP-QTY[FM0GW-IDX] = VMGCAP01.FK-MAX-CAP-QTY; /* Capacity qty*/
    ;
    FM0GW01.VMGCAP01-GROUP[FM0GW-IDX] = VMGCAP01.VMGCAP01-GROUP; /* Save entire VMGCAP01 record*/
  end
  ;
  ;
end // end FM0G-2140

// Format and converse ADD map
Function FM0G-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0G-2210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0GM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0GM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0GM210 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0GM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0GM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0GM210.FK-VEND-SNM = FM0GW00.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect each capacity field that already has data.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "Y") /* If data found*/
      set FM0GM210.FK-MAX-CAP-QTY[FM0GW-IDX] skip;
    end
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set dark detail data if map is currently clear.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-CLEAR-MAP-SW == "Y") /* If map is clear*/
    ;
    set FM0GM210.FM0GM-FILL-MO-FL invisible, skip;
    set FM0GM210.FM0GM-FILL-MO-CAP-QTY invisible, skip;
    ;
    FM0GW00.FM0GW-IDX = 1;
    while (FM0GW00.FM0GW-IDX <= 12)
      ;
      set FM0GM210.PC3POIDT[FM0GW-IDX] invisible, skip;
      set FM0GM210.FK-MAX-CAP-QTY[FM0GW-IDX] invisible, skip;
      FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set dark any months > 11 months past current buy date.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GW01.PC3POIDT[FM0GW-IDX] > FM0GW00.FM0GW-YEAR-END-PO-DT)
      ;
      set FM0GM210.PC3POIDT[FM0GW-IDX] invisible, skip;
      set FM0GM210.FK-MAX-CAP-QTY[FM0GW-IDX] invisible, skip;
    end
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    if (FM0GM210.FK-VEND-CD > " "
     && FM0GM210.FK-MAT-GRP-CD > " ") /* If key data entered*/
      ;
      set FM0GM210.FM0GM-FILL-MO-FL cursor;
    else
      set FM0GM210.FK-VEND-CD cursor; /* Set at vendor code*/
    end
  end
  ;
  ;
  converse FM0GM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0GM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0GM210.CAITEM; /* Application data*/
  ;
  ;
end // end FM0G-2200

// Format the data to display
Function FM0G-2210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0GM210 initial; /* Initialize map*/
  ;
  FM0GW-FMAT-MAP-SW = "N"; /* Format map switch*/
  FM0GW-CLEAR-MAP-SW = "N"; /* Now there is data on the map*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0GM210.FK-VEND-CD = FM0GW01.FK-VEND-CD; /* Vendor*/
  FM0GM210.FK-MAT-GRP-CD = FM0GW01.FK-MAT-GRP-CD; /* Material group*/
  FM0GM210.FK-MAT-GRP-DESC = FM0GW01.FK-MAT-GRP-DESC; /* Material group desc*/
  FM0GM210.XMU-MAT-UOM-CD = FM0GW01.XMU-MAT-UOM-CD; /* Material group UOM*/
  FM0GM210.XMU-MAT-UOM-DESC = FM0GW01.XMU-MAT-UOM-DESC; /* UOM description*/
  FM0GM210.FK-MAT-GRP-RPT-FL = FM0GW01.FK-MAT-GRP-RPT-FL; /* Show on report flag*/
  FM0GM210.FK-COPY-CAP-FL = FM0GW01.FK-COPY-CAP-FL; /* Copy capacity flag*/
  FM0GM210.FM0GM-PO-DT-YY = FM0GW01.FM0GM-PO-DT-YY; /* PO date year*/
  FM0GM210.FM0GM-PO-DT-PP = FM0GW01.FM0GM-PO-DT-PP; /* PO date prod month*/
  FM0GM210.FM0GM-PO-DT-DD = FM0GW01.FM0GM-PO-DT-DD; /* PO date delivery month*/
  FM0GM210.FM0GM-FILL-MO-FL = "N"; /* Fill months flag*/
  FM0GM210.FM0GM-FILL-MO-CAP-QTY = 0; /* Fill capacity qty*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1; /* Initialize idx*/
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    FM0GM210.PC3POIDT[FM0GW-IDX] = FM0GW01.PC3POIDT[FM0GW-IDX]; /* PO date*/
    FM0GM210.FK-MAX-CAP-QTY[FM0GW-IDX] = FM0GW01.FK-MAX-CAP-QTY[FM0GW-IDX]; /* Max capacity*/
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
end // end FM0G-2210

// Check attention identifier
Function FM0G-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0GM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD; /* Mat group*/
    if (FM0GM210.FM0GM-PO-DT-PP > 0
     && FM0GM210.FM0GM-PO-DT-DD > 0)
      ;
      FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM210.FM0GM-PO-DT-YY;
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM210.FM0GM-PO-DT-PP;
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM210.FM0GM-PO-DT-DD;
      if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
      else
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
      end
      FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0G"; /* to applicaiton*/
    COMMAREA.CAITEM = "A   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0GM210.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0GM210.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD; /* Mat group*/
      if (FM0GM210.FM0GM-PO-DT-PP > 0
       && FM0GM210.FM0GM-PO-DT-DD > 0)
        ;
        FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM210.FM0GM-PO-DT-YY;
        FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM210.FM0GM-PO-DT-PP;
        FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM210.FM0GM-PO-DT-DD;
        if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
          FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
        else
          FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
        end
        FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
      end
      ;
      COMMAREA.CATOAP = FM0GM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0GM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0GM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* MGRP requested*/
   || converseVar.eventKey is pf14) /* MGLST requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0GM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0GM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0GM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0F"; /* TO application*/
      COMMAREA.CAITEM = FM0GM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0M"; /* TO application*/
      COMMAREA.CAITEM = FM0GM210.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0GM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD; /* Mat group*/
    if (FM0GM210.FM0GM-PO-DT-PP > 0
     && FM0GM210.FM0GM-PO-DT-DD > 0)
      ;
      FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM210.FM0GM-PO-DT-YY;
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM210.FM0GM-PO-DT-PP;
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM210.FM0GM-PO-DT-DD;
      if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
      else
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
      end
      FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0G-2300

// Reset Highlighted fields
Function FM0G-2400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0GM210.FK-VEND-CD initialAttributes;
  set FM0GM210.FK-VEND-SNM initialAttributes;
  set FM0GM210.FK-MAT-GRP-CD initialAttributes;
  set FM0GM210.FK-MAT-GRP-DESC initialAttributes;
  set FM0GM210.XMU-MAT-UOM-CD initialAttributes;
  set FM0GM210.XMU-MAT-UOM-DESC initialAttributes;
  set FM0GM210.FK-MAT-GRP-RPT-FL initialAttributes;
  set FM0GM210.FK-COPY-CAP-FL initialAttributes;
  set FM0GM210.FM0GM-PO-DT-YY initialAttributes;
  set FM0GM210.FM0GM-PO-DT-PP initialAttributes;
  set FM0GM210.FM0GM-PO-DT-DD initialAttributes;
  set FM0GM210.FM0GM-FILL-MO-FL initialAttributes;
  set FM0GM210.FM0GM-FILL-MO-CAP-QTY initialAttributes;
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    set FM0GM210.PC3POIDT[FM0GW-IDX] initialAttributes;
    set FM0GM210.FK-MAX-CAP-QTY[FM0GW-IDX] initialAttributes;
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  set FM0GM210.CATOAP initialAttributes;
  set FM0GM210.CAITEM initialAttributes;
  ;
end // end FM0G-2400

// Verify entered fields
Function FM0G-2500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM210.CAITEM > " " /* Application data was entered*/
  )                        
    set FM0GM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key data changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM210.FK-VEND-CD == FM0GW01.FK-VEND-CD
   && FM0GM210.FK-MAT-GRP-CD == FM0GW01.FK-MAT-GRP-CD
   && FM0GM210.FM0GM-PO-DT-YY == FM0GW01.FM0GM-PO-DT-YY
   && FM0GM210.FM0GM-PO-DT-PP == FM0GW01.FM0GM-PO-DT-PP
   && FM0GM210.FM0GM-PO-DT-DD == FM0GW01.FM0GM-PO-DT-DD
  )
    FM0G-2510(); /* Verify non-key data*/
    FM0G-2520(); /* Verify key data too*/
  else
    ;
    FM0G-2520(); /* Verify key data*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0G-2500

// Verify non-key data
Function FM0G-2510()
   /* ---------------------------------------------------------------*/
   /* Verify capacity quantities.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 12;
  while (FM0GW00.FM0GW-IDX > 0)
    ;
    if (FM0GW01.FM0GW-CAP-MO-FND-SW == "Y") /* If data is there*/
      ;
      if (FM0GM210.FK-MAX-CAP-QTY[FM0GW-IDX] < 0)
        ;
        set FM0GM210.FK-MAX-CAP-QTY[FM0GW-IDX] cursor, bold;
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
        converseLib.validationFailed(131); /* Entered value must be > 0*/
      end
    end
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX - 1;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify fill capacity.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM210.FM0GM-FILL-MO-CAP-QTY < 0)
    ;
    set FM0GM210.FM0GM-FILL-MO-CAP-QTY cursor, bold;
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(131); /* Entered value must be > 0*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify fill months flag.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM210.FM0GM-FILL-MO-FL == "Y"
   || FM0GM210.FM0GM-FILL-MO-FL == "N")
    ;
    if (FM0GM210.FM0GM-FILL-MO-FL == "N"
     && FM0GM210.FM0GM-FILL-MO-CAP-QTY > 0)
      ;
      set FM0GM210.FM0GM-FILL-MO-FL cursor, bold;
      set FM0GM210.FM0GM-FILL-MO-CAP-QTY bold;
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      converseLib.validationFailed(153); /* Flag must be 'y' when cap > 0*/
    end
  else
    ;
    set FM0GM210.FM0GM-FILL-MO-FL cursor, bold;
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be Y or N*/
  end
  ;
  ;
end // end FM0G-2510

// Verify key data
Function FM0G-2520()
   /* ---------------------------------------------------------------*/
   /* Verify beginning po date.*/
   /* ---------------------------------------------------------------*/
  ;
   /* Verify production and delivery months always 2 months apart.*/
  ;
  if (FM0GM210.FM0GM-PO-DT-PP == 11)
    if (FM0GM210.FM0GM-PO-DT-DD != 1)
      ;
      converseLib.validationFailed(129); /* PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      set FM0GM210.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
      set FM0GM210.FM0GM-PO-DT-DD bold; /* Highlight*/
    end
  else
    ;
    if (FM0GM210.FM0GM-PO-DT-PP == 12)
      if (FM0GM210.FM0GM-PO-DT-DD != 2)
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
        set FM0GM210.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
        set FM0GM210.FM0GM-PO-DT-DD bold; /* Highlight*/
      end
    else
      ;
      FM0GW00.FM0GW-COUNT = FM0GM210.FM0GM-PO-DT-DD       - FM0GM210.FM0GM-PO-DT-PP;
      ;
      if (FM0GW00.FM0GW-COUNT != 2) /* Not 2 months different*/
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
        set FM0GM210.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
        set FM0GM210.FM0GM-PO-DT-DD bold; /* Highlight*/
      end
    end
  end
  ;
  ;
  if (FM0GM210.FM0GM-PO-DT-DD >= 1
   && FM0GM210.FM0GM-PO-DT-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    set FM0GM210.FM0GM-PO-DT-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0GM210.FM0GM-PO-DT-PP >= 1
   && FM0GM210.FM0GM-PO-DT-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
    set FM0GM210.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material group code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0G-2521(); /* Select DCMPNT.VMGRP001*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0G-2522(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0G-2520

// Select DCMPNT.VMGRP001
Function FM0G-2521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0GM210.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      set FM0GM210.FK-VEND-CD cursor, bold;
      set FM0GM210.FK-MAT-GRP-CD bold;
      FKWREC.XXX-MOD-ID = "2521";
      converseLib.validationFailed(123); /* Material group code missing or*/
                                   /* invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-2521

// Select DCMPNT.VVNDR001
Function FM0G-2522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0GM210.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0GM210.FK-VEND-CD cursor, bold;
      FKWREC.XXX-MOD-ID = "2522";
      converseLib.validationFailed(21); /* Vendor is missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-2522

// Process valid request
Function FM0G-2600()
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GM210.FK-VEND-CD != FM0GW01.FK-VEND-CD
   || FM0GM210.FK-MAT-GRP-CD != FM0GW01.FK-MAT-GRP-CD
   || FM0GM210.FM0GM-PO-DT-YY != FM0GW01.FM0GM-PO-DT-YY
   || FM0GM210.FM0GM-PO-DT-PP != FM0GW01.FM0GM-PO-DT-PP
   || FM0GM210.FM0GM-PO-DT-DD != FM0GW01.FM0GM-PO-DT-DD
  )
    FM0GW00.FM0GW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Check to see if any non-key data changed.  If it did,*/
   /* update the record to DCMPNT.VMGCAP01.*/
   /* ------------------------------------------------------------*/
  ;
  XX0XS01(); /* Get date and time*/
  ;
  FM0GW00.FM0GW-DATA-UPDATED-SW = "N";
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GM210.FM0GM-FILL-MO-FL == "Y") /* If filling months*/
      ;
      if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "N" /* If not added yet*/
       && FM0GW01.PC3POIDT[FM0GW-IDX] <= FM0GW00.FM0GW-YEAR-END-PO-DT)
        ;
        FM0G-2610(); /* Check for duplicates DCMPNT.VMGCAP01*/
        FM0G-2620(); /* Insert DCMPNT.VMGCAP01 (fill months)*/
      end
    else
      ;
      if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "N" /* If not added yet*/
       && FM0GW01.PC3POIDT[FM0GW-IDX] <= FM0GW00.FM0GW-YEAR-END-PO-DT)
        ;
        FM0G-2610(); /* Check for duplicates DCMPNT.VMGCAP01*/
        FM0G-2630(); /* Insert DCMPNT.VMGCAP01*/
      end
    end
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data was successfully updated, clear working and display*/
   /* storeage and exit to display a message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-DATA-UPDATED-SW == "Y") /* Data was updated*/
    ;
    set FM0GM210 initial; /* Clear the map*/
    FM0GM210.FM0GM-PO-DT-YY = FM0GW01.FM0GM-PO-DT-YY;
    FM0GM210.FM0GM-PO-DT-PP = FM0GW01.FM0GM-PO-DT-PP;
    FM0GM210.FM0GM-PO-DT-DD = FM0GW01.FM0GM-PO-DT-DD;
    ;
    set FM0GW01 empty; /* Clear display storage*/
    FM0GW00.FK-VEND-SNM = " ";
    FM0GW00.XMU-MAT-UOM-DESC = " ";
    ;
    FKWREC.XXXMSGNO = 1; /* Data successfully updated*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
    FM0GW00.FM0GW-REQUEST-DATA-SW = "N";
    FM0GW00.FM0GW-CLEAR-MAP-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0G-2600

// Select DCMPNT.VMGCAP01
Function FM0G-2610()
   /* ------------------------------------------------------------*/
   /* Update the requested row on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0GM210.FK-VEND-CD; /* Vendor*/
  VMGCAP01.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD; /* Mat group*/
  VMGCAP01.PC3POIDT = FM0GM210.PC3POIDT[FM0GW-IDX]; /* PO date*/
  ;
  FKGREC.FKG-FUNCTION = "S "; /* Update it*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all database changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another application*/
      FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
      FM0GW00.FM0GW-REQUEST-DATA-SW = "Y";
      exit stack;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGCAP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-2610

// Insert DCMPNT.VMGCAP01 (fill)
Function FM0G-2620()
   /* ------------------------------------------------------------*/
   /* Insert a rows to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0GM210.FK-VEND-CD; /* Vendor*/
  VMGCAP01.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD; /* Mat group*/
  VMGCAP01.PC3POIDT = FM0GM210.PC3POIDT[FM0GW-IDX]; /* PO date*/
  VMGCAP01.FK-MAX-CAP-QTY = FM0GM210.FM0GM-FILL-MO-CAP-QTY; /* Max capacity qty*/
  VMGCAP01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VMGCAP01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMGCAP01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VMGCAP01.ZZZCHGCT = 0; /* Change count*/
  ;
  FKGREC.FKG-FUNCTION = "A "; /* Update it*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0GW00.FM0GW-DATA-UPDATED-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT DCMPNT.VMGCAP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-2620

// Insert DCMPNT.VMGCAP01
Function FM0G-2630()
   /* ------------------------------------------------------------*/
   /* Insert a row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0GM210.FK-VEND-CD; /* Vendor*/
  VMGCAP01.FK-MAT-GRP-CD = FM0GM210.FK-MAT-GRP-CD; /* Mat group*/
  VMGCAP01.PC3POIDT = FM0GM210.PC3POIDT[FM0GW-IDX]; /* PO date*/
  VMGCAP01.FK-MAX-CAP-QTY = FM0GM210.FK-MAX-CAP-QTY[FM0GW-IDX]; /* Max capacity qty*/
  VMGCAP01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VMGCAP01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMGCAP01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  VMGCAP01.ZZZCHGCT = 0; /* Change count*/
  ;
  FKGREC.FKG-FUNCTION = "A "; /* Update it*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0GW00.FM0GW-DATA-UPDATED-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT DCMPNT.VMGCAP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-2630

// Process change map
Function FM0G-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0G-3100(); /* Obtain the data to display*/
  ;
  FM0G-3200(); /* Format and display the map*/
  ;
  FM0G-3300(); /* Check attention identifier*/
  ;
  FM0G-3400(); /* Reset fields to normal intensity*/
  ;
  FM0G-3500(); /* Verify the entered data*/
  ;
  FM0G-3600(); /* Process valid input request*/
  ;
  ;
end // end FM0G-3000

// Obtain data to display
Function FM0G-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Initialize display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0GW01 empty; /* Init disp storage*/
  move "N" to FM0GW01.FM0GW-CAP-MO-FND-SW[1] for all; /* No data found yet*/
  FM0GW00.FM0GW-VMGCAP01-FND-SW = "N"; /* No capacity found yet*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Calculate the date range to be displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM310.FM0GM-PO-DT-YY;
  FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM310.FM0GM-PO-DT-PP;
  FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM310.FM0GM-PO-DT-DD;
  if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
  else
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
  end
  ;
  FM0GW01.PC3POIDT[1] = FM0GW00.FM0GW-FMAT-PO-DT;
  ;
  FM0GW00.FM0GW-IDX = 2;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GW00.FM0GW-FMAT-PO-DT-DD == 12)
      FM0GW00.FM0GW-FMAT-PO-DT-DD = 1;
    else
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GW00.FM0GW-FMAT-PO-DT-DD + 1;
    end
    ;
    if (FM0GW00.FM0GW-FMAT-PO-DT-PP == 12)
      FM0GW00.FM0GW-FMAT-PO-DT-PP = 1;
      FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-PO-DT-CCYY + 1;
    else
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP + 1;
    end
    ;
    FM0GW01.PC3POIDT[FM0GW-IDX] = FM0GW00.FM0GW-FMAT-PO-DT;
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0G-3110(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the material group record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0G-3120(); /* Select DCMPNT.VMGRP001*/
  ;
  if (VMGRP001.XMU-MAT-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
   && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If code in table and active*/
    ;
    FM0GW00.XMU-MAT-UOM-DESC = XMUTBL.XMU-MAT-UOM-DESC[sysVar.arrayIndex]; /* Save desc*/
  else
    ;
    FM0GW00.XMU-MAT-UOM-DESC = "***************";
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain capacity data from DCMPNT.VMGCAP01 for each of the*/
   /* dates formatted earlier.  Format each record to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1; /* Initialize index*/
  ;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    FM0G-3130(); /* Select DCMPNT.VMGCAP01*/
    FM0G-3140(); /* Add record to display storage*/
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1; /* Increment index*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-VMGCAP01-FND-SW == "N") /* If no cap records found*/
    ;
    FKWREC.XXXMSGNO = 18; /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "3100"; /* Module identification*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-REQUEST-DATA-SW = "N";
  FM0GW00.FM0GW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0G-3100

// Select DCMPNT.VVNDR001
Function FM0G-3110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0GM310.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0GW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0GW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-3110

// Select DCMPNT.VMGRP001
Function FM0G-3120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0GM310.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0GM310.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-3120

// Select DCMPNT.VMGCAP01
Function FM0G-3130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0GM310.FK-VEND-CD;
  VMGCAP01.FK-MAT-GRP-CD = FM0GM310.FK-MAT-GRP-CD;
  VMGCAP01.PC3POIDT = FM0GW01.PC3POIDT[FM0GW-IDX];
  ;
  FKGREC.FKG-FUNCTION = "S "; /* Select unique*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0GW00.FM0GW-VMGCAP01-FND-SW = "Y";
      FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGCAP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-3130

// Format data to display storage
Function FM0G-3140()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-IDX == 1) /* If first line on page*/
    ;
    FM0GW01.FK-VEND-CD = FM0GM310.FK-VEND-CD; /* Vendor*/
    FM0GW01.FK-VEND-SNM = FM0GW00.FK-VEND-SNM; /* Vendor name*/
    FM0GW01.FK-MAT-GRP-CD = FM0GM310.FK-MAT-GRP-CD; /* Mtl group*/
    FM0GW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
    FM0GW01.XMU-MAT-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
    FM0GW01.XMU-MAT-UOM-DESC = FM0GW00.XMU-MAT-UOM-DESC; /* UOM desc*/
    FM0GW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
    FM0GW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
    FM0GW01.FM0GM-PO-DT-YY = FM0GM310.FM0GM-PO-DT-YY; /* PO year*/
    FM0GW01.FM0GM-PO-DT-PP = FM0GM310.FM0GM-PO-DT-PP; /* PO prod mo*/
    FM0GW01.FM0GM-PO-DT-DD = FM0GM310.FM0GM-PO-DT-DD; /* PO deliv mo*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the capacity month data.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "Y") /* Cap data found*/
    ;
    FM0GW01.FK-MAX-CAP-QTY[FM0GW-IDX] = VMGCAP01.FK-MAX-CAP-QTY; /* Capacity qty*/
    ;
    FM0GW01.VMGCAP01-GROUP[FM0GW-IDX] = VMGCAP01.VMGCAP01-GROUP; /* Save entire VMGCAP01 record*/
  end
  ;
  ;
end // end FM0G-3140

// Format and converse CHG map
Function FM0G-3200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-FMAT-MAP-SW == "Y"   /* Format requested*/
   && (converseVar.validationMsgNum == 0 /* and no error to display*/
   || FKWREC.XXXMSGNO == 18))            /* or no data found*/
    ;
    FM0G-3210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0GM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0GM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0GM310 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0GM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0GM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0GM310.FK-VEND-SNM = FM0GW00.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* For each capacity month with no data, set capacity qty dark.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "N") /* If no data found*/
      set FM0GM310.FK-MAX-CAP-QTY[FM0GW-IDX] invisible, skip;
    end
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    ;
    if (FM0GW00.FM0GW-VMGCAP01-FND-SW == "Y") /* If data was found*/
      ;
      FM0GW00.FM0GW-IDX = 1;
      while (FM0GW00.FM0GW-IDX <= 12)
        ;
        if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "Y")
          set FM0GM310.FK-MAX-CAP-QTY[FM0GW-IDX] cursor;
          FM0GW00.FM0GW-IDX = 13;
        end
        FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
      end
    else
      set FM0GM310.FK-VEND-CD cursor; /* Set at vendor code*/
    end
  end
  ;
  ;
  converse FM0GM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0GM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0GM310.CAITEM; /* Application data*/
  ;
  ;
end // end FM0G-3200

// Format the data to display
Function FM0G-3210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0GM310 initial; /* Initialize map*/
  ;
  FM0GW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0GM310.FK-VEND-CD = FM0GW01.FK-VEND-CD; /* Vendor*/
  FM0GM310.FK-MAT-GRP-CD = FM0GW01.FK-MAT-GRP-CD; /* Material group*/
  FM0GM310.FK-MAT-GRP-DESC = FM0GW01.FK-MAT-GRP-DESC; /* Material group desc*/
  FM0GM310.XMU-MAT-UOM-CD = FM0GW01.XMU-MAT-UOM-CD; /* Material group UOM*/
  FM0GM310.XMU-MAT-UOM-DESC = FM0GW01.XMU-MAT-UOM-DESC; /* UOM description*/
  FM0GM310.FK-MAT-GRP-RPT-FL = FM0GW01.FK-MAT-GRP-RPT-FL; /* Show on report flag*/
  FM0GM310.FK-COPY-CAP-FL = FM0GW01.FK-COPY-CAP-FL; /* Copy capacity flag*/
  FM0GM310.FM0GM-PO-DT-YY = FM0GW01.FM0GM-PO-DT-YY; /* PO date year*/
  FM0GM310.FM0GM-PO-DT-PP = FM0GW01.FM0GM-PO-DT-PP; /* PO date prod month*/
  FM0GM310.FM0GM-PO-DT-DD = FM0GW01.FM0GM-PO-DT-DD; /* PO date delivery month*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1; /* Initialize idx*/
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    FM0GM310.PC3POIDT[FM0GW-IDX] = FM0GW01.PC3POIDT[FM0GW-IDX]; /* PO date*/
    FM0GM310.FK-MAX-CAP-QTY[FM0GW-IDX] = FM0GW01.FK-MAX-CAP-QTY[FM0GW-IDX]; /* Max capacity*/
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
end // end FM0G-3210

// Check attention identifier
Function FM0G-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0GM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0GM310.FK-MAT-GRP-CD; /* Mat group*/
    if (FM0GM310.FM0GM-PO-DT-PP > 0
     && FM0GM310.FM0GM-PO-DT-DD > 0)
      ;
      FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM310.FM0GM-PO-DT-YY;
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM310.FM0GM-PO-DT-PP;
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM310.FM0GM-PO-DT-DD;
      if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
      else
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
      end
      FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0G"; /* to applicaiton*/
    COMMAREA.CAITEM = "C   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0GM310.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0GM310.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-GRP-CD = FM0GM310.FK-MAT-GRP-CD; /* Mat group*/
      if (FM0GM310.FM0GM-PO-DT-PP > 0
       && FM0GM310.FM0GM-PO-DT-DD > 0)
        ;
        FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM310.FM0GM-PO-DT-YY;
        FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM310.FM0GM-PO-DT-PP;
        FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM310.FM0GM-PO-DT-DD;
        if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
          FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
        else
          FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
        end
        FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
      end
      ;
      COMMAREA.CATOAP = FM0GM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0GM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0GM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* MGRP requested*/
   || converseVar.eventKey is pf14) /* MGLST requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0GM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0GM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0GM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0F"; /* TO application*/
      COMMAREA.CAITEM = FM0GM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0M"; /* TO application*/
      COMMAREA.CAITEM = FM0GM310.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0GM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0GM310.FK-MAT-GRP-CD; /* Mat group*/
    if (FM0GM310.FM0GM-PO-DT-PP > 0
     && FM0GM310.FM0GM-PO-DT-DD > 0)
      ;
      FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM310.FM0GM-PO-DT-YY;
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM310.FM0GM-PO-DT-PP;
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM310.FM0GM-PO-DT-DD;
      if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
      else
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
      end
      FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0G-3300

// Reset Highlighted fields
Function FM0G-3400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0GM310.FK-VEND-CD initialAttributes;
  set FM0GM310.FK-VEND-SNM initialAttributes;
  set FM0GM310.FK-MAT-GRP-CD initialAttributes;
  set FM0GM310.FK-MAT-GRP-DESC initialAttributes;
  set FM0GM310.XMU-MAT-UOM-CD initialAttributes;
  set FM0GM310.XMU-MAT-UOM-DESC initialAttributes;
  set FM0GM310.FK-MAT-GRP-RPT-FL initialAttributes;
  set FM0GM310.FK-COPY-CAP-FL initialAttributes;
  set FM0GM310.FM0GM-PO-DT-YY initialAttributes;
  set FM0GM310.FM0GM-PO-DT-PP initialAttributes;
  set FM0GM310.FM0GM-PO-DT-DD initialAttributes;
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    set FM0GM310.PC3POIDT[FM0GW-IDX] initialAttributes;
    set FM0GM310.FK-MAX-CAP-QTY[FM0GW-IDX] initialAttributes;
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  set FM0GM310.CATOAP initialAttributes;
  set FM0GM310.CAITEM initialAttributes;
  ;
end // end FM0G-3400

// Verify entered fields
Function FM0G-3500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM310.CAITEM > " " /* Application data was entered*/
  )                        
    set FM0GM310.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key data changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM310.FK-VEND-CD == FM0GW01.FK-VEND-CD
   && FM0GM310.FK-MAT-GRP-CD == FM0GW01.FK-MAT-GRP-CD
   && FM0GM310.FM0GM-PO-DT-YY == FM0GW01.FM0GM-PO-DT-YY
   && FM0GM310.FM0GM-PO-DT-PP == FM0GW01.FM0GM-PO-DT-PP
   && FM0GM310.FM0GM-PO-DT-DD == FM0GW01.FM0GM-PO-DT-DD
  )
    FM0G-3510(); /* Verify non-key data*/
  else
    ;
    FM0G-3520(); /* Verify key data*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0G-3500

// Verify non-key data
Function FM0G-3510()
   /* ---------------------------------------------------------------*/
   /* Verify capacity quantities.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 12;
  while (FM0GW00.FM0GW-IDX > 0)
    ;
    if (FM0GW01.FM0GW-CAP-MO-FND-SW == "Y") /* If data is there*/
      ;
      if (FM0GM310.FK-MAX-CAP-QTY[FM0GW-IDX] < 0)
        ;
        set FM0GM310.FK-MAX-CAP-QTY[FM0GW-IDX] cursor, bold;
        FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
        converseLib.validationFailed(131); /* Entered value must be > 0*/
      end
    end
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX - 1;
  end
  ;
  ;
end // end FM0G-3510

// Verify key data
Function FM0G-3520()
   /* ---------------------------------------------------------------*/
   /* Verify beginning po date.*/
   /* ---------------------------------------------------------------*/
  ;
   /* Verify production and delivery months always 2 months apart.*/
  ;
  if (FM0GM310.FM0GM-PO-DT-PP == 11)
    if (FM0GM310.FM0GM-PO-DT-DD != 1)
      ;
      converseLib.validationFailed(129); /* PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      set FM0GM310.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
      set FM0GM310.FM0GM-PO-DT-DD bold; /* Highlight*/
    end
  else
    ;
    if (FM0GM310.FM0GM-PO-DT-PP == 12)
      if (FM0GM310.FM0GM-PO-DT-DD != 2)
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
        set FM0GM310.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
        set FM0GM310.FM0GM-PO-DT-DD bold; /* Highlight*/
      end
    else
      ;
      FM0GW00.FM0GW-COUNT = FM0GM310.FM0GM-PO-DT-DD       - FM0GM310.FM0GM-PO-DT-PP;
      ;
      if (FM0GW00.FM0GW-COUNT != 2) /* Not 2 months different*/
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
        set FM0GM310.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
        set FM0GM310.FM0GM-PO-DT-DD bold; /* Highlight*/
      end
    end
  end
  ;
  ;
  if (FM0GM310.FM0GM-PO-DT-DD >= 1
   && FM0GM310.FM0GM-PO-DT-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    set FM0GM310.FM0GM-PO-DT-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0GM310.FM0GM-PO-DT-PP >= 1
   && FM0GM310.FM0GM-PO-DT-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    set FM0GM310.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material group code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0G-3521(); /* Select DCMPNT.VMGRP001*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0G-3522(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0G-3520

// Select DCMPNT.VMGRP001
Function FM0G-3521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0GM310.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0GM310.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      set FM0GM310.FK-VEND-CD cursor, bold;
      set FM0GM310.FK-MAT-GRP-CD bold;
      FKWREC.XXX-MOD-ID = "3521";
      converseLib.validationFailed(123); /* Material group code missing or*/
                                   /* invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-3521

// Select DCMPNT.VVNDR001
Function FM0G-3522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0GM310.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0GM310.FK-VEND-CD cursor, bold;
      FKWREC.XXX-MOD-ID = "3522";
      converseLib.validationFailed(21); /* Vendor is missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-3522

// Process valid request
Function FM0G-3600()
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GM310.FK-VEND-CD != FM0GW01.FK-VEND-CD
   || FM0GM310.FK-MAT-GRP-CD != FM0GW01.FK-MAT-GRP-CD
   || FM0GM310.FM0GM-PO-DT-YY != FM0GW01.FM0GM-PO-DT-YY
   || FM0GM310.FM0GM-PO-DT-PP != FM0GW01.FM0GM-PO-DT-PP
   || FM0GM310.FM0GM-PO-DT-DD != FM0GW01.FM0GM-PO-DT-DD
  )
    FM0GW00.FM0GW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Check to see if any non-key data changed.  If it did,*/
   /* update the record to DCMPNT.VMGCAP01.*/
   /* ------------------------------------------------------------*/
  ;
  XX0XS01(); /* Get date and time*/
  ;
  FM0GW00.FM0GW-DATA-UPDATED-SW = "N";
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GM310.FK-MAX-CAP-QTY[FM0GW-IDX]
     != FM0GW01.FK-MAX-CAP-QTY[FM0GW-IDX]) /* Data was updated on map*/
      ;
      FM0G-3610(); /* Update DCMPNT.VMGCAP01*/
    end
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data was successfully updated, set a message and exit*/
   /* to re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-DATA-UPDATED-SW == "Y") /* Data was updated*/
    ;
    FKWREC.XXXMSGNO = 1; /* Data successfully updated*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module identification*/
    FM0GW00.FM0GW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0G-3600

// Update DCMPNT.VMGCAP01
Function FM0G-3610()
   /* ------------------------------------------------------------*/
   /* Update the requested row on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.VMGCAP01-GROUP = FM0GW01.VMGCAP01-GROUP[FM0GW-IDX]; /* Restore group*/
  VMGCAP01.FK-MAX-CAP-QTY = FM0GM310.FK-MAX-CAP-QTY[FM0GW-IDX]; /* New qty*/
  VMGCAP01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VMGCAP01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  FKGREC.FKG-FUNCTION = "U "; /* Update it*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0GW00.FM0GW-DATA-UPDATED-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all database changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another application*/
      FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
      FM0GW00.FM0GW-REQUEST-DATA-SW = "Y";
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DCMPNT.VMGCAP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-3610

// Process delete map
Function FM0G-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0G-4100(); /* Obtain the data to display*/
  ;
  FM0G-4200(); /* Format and display the map*/
  ;
  FM0G-4300(); /* Check attention identifier*/
  ;
  FM0G-4400(); /* Reset fields to normal intensity*/
  ;
  FM0G-4500(); /* Verify the entered data*/
  ;
  FM0G-4600(); /* Process valid input request*/
  ;
  ;
end // end FM0G-4000

// Obtain data to display
Function FM0G-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Initialize display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0GW01 empty; /* Init disp storage*/
  move "N" to FM0GW01.FM0GW-CAP-MO-FND-SW[1] for all; /* No data found yet*/
  FM0GW00.FM0GW-VMGCAP01-FND-SW = "N"; /* No capacity found yet*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Calculate the date range to be displayed on the map.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM410.FM0GM-PO-DT-YY;
  FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM410.FM0GM-PO-DT-PP;
  FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM410.FM0GM-PO-DT-DD;
  if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
  else
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
  end
  ;
  FM0GW01.PC3POIDT[1] = FM0GW00.FM0GW-FMAT-PO-DT;
  ;
  FM0GW00.FM0GW-IDX = 2;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GW00.FM0GW-FMAT-PO-DT-DD == 12)
      FM0GW00.FM0GW-FMAT-PO-DT-DD = 1;
    else
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GW00.FM0GW-FMAT-PO-DT-DD + 1;
    end
    ;
    if (FM0GW00.FM0GW-FMAT-PO-DT-PP == 12)
      FM0GW00.FM0GW-FMAT-PO-DT-PP = 1;
      FM0GW00.FM0GW-FMAT-PO-DT-CCYY = FM0GW00.FM0GW-FMAT-PO-DT-CCYY + 1;
    else
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GW00.FM0GW-FMAT-PO-DT-PP + 1;
    end
    ;
    FM0GW01.PC3POIDT[FM0GW-IDX] = FM0GW00.FM0GW-FMAT-PO-DT;
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0G-4110(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the material group record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0G-4120(); /* Select DCMPNT.VMGRP001*/
  ;
  if (VMGRP001.XMU-MAT-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
   && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If code in table and active*/
    ;
    FM0GW00.XMU-MAT-UOM-DESC = XMUTBL.XMU-MAT-UOM-DESC[sysVar.arrayIndex]; /* Save desc*/
  else
    ;
    FM0GW00.XMU-MAT-UOM-DESC = "***************";
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain capacity data from DCMPNT.VMGCAP01 for each of the*/
   /* dates formatted earlier.  Format each record to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1; /* Initialize index*/
  ;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    FM0G-4130(); /* Select DCMPNT.VMGCAP01*/
    FM0G-4140(); /* Add record to display storage*/
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1; /* Increment index*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-VMGCAP01-FND-SW == "N" /* If no cap records found*/
   && FKWREC.XXXMSGNO != 1)                /* And delete not just completed*/
    ;
    FKWREC.XXXMSGNO = 18; /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "4100"; /* Module identification*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-REQUEST-DATA-SW = "N";
  FM0GW00.FM0GW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0G-4100

// Select DCMPNT.VVNDR001
Function FM0G-4110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0GM410.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0GW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0GW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-4110

// Select DCMPNT.VMGRP001
Function FM0G-4120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0GM410.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0GM410.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-4120

// Select DCMPNT.VMGCAP01
Function FM0G-4130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0GM410.FK-VEND-CD;
  VMGCAP01.FK-MAT-GRP-CD = FM0GM410.FK-MAT-GRP-CD;
  VMGCAP01.PC3POIDT = FM0GW01.PC3POIDT[FM0GW-IDX];
  ;
  FKGREC.FKG-FUNCTION = "S "; /* Select unique*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0GW00.FM0GW-VMGCAP01-FND-SW = "Y";
      FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGCAP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-4130

// Format data to display storage
Function FM0G-4140()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-IDX == 1) /* If first line on page*/
    ;
    FM0GW01.FK-VEND-CD = FM0GM410.FK-VEND-CD; /* Vendor*/
    FM0GW01.FK-VEND-SNM = FM0GW00.FK-VEND-SNM; /* Vendor name*/
    FM0GW01.FK-MAT-GRP-CD = FM0GM410.FK-MAT-GRP-CD; /* Mtl group*/
    FM0GW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
    FM0GW01.XMU-MAT-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
    FM0GW01.XMU-MAT-UOM-DESC = FM0GW00.XMU-MAT-UOM-DESC; /* UOM desc*/
    FM0GW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
    FM0GW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
    FM0GW01.FM0GM-PO-DT-YY = FM0GM410.FM0GM-PO-DT-YY; /* PO year*/
    FM0GW01.FM0GM-PO-DT-PP = FM0GM410.FM0GM-PO-DT-PP; /* PO prod mo*/
    FM0GW01.FM0GM-PO-DT-DD = FM0GM410.FM0GM-PO-DT-DD; /* PO deliv mo*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the capacity month data.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "Y") /* Cap data found*/
    ;
    FM0GW01.FK-MAX-CAP-QTY[FM0GW-IDX] = VMGCAP01.FK-MAX-CAP-QTY; /* Capacity qty*/
    ;
    FM0GW01.VMGCAP01-GROUP[FM0GW-IDX] = VMGCAP01.VMGCAP01-GROUP; /* Save entire VMGCAP01 record*/
  end
  ;
  ;
end // end FM0G-4140

// Format and converse DEL map
Function FM0G-4200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-FMAT-MAP-SW == "Y"   /* Format requested*/
   && (converseVar.validationMsgNum == 0 /* and no error to display*/
   || FKWREC.XXXMSGNO == 18))            /* or no data found*/
    ;
    FM0G-4210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0GM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0GM410.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0GM410 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0GM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0GM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0GM410.FK-VEND-SNM = FM0GW00.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* For each capacity month with no data, set capacity qty dark.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] == "N") /* If no data found*/
      set FM0GM410.FK-MAX-CAP-QTY[FM0GW-IDX] invisible, skip;
    end
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set delete data dark if there is no capacity data on screen.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-VMGCAP01-FND-SW != "Y")
    ;
    set FM0GM410.FM0GM-DEL-PO-DT-YY invisible, skip;
    set FM0GM410.FM0GM-DEL-PO-DT-PP invisible, skip;
    set FM0GM410.FM0GM-DEL-PO-DT-DD invisible, skip;
    set FM0GM410.FM0GM-DEL-ALL-MO-FL invisible, skip;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 1) /* or Update complete*/
    if (FM0GW00.FM0GW-VMGCAP01-FND-SW == "Y") /* If data displayed*/
      set FM0GM410.FM0GM-DEL-PO-DT-YY cursor;
    else
      set FM0GM410.FK-VEND-CD cursor; /* Set at vendor code*/
    end
  end
  ;
  ;
  converse FM0GM410 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0GM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0GM410.CAITEM; /* Application data*/
  ;
  ;
end // end FM0G-4200

// Format the data to display
Function FM0G-4210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0GM410 initial; /* Initialize map*/
  ;
  FM0GW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0GM410.FK-VEND-CD = FM0GW01.FK-VEND-CD; /* Vendor*/
  FM0GM410.FK-MAT-GRP-CD = FM0GW01.FK-MAT-GRP-CD; /* Material group*/
  FM0GM410.FK-MAT-GRP-DESC = FM0GW01.FK-MAT-GRP-DESC; /* Material group desc*/
  FM0GM410.XMU-MAT-UOM-CD = FM0GW01.XMU-MAT-UOM-CD; /* Material group UOM*/
  FM0GM410.XMU-MAT-UOM-DESC = FM0GW01.XMU-MAT-UOM-DESC; /* UOM description*/
  FM0GM410.FK-MAT-GRP-RPT-FL = FM0GW01.FK-MAT-GRP-RPT-FL; /* Show on report flag*/
  FM0GM410.FK-COPY-CAP-FL = FM0GW01.FK-COPY-CAP-FL; /* Copy capacity flag*/
  FM0GM410.FM0GM-PO-DT-YY = FM0GW01.FM0GM-PO-DT-YY; /* PO date year*/
  FM0GM410.FM0GM-PO-DT-PP = FM0GW01.FM0GM-PO-DT-PP; /* PO date prod month*/
  FM0GM410.FM0GM-PO-DT-DD = FM0GW01.FM0GM-PO-DT-DD; /* PO date delivery month*/
  FM0GM410.FM0GM-DEL-ALL-MO-FL = "N"; /* Delete all mo flag*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-IDX = 1; /* Initialize idx*/
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    FM0GM410.PC3POIDT[FM0GW-IDX] = FM0GW01.PC3POIDT[FM0GW-IDX]; /* PO date*/
    FM0GM410.FK-MAX-CAP-QTY[FM0GW-IDX] = FM0GW01.FK-MAX-CAP-QTY[FM0GW-IDX]; /* Max capacity*/
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  ;
end // end FM0G-4210

// Check attention identifier
Function FM0G-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0GM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0GM410.FK-MAT-GRP-CD; /* Mat group*/
    if (FM0GM410.FM0GM-PO-DT-PP > 0
     && FM0GM410.FM0GM-PO-DT-DD > 0)
      ;
      FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM410.FM0GM-PO-DT-YY;
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM410.FM0GM-PO-DT-PP;
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM410.FM0GM-PO-DT-DD;
      if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
      else
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
      end
      FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0G"; /* to applicaiton*/
    COMMAREA.CAITEM = "D   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0GM410.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GM410.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0GM410.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-GRP-CD = FM0GM410.FK-MAT-GRP-CD; /* Mat group*/
      if (FM0GM410.FM0GM-PO-DT-PP > 0
       && FM0GM410.FM0GM-PO-DT-DD > 0)
        ;
        FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM410.FM0GM-PO-DT-YY;
        FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM410.FM0GM-PO-DT-PP;
        FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM410.FM0GM-PO-DT-DD;
        if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
          FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
        else
          FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
        end
        FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
      end
      ;
      COMMAREA.CATOAP = FM0GM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0GM410.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0GM410.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* MGRP requested*/
   || converseVar.eventKey is pf14) /* MGLST requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0GM410"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0GM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0GM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0F"; /* TO application*/
      COMMAREA.CAITEM = FM0GM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0M"; /* TO application*/
      COMMAREA.CAITEM = FM0GM410.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0GM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0GM410.FK-MAT-GRP-CD; /* Mat group*/
    if (FM0GM410.FM0GM-PO-DT-PP > 0
     && FM0GM410.FM0GM-PO-DT-DD > 0)
      ;
      FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM410.FM0GM-PO-DT-YY;
      FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM410.FM0GM-PO-DT-PP;
      FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM410.FM0GM-PO-DT-DD;
      if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
      else
        FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
      end
      FKWREC.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0G-4300

// Reset Highlighted fields
Function FM0G-4400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0GM410.FK-VEND-CD initialAttributes;
  set FM0GM410.FK-VEND-SNM initialAttributes;
  set FM0GM410.FK-MAT-GRP-CD initialAttributes;
  set FM0GM410.FK-MAT-GRP-DESC initialAttributes;
  set FM0GM410.XMU-MAT-UOM-CD initialAttributes;
  set FM0GM410.XMU-MAT-UOM-DESC initialAttributes;
  set FM0GM410.FK-MAT-GRP-RPT-FL initialAttributes;
  set FM0GM410.FK-COPY-CAP-FL initialAttributes;
  set FM0GM410.FM0GM-PO-DT-YY initialAttributes;
  set FM0GM410.FM0GM-PO-DT-PP initialAttributes;
  set FM0GM410.FM0GM-PO-DT-DD initialAttributes;
  set FM0GM410.FM0GM-DEL-PO-DT-YY initialAttributes;
  set FM0GM410.FM0GM-DEL-PO-DT-PP initialAttributes;
  set FM0GM410.FM0GM-DEL-PO-DT-DD initialAttributes;
  set FM0GM410.FM0GM-DEL-ALL-MO-FL initialAttributes;
  ;
  FM0GW00.FM0GW-IDX = 1;
  while (FM0GW00.FM0GW-IDX <= 12)
    ;
    set FM0GM410.PC3POIDT[FM0GW-IDX] initialAttributes;
    set FM0GM410.FK-MAX-CAP-QTY[FM0GW-IDX] initialAttributes;
    ;
    FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX + 1;
  end
  ;
  set FM0GM410.CATOAP initialAttributes;
  set FM0GM410.CAITEM initialAttributes;
  ;
end // end FM0G-4400

// Verify entered fields
Function FM0G-4500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM410.CAITEM > " " /* Application data was entered*/
  )                        
    set FM0GM410.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key data changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM410.FK-VEND-CD == FM0GW01.FK-VEND-CD
   && FM0GM410.FK-MAT-GRP-CD == FM0GW01.FK-MAT-GRP-CD
   && FM0GM410.FM0GM-PO-DT-YY == FM0GW01.FM0GM-PO-DT-YY
   && FM0GM410.FM0GM-PO-DT-PP == FM0GW01.FM0GM-PO-DT-PP
   && FM0GM410.FM0GM-PO-DT-DD == FM0GW01.FM0GM-PO-DT-DD
  )
    FM0G-4510(); /* Verify non-key data*/
  else
    ;
    FM0G-4520(); /* Verify key data*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FM0GW00.FM0GW-CONFIRM-DELETE-SW = "N";
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* At this point we know there are no errors.  If confirming the*/
   /* delete, verify the delete data did not change.  If it did,*/
   /* exit to redisplay the message.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-CONFIRM-DELETE-SW == "Y") /* If confirming delete*/
    ;
    if (FM0GM410.FM0GM-DEL-PO-DT-YY != FM0GW00.FM0GM-DEL-PO-DT-YY
     || FM0GM410.FM0GM-DEL-PO-DT-PP != FM0GW00.FM0GM-DEL-PO-DT-PP
     || FM0GM410.FM0GM-DEL-PO-DT-DD != FM0GW00.FM0GM-DEL-PO-DT-DD
     || FM0GM410.FM0GM-DEL-ALL-MO-FL != FM0GW00.FM0GM-DEL-ALL-MO-FL)
      ;
       /* Save delete date*/
      FM0GW00.FM0GM-DEL-PO-DT-YY = FM0GM410.FM0GM-DEL-PO-DT-YY;
      FM0GW00.FM0GM-DEL-PO-DT-PP = FM0GM410.FM0GM-DEL-PO-DT-PP;
      FM0GW00.FM0GM-DEL-PO-DT-DD = FM0GM410.FM0GM-DEL-PO-DT-DD;
      FM0GW00.FM0GM-DEL-ALL-MO-FL = FM0GM410.FM0GM-DEL-ALL-MO-FL;
      ;
      if (FM0GM410.FM0GM-DEL-PO-DT-YY == 0
       && FM0GM410.FM0GM-DEL-PO-DT-PP == 0
       && FM0GM410.FM0GM-DEL-PO-DT-DD == 0
       && FM0GM410.FM0GM-DEL-ALL-MO-FL == "N") /* If no delete requested*/
        ;
        FM0GW00.FM0GW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
        exit stack;
      else
        ;
         /* Get out to redisplay message*/
        FKWREC.XXXMSGNO = 38; /* Press enter to delete*/
        FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
        exit stack;
      end
    end
  end
  ;
  ;
end // end FM0G-4500

// Verify non-key data
Function FM0G-4510()
   /* ---------------------------------------------------------------*/
   /* Verify delete all P.O. months flag.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM410.FM0GM-DEL-ALL-MO-FL == "Y"
   || FM0GM410.FM0GM-DEL-ALL-MO-FL == "N") /* If valid value entered*/
    ;
     /* Next sentence*/
  else
    ;
    set FM0GM410.FM0GM-DEL-ALL-MO-FL cursor, bold;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be "y" or "n"*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify Delete P.O. month.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0GM410.FM0GM-DEL-PO-DT-YY == 0
   && FM0GM410.FM0GM-DEL-PO-DT-PP == 0
   && FM0GM410.FM0GM-DEL-PO-DT-DD == 0) /* If not entered*/
    ;
     /* Next sentence*/
  else
    ;
     /* Verify delete all months not entered*/
    ;
    if (FM0GM410.FM0GM-DEL-ALL-MO-FL == "Y")
      ;
      set FM0GM410.FM0GM-DEL-PO-DT-YY cursor, bold;
      set FM0GM410.FM0GM-DEL-PO-DT-PP bold;
      set FM0GM410.FM0GM-DEL-PO-DT-DD bold;
      set FM0GM410.FM0GM-DEL-ALL-MO-FL bold;
      FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
      converseLib.validationFailed(154); /* Cannot specify po month and all at same time*/
    end
    ;
    ;
     /* Verify production and delivery months always 2 months apart.*/
    ;
    if (FM0GM410.FM0GM-DEL-PO-DT-PP == 11)
      if (FM0GM410.FM0GM-DEL-PO-DT-DD != 1)
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
        set FM0GM410.FM0GM-DEL-PO-DT-PP cursor, bold; /* Highlight*/
        set FM0GM410.FM0GM-DEL-PO-DT-DD bold; /* Highlight*/
      end
    else
      ;
      if (FM0GM410.FM0GM-DEL-PO-DT-PP == 12)
        if (FM0GM410.FM0GM-DEL-PO-DT-DD != 2)
          ;
          converseLib.validationFailed(129); /* PO date missing or invalid*/
          FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
          set FM0GM410.FM0GM-DEL-PO-DT-PP cursor, bold; /* Highlight*/
          set FM0GM410.FM0GM-DEL-PO-DT-DD bold; /* Highlight*/
        end
      else
        ;
        FM0GW00.FM0GW-COUNT = FM0GM410.FM0GM-DEL-PO-DT-DD         - FM0GM410.FM0GM-DEL-PO-DT-PP;
        ;
        if (FM0GW00.FM0GW-COUNT != 2) /* Not 2 months different*/
          ;
          converseLib.validationFailed(129); /* PO date missing or invalid*/
          FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
          set FM0GM410.FM0GM-DEL-PO-DT-PP cursor, bold; /* Highlight*/
          set FM0GM410.FM0GM-DEL-PO-DT-DD bold; /* Highlight*/
        end
      end
    end
    ;
    ;
     /* Verify delete p.o. month is displayed on the map.*/
     /* Also verify it has data.*/
    ;
    FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM410.FM0GM-DEL-PO-DT-YY;
    FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM410.FM0GM-DEL-PO-DT-PP;
    FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM410.FM0GM-DEL-PO-DT-DD;
    if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
      FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
    else
      FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
    end
    ;
    if (FM0GW00.FM0GW-FMAT-PO-DT >= FM0GW01.PC3POIDT[1]
     && FM0GW00.FM0GW-FMAT-PO-DT <= FM0GW01.PC3POIDT[12])
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(155); /* Date must be displayed on screen*/
      FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
      set FM0GM410.FM0GM-DEL-PO-DT-YY cursor, bold; /* Highlight*/
      set FM0GM410.FM0GM-DEL-PO-DT-PP bold; /* Highlight*/
      set FM0GM410.FM0GM-DEL-PO-DT-DD bold; /* Highlight*/
    end
    ;
    ;
     /* Also verify it has data.*/
    ;
    FM0GW00.FM0GW-IDX = 12;
    while (FM0GW00.FM0GW-IDX > 0)
      ;
      if (FM0GW00.FM0GW-FMAT-PO-DT == FM0GW01.PC3POIDT[FM0GW-IDX])
        ;
        if (FM0GW01.FM0GW-CAP-MO-FND-SW[FM0GW-IDX] != "Y") /* Data not found*/
          ;
          converseLib.validationFailed(156); /* No data for this month - cannot delete*/
          FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
          set FM0GM410.FM0GM-DEL-PO-DT-YY cursor, bold; /* Highlight*/
          set FM0GM410.FM0GM-DEL-PO-DT-PP bold; /* Highlight*/
          set FM0GM410.FM0GM-DEL-PO-DT-DD bold; /* Highlight*/
        end
      end
      FM0GW00.FM0GW-IDX = FM0GW00.FM0GW-IDX - 1;
    end
    ;
    ;
     /* Verify delivery month between 1 and 12*/
    ;
    if (FM0GM410.FM0GM-DEL-PO-DT-DD >= 1
     && FM0GM410.FM0GM-DEL-PO-DT-DD <= 12)
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(129); /* PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
      set FM0GM410.FM0GM-DEL-PO-DT-DD cursor, bold; /* Highlight*/
    end
    ;
    ;
     /* Verify production month between 1 and 12*/
    ;
    if (FM0GM410.FM0GM-DEL-PO-DT-PP >= 1
     && FM0GM410.FM0GM-DEL-PO-DT-PP <= 12)
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(129); /* PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
      set FM0GM410.FM0GM-DEL-PO-DT-PP cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
end // end FM0G-4510

// Verify key data
Function FM0G-4520()
   /* ---------------------------------------------------------------*/
   /* Verify beginning po date.*/
   /* ---------------------------------------------------------------*/
  ;
   /* Verify production and delivery months always 2 months apart.*/
  ;
  if (FM0GM410.FM0GM-PO-DT-PP == 11)
    if (FM0GM410.FM0GM-PO-DT-DD != 1)
      ;
      converseLib.validationFailed(129); /* PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
      set FM0GM410.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
      set FM0GM410.FM0GM-PO-DT-DD bold; /* Highlight*/
    end
  else
    ;
    if (FM0GM410.FM0GM-PO-DT-PP == 12)
      if (FM0GM410.FM0GM-PO-DT-DD != 2)
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
        set FM0GM410.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
        set FM0GM410.FM0GM-PO-DT-DD bold; /* Highlight*/
      end
    else
      ;
      FM0GW00.FM0GW-COUNT = FM0GM410.FM0GM-PO-DT-DD       - FM0GM410.FM0GM-PO-DT-PP;
      ;
      if (FM0GW00.FM0GW-COUNT != 2) /* Not 2 months different*/
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
        set FM0GM410.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
        set FM0GM410.FM0GM-PO-DT-DD bold; /* Highlight*/
      end
    end
  end
  ;
  ;
  if (FM0GM410.FM0GM-PO-DT-DD >= 1
   && FM0GM410.FM0GM-PO-DT-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
    set FM0GM410.FM0GM-PO-DT-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0GM410.FM0GM-PO-DT-PP >= 1
   && FM0GM410.FM0GM-PO-DT-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
    set FM0GM410.FM0GM-PO-DT-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material group code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0G-4521(); /* Select DCMPNT.VMGRP001*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0G-4522(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0G-4520

// Select DCMPNT.VMGRP001
Function FM0G-4521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0GM410.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0GM410.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      set FM0GM410.FK-VEND-CD cursor, bold;
      set FM0GM410.FK-MAT-GRP-CD bold;
      FKWREC.XXX-MOD-ID = "4521";
      converseLib.validationFailed(123); /* Material group code missing or*/
                                   /* invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-4521

// Select DCMPNT.VVNDR001
Function FM0G-4522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0GM410.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0GM410.FK-VEND-CD cursor, bold;
      FKWREC.XXX-MOD-ID = "4522";
      converseLib.validationFailed(21); /* Vendor is missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-4522

// Process valid request
Function FM0G-4600()
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GM410.FK-VEND-CD != FM0GW01.FK-VEND-CD
   || FM0GM410.FK-MAT-GRP-CD != FM0GW01.FK-MAT-GRP-CD
   || FM0GM410.FM0GM-PO-DT-YY != FM0GW01.FM0GM-PO-DT-YY
   || FM0GM410.FM0GM-PO-DT-PP != FM0GW01.FM0GM-PO-DT-PP
   || FM0GM410.FM0GM-PO-DT-DD != FM0GW01.FM0GM-PO-DT-DD
  )
    FM0GW00.FM0GW-CONFIRM-DELETE-SW = "N";
    FM0GW00.FM0GW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If necessary, confirm the delete.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-CONFIRM-DELETE-SW != "Y" /* Delete not confirmed*/
   && (FM0GM410.FM0GM-DEL-PO-DT-PP > 0       /* and po month specified*/
   || FM0GM410.FM0GM-DEL-ALL-MO-FL == "Y"))  /* or delete all specified*/
    ;
     /* Save delete data*/
    FM0GW00.FM0GM-DEL-PO-DT-YY = FM0GM410.FM0GM-DEL-PO-DT-YY;
    FM0GW00.FM0GM-DEL-PO-DT-PP = FM0GM410.FM0GM-DEL-PO-DT-PP;
    FM0GW00.FM0GM-DEL-PO-DT-DD = FM0GM410.FM0GM-DEL-PO-DT-DD;
    FM0GW00.FM0GM-DEL-ALL-MO-FL = FM0GM410.FM0GM-DEL-ALL-MO-FL;
    ;
     /* Set message and get out*/
    FKWREC.XXXMSGNO = 38; /* Press enter to delete*/
    FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
    FM0GW00.FM0GW-CONFIRM-DELETE-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Check to see if data was selected for delete.*/
   /* If it was, delete it from DCMPNT.VMGCAP01.*/
   /* ------------------------------------------------------------*/
  ;
  FM0GW00.FM0GW-DATA-UPDATED-SW = "N";
  ;
  if (FM0GW00.FM0GW-CONFIRM-DELETE-SW == "Y" /* Delete confirmed*/
  )                                         
    if (FM0GM410.FM0GM-DEL-ALL-MO-FL == "Y") /* If deleting all months*/
      FM0G-4610(); /* Delete all mo from DCMPNT.VMGCAP01*/
    else
      ;
      if (FM0GM410.FM0GM-DEL-PO-DT-PP > 0) /* If delete month specified*/
        FM0G-4620(); /* Delete 1 mo from DCMPNT.VMGCAP01*/
      end
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data was successfully updated, set a message and exit*/
   /* to re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0GW00.FM0GW-DATA-UPDATED-SW == "Y") /* Data was updated*/
    ;
    FKWREC.XXXMSGNO = 1; /* Data successfully updated*/
    FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
    FM0GW00.FM0GW-REQUEST-DATA-SW = "Y";
    FM0GW00.FM0GW-CONFIRM-DELETE-SW = "N";
    return;
  end
  ;
  ;
end // end FM0G-4600

// Delete DCMPNT.VMGCAP01 (all)
Function FM0G-4610()
   /* ------------------------------------------------------------*/
   /* Delete the requested rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0GM410.FK-VEND-CD; /* Vendor*/
  VMGCAP01.FK-MAT-GRP-CD = FM0GM410.FK-MAT-GRP-CD; /* Mat group*/
  VMGCAP01.PC3POIDT = -1; /* Wildcard po date*/
  ;
  FKGREC.FKG-FUNCTION = "D "; /* Delete it*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or row not found*/
      ;
      FM0GW00.FM0GW-DATA-UPDATED-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0GW00.FM0GW-CONFIRM-DELETE-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE DCMPNT.VMGCAP01 (ALL)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-4610

// Delete DCMPNT.VMGCAP01 (1)
Function FM0G-4620()
   /* ------------------------------------------------------------*/
   /* Delete the requested rows from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  set FKGREC empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0GM410.FK-VEND-CD; /* Vendor*/
  VMGCAP01.FK-MAT-GRP-CD = FM0GM410.FK-MAT-GRP-CD; /* Mat group*/
  FM0GW00.FM0GW-FMAT-PO-DT-YY = FM0GM410.FM0GM-DEL-PO-DT-YY;
  FM0GW00.FM0GW-FMAT-PO-DT-PP = FM0GM410.FM0GM-DEL-PO-DT-PP;
  FM0GW00.FM0GW-FMAT-PO-DT-DD = FM0GM410.FM0GM-DEL-PO-DT-DD;
  if (FM0GW00.FM0GW-FMAT-PO-DT-YY < 80)
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 20;
  else
    FM0GW00.FM0GW-FMAT-PO-DT-CC = 19;
  end
  VMGCAP01.PC3POIDT = FM0GW00.FM0GW-FMAT-PO-DT; /* PO date*/
  ;
  FKGREC.FKG-FUNCTION = "D "; /* Delete it*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or row not found*/
      ;
      FM0GW00.FM0GW-DATA-UPDATED-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0GW00.FM0GW-CONFIRM-DELETE-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE DCMPNT.VMGCAP01 (1)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0G-4620

//*** RECORD=FM0GW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0GW00 type basicRecord
  10 FM0GW-REQUEST-DATA-SW FM0GW-REQUEST-DATA-SW ; 
  10 FM0GW-FMAT-MAP-SW FM0GW-FMAT-MAP-SW ; 
  10 FM0GW-END-VMGCAP01-CSR-SW FM0GW-END-VMGCAP01-CSR-SW ; 
  10 FM0GW-DATA-UPDATED-SW FM0GW-DATA-UPDATED-SW ; 
  10 FM0GW-CONFIRM-DELETE-SW FM0GW-CONFIRM-DELETE-SW ; 
  10 FM0GW-MAP-SW FM0GW-MAP-SW ; 
  10 FM0GW-VMGCAP01-FND-SW FM0GW-VMGCAP01-FND-SW ; 
  10 FM0GW-CLEAR-MAP-SW FM0GW-CLEAR-MAP-SW ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FM0GW-IDX FM0GW-IDX ; 
  10 FM0GW-COUNT FM0GW-COUNT ; 
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-MAT-GRP-CD FK-MAT-GRP-CD ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 XMU-MAT-UOM-DESC XMU-MAT-UOM-DESC ; 
  10 FM0GW-YEAR-END-PO-DT FM0GW-YEAR-END-PO-DT ; 
  10 FM0GW-FMAT-PO-DT FM0GW-FMAT-PO-DT ; 
    15 FM0GW-FMAT-PO-DT-CCYY FM0GW-FMAT-PO-DT-CCYY ; 
      20 FM0GW-FMAT-PO-DT-CC FM0GW-FMAT-PO-DT-CC ; 
      20 FM0GW-FMAT-PO-DT-YY FM0GW-FMAT-PO-DT-YY ; 
    15 FM0GW-FMAT-PO-DT-PP FM0GW-FMAT-PO-DT-PP ; 
    15 FM0GW-FMAT-PO-DT-DD FM0GW-FMAT-PO-DT-DD ; 
  10 FM0GW-FMAT-BUY-DT FM0GW-FMAT-BUY-DT ; 
    15 FM0GW-FMAT-BUY-DT-CCYY FM0GW-FMAT-BUY-DT-CCYY ; 
      20 FM0GW-FMAT-BUY-DT-CC FM0GW-FMAT-BUY-DT-CC ; 
      20 FM0GW-FMAT-BUY-DT-YY FM0GW-FMAT-BUY-DT-YY ; 
    15 FM0GW-FMAT-BUY-DT-MM FM0GW-FMAT-BUY-DT-MM ; 
    15 FM0GW-FMAT-BUY-DT-DD FM0GW-FMAT-BUY-DT-DD ; 
  10 FM0GM-DEL-PO-DT-YY FM0GM-DEL-PO-DT-YY ; 
  10 FM0GM-DEL-PO-DT-PP FM0GM-DEL-PO-DT-PP ; 
  10 FM0GM-DEL-PO-DT-DD FM0GM-DEL-PO-DT-DD ; 
  10 FM0GM-DEL-ALL-MO-FL FM0GM-DEL-ALL-MO-FL ; 
end // end FM0GW00

//*** RECORD=FM0GW01 ****
// ------------------------------------------------------------
// Application display storage.
// ------------------------------------------------------------
// 
// ***********************
Record FM0GW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(476) ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-VEND-SNM FK-VEND-SNM ; 
    10 FK-MAT-GRP-CD FK-MAT-GRP-CD ; 
    10 FK-MAT-GRP-DESC FK-MAT-GRP-DESC ; 
    10 XMU-MAT-UOM-CD XMU-MAT-UOM-CD ; 
    10 XMU-MAT-UOM-DESC XMU-MAT-UOM-DESC ; 
    10 FK-MAT-GRP-RPT-FL FK-MAT-GRP-RPT-FL ; 
    10 FK-COPY-CAP-FL FK-COPY-CAP-FL ; 
    10 FM0GM-PO-DT-YY FM0GM-PO-DT-YY ; 
    10 FM0GM-PO-DT-PP FM0GM-PO-DT-PP ; 
    10 FM0GM-PO-DT-DD FM0GM-PO-DT-DD ; 
    10 PC3POIDT PC3POIDT [12] ; 
    10 FK-MAX-CAP-QTY FK-MAX-CAP-QTY [12] ; 
    10 FM0GW-CAP-MO-FND-SW FM0GW-CAP-MO-FND-SW [12] ; 
    10 VMGCAP01-GROUP VMGCAP01-GROUP [12] ; 
end // end FM0GW01

// Delete all months flag
DataItem FM0GM-DEL-ALL-MO-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Delete PO month delivery month
DataItem FM0GM-DEL-PO-DT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// Delete PO date prod month
DataItem FM0GM-DEL-PO-DT-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// Delete PO date year
DataItem FM0GM-DEL-PO-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// P.O. date delivery month
DataItem FM0GM-PO-DT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// P.O. Date prod month
DataItem FM0GM-PO-DT-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// P.O. Date year
DataItem FM0GM-PO-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Capacity month found switch
DataItem FM0GW-CAP-MO-FND-SW char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// The map is clear switch
DataItem FM0GW-CLEAR-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Confirm the delete switch
DataItem FM0GW-CONFIRM-DELETE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic counter
DataItem FM0GW-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data successfully updated sw
DataItem FM0GW-DATA-UPDATED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VFVITM01 csr switch
DataItem FM0GW-END-VMGCAP01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format buy date
DataItem FM0GW-FMAT-BUY-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format buy date century
DataItem FM0GW-FMAT-BUY-DT-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format buy date cc and yy
DataItem FM0GW-FMAT-BUY-DT-CCYY num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format buy date delivery month
DataItem FM0GW-FMAT-BUY-DT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format buy date prod month
DataItem FM0GW-FMAT-BUY-DT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format buy date year
DataItem FM0GW-FMAT-BUY-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FM0GW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format P.O. date
DataItem FM0GW-FMAT-PO-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. date century
DataItem FM0GW-FMAT-PO-DT-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. date cc and yy
DataItem FM0GW-FMAT-PO-DT-CCYY num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. date delivery mnth
DataItem FM0GW-FMAT-PO-DT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. date prod month
DataItem FM0GW-FMAT-PO-DT-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. date year
DataItem FM0GW-FMAT-PO-DT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic index
DataItem FM0GW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map to display switch
DataItem FM0GW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FM0GW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VMGCAP01 rec found sw
DataItem FM0GW-VMGCAP01-FND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Year-end P.O. date
DataItem FM0GW-YEAR-END-PO-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

