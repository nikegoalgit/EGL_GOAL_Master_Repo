package fm0f;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPXMU01;
import corpcom3.XPXX001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XMUTBL;
import corpx2.XMU-MAT-UOM-CD;
import corpx2.XMU-MAT-UOM-DESC;
import fk.common.*;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VMATRL01;
import vv.common.VMGCAP01;
import vv.common.VMGMAT01;
import vv.common.VMGMAT01-GROUP;
import vv.common.VMGRP001;
import vv.common.VMGRP001-GROUP;
import vv.common.VVNDR001;
//*** PROGRAM=FM0F ****
// THIS APPLICATION IS PART OF THE FOOTWEAR MATERIALS SYSTEM.
// 
// THIS APPLICATION PROVIDES MAINTENANCE CAPABILITY FOR
// MATERIAL GROUPS.  USERS WILL BE ALLOWED TO INQUIRE, ADD,
// CHANGE, AND DELETE MATERIAL GROUPS THROUGH THE FOUR
// MAPS PROVIDED IN THIS APPLICATION.
// 
// INQUIRE MAP - MAP FM0FM110 IS PROVIDED FOR USERS TO INQUIRE
// UPON MATERIAL GROUPS.  USERS WILL BE ALLOWED TO SELECT
// A VENDOR AND MATERIAL GROUP AND HAVE ALL MATERIAL GROUP
// INFORMATION RETRIEVED FROM DCMPNT.VMGRP001 AND
// DCMPNT.VMGMAT01.  MATERIAL GROUP INFORMATION WILL BE
// DISPLAYED ON THE MAP.
// 
// ADD MAP - MAP FM0FM210 IS PROVIDED FOR USERS TO ADD
// MATERIAL GROUP INFORMATION.  USERS WILL BE ALLOWED TO
// ENTER A VENDOR AND MATERIAL GROUP AND ALL MATERIALS THAT
// BELONG IN THAT GROUP.  IF THE MATERIAL GROUP IS NEW AN
// INSERT WILL BE MADE TO THE MATERIAL GROUP TABLE,
// DCMPNT.VMGRP001.  IN ADDITION, FOR EVERY MATERIAL ENTERED
// A RECORD WILL BE INSERTED TO THE MATERIAL GROUP/MATERIAL
// XREF TABLE, DCMPNT.VMGMAT01.
// 
// CHANGE MAP - MAP FM0FM310 IS PROVIDED FOR USERS TO CHANGE
// INFORMATION ON AN EXISTING MATERIAL GROUP.  USERS WILL
// SPECIFY A VENDOR AND MATERIAL GROUP AND HAVE THE MATERIAL
// GROUP DATA GATHERED AND DISPLAYED ON THE MAP.  USERS MAY
// THEN CHANGE THE DATA, AND HAVE THE DATA UPDATED TO
// DCMPNT.VMGMAT01.
// 
// DELETE MAP - MAP FM0FM410 IS PROVIDED FOR USERS TO DELETE
// MATERIAL FROM A MATERIAL GROUP, OR TO DELETE THE ENTIRE
// MATERIAL GROUP.  USERS WILL ENTER A VENDOR AND MATERIAL
// GROUP AND HAVE ALL MATERIAL GROUP INFORMATION DISPLAYED ON
// THE MAP.  USERS MAY THEN SELECT MATERIALS TO DELETE FROM
// THE GROUP, OR THE USERS MAY SELECT THE WHOLE GROUP TO
// DELETE.  APPROPRIATE DELETES WILL BE PERFORMED ON THE
// TABLES DCMPNT.VMGMAT01 AND DCMPNT.VMGRP001.
// 
// TRANSFER FROM ONE FM0F MAP TO ANOTHER FM0F MAP IS NOT
// POSSIBLE EXCEPT THROUGH FASTPATH.  USERS WILL BE ALLOWED
// TO EXIT THIS APPLICATION VIA PFKEYS OR FASTPATH, WITH THE
// 'OPTION' FIELD AVAILABLE FOR USE WITH ANY APPLICATION
// TRANSFER.
// 
// 
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          11/04/93  JALLE1  New application.
// Y2KFIX   11/18/97  ksumme  Y2K MODIFICATIONS MADE TO:
//                            regen appl for XXOXS01
// *********************
Program FM0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FKGREC FKGREC; // record
  FKWREC FKWREC; // record
  FM0FW00 FM0FW00; // record
  FM0FW01 FM0FW01; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VMATRL01 VMATRL01; // record
  VMGCAP01 VMGCAP01; // record
  VMGMAT01 VMGMAT01; // record
  VMGRP001 VMGRP001; // record
  VVNDR001 VVNDR001; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XMUTBL {deleteAfterUse = yes}; // table
  use FM0FM.FM0FM110,  // forms
      FM0FM.FM0FM210, 
      FM0FM.FM0FM310, 
      FM0FM.FM0FM410,
      FM0FM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FM0FM110 initial; /* M110 inquiry map input/output*/
    set FM0FM210 initial; /* M210 add map input/output*/
    set FM0FM310 initial; /* M310 change map input/output*/
    set FM0FM410 initial; /* M340 delete map input/output*/
    set FM0FW00 empty; /* Working storage*/
    set FM0FW01 empty; /* Display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* Also determine which map to display.*/
     /* ------------------------------------------------------------*/
    ;
    if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
      ;
      FM0FW00.FM0FW-MAP-SW = "2"; /* Map to be displayed switch*/
      FM0FM210.FK-VEND-CD = FKWREC.FK-VEND-CD[1];
      FM0FM210.FK-MAT-GRP-CD = FKWREC.FK-MAT-GRP-CD;
    else
      ;
      if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* Change requested*/
        ;
        FM0FW00.FM0FW-MAP-SW = "3"; /* Map to be displayed switch*/
        FM0FM310.FK-VEND-CD = FKWREC.FK-VEND-CD[1];
        FM0FM310.FK-MAT-GRP-CD = FKWREC.FK-MAT-GRP-CD;
      else
        ;
        if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* Delete requested*/
          ;
          FM0FW00.FM0FW-MAP-SW = "4"; /* Map to be displayed switch*/
          FM0FM410.FK-VEND-CD = FKWREC.FK-VEND-CD[1];
          FM0FM410.FK-MAT-GRP-CD = FKWREC.FK-MAT-GRP-CD;
        else
          ;
          FM0FW00.FM0FW-MAP-SW = "1"; /* Map to be displayed switch*/
          FM0FM110.FK-VEND-CD = FKWREC.FK-VEND-CD[1];
          FM0FM110.FK-MAT-GRP-CD = FKWREC.FK-MAT-GRP-CD;
        end
      end
    end
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Initialize working storage variables.*/
     /* ------------------------------------------------------------*/
    ;
    if (FKWREC.FK-VEND-CD[1] > " " /* If vendor passed*/
     && FKWREC.FK-MAT-GRP-CD > " " /* and material group passed*/
     && FM0FW00.FM0FW-MAP-SW != 2) /* And add not requested*/
      ;
      FM0FW00.FM0FW-REQUEST-DATA-SW = "Y"; /* Request for data*/
    else
      ;
      FM0FW00.FM0FW-REQUEST-DATA-SW = "N"; /* Request for data*/
    end
    ;
    FM0FW00.FM0FW-FMAT-MAP-SW = "N"; /* Format the map switch*/
    FM0FW00.FM0FW-CONFIRM-ADD-SW = "N"; /* Confirm the add switch*/
    FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N"; /* Confirm delete switch*/
    FM0FW00.FM0FW-VMGRP001-FND-SW = "N"; /* Confirm delete switch*/
    FM0FW00.FM0FW-NBR-MAP-ROWS = 13; /* Number of rows on map*/
    ;
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0F-0010; /* Converse the main process*/
    ;
    ;
    FM0F-0010: FM0F-0010();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0F-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FM0F

// Main process to display a map
Function FM0F-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the second map.*/
   /* 2) Otherwise, if specified, display the third map.*/
   /* 3) Otherwise, if specified, display the fourth map.*/
   /* 4) Otherwise, display the first map.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-MAP-SW == "2") /* Map 2 was requested*/
    FM0F-2000(); /* Display map 2*/
  else
    ;
    if (FM0FW00.FM0FW-MAP-SW == "3") /* Map 3 was requested*/
      FM0F-3000(); /* Display map 3*/
    else
      ;
      if (FM0FW00.FM0FW-MAP-SW == "4") /* Map 4 was requested*/
        FM0F-4000(); /* Display map 4*/
      else
        ;
        FM0F-1000(); /* Display map 1*/
      end
    end
  end
  ;
  ;
end // end FM0F-0010

// Process inquiry map
Function FM0F-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0F-1100(); /* Obtain the data to display*/
  ;
  FM0F-1200(); /* Format and display the map*/
  ;
  FM0F-1300(); /* Check attention identifier*/
  ;
  FM0F-1400(); /* Reset fields to normal intensity*/
  ;
  FM0F-1500(); /* Verify the entered data*/
  ;
  FM0F-1600(); /* Process valid input request*/
  ;
  ;
end // end FM0F-1000

// Obtain data to display
Function FM0F-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.XXXTSLEN = 866; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0FW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-1110(); /* Purge temp storage*/
  ;
  FM0FW00.FM0FW-VMGRP001-FND-SW = "N"; /* Init switch*/
  FM0FW00.FM0FW-VMGMAT01-FND-SW = "N"; /* Init switch*/
  ;
  FM0FW00.FK-VEND-CD = FM0FM110.FK-VEND-CD;
  FM0FW00.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-1120(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the material group record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-1130(); /* Select DCMPNT.VMGRP001*/
  ;
  if (VMGRP001.XMU-MAT-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
   && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If code in table and active*/
    ;
    FM0FW00.XMU-MAT-UOM-DESC = XMUTBL.XMU-MAT-UOM-DESC[sysVar.arrayIndex]; /* Save desc*/
  else
    ;
    FM0FW00.XMU-MAT-UOM-DESC = "***************";
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare and process a cursor to get all material in the material*/
   /* group from DCMPNT.VMGMAT01.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = 0; /* Initialize index*/
  ;
  FM0FW00.FM0FW-END-VMGMAT01-CSR-SW = "N";
  ;
  FM0F-1140(); /* Declare DCMPNT.VMGMAT01 cursor*/
  FM0F-1150(); /* Fetch DCMPNT.VMGMAT01 cursor*/
  ;
  while (FM0FW00.FM0FW-END-VMGMAT01-CSR-SW != "Y")
    ;
    FM0F-1160(); /* Select DCMPNT.VMATRL01*/
    FM0F-1170(); /* Format a display storage line*/
    ;
    if (FM0FW00.FM0FW-IDX >= FM0FW00.FM0FW-NBR-MAP-ROWS) /* If page full*/
      FM0F-1180(); /* Add page temp store page queue*/
      FM0FW00.FM0FW-IDX = 0; /* Reset index*/
    end
    ;
    FM0F-1150(); /* Fetch DCMPNT.VMGMAT01 cursor*/
  end
  ;
  FM0F-1190(); /* Close DCMPNT.VMGMAT01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save any partially formatted data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-IDX > 0) /* If line(s) were formatted*/
    ;
    FM0F-1180(); /* Add page temp store page queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    if (FM0FW00.FM0FW-VMGRP001-FND-SW == "Y") /* If DCMPNT.VMGRP001 found*/
      ;
      FM0F-1171(); /* Format hdr only to disp storage*/
      FM0F-1180(); /* Add page temp store page queue*/
      ;
      FKWREC.XXXMSGNO = 152; /* No mtls in this mtl group*/
      FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
    else
      ;
      FKWREC.XXXMSGNO = 18; /* Request processed - no data*/
      FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
    end
  else
    ;
    FM0FW00.FM0FW-VMGMAT01-FND-SW = "Y"; /* DCMPNT.VMGMAT01 found*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-REQUEST-DATA-SW = "N";
  FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0F-1100

// Purge any temporary storage
Function FM0F-1110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0FW01 empty; /* m110 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0FW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1110

// Select DCMPNT.VVNDR001
Function FM0F-1120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0FM110.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0FW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0FW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1120 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1120

// Select DCMPNT.VMGRP001
Function FM0F-1130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM110.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0FW00.FM0FW-VMGRP001-FND-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1130 SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1130

// Declare DCMPNT.VMGMAT01 csr
Function FM0F-1140()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGMAT01 empty;
  ;
  VMGMAT01.FK-VEND-CD = FM0FM110.FK-VEND-CD;
  VMGMAT01.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD;
  VMGMAT01.FK-MAT-NBR = "*";
  ;
  ;
  try
    call "IO6880" ("S1", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1140 DECL DCMPNT.VMGMAT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1140

// Fetch DCMPNT.VMGMAT01 csr
Function FM0F-1150()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6880" ("N1", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0FW00.FM0FW-END-VMGMAT01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1150 FETCH DCMPNT.VMGMAT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program nam*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1150

// Select DCMPNT.VMATRL01
Function FM0F-1160()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = VMGMAT01.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1160"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1160 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1160

// Save data in disp storage
Function FM0F-1170()
   /* --------------------------------------------------------------*/
   /* Increment the line index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-IDX == 1) /* If first line on page*/
    ;
    FM0FW01.FK-VEND-CD = FM0FM110.FK-VEND-CD; /* Vendor*/
    FM0FW01.FK-VEND-SNM = FM0FW00.FK-VEND-SNM; /* Vendor name*/
    FM0FW01.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD; /* Mtl group*/
    FM0FW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
    FM0FW01.FM0FM-HDR-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
    FM0FW01.XMU-MAT-UOM-DESC = FM0FW00.XMU-MAT-UOM-DESC; /* UOM desc*/
    FM0FW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
    FM0FW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
    ;
    FM0FW01.VMGRP001-GROUP = VMGRP001.VMGRP001-GROUP; /* Save entire DCMPNT.VMGRP001 record*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW01.FK-MAT-NBR[FM0FW-IDX] = VMGMAT01.FK-MAT-NBR; /* Material nbr*/
  FM0FW01.FK-DEPT-MAT-DESC[FM0FW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0FW01.XMU-MAT-UOM-CD[FM0FW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* UOM*/
  ;
  FM0FW01.VMGMAT01-GROUP[FM0FW-IDX] = VMGMAT01.VMGMAT01-GROUP; /* Save entire VMGMAT01 record*/
  ;
  ;
end // end FM0F-1170

// Save hdr only in disp storage
Function FM0F-1171()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW01.FK-VEND-CD = FM0FM110.FK-VEND-CD; /* Vendor*/
  FM0FW01.FK-VEND-SNM = FM0FW00.FK-VEND-SNM; /* Vendor name*/
  FM0FW01.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD; /* Mtl group*/
  FM0FW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
  FM0FW01.FM0FM-HDR-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
  FM0FW01.XMU-MAT-UOM-DESC = FM0FW00.XMU-MAT-UOM-DESC; /* UOM desc*/
  FM0FW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
  FM0FW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
  ;
  FM0FW01.VMGRP001-GROUP = VMGRP001.VMGRP001-GROUP; /* Save entire DCMPNT.VMGRP001 record*/
  ;
  ;
end // end FM0F-1171

// Add page to temporary storage
Function FM0F-1180()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW01.XXXTSLEN = FM0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0FW01 empty; /* m110 display storage*/
    ;
    FM0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1180"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1180

// Close DCMPNT.VMGMAT01 csr
Function FM0F-1190()
   /* ------------------------------------------------------------*/
   /* Close the cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6880" ("C1", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1190"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1190 CLOSE DCMPNT.VMGMAT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1190

// Format and converse INQ map
Function FM0F-1200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0F-1210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0FM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0FM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0FM110 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0FM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0FM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If necessary, reformat the key information to the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 18) /* No data found*/
    ;
    FM0FM110.FK-VEND-CD = FM0FW00.FK-VEND-CD;
    FM0FM110.FK-MAT-GRP-CD = FM0FW00.FK-MAT-GRP-CD;
  end
  ;
  FM0FM110.FK-VEND-SNM = FM0FW00.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If material group record not found, protect the fields.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-VMGRP001-FND-SW != "Y") /* Data not found*/
    ;
    set FM0FM110.FK-MAT-GRP-DESC invisible, skip;
    set FM0FM110.FM0FM-HDR-UOM-CD invisible, skip;
    set FM0FM110.XMU-MAT-UOM-DESC invisible, skip;
    set FM0FM110.FK-MAT-GRP-RPT-FL invisible, skip;
    set FM0FM110.FK-COPY-CAP-FL invisible, skip;
    ;
    FM0FW00.FM0FW-IDX = 1;
    while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
      ;
      set FM0FM110.FM0FM-SELECT[FM0FW-IDX] invisible, skip;
      set FM0FM110.FK-MAT-NBR[FM0FW-IDX] invisible, skip;
      set FM0FM110.FK-DEPT-MAT-DESC[FM0FW-IDX] invisible, skip;
      set FM0FM110.XMU-MAT-UOM-CD[FM0FW-IDX] invisible, skip;
      ;
      FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, if header was found, protect any detail lines*/
   /* without data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-VMGRP001-FND-SW == "Y") /* Header was found*/
    ;
    FM0FW00.FM0FW-IDX = 1;
    while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
      ;
      if (FM0FM110.FK-MAT-NBR[FM0FW-IDX] == " ") /* No data on this line*/
        ;
        set FM0FM110.FM0FM-SELECT[FM0FW-IDX] invisible, skip;
        set FM0FM110.FK-MAT-NBR[FM0FW-IDX] invisible, skip;
        set FM0FM110.FK-DEPT-MAT-DESC[FM0FW-IDX] invisible, skip;
        set FM0FM110.XMU-MAT-UOM-CD[FM0FW-IDX] invisible, skip;
      end
      ;
      FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    set FM0FM110.FK-VEND-CD cursor; /* Set at vendor code*/
  end
  ;
  ;
  converse FM0FM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0FM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0FM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0F-1200

// Format the data to display
Function FM0F-1210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0FM110 initial; /* Initialize map*/
  ;
  FM0FW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0FW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0FW00.XXXTSPAG > FM0FW00.TA5TSQIX) /* Desired page > highest*/
        FM0FW00.XXXTSPAG = FM0FW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0F-1211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0FM110.XXXTSPAG = FM0FW00.XXXTSPAG; /* Current page*/
  FM0FM110.TA5TSQIX = FM0FW00.TA5TSQIX; /* Max page*/
  ;
  FM0FM110.FK-VEND-CD = FM0FW01.FK-VEND-CD; /* Vendor*/
  FM0FM110.FK-MAT-GRP-CD = FM0FW01.FK-MAT-GRP-CD; /* Material group*/
  FM0FM110.FK-MAT-GRP-DESC = FM0FW01.FK-MAT-GRP-DESC; /* Material group desc*/
  FM0FM110.FM0FM-HDR-UOM-CD = FM0FW01.FM0FM-HDR-UOM-CD; /* Material group UOM*/
  FM0FM110.XMU-MAT-UOM-DESC = FM0FW01.XMU-MAT-UOM-DESC; /* UOM description*/
  FM0FM110.FK-MAT-GRP-RPT-FL = FM0FW01.FK-MAT-GRP-RPT-FL; /* Show on report flag*/
  FM0FM110.FK-COPY-CAP-FL = FM0FW01.FK-COPY-CAP-FL; /* Copy capacity flag*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = 1; /* Initialize idx*/
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    FM0FM110.FK-MAT-NBR[FM0FW-IDX] = FM0FW01.FK-MAT-NBR[FM0FW-IDX]; /* Material nbr*/
    FM0FM110.FK-DEPT-MAT-DESC[FM0FW-IDX] = FM0FW01.FK-DEPT-MAT-DESC[FM0FW-IDX]; /* Material desc*/
    FM0FM110.XMU-MAT-UOM-CD[FM0FW-IDX] = FM0FW01.XMU-MAT-UOM-CD[FM0FW-IDX]; /* Unit of measure*/
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  ;
end // end FM0F-1210

// Read page from temp storage
Function FM0F-1211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW01.XXXTSLEN = FM0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1211

// Check attention identifier
Function FM0F-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0FM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD; /* Mat group*/
    ;
    COMMAREA.CATOAP = "FM0F"; /* to applicaiton*/
    COMMAREA.CAITEM = "I   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0FM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0FM110.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD; /* Mat group*/
      ;
      COMMAREA.CATOAP = FM0FM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0FM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0FM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0FM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0FM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0FM110.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0FM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD; /* Mat group*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* PF8 was not pressed*/
   && converseVar.eventKey not pf13  /* PF13 was not pressed*/
   && converseVar.eventKey not pf14  /* PF14 was not pressed*/
  )                                 
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0F-1300

// Reset Highlighted fields
Function FM0F-1400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0FM110.FK-VEND-CD initialAttributes;
  set FM0FM110.FK-VEND-SNM initialAttributes;
  set FM0FM110.FK-MAT-GRP-CD initialAttributes;
  set FM0FM110.FK-MAT-GRP-DESC initialAttributes;
  set FM0FM110.FM0FM-HDR-UOM-CD initialAttributes;
  set FM0FM110.XMU-MAT-UOM-DESC initialAttributes;
  set FM0FM110.FK-MAT-GRP-RPT-FL initialAttributes;
  set FM0FM110.FK-COPY-CAP-FL initialAttributes;
  ;
  FM0FW00.FM0FW-IDX = 1;
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    set FM0FM110.FM0FM-SELECT[FM0FW-IDX] initialAttributes;
    set FM0FM110.FK-MAT-NBR[FM0FW-IDX] initialAttributes;
    set FM0FM110.FK-DEPT-MAT-DESC[FM0FW-IDX] initialAttributes;
    set FM0FM110.XMU-MAT-UOM-CD[FM0FW-IDX] initialAttributes;
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  set FM0FM110.CATOAP initialAttributes;
  set FM0FM110.CAITEM initialAttributes;
  ;
end // end FM0F-1400

// Verify entered fields
Function FM0F-1500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM110.CAITEM > " "         /* Application data was entered*/
   && converseVar.eventKey not pf13 /* CAP*/
   && converseVar.eventKey not pf14) /* MGLST*/
    ;
    set FM0FM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0F-1510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify detail data for any application transfer.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf13 /* CAP*/
   || converseVar.eventKey is pf14) /* MGLST*/
    ;
    FM0F-1520(); /* Verify detail*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM110.FK-VEND-CD == FM0FW01.FK-VEND-CD
   && FM0FM110.FK-MAT-GRP-CD == FM0FW01.FK-MAT-GRP-CD)
    ;
    FM0F-1520(); /* Verify detail*/
  else
    ;
    FM0F-1530(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0F-1500

// Verify scroll request
Function FM0F-1510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0FW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0FW00.XXXTSPAG >= FM0FW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0F-1510

// Verify detail data
Function FM0F-1520()
   /* ---------------------------------------------------------------*/
   /* Verify select field.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-NBR-MAP-ROWS;
  while (FM0FW00.FM0FW-IDX > 0)
    ;
    if (FM0FM110.FM0FM-SELECT[FM0FW-IDX] == "S" /* If selected*/
     || FM0FM110.FM0FM-SELECT[FM0FW-IDX] == " ") /* Or blank*/
      ;
    else
      ;
      set FM0FM110.FM0FM-SELECT[FM0FW-IDX] cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
    end
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX - 1;
  end
  ;
  ;
end // end FM0F-1520

// Verify header data
Function FM0F-1530()
   /* ---------------------------------------------------------------*/
   /* Verify material group code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0F-1531(); /* Select DCMPNT.VMGRP001*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0F-1532(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0F-1530

// Select DCMPNT.VMGRP001
Function FM0F-1531()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM110.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      set FM0FM110.FK-VEND-CD cursor, bold;
      set FM0FM110.FK-MAT-GRP-CD bold;
      FKWREC.XXX-MOD-ID = "1531";
      converseLib.validationFailed(123); /* Material group code missing or*/
                                   /* invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1531"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1531 SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1531

// Select DCMPNT.VVNDR001
Function FM0F-1532()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0FM110.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0FM110.FK-VEND-CD cursor, bold;
      FKWREC.XXX-MOD-ID = "1532";
      converseLib.validationFailed(21); /* Vendor is missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1532"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1532 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-1532

// Process valid request
Function FM0F-1600()
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0FW00.XXXTSPAG = FM0FW00.XXXTSPAG - 1; /* Decrement page*/
    FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0FW00.XXXTSPAG = FM0FW00.XXXTSPAG + 1; /* Increment page*/
    FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process application transfer request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf13 /* PF13 was pressed*/
   || converseVar.eventKey is pf14) /* PF14 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0FM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0FM110.FK-MAT-GRP-CD; /* Mat group*/
    ;
    FM0FW00.FM0FW-IDX = 1;
    FM0FW00.FM0FW-IDX2 = 1;
    ;
    while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
      ;
      if (FM0FM110.FM0FM-SELECT[FM0FW-IDX] == "S")
        ;
        FKWREC.FK-MAT-NBR[FM0FW-IDX2] = FM0FM110.FK-MAT-NBR[FM0FW-IDX];
        FM0FW00.FM0FW-IDX2 = FM0FW00.FM0FW-IDX2 + 1;
      end
      ;
      FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
    end
    ;
    ;
    if (converseVar.eventKey is pf13) /* PF13 pressed*/
      COMMAREA.CATOAP = "FM0G"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0FM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 pressed*/
      COMMAREA.CATOAP = "FM0M"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0FM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0FM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FM110.FK-VEND-CD != FM0FW01.FK-VEND-CD
   || FM0FM110.FK-MAT-GRP-CD != FM0FW01.FK-MAT-GRP-CD)
    ;
    FM0FW00.FM0FW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0F-1600

// Process add map
Function FM0F-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0F-2100(); /* Obtain the data to display*/
  ;
  FM0F-2200(); /* Format and display the map*/
  ;
  FM0F-2300(); /* Check attention identifier*/
  ;
  FM0F-2400(); /* Reset fields to normal intensity*/
  ;
  FM0F-2500(); /* Verify the entered data*/
  ;
  FM0F-2600(); /* Process valid input request*/
  ;
  ;
end // end FM0F-2000

// Obtain data to display
Function FM0F-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Clear display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0FW01 empty;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-2110(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the material group record.  If a material group record*/
   /* is found,  move the data to the map.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-VMGRP001-FND-SW = "N"; /* Reset switch*/
  ;
  FM0F-2120(); /* Select DCMPNT.VMGRP001*/
  ;
  if (FM0FW00.FM0FW-VMGRP001-FND-SW == "Y") /* If record found*/
    ;
    FM0FM210.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC;
    FM0FM210.FM0FM-HDR-UOM-CD = VMGRP001.XMU-MAT-UOM-CD;
    FM0FM210.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL;
    FM0FM210.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Check every detail line for a material number.  If found, get*/
   /* material information and write to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = 1; /* Initialize index*/
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    if (FM0FM210.FK-MAT-NBR[FM0FW-IDX] > " ") /* If material entered*/
      ;
      FM0F-2130(); /* Select DCMPNT.VMATRL01*/
      FM0F-2140(); /* Save data disp storage*/
    end
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If DMCPNT.VMGRP001 record was found, set up a special message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-VMGRP001-FND-SW == "Y") /* DCMPNT.VMGRP001 found*/
    ;
    FKWREC.XXXMSGNO = 151; /* Mtl grp exists - press enter/pa2*/
    FKWREC.XXX-MOD-ID = "2100"; /* Module identification*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-REQUEST-DATA-SW = "N";
  FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0F-2100

// Select DCMPNT.VVNDR001
Function FM0F-2110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0FM210.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0FW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0FW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2110 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-2110

// Select DCMPNT.VMGRP001
Function FM0F-2120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM210.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM210.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0FW00.FM0FW-VMGRP001-FND-SW = "Y"; /* Record found*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2120 SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-2120

// Select DCMPNT.VMATRL01
Function FM0F-2130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0FM210.FK-MAT-NBR[FM0FW-IDX];
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2130 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-2130

// Save data in display storage
Function FM0F-2140()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW01.FK-VEND-CD == " ") /* If hdr not formatted yet*/
    ;
    FM0FW01.FK-VEND-CD = FM0FM210.FK-VEND-CD; /* Vendor*/
    FM0FW01.FK-VEND-SNM = FM0FW00.FK-VEND-SNM; /* Vendor name*/
    FM0FW01.FK-MAT-GRP-CD = FM0FM210.FK-MAT-GRP-CD; /* Mtl group*/
    FM0FW01.FK-MAT-GRP-DESC = FM0FM210.FK-MAT-GRP-DESC; /* Desc*/
    FM0FW01.FM0FM-HDR-UOM-CD = FM0FM210.FM0FM-HDR-UOM-CD; /* UOM*/
    ;
    if (FM0FM210.FM0FM-HDR-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
     && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If UOM in table and active*/
      ;
      FM0FW01.XMU-MAT-UOM-DESC = XMUTBL.XMU-MAT-UOM-DESC[sysVar.arrayIndex];
    else
      ;
      FM0FW01.XMU-MAT-UOM-DESC = "***************";
    end
    ;
    FM0FW01.FK-MAT-GRP-RPT-FL = FM0FM210.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
    FM0FW01.FK-COPY-CAP-FL = FM0FM210.FK-COPY-CAP-FL; /* Copy cap fl*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW01.FK-MAT-NBR[FM0FW-IDX] = FM0FM210.FK-MAT-NBR[FM0FW-IDX]; /* Material nbr*/
  FM0FW01.FK-DEPT-MAT-DESC[FM0FW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0FW01.XMU-MAT-UOM-CD[FM0FW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* UOM*/
  ;
  ;
end // end FM0F-2140

// Format and converse ADD map
Function FM0F-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0F-2210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0FM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0FM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0FM210 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0FM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0FM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
  FM0FM210.FK-VEND-SNM = FM0FW00.FK-VEND-SNM;
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    set FM0FM210.FK-VEND-CD cursor; /* Set at vendor code*/
  end
  ;
  ;
  converse FM0FM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0FM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0FM210.CAITEM; /* Application data*/
  ;
  ;
end // end FM0F-2200

// Format the data to display
Function FM0F-2210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0FM210 initial; /* Initialize map*/
  ;
  FM0FW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0FM210.FK-VEND-CD = FM0FW01.FK-VEND-CD; /* Vendor*/
  FM0FM210.FK-MAT-GRP-CD = FM0FW01.FK-MAT-GRP-CD; /* Material group*/
  FM0FM210.FK-MAT-GRP-DESC = FM0FW01.FK-MAT-GRP-DESC; /* Material group desc*/
  FM0FM210.FM0FM-HDR-UOM-CD = FM0FW01.FM0FM-HDR-UOM-CD; /* Material group UOM*/
  FM0FM210.XMU-MAT-UOM-DESC = FM0FW01.XMU-MAT-UOM-DESC; /* UOM description*/
  FM0FM210.FK-MAT-GRP-RPT-FL = FM0FW01.FK-MAT-GRP-RPT-FL; /* Show on report flag*/
  FM0FM210.FK-COPY-CAP-FL = FM0FW01.FK-COPY-CAP-FL; /* Copy capacity flag*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = 1; /* Initialize idx*/
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    FM0FM210.FK-MAT-NBR[FM0FW-IDX] = FM0FW01.FK-MAT-NBR[FM0FW-IDX]; /* Material nbr*/
    FM0FM210.FK-DEPT-MAT-DESC[FM0FW-IDX] = FM0FW01.FK-DEPT-MAT-DESC[FM0FW-IDX]; /* Material desc*/
    FM0FM210.XMU-MAT-UOM-CD[FM0FW-IDX] = FM0FW01.XMU-MAT-UOM-CD[FM0FW-IDX]; /* Unit of measure*/
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  ;
end // end FM0F-2210

// Check attention identifier
Function FM0F-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0FM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0FM210.FK-MAT-GRP-CD; /* Mat group*/
    ;
    COMMAREA.CATOAP = "FM0F"; /* to applicaiton*/
    COMMAREA.CAITEM = "A   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0FM210.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0FM210.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-GRP-CD = FM0FM210.FK-MAT-GRP-CD; /* Mat group*/
      ;
      COMMAREA.CATOAP = FM0FM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0FM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0FM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* CAP requested*/
   || converseVar.eventKey is pf14) /* MGLST requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0FM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0FM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0FM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FM0G"; /* TO application*/
      COMMAREA.CAITEM = FM0FM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0M"; /* TO application*/
      COMMAREA.CAITEM = FM0FM210.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0FM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0FM210.FK-MAT-GRP-CD; /* Mat group*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0F-2300

// Reset Highlighted fields
Function FM0F-2400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0FM210.FK-VEND-CD initialAttributes;
  set FM0FM210.FK-VEND-SNM initialAttributes;
  set FM0FM210.FK-MAT-GRP-CD initialAttributes;
  set FM0FM210.FK-MAT-GRP-DESC initialAttributes;
  set FM0FM210.FM0FM-HDR-UOM-CD initialAttributes;
  set FM0FM210.XMU-MAT-UOM-DESC initialAttributes;
  set FM0FM210.FK-MAT-GRP-RPT-FL initialAttributes;
  set FM0FM210.FK-COPY-CAP-FL initialAttributes;
  ;
  FM0FW00.FM0FW-IDX = 1;
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    set FM0FM210.FK-MAT-NBR[FM0FW-IDX] initialAttributes;
    set FM0FM210.FK-DEPT-MAT-DESC[FM0FW-IDX] initialAttributes;
    set FM0FM210.XMU-MAT-UOM-CD[FM0FW-IDX] initialAttributes;
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  set FM0FM210.CATOAP initialAttributes;
  set FM0FM210.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0FM210.FM0FM-HDR-UOM-CD == "?") /* UOM list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XMU codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0FM210.FM0FM-HDR-UOM-CD == "?") /* XMU list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  UNIT OF MEASURE"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMU01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0FM210.FM0FM-HDR-UOM-CD = FM0FW01.FM0FM-HDR-UOM-CD;
    else
      FM0FM210.FM0FM-HDR-UOM-CD = XMUTBL.XMU-MAT-UOM-CD[XX0XWPIX];
    end
    ;
    set FM0FM210.FM0FM-HDR-UOM-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0F-2400

// Verify entered fields
Function FM0F-2500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM210.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0FM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material numbers.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-COUNT = 0; /* Initialize line counter*/
  FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-NBR-MAP-ROWS;
  while (FM0FW00.FM0FW-IDX > 0)
    ;
    if (FM0FM210.FK-MAT-NBR[FM0FW-IDX] > " ")
      FM0FW00.FM0FW-COUNT = FM0FW00.FM0FW-COUNT + 1;
      FM0F-2510(); /* Select DCMPNT.VMATRL01*/
    end
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX - 1;
  end
  ;
  if (FM0FW00.FM0FW-COUNT < 1) /* No lines entered*/
    ;
    set FM0FM210.FK-MAT-NBR[1] cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(142); /* At least 1 line of data must be entered*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify month-end copy flag.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM210.FK-COPY-CAP-FL == "Y"
   || FM0FM210.FK-COPY-CAP-FL == "N"
   || (FM0FM210.FK-COPY-CAP-FL == " "
   && FM0FW00.FM0FW-CONFIRM-ADD-SW == "N"))
    ;
     /* Next sentence*/
  else
    ;
    set FM0FM210.FK-COPY-CAP-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be 'y' or 'n'*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify 'show on reports' flag.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM210.FK-MAT-GRP-RPT-FL == "Y"
   || FM0FM210.FK-MAT-GRP-RPT-FL == "N"
   || (FM0FM210.FK-MAT-GRP-RPT-FL == " "
   && FM0FW00.FM0FW-CONFIRM-ADD-SW == "N"))
    ;
     /* Next sentence*/
  else
    ;
    set FM0FM210.FK-MAT-GRP-RPT-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be 'y' or 'n'*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify UOM code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-CONFIRM-ADD-SW == "Y"
   || (FM0FW00.FM0FW-CONFIRM-ADD-SW == "N"
   && FM0FM210.FM0FM-HDR-UOM-CD != " "))
    ;
    if (FM0FM210.FM0FM-HDR-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
     && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      ;
       /* Next sentence*/
    else
      ;
      set FM0FM210.FM0FM-HDR-UOM-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material group description.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM210.FK-MAT-GRP-DESC == " "
   && FM0FW00.FM0FW-CONFIRM-ADD-SW == "Y")
    ;
    set FM0FM210.FK-MAT-GRP-DESC cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material group.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM210.FK-MAT-GRP-CD == " ") /* Material group missing*/
    ;
    set FM0FM210.FK-MAT-GRP-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(123); /* Material group code missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0F-2520(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    ;
    FM0FW00.FM0FW-CONFIRM-ADD-SW = "N";
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If confirming the add, verify no data changed.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-CONFIRM-ADD-SW == "Y") /* Confirming the add*/
    ;
    if (FM0FM210.FK-VEND-CD != FM0FW01.FK-VEND-CD
     || FM0FM210.FK-MAT-GRP-CD != FM0FW01.FK-MAT-GRP-CD
     || FM0FM210.FK-MAT-GRP-DESC != FM0FW01.FK-MAT-GRP-DESC
     || FM0FM210.FM0FM-HDR-UOM-CD != FM0FW01.FM0FM-HDR-UOM-CD
     || FM0FM210.FK-MAT-GRP-RPT-FL != FM0FW01.FK-MAT-GRP-RPT-FL
     || FM0FM210.FK-COPY-CAP-FL != FM0FW01.FK-COPY-CAP-FL)
      ;
      FKWREC.XXXMSGNO = 30; /* Press enter to continue*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      FM0FW00.FM0FW-REQUEST-DATA-SW = "Y"; /* Get the data*/
      exit stack;
    else
      ;
      FM0FW00.FM0FW-IDX = 1;
      while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
        ;
        if (FM0FM210.FK-MAT-NBR[FM0FW-IDX] != FM0FW01.FK-MAT-NBR[FM0FW-IDX])
          ;
          FKWREC.XXXMSGNO = 30; /* Press enter to continue*/
          FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
          FM0FW00.FM0FW-REQUEST-DATA-SW = "Y"; /* Get the data*/
          exit stack;
        end
        FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
      end
    end
  end
  ;
  ;
end // end FM0F-2500

// Select DCMPNT.VMATRL01
Function FM0F-2510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0FM210.FK-MAT-NBR[FM0FW-IDX];
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FM0FW00.FM0FW-CONFIRM-ADD-SW == "Y") /* If confirming add*/
        ;
        if (FM0FM210.FM0FM-HDR-UOM-CD != VMATRL01.XMU-MAT-UOM-CD)
          ;
          set FM0FM210.FM0FM-HDR-UOM-CD cursor, bold;
          set FM0FM210.XMU-MAT-UOM-CD[FM0FW-IDX] skip, bold;
          FKWREC.XXX-MOD-ID = "2510";
          converseLib.validationFailed(134); /* Material grp uom must match mtl uom*/
        end
      end
      ;
      if (VMATRL01.FK-VEND-CD != FM0FM210.FK-VEND-CD)
        ;
        set FM0FM210.FK-VEND-CD cursor, bold;
        set FM0FM210.FK-MAT-NBR[FM0FW-IDX] bold;
        FKWREC.XXX-MOD-ID = "2510";
        converseLib.validationFailed(132); /* Material exists for a different vendor*/
      end
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0FM210.FK-MAT-NBR[FM0FW-IDX] cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      converseLib.validationFailed(26); /* Material missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2510 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-2510

// Select DCMPNT.VVNDR001
Function FM0F-2520()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0FM210.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0FM210.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2520 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-2520

// Process valid request
Function FM0F-2600()
   /* ------------------------------------------------------------*/
   /* If add not confirmed, confirm it.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-CONFIRM-ADD-SW != "Y") /* Add not confirmed*/
    ;
    FKWREC.XXXMSGNO = 30; /* Press enter to add, pa2 to xcel*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
    FM0FW00.FM0FW-CONFIRM-ADD-SW = "Y"; /* Confirm it*/
    FM0FW00.FM0FW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If add has been confirmed, insert records to the databases.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-DATA-UPDATED-SW = "N";
  ;
  if (FM0FW00.FM0FW-CONFIRM-ADD-SW == "Y") /* Add was confirmed*/
    ;
    XX0XS01(); /* Get date and time*/
    ;
    ;
    /* ==> Check to see if DCMPNT.VGMAT01 record should be inserted.*/
    /* ==> If necessary, insert it.*/
    ;
    FM0FW00.FM0FW-INSERT-VMGRP001-SW = "N";
    ;
    FM0F-2610(); /* Select VMGRP001 - verify it still exists*/
    ;
    if (FM0FW00.FM0FW-INSERT-VMGRP001-SW == "Y") /* Needs to be inserted*/
      FM0F-2620(); /* Insert DCMPNT.VMGRP001*/
    end
    ;
    ;
    /* ==> Insert the DCMPNT.VMGMAT01 records*/
    ;
    FM0FW00.FM0FW-IDX = 1; /* Init index*/
    while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
      ;
      if (FM0FM210.FK-MAT-NBR[FM0FW-IDX] > " ")
        ;
        FM0F-2630(); /* Select VMGMAT01 - verify it doesn't exist*/
        FM0F-2640(); /* Insert DCMPNT.VMGMAT01*/
      end
      ;
      FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set a message if updates were successful.*/
   /* Clear the map/working storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-DATA-UPDATED-SW == "Y") /* If data was updated*/
    ;
    set FM0FM210 initial; /* Clear add map*/
    set FM0FW01 empty; /* Clear display storage*/
    ;
    FKWREC.XXXMSGNO = 1; /* Data sucessfully updated*/
    FM0FW00.FK-VEND-SNM = " ";
    FM0FW00.FM0FW-CONFIRM-ADD-SW = "N";
    FM0FW00.FM0FW-VMGRP001-FND-SW = "N";
    FM0FW00.FM0FW-REQUEST-DATA-SW = "N";
    FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
  end
  ;
  ;
end // end FM0F-2600

// Select DCMPNT.VMGRP001
Function FM0F-2610()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM210.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM210.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      if (FM0FW00.FM0FW-VMGRP001-FND-SW != "Y") /* If was not found earlier*/
        ;
        converseLib.validationFailed(12); /* Data updated by another application*/
        FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
        FM0FW00.FM0FW-CONFIRM-ADD-SW = "N";
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback();
        exit stack;
      else
        FM0FW00.FM0FW-INSERT-VMGRP001-SW = "N"; /* Don't insert rec*/
        return;
      end
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      if (FM0FW00.FM0FW-VMGRP001-FND-SW == "Y") /* If was found earlier*/
        ;
        converseLib.validationFailed(12); /* Data updated by another application*/
        FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
        FM0FW00.FM0FW-CONFIRM-ADD-SW = "N";
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback();
        exit stack;
      else
        ;
        FM0FW00.FM0FW-INSERT-VMGRP001-SW = "Y"; /* Insert the record*/
        return;
      end
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0FW00.FM0FW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2610 SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-2610

// Insert DCMPNT.VMGRP001
Function FM0F-2620()
   /* ------------------------------------------------------------*/
   /* Insert the row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM210.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM210.FK-MAT-GRP-CD;
  VMGRP001.FK-MAT-GRP-DESC = FM0FM210.FK-MAT-GRP-DESC;
  VMGRP001.XMU-MAT-UOM-CD = FM0FM210.FM0FM-HDR-UOM-CD;
  VMGRP001.FK-MAT-GRP-RPT-FL = FM0FM210.FK-MAT-GRP-RPT-FL;
  VMGRP001.FK-COPY-CAP-FL = FM0FM210.FK-COPY-CAP-FL;
  ;
  VMGRP001.ZZZSDT = XX0XW01.XX0XWDAT;
  VMGRP001.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VMGRP001.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VMGRP001.ZZZCHGCT = 0;
  ;
  ;
  try
    call "IO6860" ("A ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0FW00.FM0FW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2620 INSERT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-2620

// Select DCMPNT.VMGMAT01
Function FM0F-2630()
  /* GET FM0F-2630*/
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGMAT01 empty;
  ;
  VMGMAT01.FK-VEND-CD = FM0FM210.FK-VEND-CD;
  VMGMAT01.FK-MAT-GRP-CD = FM0FM210.FK-MAT-GRP-CD;
  VMGMAT01.FK-MAT-NBR = FM0FM210.FK-MAT-NBR[FM0FW-IDX];
  ;
  ;
  try
    call "IO6880" ("S ", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      set FM0FM210.FK-MAT-NBR[FM0FW-IDX] cursor, bold;
      converseLib.validationFailed(16); /* Already row with specified key*/
      FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/
      FM0FW00.FM0FW-CONFIRM-ADD-SW = "N";
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      exit stack;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0FW00.FM0FW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2630 SELECT DCMPNT.VMGMAT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-2630

// Insert DCMPNT.VMGMAT01
Function FM0F-2640()
   /* ------------------------------------------------------------*/
   /* Insert the row to the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGMAT01 empty;
  ;
  VMGMAT01.FK-VEND-CD = FM0FM210.FK-VEND-CD;
  VMGMAT01.FK-MAT-GRP-CD = FM0FM210.FK-MAT-GRP-CD;
  VMGMAT01.FK-MAT-NBR = FM0FM210.FK-MAT-NBR[FM0FW-IDX];
  ;
  VMGMAT01.ZZZSDT = XX0XW01.XX0XWDAT;
  VMGMAT01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VMGMAT01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VMGMAT01.ZZZCHGCT = 0;
  ;
  ;
  try
    call "IO6880" ("A ", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0FW00.FM0FW-DATA-UPDATED-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0FW00.FM0FW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2640"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2640 INSERT DCMPNT.VMGMAT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-2640

// Process change map
Function FM0F-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0F-3100(); /* Obtain the data to display*/
  ;
  FM0F-3200(); /* Format and display the map*/
  ;
  FM0F-3300(); /* Check attention identifier*/
  ;
  FM0F-3400(); /* Reset fields to normal intensity*/
  ;
  FM0F-3500(); /* Verify the entered data*/
  ;
  FM0F-3600(); /* Process valid input request*/
  ;
  ;
end // end FM0F-3000

// Obtain data to display
Function FM0F-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.XXXTSLEN = 866; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0FW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-3110(); /* Purge temp storage*/
  ;
  FM0FW00.FM0FW-VMGRP001-FND-SW = "N"; /* Init switch*/
  FM0FW00.FM0FW-VMGMAT01-FND-SW = "N"; /* Init switch*/
  ;
  FM0FW00.FK-VEND-CD = FM0FM310.FK-VEND-CD; /* Save vendor*/
  FM0FW00.FK-MAT-GRP-CD = FM0FM310.FK-MAT-GRP-CD; /* Save mtl grp*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-3120(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the material group record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-3130(); /* Select DCMPNT.VMGRP001*/
  ;
  if (VMGRP001.XMU-MAT-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
   && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If code in table and active*/
    ;
    FM0FW00.XMU-MAT-UOM-DESC = XMUTBL.XMU-MAT-UOM-DESC[sysVar.arrayIndex]; /* Save desc*/
  else
    ;
    FM0FW00.XMU-MAT-UOM-DESC = "***************";
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare and process a cursor to get all material in the material*/
   /* group from DCMPNT.VMGMAT01.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = 0; /* Initialize index*/
  ;
  FM0FW00.FM0FW-END-VMGMAT01-CSR-SW = "N";
  ;
  FM0F-3140(); /* Declare DCMPNT.VMGMAT01 cursor*/
  FM0F-3150(); /* Fetch DCMPNT.VMGMAT01 cursor*/
  ;
  while (FM0FW00.FM0FW-END-VMGMAT01-CSR-SW != "Y")
    ;
    FM0F-3160(); /* Select DCMPNT.VMATRL01*/
    FM0F-3170(); /* Format a display storage line*/
    ;
    if (FM0FW00.FM0FW-IDX >= FM0FW00.FM0FW-NBR-MAP-ROWS) /* If page full*/
      FM0F-3180(); /* Add page temp store page queue*/
      FM0FW00.FM0FW-IDX = 0; /* Reset index*/
    end
    ;
    FM0F-3150(); /* Fetch DCMPNT.VMGMAT01 cursor*/
  end
  ;
  FM0F-3190(); /* Close DCMPNT.VMGMAT01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save any partially formatted data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-IDX > 0) /* If line(s) were formatted*/
    ;
    FM0F-3180(); /* Add page temp store page queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    if (FM0FW00.FM0FW-VMGRP001-FND-SW == "Y") /* If DCMPNT.VMGRP001 found*/
      ;
      FM0F-3171(); /* Format hdr only to disp storage*/
      FM0F-3180(); /* Add page temp store page queue*/
      ;
      if (FKWREC.XXXMSGNO != 1) /* Update complete - always display this msg*/
        FKWREC.XXXMSGNO = 152; /* No mtls in this mtl group*/
        FKWREC.XXX-MOD-ID = "3100"; /* Module identification*/
      end
    else
      ;
      FKWREC.XXXMSGNO = 18; /* Request processed - no data*/
      FKWREC.XXX-MOD-ID = "3100"; /* Module identification*/
    end
  else
    ;
    FM0FW00.FM0FW-VMGMAT01-FND-SW = "Y"; /* DCMPNT.VMGMAT01 found*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-REQUEST-DATA-SW = "N";
  FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0F-3100

// Purge any temporary storage
Function FM0F-3110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0FW01 empty; /* m310 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0FW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3110

// Select DCMPNT.VVNDR001
Function FM0F-3120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0FM310.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0FW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0FW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3120 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FM0FM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3120

// Select DCMPNT.VMGRP001
Function FM0F-3130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM310.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM310.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0FW00.FM0FW-VMGRP001-FND-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3130 SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FM0FM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3130

// Declare DCMPNT.VMGMAT01 csr
Function FM0F-3140()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGMAT01 empty;
  ;
  VMGMAT01.FK-VEND-CD = FM0FM310.FK-VEND-CD;
  VMGMAT01.FK-MAT-GRP-CD = FM0FM310.FK-MAT-GRP-CD;
  VMGMAT01.FK-MAT-NBR = "*";
  ;
  ;
  try
    call "IO6880" ("S1", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3140 DECL DCMPNT.VMGMAT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FM0FM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3140

// Fetch DCMPNT.VMGMAT01 csr
Function FM0F-3150()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6880" ("N1", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0FW00.FM0FW-END-VMGMAT01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3150 FETCH DCMPNT.VMGMAT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FM0FM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3150

// Select DCMPNT.VMATRL01
Function FM0F-3160()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = VMGMAT01.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3160"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3160 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FM0FM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3160

// Save data in disp storage
Function FM0F-3170()
   /* --------------------------------------------------------------*/
   /* Increment the line index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-IDX == 1) /* If first line on page*/
    ;
    FM0FW01.FK-VEND-CD = FM0FM310.FK-VEND-CD; /* Vendor*/
    FM0FW01.FK-VEND-SNM = FM0FW00.FK-VEND-SNM; /* Vendor name*/
    FM0FW01.FK-MAT-GRP-CD = FM0FM310.FK-MAT-GRP-CD; /* Mtl group*/
    FM0FW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
    FM0FW01.FM0FM-HDR-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
    FM0FW01.XMU-MAT-UOM-DESC = FM0FW00.XMU-MAT-UOM-DESC; /* UOM desc*/
    FM0FW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
    FM0FW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
    ;
    FM0FW01.VMGRP001-GROUP = VMGRP001.VMGRP001-GROUP; /* Save entire DCMPNT.VMGRP001 record*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW01.FK-MAT-NBR[FM0FW-IDX] = VMGMAT01.FK-MAT-NBR; /* Material nbr*/
  FM0FW01.FK-DEPT-MAT-DESC[FM0FW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0FW01.XMU-MAT-UOM-CD[FM0FW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* UOM*/
  ;
  FM0FW01.VMGMAT01-GROUP = VMGMAT01.VMGMAT01-GROUP; /* Save entire DCMPNT.VMGMAT01 record*/
  ;
  ;
end // end FM0F-3170

// Save hdr only in disp storage
Function FM0F-3171()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW01.FK-VEND-CD = FM0FM310.FK-VEND-CD; /* Vendor*/
  FM0FW01.FK-VEND-SNM = FM0FW00.FK-VEND-SNM; /* Vendor name*/
  FM0FW01.FK-MAT-GRP-CD = FM0FM310.FK-MAT-GRP-CD; /* Mtl group*/
  FM0FW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
  FM0FW01.FM0FM-HDR-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
  FM0FW01.XMU-MAT-UOM-DESC = FM0FW00.XMU-MAT-UOM-DESC; /* UOM desc*/
  FM0FW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
  FM0FW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
  ;
  FM0FW01.VMGRP001-GROUP = VMGRP001.VMGRP001-GROUP; /* Save entire DCMPNT.VMGRP001 record*/
  ;
  ;
end // end FM0F-3171

// Add page to temporary storage
Function FM0F-3180()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW01.XXXTSLEN = FM0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0FW01 empty; /* m310 display storage*/
    ;
    FM0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3180"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3180

// Close DCMPNT.VMGMAT01 csr
Function FM0F-3190()
   /* ------------------------------------------------------------*/
   /* Close the cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6880" ("C1", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3190"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3190 CLOSE DCMPNT.VMGMAT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FM0FM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3190

// Format and converse ADD map
Function FM0F-3200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0F-3210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0FM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0FM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0FM310 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0FM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0FM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Move some of the header fields to the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 18) /* If no data found*/
    ;
    FM0FM310.FK-VEND-CD = FM0FW00.FK-VEND-CD; /* Restore vendor*/
    FM0FM310.FK-MAT-GRP-CD = FM0FW00.FK-MAT-GRP-CD; /* Restore mt grp*/
  end
  ;
  FM0FM310.FK-VEND-SNM = FM0FW00.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If material group record not found, protect the fields.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-VMGRP001-FND-SW != "Y") /* Data not found*/
    ;
    set FM0FM310.FK-MAT-GRP-DESC invisible, skip;
    set FM0FM310.FM0FM-HDR-UOM-CD invisible, skip;
    set FM0FM310.XMU-MAT-UOM-DESC invisible, skip;
    set FM0FM310.FK-MAT-GRP-RPT-FL invisible, skip;
    set FM0FM310.FK-COPY-CAP-FL invisible, skip;
    ;
    FM0FW00.FM0FW-IDX = 1;
    while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
      ;
      set FM0FM310.FK-MAT-NBR[FM0FW-IDX] invisible, skip;
      set FM0FM310.FK-DEPT-MAT-DESC[FM0FW-IDX] invisible, skip;
      set FM0FM310.XMU-MAT-UOM-CD[FM0FW-IDX] invisible, skip;
      ;
      FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, if header was found, protect any detail lines*/
   /* without data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-VMGRP001-FND-SW == "Y") /* Header was found*/
    ;
    FM0FW00.FM0FW-IDX = 1;
    while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
      ;
      if (FM0FM310.FK-MAT-NBR[FM0FW-IDX] == " ") /* No data on this line*/
        ;
        set FM0FM310.FK-MAT-NBR[FM0FW-IDX] invisible, skip;
        set FM0FM310.FK-DEPT-MAT-DESC[FM0FW-IDX] invisible, skip;
        set FM0FM310.XMU-MAT-UOM-CD[FM0FW-IDX] invisible, skip;
      end
      ;
      FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    set FM0FM310.FK-VEND-CD cursor; /* Set at vendor code*/
  end
  ;
  ;
  converse FM0FM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0FM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0FM310.CAITEM; /* Application data*/
  ;
  ;
end // end FM0F-3200

// Format the data to display
Function FM0F-3210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0FM310 initial; /* Initialize map*/
  ;
  FM0FW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0FW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0FW00.XXXTSPAG > FM0FW00.TA5TSQIX) /* Desired page > highest*/
        FM0FW00.XXXTSPAG = FM0FW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0F-3211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0FM310.XXXTSPAG = FM0FW00.XXXTSPAG; /* Current page*/
  FM0FM310.TA5TSQIX = FM0FW00.TA5TSQIX; /* Max page*/
  ;
  FM0FM310.FK-VEND-CD = FM0FW01.FK-VEND-CD; /* Vendor*/
  FM0FM310.FK-MAT-GRP-CD = FM0FW01.FK-MAT-GRP-CD; /* Material group*/
  FM0FM310.FK-MAT-GRP-DESC = FM0FW01.FK-MAT-GRP-DESC; /* Material group desc*/
  FM0FM310.FM0FM-HDR-UOM-CD = FM0FW01.FM0FM-HDR-UOM-CD; /* Material group UOM*/
  FM0FM310.XMU-MAT-UOM-DESC = FM0FW01.XMU-MAT-UOM-DESC; /* UOM description*/
  FM0FM310.FK-MAT-GRP-RPT-FL = FM0FW01.FK-MAT-GRP-RPT-FL; /* Show on report flag*/
  FM0FM310.FK-COPY-CAP-FL = FM0FW01.FK-COPY-CAP-FL; /* Copy capacity flag*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = 1; /* Initialize idx*/
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    FM0FM310.FK-MAT-NBR[FM0FW-IDX] = FM0FW01.FK-MAT-NBR[FM0FW-IDX]; /* Material nbr*/
    FM0FM310.FK-DEPT-MAT-DESC[FM0FW-IDX] = FM0FW01.FK-DEPT-MAT-DESC[FM0FW-IDX]; /* Material desc*/
    FM0FM310.XMU-MAT-UOM-CD[FM0FW-IDX] = FM0FW01.XMU-MAT-UOM-CD[FM0FW-IDX]; /* Unit of measure*/
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  ;
end // end FM0F-3210

// Read page from temp storage
Function FM0F-3211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW01.XXXTSLEN = FM0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3211

// Check attention identifier
Function FM0F-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0FM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0FM310.FK-MAT-GRP-CD; /* Mat group*/
    ;
    COMMAREA.CATOAP = "FM0F"; /* to applicaiton*/
    COMMAREA.CAITEM = "C   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0FM310.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0FM310.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-GRP-CD = FM0FM310.FK-MAT-GRP-CD; /* Mat group*/
      ;
      COMMAREA.CATOAP = FM0FM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0FM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0FM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* CAP requested*/
   || converseVar.eventKey is pf14) /* MGLST requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0FM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0FM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0FM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FM0G"; /* TO application*/
      COMMAREA.CAITEM = FM0FM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0M"; /* TO application*/
      COMMAREA.CAITEM = FM0FM310.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0FM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0FM310.FK-MAT-GRP-CD; /* Mat group*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* PF7 was not pressed*/
   && converseVar.eventKey not pf8)  /* PF8 was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0F-3300

// Reset Highlighted fields
Function FM0F-3400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0FM310.FK-VEND-CD initialAttributes;
  set FM0FM310.FK-VEND-SNM initialAttributes;
  set FM0FM310.FK-MAT-GRP-CD initialAttributes;
  set FM0FM310.FK-MAT-GRP-DESC initialAttributes;
  set FM0FM310.FM0FM-HDR-UOM-CD initialAttributes;
  set FM0FM310.XMU-MAT-UOM-DESC initialAttributes;
  set FM0FM310.FK-MAT-GRP-RPT-FL initialAttributes;
  set FM0FM310.FK-COPY-CAP-FL initialAttributes;
  ;
  FM0FW00.FM0FW-IDX = 1;
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    set FM0FM310.FK-MAT-NBR[FM0FW-IDX] initialAttributes;
    set FM0FM310.FK-DEPT-MAT-DESC[FM0FW-IDX] initialAttributes;
    set FM0FM310.XMU-MAT-UOM-CD[FM0FW-IDX] initialAttributes;
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  set FM0FM310.CATOAP initialAttributes;
  set FM0FM310.CAITEM initialAttributes;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0FM310.FM0FM-HDR-UOM-CD == "?") /* UOM list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XMU codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0FM310.FM0FM-HDR-UOM-CD == "?") /* XMU list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  UNIT OF MEASURE"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMU01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0FM310.FM0FM-HDR-UOM-CD = FM0FW01.FM0FM-HDR-UOM-CD;
    else
      FM0FM310.FM0FM-HDR-UOM-CD = XMUTBL.XMU-MAT-UOM-CD[XX0XWPIX];
    end
    ;
    set FM0FM310.FM0FM-HDR-UOM-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0F-3400

// Verify entered fields
Function FM0F-3500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM310.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0FM310.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0F-3530(); /* Verify scroll request*/
    return;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If the key data changed, verify it.  Otherwise verify the*/
   /* non-key data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM310.FK-VEND-CD == FM0FW01.FK-VEND-CD /* Same vendor*/
   && FM0FM310.FK-MAT-GRP-CD == FM0FW01.FK-MAT-GRP-CD) /* Same mat group*/
    ;
    FM0F-3510(); /* Verify non-key data*/
  else
    ;
    FM0F-3520(); /* Verify key data*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    ;
    exit stack;
  end
  ;
  ;
end // end FM0F-3500

// Verify non-key data
Function FM0F-3510()
   /* ---------------------------------------------------------------*/
   /* Verify month-end copy flag.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM310.FK-COPY-CAP-FL == "Y"
   || FM0FM310.FK-COPY-CAP-FL == "N")
    ;
     /* Next sentence*/
  else
    ;
    set FM0FM310.FK-COPY-CAP-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be 'y' or 'n'*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify 'show on reports' flag.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM310.FK-MAT-GRP-RPT-FL == "Y"
   || FM0FM310.FK-MAT-GRP-RPT-FL == "N")
    ;
     /* Next sentence*/
  else
    ;
    set FM0FM310.FK-MAT-GRP-RPT-FL cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be 'y' or 'n'*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify UOM code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM310.FM0FM-HDR-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
   && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    ;
     /* Next sentence*/
  else
    ;
    set FM0FM310.FM0FM-HDR-UOM-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
  FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-NBR-MAP-ROWS;
  while (FM0FW00.FM0FW-IDX > 0)
    ;
    if (FM0FM310.FK-MAT-NBR[FM0FW-IDX] > " ") /* If material on line*/
      ;
      if (FM0FM310.XMU-MAT-UOM-CD[FM0FW-IDX] != FM0FM310.FM0FM-HDR-UOM-CD)
        ;
        set FM0FM310.FM0FM-HDR-UOM-CD cursor, bold;
        set FM0FM310.XMU-MAT-UOM-CD[FM0FW-IDX] bold, skip;
        converseLib.validationFailed(134); /* Mtl group uom must match material uom*/
        FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
      end
    end
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX - 1;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material group description.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM310.FK-MAT-GRP-DESC == " ") /* Description not entered*/
    ;
    set FM0FM310.FK-MAT-GRP-DESC cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
end // end FM0F-3510

// Verify key data
Function FM0F-3520()
   /* ---------------------------------------------------------------*/
   /* Verify material group.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0F-3521(); /* Select DCMPNT.VMGRP001*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0F-3522(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0F-3520

// Select DCMPNT.VMGRP001
Function FM0F-3521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM310.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM310.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0FM310.FK-VEND-CD cursor, bold; /* Highlight*/
      set FM0FM310.FK-MAT-GRP-CD bold;
      FKWREC.XXX-MOD-ID = "3521"; /* Module identification*/
      converseLib.validationFailed(123); /* Material group code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3521 SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3521

// Select DCMPNT.VVNDR001
Function FM0F-3522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0FM310.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0FM310.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3522"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3522 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3522

// Verify scroll request
Function FM0F-3530()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0FW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0FW00.XXXTSPAG >= FM0FW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0F-3530

// Process valid request
Function FM0F-3600()
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0FW00.XXXTSPAG = FM0FW00.XXXTSPAG - 1; /* Decrement page*/
    FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0FW00.XXXTSPAG = FM0FW00.XXXTSPAG + 1; /* Increment page*/
    FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key data changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FM310.FK-VEND-CD == FM0FW01.FK-VEND-CD
   && FM0FM310.FK-MAT-GRP-CD == FM0FW01.FK-MAT-GRP-CD)
    ;
     /* Next sentence*/
  else
    ;
    FM0FW00.FM0FW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If non-key data was changed, update the material group record.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-DATA-UPDATED-SW = "N";
  ;
  if (FM0FM310.FK-MAT-GRP-DESC == FM0FW01.FK-MAT-GRP-DESC
   && FM0FM310.FM0FM-HDR-UOM-CD == FM0FW01.FM0FM-HDR-UOM-CD
   && FM0FM310.FK-MAT-GRP-RPT-FL == FM0FW01.FK-MAT-GRP-RPT-FL
   && FM0FM310.FK-COPY-CAP-FL == FM0FW01.FK-COPY-CAP-FL)
    ;
     /* Next sentence*/
  else
    ;
    XX0XS01();
    ;
    FM0F-3610(); /* Update DCMPNT.VMGRP001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set a message if update was successful.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-DATA-UPDATED-SW == "Y") /* If data was updated*/
    ;
    FKWREC.XXXMSGNO = 1; /* Data successfully updated*/
    FKWREC.XXX-MOD-ID = "3600";
    FM0FW00.FM0FW-REQUEST-DATA-SW = "Y";
  end
  ;
  ;
end // end FM0F-3600

// Update DCMPNT.VMGRP001
Function FM0F-3610()
   /* ------------------------------------------------------------*/
   /* Update the requested table row.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.VMGRP001-GROUP = FM0FW01.VMGRP001-GROUP;
  ;
  VMGRP001.FK-MAT-GRP-DESC = FM0FM310.FK-MAT-GRP-DESC;
  VMGRP001.XMU-MAT-UOM-CD = FM0FM310.FM0FM-HDR-UOM-CD;
  VMGRP001.FK-MAT-GRP-RPT-FL = FM0FM310.FK-MAT-GRP-RPT-FL;
  VMGRP001.FK-COPY-CAP-FL = FM0FM310.FK-COPY-CAP-FL;
  ;
  VMGRP001.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VMGRP001.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  ;
  try
    call "IO6860" ("U ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0FW00.FM0FW-DATA-UPDATED-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FKWREC.XXXMSGNO = 12; /* Data updated by another*/
      FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
      FM0FW00.FM0FW-REQUEST-DATA-SW = "Y";
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  ;
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3610 UPDATE DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-3610

// Process delete map
Function FM0F-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0F-4100(); /* Obtain the data to display*/
  ;
  FM0F-4200(); /* Format and display the map*/
  ;
  FM0F-4300(); /* Check attention identifier*/
  ;
  FM0F-4400(); /* Reset fields to normal intensity*/
  ;
  FM0F-4500(); /* Verify the entered data*/
  ;
  FM0F-4600(); /* Process valid input request*/
  ;
  ;
end // end FM0F-4000

// Obtain data to display
Function FM0F-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.XXXTSLEN = 866; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0FW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-4110(); /* Purge temp storage*/
  ;
  FM0FW00.FM0FW-VMGRP001-FND-SW = "N"; /* Init switch*/
  FM0FW00.FM0FW-VMGMAT01-FND-SW = "N"; /* Init switch*/
  ;
  FM0FW00.FK-VEND-CD = FM0FM410.FK-VEND-CD; /* Save vendor*/
  FM0FW00.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD; /* Save mtl grp*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-4120(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the material group record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0F-4130(); /* Select DCMPNT.VMGRP001*/
  ;
  if (VMGRP001.XMU-MAT-UOM-CD in XMUTBL.XMU-MAT-UOM-CD
   && XMUTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* If code in table and active*/
    ;
    FM0FW00.XMU-MAT-UOM-DESC = XMUTBL.XMU-MAT-UOM-DESC[sysVar.arrayIndex]; /* Save desc*/
  else
    ;
    FM0FW00.XMU-MAT-UOM-DESC = "***************";
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare and process a cursor to get all material in the material*/
   /* group from DCMPNT.VMGMAT01.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = 0; /* Initialize index*/
  ;
  FM0FW00.FM0FW-END-VMGMAT01-CSR-SW = "N";
  ;
  FM0F-4140(); /* Declare DCMPNT.VMGMAT01 cursor*/
  FM0F-4150(); /* Fetch DCMPNT.VMGMAT01 cursor*/
  ;
  while (FM0FW00.FM0FW-END-VMGMAT01-CSR-SW != "Y")
    ;
    FM0F-4160(); /* Select DCMPNT.VMATRL01*/
    FM0F-4170(); /* Format a display storage line*/
    ;
    if (FM0FW00.FM0FW-IDX >= FM0FW00.FM0FW-NBR-MAP-ROWS) /* If page full*/
      FM0F-4180(); /* Add page temp store page queue*/
      FM0FW00.FM0FW-IDX = 0; /* Reset index*/
    end
    ;
    FM0F-4150(); /* Fetch DCMPNT.VMGMAT01 cursor*/
  end
  ;
  FM0F-4190(); /* Close DCMPNT.VMGMAT01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save any partially formatted data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-IDX > 0) /* If line(s) were formatted*/
    ;
    FM0F-4180(); /* Add page temp store page queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    if (FM0FW00.FM0FW-VMGRP001-FND-SW == "Y") /* If DCMPNT.VMGRP001 found*/
      ;
      FM0F-4171(); /* Format hdr only to disp storage*/
      FM0F-4180(); /* Add page temp store page queue*/
      ;
      FKWREC.XXXMSGNO = 152; /* No mtls in this mtl group*/
      FKWREC.XXX-MOD-ID = "4100"; /* Module identification*/
    else
      ;
      FKWREC.XXXMSGNO = 18; /* Request processed - no data*/
      FKWREC.XXX-MOD-ID = "4100"; /* Module identification*/
    end
  else
    ;
    FM0FW00.FM0FW-VMGMAT01-FND-SW = "Y"; /* DCMPNT.VMGMAT01 found*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-REQUEST-DATA-SW = "N";
  FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0F-4100

// Purge any temporary storage
Function FM0F-4110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0FW01 empty; /* m410 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0FW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4110

// Select DCMPNT.VVNDR001
Function FM0F-4120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0FM410.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0FW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0FW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4120 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4120

// Select DCMPNT.VMGRP001
Function FM0F-4130()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM410.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      FM0FW00.FM0FW-VMGRP001-FND-SW = "Y";
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4130 SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4130

// Declare DCMPNT.VMGMAT01 csr
Function FM0F-4140()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGMAT01 empty;
  ;
  VMGMAT01.FK-VEND-CD = FM0FM410.FK-VEND-CD;
  VMGMAT01.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD;
  VMGMAT01.FK-MAT-NBR = "*";
  ;
  ;
  try
    call "IO6880" ("S1", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4140 DECL DCMPNT.VMGMAT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4140

// Fetch DCMPNT.VMGMAT01 csr
Function FM0F-4150()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6880" ("N1", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0FW00.FM0FW-END-VMGMAT01-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4150 FETCH DCMPNT.VMGMAT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4150

// Select DCMPNT.VMATRL01
Function FM0F-4160()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = VMGMAT01.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4160"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4160 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4160

// Save data in disp storage
Function FM0F-4170()
   /* --------------------------------------------------------------*/
   /* Increment the line index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-IDX == 1) /* If first line on page*/
    ;
    FM0FW01.FK-VEND-CD = FM0FM410.FK-VEND-CD; /* Vendor*/
    FM0FW01.FK-VEND-SNM = FM0FW00.FK-VEND-SNM; /* Vendor name*/
    FM0FW01.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD; /* Mtl group*/
    FM0FW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
    FM0FW01.FM0FM-HDR-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
    FM0FW01.XMU-MAT-UOM-DESC = FM0FW00.XMU-MAT-UOM-DESC; /* UOM desc*/
    FM0FW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
    FM0FW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
    FM0FW01.FM0FM-DEL-MAT-GRP-FL = "N"; /* Delete flag*/
    ;
    FM0FW01.VMGRP001-GROUP = VMGRP001.VMGRP001-GROUP; /* Save entire DCMPNT.VMGRP001 record*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW01.FK-MAT-NBR[FM0FW-IDX] = VMGMAT01.FK-MAT-NBR; /* Material nbr*/
  FM0FW01.FK-DEPT-MAT-DESC[FM0FW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0FW01.XMU-MAT-UOM-CD[FM0FW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* UOM*/
  ;
  FM0FW01.VMGMAT01-GROUP = VMGMAT01.VMGMAT01-GROUP; /* Save entire DCMPNT.VMGMAT01 record*/
  ;
  ;
end // end FM0F-4170

// Save hdr only in disp storage
Function FM0F-4171()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0FW01.FK-VEND-CD = FM0FM410.FK-VEND-CD; /* Vendor*/
  FM0FW01.FK-VEND-SNM = FM0FW00.FK-VEND-SNM; /* Vendor name*/
  FM0FW01.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD; /* Mtl group*/
  FM0FW01.FK-MAT-GRP-DESC = VMGRP001.FK-MAT-GRP-DESC; /* Desc*/
  FM0FW01.FM0FM-HDR-UOM-CD = VMGRP001.XMU-MAT-UOM-CD; /* UOM*/
  FM0FW01.XMU-MAT-UOM-DESC = FM0FW00.XMU-MAT-UOM-DESC; /* UOM desc*/
  FM0FW01.FK-MAT-GRP-RPT-FL = VMGRP001.FK-MAT-GRP-RPT-FL; /* Rpt fl*/
  FM0FW01.FK-COPY-CAP-FL = VMGRP001.FK-COPY-CAP-FL; /* Copy cap fl*/
  FM0FW01.FM0FM-DEL-MAT-GRP-FL = "N"; /* Delete entire grp flag*/
  ;
  FM0FW01.VMGRP001-GROUP = VMGRP001.VMGRP001-GROUP; /* Save entire DCMPNT.VMGRP001 record*/
  ;
  ;
end // end FM0F-4171

// Add page to temporary storage
Function FM0F-4180()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW01.XXXTSLEN = FM0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0FW01 empty; /* m410 display storage*/
    ;
    FM0FW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4180"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4180

// Close DCMPNT.VMGMAT01 csr
Function FM0F-4190()
   /* ------------------------------------------------------------*/
   /* Close the cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6880" ("C1", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4190"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4190 CLOSE DCMPNT.VMGMAT01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4190

// Format and converse DEL map
Function FM0F-4200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0F-4210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0FM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0FM410.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0FM410 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0FM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0FM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If necessary, restore the key information to the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 18) /* If no data found*/
    ;
    FM0FM410.FK-VEND-CD = FM0FW00.FK-VEND-CD;
    FM0FM410.FK-MAT-GRP-CD = FM0FW00.FK-MAT-GRP-CD;
  end
  ;
  FM0FM410.FK-VEND-SNM = FM0FW00.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If material group record not found, protect the fields.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-VMGRP001-FND-SW != "Y") /* Data not found*/
    ;
    set FM0FM410.XXXTSPAG invisible, skip; /* Page nbr*/
    set FM0FM410.TA5TSQIX invisible, skip; /* Max page*/
    ;
    set FM0FM410.FK-MAT-GRP-DESC invisible, skip;
    set FM0FM410.FM0FM-HDR-UOM-CD invisible, skip;
    set FM0FM410.XMU-MAT-UOM-DESC invisible, skip;
    set FM0FM410.FK-MAT-GRP-RPT-FL invisible, skip;
    set FM0FM410.FK-COPY-CAP-FL invisible, skip;
    set FM0FM410.FM0FM-DEL-MAT-GRP-FL invisible, skip;
    ;
    FM0FW00.FM0FW-IDX = 1;
    while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
      ;
      set FM0FM410.FM0FM-SELECT[FM0FW-IDX] invisible, skip;
      set FM0FM410.FK-MAT-NBR[FM0FW-IDX] invisible, skip;
      set FM0FM410.FK-DEPT-MAT-DESC[FM0FW-IDX] invisible, skip;
      set FM0FM410.XMU-MAT-UOM-CD[FM0FW-IDX] invisible, skip;
      ;
      FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, if header was found, protect any detail lines*/
   /* without data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-VMGRP001-FND-SW == "Y") /* Header was found*/
    ;
    FM0FW00.FM0FW-IDX = 1;
    while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
      ;
      if (FM0FM410.FK-MAT-NBR[FM0FW-IDX] == " ") /* No data on this line*/
        ;
        set FM0FM410.FM0FM-SELECT[FM0FW-IDX] invisible, skip;
        set FM0FM410.FK-MAT-NBR[FM0FW-IDX] invisible, skip;
        set FM0FM410.FK-DEPT-MAT-DESC[FM0FW-IDX] invisible, skip;
        set FM0FM410.XMU-MAT-UOM-CD[FM0FW-IDX] invisible, skip;
      end
      ;
      FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    set FM0FM410.FK-VEND-CD cursor; /* Set at vendor code*/
  end
  ;
  ;
  converse FM0FM410 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0FM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0FM410.CAITEM; /* Application data*/
  ;
  ;
end // end FM0F-4200

// Format the data to display
Function FM0F-4210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0FM410 initial; /* Initialize map*/
  ;
  FM0FW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0FW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0FW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0FW00.XXXTSPAG > FM0FW00.TA5TSQIX) /* Desired page > highest*/
        FM0FW00.XXXTSPAG = FM0FW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0F-4211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0FM410.XXXTSPAG = FM0FW00.XXXTSPAG; /* Current page*/
  FM0FM410.TA5TSQIX = FM0FW00.TA5TSQIX; /* Max page*/
  ;
  FM0FM410.FK-VEND-CD = FM0FW01.FK-VEND-CD; /* Vendor*/
  FM0FM410.FK-MAT-GRP-CD = FM0FW01.FK-MAT-GRP-CD; /* Material group*/
  FM0FM410.FK-MAT-GRP-DESC = FM0FW01.FK-MAT-GRP-DESC; /* Material group desc*/
  FM0FM410.FM0FM-HDR-UOM-CD = FM0FW01.FM0FM-HDR-UOM-CD; /* Material group UOM*/
  FM0FM410.XMU-MAT-UOM-DESC = FM0FW01.XMU-MAT-UOM-DESC; /* UOM description*/
  FM0FM410.FK-MAT-GRP-RPT-FL = FM0FW01.FK-MAT-GRP-RPT-FL; /* Show on report flag*/
  FM0FM410.FK-COPY-CAP-FL = FM0FW01.FK-COPY-CAP-FL; /* Copy capacity flag*/
  FM0FM410.FM0FM-DEL-MAT-GRP-FL = FM0FW01.FM0FM-DEL-MAT-GRP-FL; /* Delete mtl group flag*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = 1; /* Initialize idx*/
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    FM0FM410.FK-MAT-NBR[FM0FW-IDX] = FM0FW01.FK-MAT-NBR[FM0FW-IDX]; /* Material nbr*/
    FM0FM410.FK-DEPT-MAT-DESC[FM0FW-IDX] = FM0FW01.FK-DEPT-MAT-DESC[FM0FW-IDX]; /* Material desc*/
    FM0FM410.XMU-MAT-UOM-CD[FM0FW-IDX] = FM0FW01.XMU-MAT-UOM-CD[FM0FW-IDX]; /* Unit of measure*/
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  ;
end // end FM0F-4210

// Read page from temp storage
Function FM0F-4211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW01.XXXTSLEN = FM0FW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0FW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0FW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4211

// Check attention identifier
Function FM0F-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0FM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD; /* Mat group*/
    ;
    COMMAREA.CATOAP = "FM0F"; /* to applicaiton*/
    COMMAREA.CAITEM = "D   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0FM410.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FM410.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-VEND-CD[1] = FM0FM410.FK-VEND-CD; /* Vendor*/
      FKWREC.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD; /* Mat group*/
      ;
      COMMAREA.CATOAP = FM0FM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0FM410.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0FM410.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf13 /* CAP requested*/
   || converseVar.eventKey is pf14) /* MGLST requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0FM410"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0FM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0FM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FM0G"; /* TO application*/
      COMMAREA.CAITEM = FM0FM410.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0M"; /* TO application*/
      COMMAREA.CAITEM = FM0FM410.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-VEND-CD[1] = FM0FM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD; /* Mat group*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* PF7 was not pressed*/
   && converseVar.eventKey not pf8)  /* PF8 was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0F-4300

// Reset Highlighted fields
Function FM0F-4400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0FM410.FK-VEND-CD initialAttributes;
  set FM0FM410.FK-VEND-SNM initialAttributes;
  set FM0FM410.FK-MAT-GRP-CD initialAttributes;
  set FM0FM410.FK-MAT-GRP-DESC initialAttributes;
  set FM0FM410.FM0FM-HDR-UOM-CD initialAttributes;
  set FM0FM410.XMU-MAT-UOM-DESC initialAttributes;
  set FM0FM410.FK-MAT-GRP-RPT-FL initialAttributes;
  set FM0FM410.FK-COPY-CAP-FL initialAttributes;
  ;
  FM0FW00.FM0FW-IDX = 1;
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    set FM0FM410.FM0FM-SELECT[FM0FW-IDX] initialAttributes;
    set FM0FM410.FK-MAT-NBR[FM0FW-IDX] initialAttributes;
    set FM0FM410.FK-DEPT-MAT-DESC[FM0FW-IDX] initialAttributes;
    set FM0FM410.XMU-MAT-UOM-CD[FM0FW-IDX] initialAttributes;
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  set FM0FM410.CATOAP initialAttributes;
  set FM0FM410.CAITEM initialAttributes;
  ;
end // end FM0F-4400

// Verify entered fields
Function FM0F-4500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM410.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0FM410.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0F-4510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0) /* No errors*/
      return;
    else
      FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N";
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM410.FK-VEND-CD == FM0FW01.FK-VEND-CD
   && FM0FM410.FK-MAT-GRP-CD == FM0FW01.FK-MAT-GRP-CD)
    ;
    FM0F-4520(); /* Verify detail*/
  else
    ;
    FM0F-4530(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N";
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify no data was changed during the confirm.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-CONFIRM-DELETE-SW == "Y") /* Confirming delete*/
    ;
    /* ===> First verify that data is still selected for delete*/
    ;
    if (FM0FM410.FM0FM-DEL-MAT-GRP-FL == "N" /* If del grp = 'n'*/
     && FM0FM410.FM0FM-SELECT[1] != "S"      /* and no mtls selected*/
     && FM0FM410.FM0FM-SELECT[2] != "S"      
     && FM0FM410.FM0FM-SELECT[3] != "S"      
     && FM0FM410.FM0FM-SELECT[4] != "S"      
     && FM0FM410.FM0FM-SELECT[5] != "S"      
     && FM0FM410.FM0FM-SELECT[6] != "S"      
     && FM0FM410.FM0FM-SELECT[7] != "S"      
     && FM0FM410.FM0FM-SELECT[8] != "S"      
     && FM0FM410.FM0FM-SELECT[9] != "S"      
     && FM0FM410.FM0FM-SELECT[10] != "S"     
     && FM0FM410.FM0FM-SELECT[11] != "S"     
     && FM0FM410.FM0FM-SELECT[12] != "S"     
     && FM0FM410.FM0FM-SELECT[13] != "S")   
      ;
      FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N"; /* Reset switch*/
      FM0F-4610(); /* Save select values*/
      exit stack;
    else
      ;
      ;
      /* ===> At this point we know data is still selected for delete.*/
      /* ===> Verify it did not change*/
      ;
      if (FM0FM410.FM0FM-DEL-MAT-GRP-FL != FM0FW00.FM0FM-DEL-MAT-GRP-FL)
        ;
        FM0F-4610(); /* Save select values*/
        FKWREC.XXXMSGNO = 38; /* Press enter to delete*/
        FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
        exit stack;
      else
        ;
        FM0FW00.FM0FW-IDX = 1;
        while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
          ;
          if (FM0FM410.FM0FM-SELECT[FM0FW-IDX]
           != FM0FW00.FM0FM-SELECT[FM0FW-IDX]) /* Select changed*/
            ;
            FM0F-4610(); /* Save select values*/
            FM0FW00.FM0FW-CONFIRM-DELETE-SW = "Y";
            FKWREC.XXXMSGNO = 38; /* Press enter to delete*/
            FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
            exit stack;
          end
          FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
        end
      end
    end
  end
  ;
  ;
end // end FM0F-4500

// Verify scroll request
Function FM0F-4510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0FW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0FW00.XXXTSPAG >= FM0FW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0F-4510

// Verify detail data
Function FM0F-4520()
   /* ---------------------------------------------------------------*/
   /* Verify select field.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-NBR-MAP-ROWS;
  while (FM0FW00.FM0FW-IDX > 0)
    ;
    if (FM0FM410.FM0FM-SELECT[FM0FW-IDX] == "S" /* If selected*/
     || FM0FM410.FM0FM-SELECT[FM0FW-IDX] == " ") /* Or blank*/
      ;
    else
      ;
      set FM0FM410.FM0FM-SELECT[FM0FW-IDX] cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
    end
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX - 1;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the delete mtl group flag.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0FM410.FM0FM-DEL-MAT-GRP-FL == "Y"
   || FM0FM410.FM0FM-DEL-MAT-GRP-FL == "N") /* If valid value entered*/
    ;
     /* Next sentence*/
  else
    ;
    set FM0FM410.FM0FM-DEL-MAT-GRP-FL cursor, bold;
    FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
    converseLib.validationFailed(34); /* Value must be 'y' or 'n'*/
  end
  ;
   /* ===> Verify no capacities exist for this material group*/
  ;
  if (FM0FM410.FM0FM-DEL-MAT-GRP-FL == "Y")
    ;
    FM0F-4521(); /* Select count DCMPNT.VMGCAP01*/
  end
  ;
  ;
end // end FM0F-4520

// Select count DCMPNT.VMGCAP01
Function FM0F-4521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGCAP01 empty;
  ;
  VMGCAP01.FK-VEND-CD = FM0FM410.FK-VEND-CD;
  VMGCAP01.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD;
  ;
  set FKGREC empty;
  FKGREC.FKG-FUNCTION = "SC"; /* Select count*/
  ;
  try
    call "IO6870" (FKGREC, SQLCA, VMGCAP01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      if (FKGREC.FKG-IO-COUNT-1 > 0)
        ;
        FKWREC.XXX-MOD-ID = "4521";
        converseLib.validationFailed(133); /* Capacities exist for this mtl group*/
      end
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT COUNT DCMPNT.VMGCAP01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGCAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGCAP01.VMGCAP01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4521

// Verify header data
Function FM0F-4530()
   /* ---------------------------------------------------------------*/
   /* Verify material group code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0F-4531(); /* Select DCMPNT.VMGRP001*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify vendor code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0F-4532(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0F-4530

// Select DCMPNT.VMGRP001
Function FM0F-4531()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM410.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("S ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      set FM0FM410.FK-VEND-CD cursor, bold;
      set FM0FM410.FK-MAT-GRP-CD bold;
      FKWREC.XXX-MOD-ID = "4531";
      converseLib.validationFailed(123); /* Material group code missing or*/
                                   /* invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4531"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4531 SELECT DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4531

// Select DCMPNT.VVNDR001
Function FM0F-4532()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0FM410.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0FM410.FK-VEND-CD cursor, bold;
      FKWREC.XXX-MOD-ID = "4532";
      converseLib.validationFailed(21); /* Vendor is missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4532"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4532 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4532

// Process valid request
Function FM0F-4600()
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0FW00.XXXTSPAG = FM0FW00.XXXTSPAG - 1; /* Decrement page*/
    FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0FW00.XXXTSPAG = FM0FW00.XXXTSPAG + 1; /* Increment page*/
    FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key data changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FM410.FK-VEND-CD == FM0FW01.FK-VEND-CD
   && FM0FM410.FK-MAT-GRP-CD == FM0FW01.FK-MAT-GRP-CD)
    ;
     /* Next sentence*/
  else
    ;
    FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N";
    FM0FW00.FM0FW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Confirm the delete request.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-CONFIRM-DELETE-SW != "Y") /* If not confirmed*/
    ;
    if (FM0FM410.FM0FM-DEL-MAT-GRP-FL == "Y") /* If deleting entire group*/
      ;
      FKWREC.XXXMSGNO = 38; /* Press enter to delete*/
      FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
      FM0FW00.FM0FW-CONFIRM-DELETE-SW = "Y";
      FM0FW00.FM0FW-REQUEST-DATA-SW = "N";
      ;
      FM0F-4610(); /* Save selects*/
      ;
      exit stack;
      ;
    else
      ;
      FM0FW00.FM0FW-IDX = 1;
      while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
        ;
        if (FM0FM410.FM0FM-SELECT[FM0FW-IDX] == "S") /* If selected*/
          ;
          FKWREC.XXXMSGNO = 38; /* Press enter to delete*/
          FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
          FM0FW00.FM0FW-CONFIRM-DELETE-SW = "Y";
          FM0FW00.FM0FW-REQUEST-DATA-SW = "N";
          ;
          FM0F-4610(); /* Save selects*/
          ;
          exit stack;
        end
        FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
      end
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If selected, delete the entire material group (including*/
   /* materials).*/
   /* Otherwise check for materials to delete and delete them.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW00.FM0FW-DATA-UPDATED-SW = "N";
  ;
  if (FM0FW00.FM0FW-CONFIRM-DELETE-SW == "Y") /* If delete confirmed*/
    ;
    if (FM0FM410.FM0FM-DEL-MAT-GRP-FL == "Y") /* If deleting everything*/
      ;
      FM0F-4620(); /* Delete DCMPNT.VMGMAT01 (all)*/
      FM0F-4630(); /* Delete DCMPNT.VMGRP001*/
    else
      ;
      FM0FW00.FM0FW-IDX = 1;
      while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
        ;
        if (FM0FM410.FM0FM-SELECT[FM0FW-IDX] == "S") /* If mtl selected*/
          FM0F-4640(); /* Delete DCMPNT.VMGMAT01*/
        end
        ;
        FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
      end
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set a message if update was successful.*/
   /* If entire material group deleted, clear the map and working*/
   /* storage.  Otherwise exit to re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0FW00.FM0FW-DATA-UPDATED-SW == "Y") /* If data was updated*/
    ;
    FKWREC.XXXMSGNO = 1; /* Data successfully updated*/
    FKWREC.XXX-MOD-ID = "4600";
    ;
    if (FM0FM410.FM0FM-DEL-MAT-GRP-FL == "Y") /* If entire group deleted*/
      ;
      set FM0FM410 initial;
      set FM0FW01 empty;
      ;
      FM0FW00.FK-VEND-SNM = " ";
      ;
      FM0FW00.FM0FW-VMGRP001-FND-SW = "N";
      FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N";
      FM0FW00.FM0FW-REQUEST-DATA-SW = "N";
      FM0FW00.FM0FW-FMAT-MAP-SW = "Y";
      return;
    else
      ;
      FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N";
      FM0FW00.FM0FW-REQUEST-DATA-SW = "Y";
    end
  end
  ;
  ;
end // end FM0F-4600

// Update DCMPNT.VMGRP001
Function FM0F-4610()
   /* ------------------------------------------------------------*/
   /* Save all selected data to working storage.  This will allow*/
   /* us to make sure data is not changed during the delete process.*/
   /* ------------------------------------------------------------*/
  ;
  FM0FW00.FM0FM-DEL-MAT-GRP-FL = FM0FM410.FM0FM-DEL-MAT-GRP-FL;
  ;
  FM0FW00.FM0FW-IDX = 1;
  while (FM0FW00.FM0FW-IDX <= FM0FW00.FM0FW-NBR-MAP-ROWS)
    ;
    FM0FW00.FM0FM-SELECT[FM0FW-IDX] = FM0FM410.FM0FM-SELECT[FM0FW-IDX];
    ;
    FM0FW00.FM0FW-IDX = FM0FW00.FM0FW-IDX + 1;
  end
  ;
  ;
end // end FM0F-4610

// Delete DCMPNT.VMGMAT01 (grp)
Function FM0F-4620()
   /* ------------------------------------------------------------*/
   /* Delete the requested table row.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGMAT01 empty;
  ;
  VMGMAT01.FK-VEND-CD = FM0FM410.FK-VEND-CD;
  VMGMAT01.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD;
  VMGMAT01.FK-MAT-NBR = "*"; /* Wildcard*/
  ;
  ;
  try
    call "IO6880" ("D ", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or row not found*/
      ;
      FM0FW00.FM0FW-DATA-UPDATED-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4620 DELETE DCMPNT.VMGMAT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4620

// Delete DCMPNT.VMGRP001
Function FM0F-4630()
   /* ------------------------------------------------------------*/
   /* Delete the requested table row.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGRP001 empty;
  ;
  VMGRP001.FK-VEND-CD = FM0FM410.FK-VEND-CD;
  VMGRP001.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD;
  ;
  ;
  try
    call "IO6860" ("D ", SQLCA, VMGRP001) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or row not found*/
      ;
      FM0FW00.FM0FW-DATA-UPDATED-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "4630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4630 DELETE DCMPNT.VMGRP001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGRP001"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGRP001.VMGRP001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4630

// Delete DCMPNT.VMGMAT01 (1 mtl)
Function FM0F-4640()
   /* ------------------------------------------------------------*/
   /* Delete the requested table row.*/
   /* ------------------------------------------------------------*/
  ;
  set VMGMAT01 empty;
  ;
  VMGMAT01.FK-VEND-CD = FM0FM410.FK-VEND-CD;
  VMGMAT01.FK-MAT-GRP-CD = FM0FM410.FK-MAT-GRP-CD;
  VMGMAT01.FK-MAT-NBR = FM0FM410.FK-MAT-NBR[FM0FW-IDX];
  ;
  ;
  try
    call "IO6880" ("D ", SQLCA, VMGMAT01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* or row not found*/
      ;
      FM0FW00.FM0FW-DATA-UPDATED-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0FW00.FM0FW-CONFIRM-DELETE-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "4640"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4640 DELETE DCMPNT.VMGMAT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMGMAT01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMGMAT01.VMGMAT01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0F-4640

//*** RECORD=FM0FW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0FW00 type basicRecord
  10 FM0FW-REQUEST-DATA-SW FM0FW-REQUEST-DATA-SW ; 
  10 FM0FW-FMAT-MAP-SW FM0FW-FMAT-MAP-SW ; 
  10 FM0FW-END-VMGMAT01-CSR-SW FM0FW-END-VMGMAT01-CSR-SW ; 
  10 FM0FW-DATA-UPDATED-SW FM0FW-DATA-UPDATED-SW ; 
  10 FM0FW-CONFIRM-DELETE-SW FM0FW-CONFIRM-DELETE-SW ; 
  10 FM0FW-CONFIRM-ADD-SW FM0FW-CONFIRM-ADD-SW ; 
  10 FM0FW-MAP-SW FM0FW-MAP-SW ; 
  10 FM0FW-VMGRP001-FND-SW FM0FW-VMGRP001-FND-SW ; 
  10 FM0FW-VMGMAT01-FND-SW FM0FW-VMGMAT01-FND-SW ; 
  10 FM0FW-INSERT-VMGRP001-SW FM0FW-INSERT-VMGRP001-SW ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FM0FW-IDX FM0FW-IDX ; 
  10 FM0FW-IDX2 FM0FW-IDX2 ; 
  10 FM0FW-COUNT FM0FW-COUNT ; 
  10 FM0FW-NBR-MAP-ROWS FM0FW-NBR-MAP-ROWS ; 
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-MAT-GRP-CD FK-MAT-GRP-CD ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 XMU-MAT-UOM-DESC XMU-MAT-UOM-DESC ; 
  10 FM0FM-SELECT FM0FM-SELECT [13] ; 
  10 FM0FM-DEL-MAT-GRP-FL FM0FM-DEL-MAT-GRP-FL ; 
end // end FM0FW00

//*** RECORD=FM0FW01 ****
// ------------------------------------------------------------
// Application display storage.
// ------------------------------------------------------------
// 
// ***********************
Record FM0FW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(866) ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-VEND-SNM FK-VEND-SNM ; 
    10 FK-MAT-GRP-CD FK-MAT-GRP-CD ; 
    10 FK-MAT-GRP-DESC FK-MAT-GRP-DESC ; 
    10 FM0FM-HDR-UOM-CD FM0FM-HDR-UOM-CD ; 
    10 XMU-MAT-UOM-DESC XMU-MAT-UOM-DESC ; 
    10 FK-MAT-GRP-RPT-FL FK-MAT-GRP-RPT-FL ; 
    10 FK-COPY-CAP-FL FK-COPY-CAP-FL ; 
    10 FM0FM-DEL-MAT-GRP-FL FM0FM-DEL-MAT-GRP-FL ; 
    10 VMGRP001-GROUP VMGRP001-GROUP ; 
    10 FK-MAT-NBR FK-MAT-NBR [13] ; 
    10 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC [13] ; 
    10 XMU-MAT-UOM-CD XMU-MAT-UOM-CD [13] ; 
    10 VMGMAT01-GROUP VMGMAT01-GROUP [13] ; 
end // end FM0FW01

// Delete material group flag
DataItem FM0FM-DEL-MAT-GRP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XMU_MAT_UOM_CD
DataItem FM0FM-HDR-UOM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Select field
DataItem FM0FM-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Confirm the add switch
DataItem FM0FW-CONFIRM-ADD-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Confirm the delete switch
DataItem FM0FW-CONFIRM-DELETE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic counter
DataItem FM0FW-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data successfully updated sw
DataItem FM0FW-DATA-UPDATED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VFVITM01 csr switch
DataItem FM0FW-END-VMGMAT01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem FM0FW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Generic index
DataItem FM0FW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic index 2
DataItem FM0FW-IDX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// INSERT DCMPNT.VMGRP001 sw
DataItem FM0FW-INSERT-VMGRP001-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to display switch
DataItem FM0FW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of rows on map
DataItem FM0FW-NBR-MAP-ROWS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Request for data switch
DataItem FM0FW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VMGMAT01 rec found sw
DataItem FM0FW-VMGMAT01-FND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VMGRP001 rec found sw
DataItem FM0FW-VMGRP001-FND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

