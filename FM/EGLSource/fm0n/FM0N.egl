package fm0n;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPXCT01;
import corpcom3.XPXST01;
import corpcom3.XPXX001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXSTAT;
import corpx1.XCTCD;
import corpx1.XCTTBL;
import corpx1.XSTTBL;
import corpx2.XSTCD;
import corpx2.XXX-ADDR1;
import corpx2.XXX-ADDR2;
import corpx2.XXXCITY;
import corpx2.XXXZIP;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import fk.common.FK-MAT-WHSE-ABRV;
import fk.common.FK-MAT-WHSE-CD;
import fk.common.FK-MAT-WHSE-NM;
import fk.common.FKWREC;
import ta.common.TA1REC;
import ta.common.TAEREC;
import vv.common.VMATWH01;
import vv.common.VMATWH01-GROUP;
//*** PROGRAM=FM0N ****
// THIS APPLICATION IS PART OF THE FOOTWEAR MATERIALS SYSTEM.
// 
// THIS APPLICATION PROVIDES MAINTENANCE CAPABILITY FOR
// MATERIAL WAREHOUSES.  USERS WILL BE ALLOWED TO INQUIRE, ADD,
// CHANGE, AND DELETE (SET INACTIVE) MATERIAL WAREHOUSE
// INFORMATION THROUGH THE THREE MAPS PROVIDED IN THIS
// APPLICATION.
// 
// INQUIRE MAP - MAP FM0NM110 IS PROVIDED FOR USERS TO INQUIRE
// UPON MATERIAL WAREHOUSE INFORMATION.  USERS WILL BE
// ALLOWED TO SELECT A MATERIALS WAREHOUSE CODE AND ALL
// APPROPRIATE WAREHOUSE INFORMATION WILL BE RETRIEVED AND
// DISPLAYED ON THE MAP.
// 
// ADD MAP - MAP FM0NM210 IS PROVIDED FOR USERS TO ADD
// MATERIAL WAREHOUSE INFORMATION.  USERS WILL BE ALLOWED TO
// ENTER NEW WAREHOUSE INFORMATION AND HAVE THIS INFORMATION
// INSERTED TO THE MATERIAL WAREHOUSE TABLE, DCMPNT.VMATWH01.
// 
// CHANGE MAP - MAP FM0NM310 IS PROVIDED FOR USERS TO CHANGE
// INFORMATION ON AN EXISTING MATERIAL WAREHOUSE.  USERS WILL
// BE ALLOWED TO CHANGE WAREHOUSE INFORMATION ON THE MAP, AND
// UPDATES WILL BE PERFORMED ON THE MATERIAL WAREHOUSE TABLE,
// DCMPNT.VMATWH01.
// 
// TRANSFER FROM ONE FM0N MAP TO ANOTHER FM0N MAP IS NOT
// POSSIBLE EXCEPT THROUGH FASTPATH.  USERS WILL BE ALLOWED
// TO EXIT THIS APPLICATION VIA PFKEYS OR FASTPATH, WITH THE
// 'OPTION' FIELD AVAILABLE FOR USE WITH ANY APPLICATION
// TRANSFER.
// 
// 
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          06/14/93  JALLE1  New application.
// FK-9994  09/15/93  JALLE1  CSP 4.1 conversion.
//          11/09/93  JALLE1  Resized address fields for
//                            Nov 1993 table changes.
//          12/03/93  JALLE1  Fixed abend code.
// Y2KFIX   11/17/97  KSUMME  Y2K MODIFICATIONS MADE TO:
//                            REGEN FOR XX0XS01
// *********************
Program FM0N type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FKWREC FKWREC; // record
  FM0NW00 FM0NW00; // record
  FM0NW01 FM0NW01; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  VMATWH01 VMATWH01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCTTBL; // table
  use XSTTBL; // table
  use FM0NM.FM0NM110,  // forms
      FM0NM.FM0NM210, 
      FM0NM.FM0NM310
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FM0NM110 initial; /* M110 inquiry map input/output*/
    set FM0NM210 initial; /* M210 add map input/output*/
    set FM0NM310 initial; /* M310 change map input/output*/
    set FM0NW00 empty; /* Working storage*/
    set FM0NW01 empty; /* Display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    if (FKWREC.FK-MAT-WHSE-CD != "  ") /* If mtl whse passed*/
      FM0NW00.FM0NW-REQUEST-DATA-SW = "Y"; /* Request for data*/
    else
      FM0NW00.FM0NW-REQUEST-DATA-SW = "N"; /* Request for data*/
    end
    FM0NW00.FM0NW-FMAT-MAP-SW = "Y"; /* Format the map switch*/
    FM0NW00.FM0NW-VMATWH01-FND-SW = "N"; /* Vmatwh01 found switch*/
    ;
     /* ------------------------------------------------------------*/
     /* If data was passed in the COMMAREA, use as the initial key.*/
     /* Also determine which map to display.*/
     /* ------------------------------------------------------------*/
    ;
    if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
      ;
      FM0NW00.FM0NW-MAP-SW = "2"; /* Map to be displayed switch*/
      FM0NM210.FK-MAT-WHSE-CD = FKWREC.FK-MAT-WHSE-CD; /* Mtl whse*/
    else
      ;
      if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* Change requested*/
        ;
        FM0NW00.FM0NW-MAP-SW = "3"; /* Map to be displayed switch*/
        FM0NM310.FK-MAT-WHSE-CD = FKWREC.FK-MAT-WHSE-CD; /* Mtl whse*/
      else
        ;
        FM0NW00.FM0NW-MAP-SW = "1"; /* Map to be displayed switch*/
        FM0NM110.FK-MAT-WHSE-CD = FKWREC.FK-MAT-WHSE-CD; /* Mtl whse*/
      end
    end
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0N-0010; /* Converse the main process*/
    ;
    ;
    FM0N-0010: FM0N-0010();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0N-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FM0N

// Main process to display a map
Function FM0N-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the second map.*/
   /* 2) Otherwise, if specified, display the third map.*/
   /* 3) Otherwise, display the first map.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-MAP-SW == "2") /* Map 2 was requested*/
    FM0N-2000(); /* Display map 2*/
  else
    ;
    if (FM0NW00.FM0NW-MAP-SW == "3") /* Map 3 was requested*/
      FM0N-3000(); /* Display map 3*/
    else
      ;
      FM0N-1000(); /* Display map 1*/
    end
  end
  ;
  ;
end // end FM0N-0010

// Process inquiry map
Function FM0N-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0N-1100(); /* Obtain the data to display*/
  ;
  FM0N-1200(); /* Format and display the map*/
  ;
  FM0N-1300(); /* Check attention identifier*/
  ;
  FM0N-1400(); /* Reset fields to normal intensity*/
  ;
  FM0N-1500(); /* Verify the entered data*/
  ;
  FM0N-1600(); /* Process valid input request*/
  ;
  ;
end // end FM0N-1000

// Obtain data to display
Function FM0N-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0NW00.FK-MAT-WHSE-CD = FM0NM110.FK-MAT-WHSE-CD;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the material warehouse record from the table.*/
   /* --------------------------------------------------------------*/
  ;
  FM0NW00.FM0NW-VMATWH01-FND-SW = "N";
  ;
  FM0N-1110(); /* Obtain the Material Warehouse record*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-VMATWH01-FND-SW != "N") /* If data found*/
    ;
    FM0NW01.VMATWH01-GROUP = VMATWH01.VMATWH01-GROUP; /* Save record*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Set message if no data found.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-VMATWH01-FND-SW == "N") /* If no data found*/
    ;
    FKWREC.XXXMSGNO = 18; /* No data to display*/
    FKWREC.XXX-MOD-ID = "1100";
    set FM0NM110.FK-MAT-WHSE-CD cursor, bold;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0NW00.FM0NW-REQUEST-DATA-SW = "N";
  FM0NW00.FM0NW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0N-1100

// Select DCMPNT.VMATWH01
Function FM0N-1110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0NM110.FK-MAT-WHSE-CD; /* Mtl whse*/
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0NW00.FM0NW-VMATWH01-FND-SW = "Y"; /* Data found*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No data found*/
      ;
      FM0NW00.FM0NW-VMATWH01-FND-SW = "N"; /* No data found*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1110 SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0N-1110

// Format and converse INQ map
Function FM0N-1200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0N-1210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0NM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0NM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0NM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0NM110 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0NM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0NM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors*/
    set FM0NM110.FK-MAT-WHSE-CD cursor; /* Set at material warehouse*/
  end
  ;
  ;
  converse FM0NM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0NM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0NM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0N-1200

// Format the display data
Function FM0N-1210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FM0NW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0NM110.FK-MAT-WHSE-CD = FM0NW00.FK-MAT-WHSE-CD; /* Mat whse*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0NM110.FK-MAT-WHSE-NM = FM0NW01.FK-MAT-WHSE-NM; /* Whse name*/
  FM0NM110.FK-MAT-WHSE-ABRV = FM0NW01.FK-MAT-WHSE-ABRV; /* Whse abrv*/
  FM0NM110.XXX-ADDR1 = FM0NW01.XXX-ADDR1; /* Address line 1*/
  FM0NM110.XXX-ADDR2 = FM0NW01.XXX-ADDR2; /* Address line 2*/
  FM0NM110.XXXCITY = FM0NW01.XXXCITY; /* City*/
  FM0NM110.XSTCD = FM0NW01.XSTCD; /* State*/
  FM0NM110.XXXZIP = FM0NW01.XXXZIP; /* Zip*/
  FM0NM110.XCTCD = FM0NW01.XCTCD; /* Country*/
  FM0NM110.XXXSTAT = FM0NW01.XXXSTAT; /* Status*/
  ;
  ;
end // end FM0N-1210

// Check attention identifier
Function FM0N-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-MAT-WHSE-CD = FM0NM110.FK-MAT-WHSE-CD;
    ;
    COMMAREA.CATOAP = "FM0N"; /* to applicaiton*/
    COMMAREA.CAITEM = "I   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0NM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0NM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-MAT-WHSE-CD = FM0NM110.FK-MAT-WHSE-CD;
      ;
      COMMAREA.CATOAP = FM0NM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0NM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0NM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0NM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0NM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0NM110.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-MAT-WHSE-CD = FM0NM110.FK-MAT-WHSE-CD;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0N-1300

// Reset Highlighted fields
Function FM0N-1400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0NM110.FK-MAT-WHSE-CD initialAttributes;
  set FM0NM110.FK-MAT-WHSE-NM initialAttributes;
  set FM0NM110.FK-MAT-WHSE-ABRV initialAttributes;
  set FM0NM110.XXX-ADDR1 initialAttributes;
  set FM0NM110.XXX-ADDR2 initialAttributes;
  set FM0NM110.XXXCITY initialAttributes;
  set FM0NM110.XSTCD initialAttributes;
  set FM0NM110.XXXZIP initialAttributes;
  set FM0NM110.XCTCD initialAttributes;
  set FM0NM110.XXXSTAT initialAttributes;
  ;
  set FM0NM110.CATOAP initialAttributes;
  set FM0NM110.CAITEM initialAttributes;
  ;
end // end FM0N-1400

// Verify entered fields
Function FM0N-1500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM110.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0NM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify material warehouse code.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0N-1510(); /* Select whse code*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0N-1500

// Select DCMPNT.VMATWH01
Function FM0N-1510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0NM110.FK-MAT-WHSE-CD; /* Mtl whse*/
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      converseLib.validationFailed(124); /* Mtl whse code is missing or invalid*/
      set FM0NM110.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1510 SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0N-1510

// Process Request
Function FM0N-1600()
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0NM110.FK-MAT-WHSE-CD != FM0NW01.FK-MAT-WHSE-CD) /* Whse changed*/
    ;
    FM0NW00.FM0NW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
end // end FM0N-1600

// Process add map
Function FM0N-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
   /* PERFORM fm0n-2100;                /* Obtain the data to display*/
  ;
  FM0N-2200(); /* Format and display the map*/
  ;
  FM0N-2300(); /* Check attention identifier*/
  ;
  FM0N-2400(); /* Reset fields to normal intensity*/
  ;
  FM0N-2500(); /* Verify the entered data*/
  ;
  FM0N-2600(); /* Process valid input request*/
  ;
  ;
end // end FM0N-2000

// Format and converse ADD map
Function FM0N-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0NM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0NM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0NM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0NM210 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0NM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0NM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 1) /* Update successful*/
    set FM0NM210.FK-MAT-WHSE-CD cursor; /* Set at material warehouse*/
  end
  ;
  ;
  converse FM0NM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0NM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0NM210.CAITEM; /* Application data*/
  ;
  ;
end // end FM0N-2200

// Check attention identifier
Function FM0N-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-MAT-WHSE-CD = FM0NM210.FK-MAT-WHSE-CD;
    ;
    COMMAREA.CATOAP = "FM0N"; /* to application*/
    COMMAREA.CAITEM = "A   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0NM210.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0NM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-MAT-WHSE-CD = FM0NM210.FK-MAT-WHSE-CD;
      ;
      COMMAREA.CATOAP = FM0NM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0NM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0NM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0NM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0NM210.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0NM210.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-MAT-WHSE-CD = FM0NM210.FK-MAT-WHSE-CD;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0N-2300

// Reset Highlighted fields
Function FM0N-2400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0NM210.FK-MAT-WHSE-CD initialAttributes;
  set FM0NM210.FK-MAT-WHSE-NM initialAttributes;
  set FM0NM210.FK-MAT-WHSE-ABRV initialAttributes;
  set FM0NM210.XXX-ADDR1 initialAttributes;
  set FM0NM210.XXX-ADDR2 initialAttributes;
  set FM0NM210.XXXCITY initialAttributes;
  set FM0NM210.XSTCD initialAttributes;
  set FM0NM210.XXXZIP initialAttributes;
  set FM0NM210.XCTCD initialAttributes;
  set FM0NM210.XXXSTAT initialAttributes;
  ;
  set FM0NM210.CATOAP initialAttributes;
  set FM0NM210.CAITEM initialAttributes;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0NM210.XCTCD == "?" /* XCT list requested*/
   || FM0NM210.XSTCD == "?") /* XST list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCT codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0NM210.XCTCD == "?") /* XCT list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0NM210.XCTCD = FM0NW01.XCTCD; /* Restore prior code*/
    else
      FM0NM210.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0NM210.XCTCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XST codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0NM210.XSTCD == "?") /* XST list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  STATE"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXST01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0NM210.XSTCD = FM0NW01.XSTCD; /* Restore prior code*/
    else
      FM0NM210.XSTCD = XSTTBL.XSTCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0NM210.XSTCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0N-2400

// Verify entered fields
Function FM0N-2500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM210.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0NM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the status code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM210.XXXSTAT == "A" /* If active*/
   || FM0NM210.XXXSTAT == "I") /* or inactive*/
    ;
     /* Next sentence*/
  else
    ;
    set FM0NM210.XXXSTAT cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(120); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the country code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM210.XCTCD in XCTTBL.XCTCD /* If in country table*/
   && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
     /* Next sentence*/
  else
    ;
    set FM0NM210.XCTCD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If entered, verify the state code.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM210.XSTCD != " ") /* If entered*/
    ;
    if (FM0NM210.XSTCD in XSTTBL.XSTCD /* If in state table*/
     && XSTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0NM210.XSTCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the city.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM210.XXXCITY == " ") /* If city not entered*/
    ;
    set FM0NM210.XXXCITY cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the address.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM210.XXX-ADDR1 == " " /* If address line 1 not entered*/
   && FM0NM210.XXX-ADDR2 == " ") /* and address line 2 not entered*/
    ;
    set FM0NM210.XXX-ADDR1 cursor, bold; /* Highlight*/
    set FM0NM210.XXX-ADDR2 bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the material whse abbreviation.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM210.FK-MAT-WHSE-ABRV == " ") /* If whse abrv not entered*/
    ;
    set FM0NM210.FK-MAT-WHSE-ABRV cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the material whse name.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM210.FK-MAT-WHSE-NM == " ") /* If whse name not entered*/
    ;
    set FM0NM210.FK-MAT-WHSE-NM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(8); /* Required field missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the material whse code was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM210.FK-MAT-WHSE-CD == " ") /* If whse code not entered*/
    ;
    set FM0NM210.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(119); /* Mtl whse code missing or invalid*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify record does not already exist on DCMPNT.VMATWH01.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0N-2510(); /* Select DCMPNT.VMATWH01*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0N-2500

// Select DCMPNT.VMATWH01
Function FM0N-2510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0NM210.FK-MAT-WHSE-CD; /* Mtl whse*/
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row exists on table*/
      ;
      converseLib.validationFailed(16); /* Row already exists*/
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      set FM0NM210.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2510 SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0N-2510

// Process Request
Function FM0N-2600()
   /* --------------------------------------------------------------------*/
   /* Obtain and format the current date and time.*/
   /* --------------------------------------------------------------------*/
  ;
  XX0XS01();
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Add the record to DCMPNT.VMATWH01.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0N-2610(); /* Insert DCMPNT.VMATWH01*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Re-initialize map.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0NM210 initial;
  ;
   /* --------------------------------------------------------------------*/
   /* Set a message stating update was successful.*/
   /* --------------------------------------------------------------------*/
  ;
  FKWREC.XXXMSGNO = 1; /* Update performed*/
  FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
  ;
  ;
end // end FM0N-2600

// Insert DCMPNT.VMATWH01
Function FM0N-2610()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0NM210.FK-MAT-WHSE-CD;
  VMATWH01.FK-MAT-WHSE-NM = FM0NM210.FK-MAT-WHSE-NM;
  VMATWH01.FK-MAT-WHSE-ABRV = FM0NM210.FK-MAT-WHSE-ABRV;
  VMATWH01.XXX-ADDR1 = FM0NM210.XXX-ADDR1;
  VMATWH01.XXX-ADDR2 = FM0NM210.XXX-ADDR2;
  VMATWH01.XXXCITY = FM0NM210.XXXCITY;
  VMATWH01.XSTCD = FM0NM210.XSTCD;
  VMATWH01.XXXZIP = FM0NM210.XXXZIP;
  VMATWH01.XCTCD = FM0NM210.XCTCD;
  VMATWH01.XXXSTAT = FM0NM210.XXXSTAT;
  VMATWH01.ZZZSDT = XX0XW01.XX0XWDAT;
  VMATWH01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VMATWH01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VMATWH01.ZZZCHGCT = 0;
  ;
  try
    call "IO6780" ("A ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2610 INSERT DCMPNT.VMATWH01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0N-2610

// Process change map
Function FM0N-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0N-3100(); /* Obtain the data to display*/
  ;
  FM0N-3200(); /* Format and display the map*/
  ;
  FM0N-3300(); /* Check attention identifier*/
  ;
  FM0N-3400(); /* Reset fields to normal intensity*/
  ;
  FM0N-3500(); /* Verify the entered data*/
  ;
  FM0N-3600(); /* Process valid input request*/
  ;
  ;
end // end FM0N-3000

// Obtain data to display
Function FM0N-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save key information in working storage.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  FM0NW00.FK-MAT-WHSE-CD = FM0NM310.FK-MAT-WHSE-CD;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the material warehouse record from the table.*/
   /* --------------------------------------------------------------*/
  ;
  FM0NW00.FM0NW-VMATWH01-FND-SW = "N"; /* Init found switch*/
  ;
  FM0N-3110(); /* Obtain the Material Warehouse record*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save data obtained in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-VMATWH01-FND-SW != "N")
    ;
    FM0NW01.VMATWH01-GROUP = VMATWH01.VMATWH01-GROUP; /* Save record*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Set a message if no data found.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-VMATWH01-FND-SW == "N")
    ;
    FKWREC.XXXMSGNO = 18; /* No data to display*/
    FKWREC.XXX-MOD-ID = "3100"; /* Module identification*/
    set FM0NM310.FK-MAT-WHSE-CD cursor, bold;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0NW00.FM0NW-REQUEST-DATA-SW = "N";
  FM0NW00.FM0NW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0N-3100

// Select DCMPNT.VMATWH01
Function FM0N-3110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0NM310.FK-MAT-WHSE-CD; /* Mtl whse*/
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0NW00.FM0NW-VMATWH01-FND-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3110 SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0N-3110

// Format and converse CHG map
Function FM0N-3200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0N-3210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If DCMPNT.VMATWH01 record not obtained, protect data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0NW00.FM0NW-VMATWH01-FND-SW == "N") /* If not found*/
    ;
    set FM0NM310.FK-MAT-WHSE-NM invisible, skip;
    set FM0NM310.FK-MAT-WHSE-ABRV invisible, skip;
    set FM0NM310.XXX-ADDR1 invisible, skip;
    set FM0NM310.XXX-ADDR2 invisible, skip;
    set FM0NM310.XXXCITY invisible, skip;
    set FM0NM310.XSTCD invisible, skip;
    set FM0NM310.XXXZIP invisible, skip;
    set FM0NM310.XCTCD invisible, skip;
    set FM0NM310.XXXSTAT invisible, skip;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0NM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0NM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0NM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (converseVar.validationMsgNum != 0)
      set FM0NM310 alarm; /* Indicate sound alarm*/
    end
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0NM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0NM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* No errors*/
   || converseVar.validationMsgNum == 1) /* Update successful*/
    set FM0NM310.FK-MAT-WHSE-CD cursor; /* Set at material warehouse*/
  end
  ;
  ;
  converse FM0NM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0NM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0NM310.CAITEM; /* Application data*/
  ;
  ;
end // end FM0N-3200

// Format the display data
Function FM0N-3210()
   /* --------------------------------------------------------------------*/
   /* Reset format switch.*/
   /* --------------------------------------------------------------------*/
  ;
  ;
  FM0NW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
   /* --------------------------------------------------------------------*/
   /* Format key data in the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0NM310.FK-MAT-WHSE-CD = FM0NW00.FK-MAT-WHSE-CD; /* Mat whse*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the data in the map from display storage.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0NM310.FK-MAT-WHSE-NM = FM0NW01.FK-MAT-WHSE-NM; /* Whse name*/
  FM0NM310.FK-MAT-WHSE-ABRV = FM0NW01.FK-MAT-WHSE-ABRV; /* Whse abrv*/
  FM0NM310.XXX-ADDR1 = FM0NW01.XXX-ADDR1; /* Address line 1*/
  FM0NM310.XXX-ADDR2 = FM0NW01.XXX-ADDR2; /* Address line 2*/
  FM0NM310.XXXCITY = FM0NW01.XXXCITY; /* City*/
  FM0NM310.XSTCD = FM0NW01.XSTCD; /* State*/
  FM0NM310.XXXZIP = FM0NW01.XXXZIP; /* Zip*/
  FM0NM310.XCTCD = FM0NW01.XCTCD; /* Country*/
  FM0NM310.XXXSTAT = FM0NW01.XXXSTAT; /* Status*/
  ;
  ;
end // end FM0N-3210

// Check attention identifier
Function FM0N-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty;
    FKWREC.FK-MAT-WHSE-CD = FM0NM310.FK-MAT-WHSE-CD;
    ;
    COMMAREA.CATOAP = "FM0N"; /* to application*/
    COMMAREA.CAITEM = "C   "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0NM310.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0NM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty;
      FKWREC.FK-MAT-WHSE-CD = FM0NM310.FK-MAT-WHSE-CD;
      ;
      COMMAREA.CATOAP = FM0NM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0NM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0NM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* EXIT requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0NM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = FM0NM310.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0NM310.CAITEM; /* item*/
    end
    ;
    set FKWREC empty;
    FKWREC.FK-MAT-WHSE-CD = FM0NM310.FK-MAT-WHSE-CD;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0N-3300

// Reset Highlighted fields
Function FM0N-3400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0NM310.FK-MAT-WHSE-CD initialAttributes;
  set FM0NM310.FK-MAT-WHSE-NM initialAttributes;
  set FM0NM310.FK-MAT-WHSE-ABRV initialAttributes;
  set FM0NM310.XXX-ADDR1 initialAttributes;
  set FM0NM310.XXX-ADDR2 initialAttributes;
  set FM0NM310.XXXCITY initialAttributes;
  set FM0NM310.XSTCD initialAttributes;
  set FM0NM310.XXXZIP initialAttributes;
  set FM0NM310.XCTCD initialAttributes;
  set FM0NM310.XXXSTAT initialAttributes;
  ;
  set FM0NM310.CATOAP initialAttributes;
  set FM0NM310.CAITEM initialAttributes;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0NM310.XCTCD == "?" /* XCT list requested*/
   || FM0NM310.XSTCD == "?") /* XST list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  else
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCT codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0NM310.XCTCD == "?") /* XCT list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0NM310.XCTCD = FM0NW01.XCTCD; /* Restore prior code*/
    else
      FM0NM310.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0NM310.XCTCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XST codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0NM310.XSTCD == "?") /* XST list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "  STATE"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXST01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0NM310.XSTCD = FM0NW01.XSTCD; /* Restore prior code*/
    else
      FM0NM310.XSTCD = XSTTBL.XSTCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0NM310.XSTCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0N-3400

// Verify entered fields
Function FM0N-3500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM310.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0NM310.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If changed, verify the key.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM310.FK-MAT-WHSE-CD != FM0NW01.FK-MAT-WHSE-CD /* Whse changed*/
   || FM0NM310.FK-MAT-WHSE-CD == " ")                   /* or whse not entered*/
    ;
    FM0N-3510(); /* Verify whse code*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Otherwise, if key not changed, verify the detail data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0NM310.FK-MAT-WHSE-CD == FM0NW01.FK-MAT-WHSE-CD /* Whse not changed*/
   && FM0NM310.FK-MAT-WHSE-CD != "  ")                  /* and mtl whse entered*/
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the status code.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0NM310.XXXSTAT == "A" /* If active*/
     || FM0NM310.XXXSTAT == "I") /* or inactive*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0NM310.XXXSTAT cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(120); /* Only use this with fastpath*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the country code.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0NM310.XCTCD in XCTTBL.XCTCD /* If in country table*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0NM310.XCTCD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* If entered, verify the state code.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0NM310.XSTCD != " ") /* If entered*/
      ;
      if (FM0NM310.XSTCD in XSTTBL.XSTCD /* If in state table*/
       && XSTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
        ;
         /* Next sentence*/
      else
        ;
        set FM0NM310.XSTCD cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
        converseLib.validationFailed(8); /* Required field missing or invalid*/
      end
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the city.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0NM310.XXXCITY == " ") /* If city not entered*/
      ;
      set FM0NM310.XXXCITY cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the address.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0NM310.XXX-ADDR1 == " " /* If address line 1 not entered*/
     && FM0NM310.XXX-ADDR2 == " ") /* and address line 2 not entered*/
      ;
      set FM0NM310.XXX-ADDR1 cursor, bold; /* Highlight*/
      set FM0NM310.XXX-ADDR2 bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the material whse abbreviation.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0NM310.FK-MAT-WHSE-ABRV == " ") /* If whse abrv not entered*/
      ;
      set FM0NM310.FK-MAT-WHSE-ABRV cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify the material whse name.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0NM310.FK-MAT-WHSE-NM == " ") /* If whse name not entered*/
      ;
      set FM0NM310.FK-MAT-WHSE-NM cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
      converseLib.validationFailed(8); /* Required field missing or invalid*/
    end
  end
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0N-3500

// Select DCMPNT.VMATWH01
Function FM0N-3510()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATWH01 empty;
  ;
  VMATWH01.FK-MAT-WHSE-CD = FM0NM310.FK-MAT-WHSE-CD; /* Mtl whse*/
  ;
  ;
  try
    call "IO6780" ("S ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback database changes*/
      converseLib.validationFailed(124); /* Mtl whse code is missing or invalid*/
      set FM0NM310.FK-MAT-WHSE-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3510 SELECT DCMPNT.VMATWH01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0N-3510

// Process Request
Function FM0N-3600()
   /* --------------------------------------------------------------------*/
   /* Check to see if key changed.  If key fields changed, set*/
   /* request for data switch and exit to display the map.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0NM310.FK-MAT-WHSE-CD != FM0NW01.FK-MAT-WHSE-CD) /* Whse changed*/
    ;
    FM0NW00.FM0NW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If any data was changed, update it to DCMPNT.VMATWH01.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0NM310.FK-MAT-WHSE-NM != FM0NW01.FK-MAT-WHSE-NM
   || FM0NM310.FK-MAT-WHSE-ABRV != FM0NW01.FK-MAT-WHSE-ABRV
   || FM0NM310.XXX-ADDR1 != FM0NW01.XXX-ADDR1
   || FM0NM310.XXX-ADDR2 != FM0NW01.XXX-ADDR2
   || FM0NM310.XXXCITY != FM0NW01.XXXCITY
   || FM0NM310.XSTCD != FM0NW01.XSTCD
   || FM0NM310.XXXZIP != FM0NW01.XXXZIP
   || FM0NM310.XCTCD != FM0NW01.XCTCD
   || FM0NM310.XXXSTAT != FM0NW01.XXXSTAT)
    ;
    XX0XS01();
    ;
    FM0N-3610(); /* Update DCMPNT.VMATWH01*/
    ;
    FKWREC.XXXMSGNO = 1; /* Update performed*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module identification*/
    FM0NW00.FM0NW-REQUEST-DATA-SW = "Y"; /* Request data*/
    return; /* Exit to display map*/
  end
  ;
  ;
end // end FM0N-3600

// Update DCMPNT.VMATWH01
Function FM0N-3610()
   /* ------------------------------------------------------------*/
   /* Update the requested row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  VMATWH01.VMATWH01-GROUP = FM0NW01.VMATWH01-GROUP;
  ;
  VMATWH01.FK-MAT-WHSE-NM = FM0NM310.FK-MAT-WHSE-NM;
  VMATWH01.FK-MAT-WHSE-ABRV = FM0NM310.FK-MAT-WHSE-ABRV;
  VMATWH01.XXX-ADDR1 = FM0NM310.XXX-ADDR1;
  VMATWH01.XXX-ADDR2 = FM0NM310.XXX-ADDR2;
  VMATWH01.XXXCITY = FM0NM310.XXXCITY;
  VMATWH01.XSTCD = FM0NM310.XSTCD;
  VMATWH01.XXXZIP = FM0NM310.XXXZIP;
  VMATWH01.XCTCD = FM0NM310.XCTCD;
  VMATWH01.XXXSTAT = FM0NM310.XXXSTAT;
  VMATWH01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VMATWH01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  try
    call "IO6780" ("U ", SQLCA, VMATWH01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* End of cursor*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another app.*/
      FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
      FM0NW00.FM0NW-REQUEST-DATA-SW = "Y"; /* Get new data*/
      ;
      exit stack; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3610 UPDATE DCMPNT.VMATWH01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATWH01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATWH01.VMATWH01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0N-3610

//*** RECORD=FM0NW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0NW00 type basicRecord
  10 FM0NW-MAP-SW FM0NW-MAP-SW ; 
  10 FM0NW-REQUEST-DATA-SW FM0NW-REQUEST-DATA-SW ; 
  10 FM0NW-FMAT-MAP-SW FM0NW-FMAT-MAP-SW ; 
  10 FM0NW-UPDT-PERFORMED-SW FM0NW-UPDT-PERFORMED-SW ; 
  10 FM0NW-VMATWH01-FND-SW FM0NW-VMATWH01-FND-SW ; 
  10 FK-MAT-WHSE-CD FK-MAT-WHSE-CD ; 
end // end FM0NW00

//*** RECORD=FM0NW01 ****
// ------------------------------------------------------------
// Application display storage.
// ------------------------------------------------------------
// 
// ***********************
Record FM0NW01 type basicRecord
  10 VMATWH01-GROUP VMATWH01-GROUP ; 
    15 FK-MAT-WHSE-CD FK-MAT-WHSE-CD ; 
    15 FK-MAT-WHSE-NM FK-MAT-WHSE-NM ; 
    15 FK-MAT-WHSE-ABRV FK-MAT-WHSE-ABRV ; 
    15 XXX-ADDR1 XXX-ADDR1 ; 
    15 XXX-ADDR2 XXX-ADDR2 ; 
    15 XXXCITY XXXCITY ; 
    15 XSTCD XSTCD ; 
    15 XXXZIP XXXZIP ; 
    15 XCTCD XCTCD ; 
    15 XXXSTAT XXXSTAT ; 
    15 ZZZSDT ZZZSDT ; 
    15 ZZZCHGDT ZZZCHGDT ; 
    15 ZZZCHGTM ZZZCHGTM ; 
    15 ZZZCHGCT ZZZCHGCT ; 
end // end FM0NW01

// Format the map switch
DataItem FM0NW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem FM0NW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FM0NW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update performed switch
DataItem FM0NW-UPDT-PERFORMED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Vmatwh01 found switch
DataItem FM0NW-VMATWH01-FND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

