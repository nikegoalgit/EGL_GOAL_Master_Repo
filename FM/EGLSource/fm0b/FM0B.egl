package fm0b;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPXCL01;
import corpcom3.XPXX001;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XCLCD;
import corpx1.XCLDESC;
import corpx1.XCLTBL;
import corpx2.XMG-COLR-GRP-CD;
import corpx2.XMU-MAT-UOM-CD;
import fk.common.FK-DEPT-MAT-DESC;
import fk.common.FK-EST-SHP-DT1;
import fk.common.FK-EST-SHP-DT2;
import fk.common.FK-EST-SHP-DT3;
import fk.common.FK-FCTY-PO-ADJ-QTY;
import fk.common.FK-FCTY-PO-COMNT;
import fk.common.FK-FCTY-PO-DT;
import fk.common.FK-FCTY-PO-ID;
import fk.common.FK-INTRN-PO-ID;
import fk.common.FK-MAT-NBR;
import fk.common.FK-MAT-ORD-QTY;
import fk.common.FK-VEND-CD;
import fk.common.FK-VEND-SNM;
import fk.common.FKFREC;
import fk.common.FKWREC;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VFVADJ01;
import vv.common.VFVHDR01;
import vv.common.VFVHDR01-GROUP;
import vv.common.VFVITM01;
import vv.common.VMATRL01;
import vv.common.VMCOLR01;
import vv.common.VVNDR001;
//*** PROGRAM=FM0B ****
// FM0B This Program is part of the footwear materials system.
// 
// This application will allow users to inquire, add, and
// change factory/vendor P.O. Header and Item information
// through the three maps provided in this applicaiton.
// 
// INQUIRE MAP -- Map FM0BM110 is provided for users to inquire
//     upon factory/vendor P.O. Header and Item Information.
//     Users will enter the vendor, Nike P.O. ID, and order
//     date of the P.O., and the header and all item
//     information will be displayed on the map.
// 
// ADD MAP -- Map FM0BM210 is provided for users to add
//     factory/vendor P.O.'s to the footwear materials system.
//     Users will enter new P.O. information and the data will
//     be inserted to the P.O. Header table, DCMPNT.VFVHDR01,
//     and the P.O. item table, DCMPNT.VFVITM01.
// CHANGE MAP -- Map FM0BM310 is provided for users to change
//     factory/vendor P.O. information.  Users will enter the
//     vendor, NIKE P.O. ID, and order date of an existing P.O.
//     and the P.O. information will be gathered and displayed
//     on the map.  Users may then change non-key header
//     information, as well as order quantities of the items.
//     Appopriate updates will be made to DCMPNT.VFVHDR01 and
//     DCMPNT.VFVITM01.
// 
// Tranfer from one from one FM0B map to another FM0B map is
// not possible except throufh fastpath.  Users will be allowed
// to exit this application via pfkeys or fastpath, with the
// 'option' field available for use with any application
// transfer.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          09/10/93  WDRAKE  New application.
// y2kfix   10/31/97  pharwo  regen for xx0xs01 changes.
// *********************
Program FM0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FKFREC FKFREC; // record
  FKWREC FKWREC; // record
  FM0BW00 FM0BW00; // record
  FM0BW01 FM0BW01; // record
  FY1REC FY1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VFVADJ01 VFVADJ01; // record
  VFVHDR01 VFVHDR01; // record
  VFVITM01 VFVITM01; // record
  VMATRL01 VMATRL01; // record
  VMCOLR01 VMCOLR01; // record
  VVNDR001 VVNDR001; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCLTBL {deleteAfterUse = yes}; // table
  use FM0BM.FM0BM110,  // forms
      FM0BM.FM0BM210, 
      FM0BM.FM0BM310
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
    ;
     /* ------------------------------------------------------------*/
     /* Flow to special application initialization.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0B-0005; /* Special application initialization.*/
    ;
    FM0B-0005: FM0B-0005();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0B-0010; /* Converse the main process*/
    ;
    ;
    FM0B-0010: FM0B-0010();
     /* -------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* -------------------------------------------------------------*/
    ;
    goto FM0B-0010; /* Converse the main process.*/
    ;
    ;
  end // end main
end // end FM0B

// Special application init
Function FM0B-0005()
   /* ------------------------------------------------------------*/
   /* Initialize working storage and display storage areas.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0BM110 initial; /* M110 inquiry map input/output*/
  set FM0BM210 initial; /* M210 add map input/output*/
  set FM0BM310 initial; /* M310 change map input/output*/
  set FM0BW00 empty; /* Working storage*/
  set FM0BW01 empty; /* Display storage*/
  set SQLCA empty; /* SQL communication area*/
  set TAEREC empty; /* Error diagnosis information*/
  set TA1REC empty; /* Error diagnosis parameters*/
  set XX0XW01 empty; /* Date/time subroutine parameters*/
  set TA5REC empty; /* Error diagnosis parameters*/
  ;
  ;
  FM0BW00.FM0BW-NBR-MAP-ROWS = 11; /* 11 rows on the map (m110,m210)*/
  FM0BW00.FM0BW-NBR-CHG-MAP-ROWS = 4; /* 4 rows on chg map (m310)*/
  ;
   /* ------------------------------------------------------------*/
   /* If data was passed in the COMMAREA, use as initial key.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FK-INTRN-PO-ID > 0) /* If PO was passed*/
    ;
     /* Load internal PO id's to a working storage array*/
    ;
    FM0BW00.FM0BW-NBR-PASSED-PO = 0; /* Counter of # PO's passed*/
    FM0BW00.FM0BW-IDX = 1; /* Init index*/
    while (FM0BW00.FM0BW-IDX <= 15)
      ;
      if (FKWREC.FK-INTRN-PO-ID[FM0BW-IDX] > 0) /* If PO passed*/
        ;
        FM0BW00.FK-INTRN-PO-ID[FM0BW-IDX] = FKWREC.FK-INTRN-PO-ID[FM0BW-IDX]; /* Save PO nbr*/
        FM0BW00.FM0BW-NBR-PASSED-PO = FM0BW00.FM0BW-NBR-PASSED-PO + 1;
      end
      ;
      FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1; /* Increment*/
    end
    ;
    FM0B-0006(); /* Get first PO header*/
    ;
    if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "Y") /* If PO header was found*/
      ;
       /* Move PO hdr info to map*/
      ;
       /* Move to INQ map (M110)*/
      FM0BM110.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
      FM0BM110.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
      FM0BW00.FM0BW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
      FM0BM110.FM0BM-NIKE-PO-ID-YY = FM0BW00.FM0BW-FMAT-PO-YY;
      FM0BM110.FM0BM-NIKE-PO-ID-PP = FM0BW00.FM0BW-FMAT-PO-PP;
      FM0BM110.FM0BM-NIKE-PO-ID-DD = FM0BW00.FM0BW-FMAT-PO-DD;
      FM0BM110.FY1FCTYC = VFVHDR01.FY1FCTYC;
      ;
       /* Move to ADD map (M210)*/
      FM0BM210.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
      FM0BM210.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
      FM0BW00.FM0BW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
      FM0BM210.FM0BM-NIKE-PO-ID-YY = FM0BW00.FM0BW-FMAT-PO-YY;
      FM0BM210.FM0BM-NIKE-PO-ID-PP = FM0BW00.FM0BW-FMAT-PO-PP;
      FM0BM210.FM0BM-NIKE-PO-ID-DD = FM0BW00.FM0BW-FMAT-PO-DD;
      FM0BM210.FY1FCTYC = VFVHDR01.FY1FCTYC;
      ;
       /* Move to CHG map (M310)*/
      FM0BM310.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
      FM0BM310.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
      FM0BW00.FM0BW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
      FM0BM310.FM0BM-NIKE-PO-ID-YY = FM0BW00.FM0BW-FMAT-PO-YY;
      FM0BM310.FM0BM-NIKE-PO-ID-PP = FM0BW00.FM0BW-FMAT-PO-PP;
      FM0BM310.FM0BM-NIKE-PO-ID-DD = FM0BW00.FM0BW-FMAT-PO-DD;
      FM0BM310.FY1FCTYC = VFVHDR01.FY1FCTYC;
    end
    ;
  else
    ;
     /* Move to INQ map (M110)*/
    FM0BM110.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
    FM0BM110.FK-FCTY-PO-DT = FKWREC.FK-FCTY-PO-DT; /* Fcty po date*/
    FM0BW00.FM0BW-FMAT-PO-DT = FKWREC.PC3POIDT; /* Format the po date*/
    FM0BM110.FM0BM-NIKE-PO-ID-YY = FM0BW00.FM0BW-FMAT-PO-YY;
    FM0BM110.FM0BM-NIKE-PO-ID-PP = FM0BW00.FM0BW-FMAT-PO-PP;
    FM0BM110.FM0BM-NIKE-PO-ID-DD = FM0BW00.FM0BW-FMAT-PO-DD;
    ;
    if (FKWREC.PC3POIDT > 0) /* If po date is passed*/
      FM0BM110.FY1FCTYC = FKWREC.FY1FCTYC; /* Get fcty code*/
    else
      FM0BM110.FY1FCTYC = " "; /* Set it blank*/
    end
    ;
     /* Move to ADD map (M210)*/
    FM0BM210.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
    FM0BM210.FK-FCTY-PO-DT = FKWREC.FK-FCTY-PO-DT; /* Fcty po date*/
    FM0BW00.FM0BW-FMAT-PO-DT = FKWREC.PC3POIDT; /* Format the po date*/
    FM0BM210.FM0BM-NIKE-PO-ID-YY = FM0BW00.FM0BW-FMAT-PO-YY;
    FM0BM210.FM0BM-NIKE-PO-ID-PP = FM0BW00.FM0BW-FMAT-PO-PP;
    FM0BM210.FM0BM-NIKE-PO-ID-DD = FM0BW00.FM0BW-FMAT-PO-DD;
    ;
    if (FKWREC.PC3POIDT > 0) /* If po date is passed*/
      FM0BM210.FY1FCTYC = FKWREC.FY1FCTYC; /* Get fcty code*/
    else
      FM0BM210.FY1FCTYC = " "; /* Set it blank*/
    end
    ;
     /* Move to CHG map (M310)*/
    FM0BM310.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
    FM0BM310.FK-FCTY-PO-DT = FKWREC.FK-FCTY-PO-DT; /* Fcty po date*/
    FM0BW00.FM0BW-FMAT-PO-DT = FKWREC.PC3POIDT; /* Format the po date*/
    FM0BM310.FM0BM-NIKE-PO-ID-YY = FM0BW00.FM0BW-FMAT-PO-YY;
    FM0BM310.FM0BM-NIKE-PO-ID-PP = FM0BW00.FM0BW-FMAT-PO-PP;
    FM0BM310.FM0BM-NIKE-PO-ID-DD = FM0BW00.FM0BW-FMAT-PO-DD;
    ;
    if (FKWREC.PC3POIDT > 0) /* If po date is passed*/
      FM0BM310.FY1FCTYC = FKWREC.FY1FCTYC; /* Get fcty code*/
    else
      FM0BM310.FY1FCTYC = " "; /* Set it blank*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Determine which map to process.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
    FM0BW00.FM0BW-MAP-SEL-SW = "2"; /* Map switch - ADD*/
  else
    if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* CHG requested*/
      FM0BW00.FM0BW-MAP-SEL-SW = "3"; /* Map switch - CHG*/
    else
      FM0BW00.FM0BW-MAP-SEL-SW = "1"; /* Map switch - INQ*/
    end
  end
  ;
  set FKWREC empty; /* Intitialize FKWREC*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize working storage variables.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM110.FK-VEND-CD > " "
   && FM0BM110.FM0BM-NIKE-PO-ID-PP > 0
   && FM0BM110.FY1FCTYC > " "
   && FM0BM110.FK-FCTY-PO-DT > 0)
    FM0BW00.FM0BW-REQUEST-DATA-SW = "Y"; /* Request data*/
  else
    FM0BW00.FM0BW-REQUEST-DATA-SW = "N"; /* Don't request data*/
  end
  ;
  FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N"; /* PO header found switch*/
  FM0BW00.FM0BW-PO-DTL-FOUND-SW = "N"; /* PO detail found switch*/
  FM0BW00.FM0BW-FMAT-MAP-SW = "N"; /* Format the map switch*/
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N"; /* Confirm the add switch*/
  FM0BW00.FM0BW-NXTPO-IDX = 1; /* Next PO index*/
  ;
  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";
  ;
  ;
end // end FM0B-0005

// Select DCMPNT.VFVHDR01 ('S ')
Function FM0B-0006()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0BW00.FK-INTRN-PO-ID[1];
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0BW00.FM0BW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N"; /* PO was not found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0006"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-0006

// Main process to display a map
Function FM0B-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the first map.*/
   /* 2) Otherwise, if specified display the second map.*/
   /* 3) Otherwise, if specified display the third map.*/
   /* 4) Otherwise, display the first map.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-MAP-SEL-SW == "2") /* Map 2 was requested*/
    ;
    FM0B-2000(); /* Display map 2*/
  else
    ;
    if (FM0BW00.FM0BW-MAP-SEL-SW == "3") /* Map 3 was requested*/
      ;
      FM0B-3000(); /* Display map 3*/
    else
      ;
      FM0B-1000(); /* Display map 1*/
      ;
    end
  end
  ;
end // end FM0B-0010

// Process inquiry map
Function FM0B-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0B-1100(); /* Obtain the data to display*/
  FM0B-1200(); /* Format and display the map*/
  FM0B-1300(); /* Check attention identifier*/
  FM0B-1400(); /* Reset fields to normal intensity*/
  FM0B-1500(); /* Verify the entered data*/
  FM0B-1600(); /* Process valid input request*/
  ;
  ;
end // end FM0B-1000

// Obtain the data to display
Function FM0B-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW00.XXXTSLEN = 973;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0BW00.XXXTSPAG = 1; /* Page nbr to display*/
  end
  ;
  FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N"; /* PO header found switch*/
  FM0BW00.FM0BW-PO-DTL-FOUND-SW = "N"; /* PO detail found switch*/
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-1110(); /* Purge temporary storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the vendor description from the vendor table.*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-1120(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select Factory/Vender P.O. Header record from DCMPNT.VFVHDR01*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-1130(); /* Select DCMPNT.VFVHDR01*/
  ;
   /* --------------------------------------------------------------*/
   /* Get factory/vendor information from VFVITM01 table.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-IDX = 1; /* Init index*/
  FM0BW00.FM0BW-VFVITM01-CURSOR-SW = "N"; /* Init index*/
  ;
  FM0B-1140(); /* Declare cursor DCMPNT.VFVITM01*/
  ;
  FM0B-1150(); /* Fetch record from DCMPNT.VFVITM01*/
  ;
  while (FM0BW00.FM0BW-VFVITM01-CURSOR-SW != "Y") /* Until end of cursor*/
    FM0B-1160(); /* Get item information*/
  end
  ;
  FM0B-1180(); /* Close DCMPNT.VFVITM01 cursor*/
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Add any partially formatted data.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-IDX > 1) /* If partial data data exists*/
    ;
    FM0B-1167(); /* Add page to temporary storage*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, save map header (if header was found).*/
   /* Set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0BW00.TA5TSQIX <= 0) /* If data not found*/
    ;
    if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "Y") /* If PO header was found*/
      ;
      FM0B-1190(); /* Save hdr data in disp storage*/
      FM0B-1167(); /* Add page to temporary storage*/
    end
    ;
    converseLib.validationFailed(18); /* No data found*/
    FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
  else
    ;
    FM0BW00.FM0BW-PO-DTL-FOUND-SW = "Y"; /* PO dtl was found*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-FMAT-MAP-SW = "Y";
  FM0BW00.FM0BW-REQUEST-DATA-SW = "N";
  ;
  ;
end // end FM0B-1100

// Purge temporary storage
Function FM0B-1110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0BW01 empty; /* m110 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0BW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1110

// Select the vender description
Function FM0B-1120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0BM110.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0BW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0BW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1120 SELECT DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1120

// Select DCMPNT.VFVHDR01 row
Function FM0B-1130()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-VEND-CD = FM0BM110.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0BM110.FY1FCTYC; /* Factory*/
  ;
  FM0BW00.FM0BW-FMAT-PO-YY = FM0BM110.FM0BM-NIKE-PO-ID-YY;
  FM0BW00.FM0BW-FMAT-PO-PP = FM0BM110.FM0BM-NIKE-PO-ID-PP;
  FM0BW00.FM0BW-FMAT-PO-DD = FM0BM110.FM0BM-NIKE-PO-ID-DD;
  if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
    FM0BW-FMAT-PO-CC = 20;
  else
    FM0BW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
  ;
  FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM110.FK-FCTY-PO-DT;
  FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
  FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
  FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
  if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
    FM0BW00.FM0BW-FMAT-ORDER-CC = 20;
  else
    FM0BW00.FM0BW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SA"; /* Select alt*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0BW00.FM0BW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (SA)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1130

// Declare DCMPNT.VFVITM01 cursor
Function FM0B-1140()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVITM01 empty;
  ;
  VFVITM01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  ;
  try
    call "IO6830" ("S1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1140 DECLARE DCMPNT.VFVITM01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1140

// Fetch DCMPNT.VFVITM01 cursor
Function FM0B-1150()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6830" ("N1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      FM0BW00.FM0BW-VFVITM01-CURSOR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1150 FETCH DCMPNT.VFVITM01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1150

// Obtain item information
Function FM0B-1160()
   /* --------------------------------------------------------------*/
   /* Obtain P.O. item information*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-1161(); /* Select record from DCMPNT.VMATRL01*/
  ;
   /* Get color description */
  ;
  if (VFVITM01.XCLCD in XCLTBL.XCLCD)
    FM0BW00.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Colr descr*/
  else
    FM0BW00.XCLDESC = "************"; /* Colr descr*/
  end
  ;
  FM0B-1162(); /* Calculate current order Quantity*/
  ;
  FM0B-1166(); /* Save data in display storage*/
  ;
  if (FM0BW00.FM0BW-IDX > FM0BW00.FM0BW-NBR-MAP-ROWS) /* If page full*/
    FM0B-1167(); /* Add record to temp storage*/
    FM0BW00.FM0BW-IDX = 1; /* Re-initialize index*/
  end
  ;
  FM0B-1150(); /* Fetch record from DCMPNT.VFVITM01*/
  ;
end // end FM0B-1160

// Select DCMPNT.VMATRL01 row
Function FM0B-1161()
   /* ------------------------------------------------------------*/
   /* Select a row.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Clear storage record*/
  ;
  VMATRL01.FK-MAT-NBR = VFVITM01.FK-MAT-NBR; /* Material nbr*/
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-REQUEST-DATA-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1161"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATRL01 ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-1161

// Calculate current order qty
Function FM0B-1162()
   /* Get order adjustments from DCMPNT.VFVADJ01 */
  ;
  FM0BW00.FK-FCTY-PO-ADJ-QTY = 0; /* Adjustment quantity*/
  ;
  FM0B-1163(); /* Declare DCMPNT.VFVADJ01 cursor*/
  ;
  FM0BW00.FM0BW-VFVADJ01-CURSOR-SW = "N";
  ;
  while (FM0BW00.FM0BW-VFVADJ01-CURSOR-SW == "N")
    FM0B-1164(); /* Fetch DCMPNT.VFVADJ01 cursor*/
    if (FM0BW00.FM0BW-VFVADJ01-CURSOR-SW == "N")
      FM0BW00.FK-FCTY-PO-ADJ-QTY = FM0BW00.FK-FCTY-PO-ADJ-QTY +       VFVADJ01.FK-FCTY-PO-ADJ-QTY;
    end
  end
  ;
  FM0B-1165(); /* Close dcmpnt.vfvadj01 cursor*/
  ;
  FM0BW00.FM0BW-CURR-ORD-QTY = VFVITM01.FK-MAT-ORD-QTY   + FM0BW00.FK-FCTY-PO-ADJ-QTY; /* Current order qty calculation*/
  ;
  ;
end // end FM0B-1162

// Declare DCMPNT.VFVADJ01 cursor
Function FM0B-1163()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVADJ01 empty;
  ;
  VFVADJ01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  VFVADJ01.FK-MAT-NBR = VMATRL01.FK-MAT-NBR; /* Material nbr*/
  VFVADJ01.XMG-COLR-GRP-CD = VFVITM01.XMG-COLR-GRP-CD; /* Colr group*/
  VFVADJ01.XCLCD = VFVITM01.XCLCD; /* Colr code*/
  ;
  try
    call "IO6840" ("S2", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1163"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1163 DECLARE DCMPNT.VFVADJ01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
  ;
end // end FM0B-1163

// Fetch DCMPNT.VFVADJ01 cursor
Function FM0B-1164()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6840" ("N2", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      FM0BW00.FM0BW-VFVADJ01-CURSOR-SW = "Y"; /* Set of cursor switch*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1164"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1164 FETCH DCMPNT.VFVADJ01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-1164

// Close DCMPNT.VFVADJ01 cursor
Function FM0B-1165()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6840" ("C2", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1165"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1165 CLOSE DMCPNT.VFVADJ01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1165

// Save data to display storage
Function FM0B-1166()
   /* --------------------------------------------------------------*/
   /* Save data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  if (FM0BW00.FM0BW-IDX == 1) /* If first record on page*/
    ;
    FM0BW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
    FM0BW01.FK-VEND-CD = FM0BM110.FK-VEND-CD; /* Vendor*/
    FM0BW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor desc*/
    FM0BW01.FK-FCTY-PO-DT = FM0BM110.FK-FCTY-PO-DT; /* Order date*/
    ;
     /* Nike PO Id */
    FM0BW01.FM0BW-NIKE-PO-ID-YY = FM0BM110.FM0BM-NIKE-PO-ID-YY;
    FM0BW01.FM0BW-NIKE-PO-ID-PP = FM0BM110.FM0BM-NIKE-PO-ID-PP;
    FM0BW01.FM0BW-NIKE-PO-ID-DD = FM0BM110.FM0BM-NIKE-PO-ID-DD;
    FM0BW01.FY1FCTYC = FM0BM110.FY1FCTYC; /* Factory code*/
    ;
    FM0BW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* Factory PO nbr*/
    FM0BW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Est Ship Dt1*/
    FM0BW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Est Ship Dt2*/
    FM0BW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Est Ship Dt3*/
    FM0BW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save detail data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW01.FM0BW-SEL[FM0BW-IDX] = FM0BM110.FM0BM-SEL[FM0BW-IDX]; /* Selection field*/
  ;
  FM0BW01.FK-MAT-NBR[FM0BW-IDX] = VFVITM01.FK-MAT-NBR; /* Material number*/
  ;
  FM0BW01.FK-DEPT-MAT-DESC[FM0BW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material description*/
  ;
  FM0BW01.XMG-COLR-GRP-CD[FM0BW-IDX] = VFVITM01.XMG-COLR-GRP-CD; /* Color group*/
  ;
  FM0BW01.XCLCD[FM0BW-IDX] = VFVITM01.XCLCD; /* Color code*/
  ;
  if (VFVITM01.XCLCD in XCLTBL.XCLCD /* If color on table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0BW01.XCLDESC[FM0BW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex];
  else
    ;
    FM0BW01.XCLDESC[FM0BW-IDX] = "************"; /* Color desc*/
  end
  ;
  FM0BW01.FK-MAT-ORD-QTY[FM0BW-IDX] = VFVITM01.FK-MAT-ORD-QTY; /* Orig order quantity*/
  ;
  FM0BW01.FM0BW-CURR-ORD-QTY[FM0BW-IDX] = FM0BW00.FM0BW-CURR-ORD-QTY; /* Calculated order qty*/
  ;
  FM0BW01.XMU-MAT-UOM-CD[FM0BW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* UOM*/
  ;
  FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1; /* Increment*/
end // end FM0B-1166

// Add page to temporary storage
Function FM0B-1167()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW01.XXXTSLEN = FM0BW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0BW01 empty; /* m110 display storage*/
    ;
    FM0BW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1167"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1167

// Close DCMPNT.VFVITM01 cursor
Function FM0B-1180()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6830" ("C1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1180"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1180 CLOSE DMCPNT.VFVITM01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1180

// Save hdr data in display store
Function FM0B-1190()
   /* --------------------------------------------------------------*/
   /* Save header data (only) in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0BW01 empty;
  ;
  FM0BW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  FM0BW01.FK-VEND-CD = FM0BM110.FK-VEND-CD; /* Vendor*/
  FM0BW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor desc*/
  FM0BW01.FK-FCTY-PO-DT = FM0BM110.FK-FCTY-PO-DT; /* Order date*/
  ;
   /* Nike PO Id */
  FM0BW01.FM0BW-NIKE-PO-ID-YY = FM0BM110.FM0BM-NIKE-PO-ID-YY;
  FM0BW01.FM0BW-NIKE-PO-ID-PP = FM0BM110.FM0BM-NIKE-PO-ID-PP;
  FM0BW01.FM0BW-NIKE-PO-ID-DD = FM0BM110.FM0BM-NIKE-PO-ID-DD;
  FM0BW01.FY1FCTYC = FM0BM110.FY1FCTYC; /* Factory code*/
  ;
  FM0BW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* Factory PO nbr*/
  FM0BW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Est Ship Dt1*/
  FM0BW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Est Ship Dt2*/
  FM0BW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Est Ship Dt3*/
  FM0BW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  ;
  ;
end // end FM0B-1190

// Format and converse the map
Function FM0B-1200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-FMAT-MAP-SW == "Y" /* Format requested*/
  )                                   
    if (converseVar.validationMsgNum == 0   /* No errors*/
     || (converseVar.validationMsgNum == 18 /* No data to display*/
     && FM0BW00.FM0BW-PO-HDR-FOUND-SW == "Y")) /* and po hdr found*/
      ;
      FM0B-1210(); /* Format the map*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0BM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0BM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0BM110 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0BM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0BM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0BM110.FK-VEND-SNM = FM0BW00.FK-VEND-SNM; /* Vender desc*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set header dark if no data found to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "N") /* If no po hdr found*/
    ;
    set FM0BM110.XXXTSPAG invisible, skip;
    set FM0BM110.TA5TSQIX invisible, skip;
    set FM0BM110.FK-FCTY-PO-ID invisible, skip;
    set FM0BM110.FK-EST-SHP-DT1 invisible, skip; /* Date1*/
    set FM0BM110.FK-EST-SHP-DT2 invisible, skip; /* Date2*/
    set FM0BM110.FK-EST-SHP-DT3 invisible, skip; /* Date3*/
    set FM0BM110.FK-FCTY-PO-COMNT invisible, skip; /* Comment*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set detail dark if no data found to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-PO-DTL-FOUND-SW == "N") /* If no po dtl found*/
    ;
    FM0BW00.FM0BW-IDX = 1; /* Init index*/
    ;
    while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS)
      ;
      set FM0BM110.FM0BM-SEL[FM0BW-IDX] invisible, skip;
      set FM0BM110.FK-MAT-NBR[FM0BW-IDX] invisible, skip;
      set FM0BM110.FK-DEPT-MAT-DESC[FM0BW-IDX] invisible, skip;
      set FM0BM110.XCLCD[FM0BW-IDX] invisible, skip;
      set FM0BM110.XCLDESC[FM0BW-IDX] invisible, skip;
      set FM0BM110.FK-MAT-ORD-QTY[FM0BW-IDX] invisible, skip;
      set FM0BM110.FM0BM-CURR-ORD-QTY[FM0BW-IDX] invisible, skip;
      set FM0BM110.XMU-MAT-UOM-CD[FM0BW-IDX] invisible, skip;
      FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but there is at least partial data on the map).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-PO-DTL-FOUND-SW == "Y") /* If po dtl found*/
    ;
    FM0BW00.FM0BW-IDX = 1; /* Init index*/
    while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS)
      ;
      if (FM0BM110.FK-MAT-NBR[FM0BW-IDX] == " " /* No data*/
       && FM0BM110.XCLCD[FM0BW-IDX] == " ")     /* No data*/
        set FM0BM110.FM0BM-SEL[FM0BW-IDX] invisible, skip;
        set FM0BM110.FK-MAT-NBR[FM0BW-IDX] invisible, skip;
        set FM0BM110.FK-DEPT-MAT-DESC[FM0BW-IDX] invisible, skip;
        set FM0BM110.XCLCD[FM0BW-IDX] invisible, skip;
        set FM0BM110.XCLDESC[FM0BW-IDX] invisible, skip;
        set FM0BM110.FK-MAT-ORD-QTY[FM0BW-IDX] invisible, skip;
        set FM0BM110.FM0BM-CURR-ORD-QTY[FM0BW-IDX] invisible, skip;
        set FM0BM110.XMU-MAT-UOM-CD[FM0BW-IDX] invisible, skip;
      end
      ;
      FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* If no message to display*/
    set FM0BM110.FK-VEND-CD cursor;
  end
  ;
  ;
  converse FM0BM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0BM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0BM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0B-1200

// Format the data to display
Function FM0B-1210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0BM110 initial; /* Initialize map*/
  ;
  FM0BW00.FM0BW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0BW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0BW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0BW00.XXXTSPAG > FM0BW00.TA5TSQIX) /* Desired page > highest*/
        FM0BW00.XXXTSPAG = FM0BW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0B-1220(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0BM110.FK-VEND-CD = FM0BW01.FK-VEND-CD; /* Vendor*/
  FM0BM110.FK-VEND-SNM = FM0BW01.FK-VEND-SNM; /* Vendor description*/
  FM0BM110.FK-FCTY-PO-DT = FM0BW01.FK-FCTY-PO-DT; /* Order Date*/
  FM0BM110.FM0BM-NIKE-PO-ID-YY = FM0BW01.FM0BW-NIKE-PO-ID-YY; /* Year*/
  FM0BM110.FM0BM-NIKE-PO-ID-PP = FM0BW01.FM0BW-NIKE-PO-ID-PP; /* Prod*/
  FM0BM110.FM0BM-NIKE-PO-ID-DD = FM0BW01.FM0BW-NIKE-PO-ID-DD; /* Delv*/
  FM0BM110.FY1FCTYC = FM0BW01.FY1FCTYC;
  FM0BM110.FK-FCTY-PO-ID = FM0BW01.FK-FCTY-PO-ID;
  FM0BM110.FK-EST-SHP-DT1 = FM0BW01.FK-EST-SHP-DT1;
  FM0BM110.FK-EST-SHP-DT2 = FM0BW01.FK-EST-SHP-DT2;
  FM0BM110.FK-EST-SHP-DT3 = FM0BW01.FK-EST-SHP-DT3;
  FM0BM110.FK-FCTY-PO-COMNT = FM0BW01.FK-FCTY-PO-COMNT; /* *//* Comments*/
  ;
  FM0BM110.XXXTSPAG = FM0BW00.XXXTSPAG; /* Current page*/
  FM0BM110.TA5TSQIX = FM0BW00.TA5TSQIX; /* Max page*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-IDX = 1; /* Initialize idx*/
  ;
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS)
    ;
    FM0BM110.FK-MAT-NBR[FM0BW-IDX] = FM0BW01.FK-MAT-NBR[FM0BW-IDX]; /* Material Number*/
    FM0BM110.FK-DEPT-MAT-DESC[FM0BW-IDX] = FM0BW01.FK-DEPT-MAT-DESC[FM0BW-IDX]; /* Material Descr*/
    FM0BM110.XCLCD[FM0BW-IDX] = FM0BW01.XCLCD[FM0BW-IDX]; /* Color code*/
    FM0BM110.XCLDESC[FM0BW-IDX] = FM0BW01.XCLDESC[FM0BW-IDX]; /* Color desc*/
    FM0BM110.FK-MAT-ORD-QTY[FM0BW-IDX] = FM0BW01.FK-MAT-ORD-QTY[FM0BW-IDX]; /* Orig Ord qty*/
    FM0BM110.FM0BM-CURR-ORD-QTY[FM0BW-IDX] = FM0BW01.FM0BW-CURR-ORD-QTY[FM0BW-IDX]; /* Curr Ord qty*/
    FM0BM110.XMU-MAT-UOM-CD[FM0BW-IDX] = FM0BW01.XMU-MAT-UOM-CD[FM0BW-IDX]; /* UOM*/
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  ;
  ;
end // end FM0B-1210

// Read page from temp storage
Function FM0B-1220()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW01.XXXTSLEN = FM0BW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0BW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1220"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-1220

// Check attention identifier
Function FM0B-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0BM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0BM110.FY1FCTYC; /* Factory*/
    ;
    if (FM0BM110.FM0BM-NIKE-PO-ID-YY == 0
     && FM0BM110.FM0BM-NIKE-PO-ID-PP == 0
     && FM0BM110.FM0BM-NIKE-PO-ID-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-PO-YY = FM0BM110.FM0BM-NIKE-PO-ID-YY;
      FM0BW00.FM0BW-FMAT-PO-PP = FM0BM110.FM0BM-NIKE-PO-ID-PP;
      FM0BW00.FM0BW-FMAT-PO-DD = FM0BM110.FM0BM-NIKE-PO-ID-DD;
      if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
        FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT; /**/
    end
    ;
    if (FM0BM110.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM110.FK-FCTY-PO-DT;
      FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
      FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
      FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
      if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
        FM0BW00.FM0BW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0B"; /* to applicaiton*/
    COMMAREA.CAITEM = "I"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0BM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FM0BM110.FK-VEND-CD; /* Vendor*/
      FKWREC.FY1FCTYC = FM0BM110.FY1FCTYC; /* Factory*/
      ;
      if (FM0BM110.FM0BM-NIKE-PO-ID-YY == 0
       && FM0BM110.FM0BM-NIKE-PO-ID-PP == 0
       && FM0BM110.FM0BM-NIKE-PO-ID-DD == 0)
        ;
        FKWREC.PC3POIDT = 0;
      else
        ;
        FM0BW00.FM0BW-FMAT-PO-YY = FM0BM110.FM0BM-NIKE-PO-ID-YY;
        FM0BW00.FM0BW-FMAT-PO-PP = FM0BM110.FM0BM-NIKE-PO-ID-PP;
        FM0BW00.FM0BW-FMAT-PO-DD = FM0BM110.FM0BM-NIKE-PO-ID-DD;
        if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
          FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
        else
          FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 19 to century*/
        end
        FKWREC.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
      end
      ;
      if (FM0BM110.FK-FCTY-PO-DT == 0)
        ;
        FKWREC.FK-FCTY-PO-DT = 0;
      else
        ;
        FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM110.FK-FCTY-PO-DT;
        FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
        FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
        FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
        if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
          FM0BW00.FM0BW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
        else
          FM0BW00.FM0BW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
        end
        FKWREC.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT;
      end
      ;
      COMMAREA.CATOAP = FM0BM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0BM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0BM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* FM0A requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0BM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTPO requested*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8   /* FRWD requested*/
   && converseVar.eventKey not pf14  /* POSHP requested*/
   && converseVar.eventKey not pf15  /* POSUM requested*/
   && converseVar.eventKey not pf16  /* POLST requested*/
   && converseVar.eventKey not pf17) /* POMLT requested*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0B-1300

// Reset highlighted fields
Function FM0B-1400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0BM110.FK-VEND-CD initialAttributes; /* Vender code*/
  set FM0BM110.FK-VEND-SNM initialAttributes; /* Vender desc*/
  set FM0BM110.FM0BM-NIKE-PO-ID-YY initialAttributes;
  set FM0BM110.FM0BM-NIKE-PO-ID-PP initialAttributes;
  set FM0BM110.FM0BM-NIKE-PO-ID-DD initialAttributes;
  set FM0BM110.FY1FCTYC initialAttributes;
  set FM0BM110.FK-FCTY-PO-DT initialAttributes;
  ;
  FM0BW00.FM0BW-IDX = 1; /* Init index*/
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS)
    ;
    set FM0BM110.FM0BM-SEL[FM0BW-IDX] initialAttributes; /* Selection field*/
    set FM0BM110.FK-MAT-NBR[FM0BW-IDX] initialAttributes; /* Material Number*/
    set FM0BM110.FK-DEPT-MAT-DESC[FM0BW-IDX] initialAttributes; /* Material Desc*/
    set FM0BM110.XCLCD[FM0BW-IDX] initialAttributes; /* Color code*/
    set FM0BM110.XCLDESC[FM0BW-IDX] initialAttributes; /* Color desc*/
    set FM0BM110.FK-MAT-ORD-QTY[FM0BW-IDX] initialAttributes; /* Orig Ord qty*/
    set FM0BM110.FM0BM-CURR-ORD-QTY[FM0BW-IDX] initialAttributes; /* Curr Ord qty*/
    set FM0BM110.XMU-MAT-UOM-CD[FM0BW-IDX] initialAttributes; /* UOM*/
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  set FM0BM110.CATOAP initialAttributes; /* TO application*/
  set FM0BM110.CAITEM initialAttributes; /* Application item*/
  ;
  ;
end // end FM0B-1400

// Verify the entered data
Function FM0B-1500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0BM110.CAITEM > " "         /* Application data was entered*/
   && converseVar.eventKey not pf14 /* Pf14 pressed*/
   && converseVar.eventKey not pf15 /* Pf15 pressed*/
   && converseVar.eventKey not pf16 /* Pf16 pressed*/
   && converseVar.eventKey not pf17) /* Pf17 pressed*/
    ;
    set FM0BM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* -----------------------------------------------------------------*/
   /* If NXTPO (PF6) entered, verify request*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next Internal PO requested*/
    ;
    if (FM0BW00.FM0BW-NXTPO-IDX >= FM0BW00.FM0BW-NBR-PASSED-PO)
      ;
      converseLib.validationFailed(130); /* No more PO's to display*/
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0B-1510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Edit if PFKEY transfer requested.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf14 /* Pf14 pressed*/
   || converseVar.eventKey is pf15 /* Pf15 pressed*/
   || converseVar.eventKey is pf16 /* Pf16 pressed*/
   || converseVar.eventKey is pf17) /* Pf17 pressed*/
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-NBR-MAP-ROWS;
    ;
    while (FM0BW00.FM0BW-IDX > 0) /* Check each map field*/
      ;
      if (FM0BM110.FM0BM-SEL[FM0BW-IDX] != "S" /* If not selected*/
       && FM0BM110.FM0BM-SEL[FM0BW-IDX] != " ") /* and not blank*/
        ;
        converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
        FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
        set FM0BM110.FM0BM-SEL[FM0BW-IDX] cursor, bold; /* Highlight*/
      end
      ;
      FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX - 1; /* Decrement index*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key was changed, verify it.*/
   /* Otherwise, verify the detail data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0BM110.FK-VEND-CD != FM0BW01.FK-VEND-CD /* Vender change*/
   || FM0BM110.FM0BM-NIKE-PO-ID-YY != FM0BW01.FM0BW-NIKE-PO-ID-YY
   || FM0BM110.FM0BM-NIKE-PO-ID-PP != FM0BW01.FM0BW-NIKE-PO-ID-PP
   || FM0BM110.FM0BM-NIKE-PO-ID-DD != FM0BW01.FM0BW-NIKE-PO-ID-DD
   || FM0BM110.FY1FCTYC != FM0BW01.FY1FCTYC     
   || FM0BM110.FK-FCTY-PO-DT != FM0BW01.FK-FCTY-PO-DT)
    ;
    FM0B-1520(); /* Verify key*/
  else
    ;
    FM0B-1530(); /* Verify detail*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0B-1500

// Verify scroll request
Function FM0B-1510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0BW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0BW00.XXXTSPAG >= FM0BW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0B-1510

// Verify header
Function FM0B-1520()
   /* ------------------------------------------------------------*/
   /* Verify the factory code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM110.FY1FCTYC == " ") /* If factory blank*/
    ;
    converseLib.validationFailed(121); /* Factory code missing or invalid*/
    FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
    set FM0BM110.FY1FCTYC cursor, bold; /* Highlight*/
  else
    ;
    FM0B-1521(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the PO date.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM110.FM0BM-NIKE-PO-ID-DD >= 1
   && FM0BM110.FM0BM-NIKE-PO-ID-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
    set FM0BM110.FM0BM-NIKE-PO-ID-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0BM110.FM0BM-NIKE-PO-ID-PP >= 1
   && FM0BM110.FM0BM-NIKE-PO-ID-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
    set FM0BM110.FM0BM-NIKE-PO-ID-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Call TA0040 to verify the order date.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FM0BM110.FK-FCTY-PO-DT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(84); /* Date missing or invalid*/
      FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
      set FM0BM110.FK-FCTY-PO-DT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor code.*/
   /* ------------------------------------------------------------*/
  ;
  FM0B-1522(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0B-1520

// Select DFCTY.VFCTY001 row
Function FM0B-1521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02"; /* /GPC code*/
  FY1REC.FY1FCTYC = FM0BM110.FY1FCTYC; /* Factory nbr*/
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FKWREC.XXX-MOD-ID = "1521"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory missing or invalid*/
      set FM0BM110.FY1FCTYC cursor, bold; /* Highlight*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1521 SELECT DCMPNT.VFCTY001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1521

// Select DCMPNT.VVNDR001 row
Function FM0B-1522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0BM110.FK-VEND-CD; /* Vender nbr*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FKWREC.XXX-MOD-ID = "1522"; /* Module identification*/
      converseLib.validationFailed(21); /* Vender missing or invalid*/
      set FM0BM110.FK-VEND-CD cursor, bold; /* Highlight*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1522 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-1522

// Verify detail
Function FM0B-1530()
   /* ---------------------------------------------------------------*/
   /* Verify the select fields.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-NBR-MAP-ROWS;
  ;
  while (FM0BW00.FM0BW-IDX > 0) /* Check each map field*/
    ;
    if (FM0BM110.FM0BM-SEL[FM0BW-IDX] != "S" /* If not selected*/
     && FM0BM110.FM0BM-SEL[FM0BW-IDX] != " ") /* and not blank*/
      ;
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
      FKWREC.XXX-MOD-ID = "1530"; /* Module identification*/
      set FM0BM110.FM0BM-SEL[FM0BW-IDX] cursor, bold; /* Highlight*/
    end
    ;
    if (FM0BM110.FM0BM-SEL[FM0BW-IDX] == "S") /* If selected*/
      FKWREC.FK-MAT-NBR[1] = FM0BM110.FK-MAT-NBR[FM0BW-IDX];
      FKWREC.XCLCD[1] = FM0BM110.XCLCD[FM0BW-IDX];
    end
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX - 1; /* Decrement index*/
  end
  ;
  if (FM0BW00.FM0BW-COUNT > 1) /* If more than 1 row selected*/
    converseLib.validationFailed(22); /* Only 1 row may be selected at a time*/
    FKWREC.XXX-MOD-ID = "1530"; /* Module identification*/
    ;
    FM0BW00.FM0BW-IDX = 1;
    while (FM0BW00.FM0BW-IDX < FM0BW00.FM0BW-NBR-MAP-ROWS)
      ;
      if (FM0BM110.FM0BM-SEL[FM0BW-IDX] == "S") /* If line selected*/
        set FM0BM110.FM0BM-SEL[FM0BW-IDX] cursor, bold; /* Highlight*/
      end
      FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0B-1530

// Process valid input requests
Function FM0B-1600()
   /* ------------------------------------------------------------*/
   /* If PF6 pressed, obtain the next vendor header and exit to*/
   /* re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    FM0BW00.FM0BW-NXTPO-IDX = FM0BW00.FM0BW-NXTPO-IDX + 1;
    ;
    FM0B-1610(); /* Select VFVHDR01*/
    ;
     /* Format map header with PO header data*/
    ;
    FM0BM110.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0BM110.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0BW00.FM0BW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0BM110.FM0BM-NIKE-PO-ID-YY = FM0BW00.FM0BW-FMAT-PO-YY;
    FM0BM110.FM0BM-NIKE-PO-ID-PP = FM0BW00.FM0BW-FMAT-PO-PP;
    FM0BM110.FM0BM-NIKE-PO-ID-DD = FM0BW00.FM0BW-FMAT-PO-DD;
    FM0BM110.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0BW00.FM0BW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0BW00.XXXTSPAG = FM0BW00.XXXTSPAG - 1; /* Decrement page*/
    FM0BW00.FM0BW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0BW00.XXXTSPAG = FM0BW00.XXXTSPAG + 1; /* Increment page*/
    FM0BW00.FM0BW-FMAT-MAP-SW = "Y";
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process application transfer request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf14 /* PF12 was pressed*/
   || converseVar.eventKey is pf15 /* PF14 was pressed*/
   || converseVar.eventKey is pf16 /* PF16 was pressed*/
   || converseVar.eventKey is pf17) /* PF17 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0BM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0BM110.FY1FCTYC; /* Factory*/
    ;
    if (FM0BM110.FM0BM-NIKE-PO-ID-YY == 0
     && FM0BM110.FM0BM-NIKE-PO-ID-PP == 0
     && FM0BM110.FM0BM-NIKE-PO-ID-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-PO-YY = FM0BM110.FM0BM-NIKE-PO-ID-YY;
      FM0BW00.FM0BW-FMAT-PO-PP = FM0BM110.FM0BM-NIKE-PO-ID-PP;
      FM0BW00.FM0BW-FMAT-PO-DD = FM0BM110.FM0BM-NIKE-PO-ID-DD;
      if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
        FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
    end
    ;
    if (FM0BM110.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-PO-DT = FM0BM110.FK-FCTY-PO-DT;
      FM0BW00.FM0BW-FMAT-PO-YY = FM0BW00.FM0BW-FMAT-PO-YY;
      FM0BW00.FM0BW-FMAT-PO-PP = FM0BW00.FM0BW-FMAT-PO-PP;
      FM0BW00.FM0BW-FMAT-PO-DD = FM0BW00.FM0BW-FMAT-PO-DD;
      if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
        FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 20 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-PO-DT; /* PO date*/
    end
    ;
    ;
    FM0BW00.FM0BW-IDX = 1;
    while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS)
      ;
      if (FM0BM110.FM0BM-SEL[FM0BW-IDX] == "S")
        ;
        FKWREC.FK-MAT-NBR[1] = FM0BM110.FK-MAT-NBR[FM0BW-IDX];
        FKWREC.XCLCD[1] = FM0BM110.XCLCD[FM0BW-IDX];
        FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + FM0BW00.FM0BW-NBR-MAP-ROWS;
      end
      ;
      FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1; /* Increment index*/
    end
    ;
    ;
    if (converseVar.eventKey is pf14) /* PF12 pressed*/
      COMMAREA.CATOAP = "FM0D"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF14 pressed*/
      COMMAREA.CATOAP = "FM0J"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 pressed*/
      COMMAREA.CATOAP = "FM0K"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0BM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 pressed*/
      COMMAREA.CATOAP = "FM0L"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0BM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0BM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM110.FK-VEND-CD != FM0BW01.FK-VEND-CD
   || FM0BM110.FK-FCTY-PO-DT != FM0BW01.FK-FCTY-PO-DT
   || FM0BM110.FM0BM-NIKE-PO-ID-YY != FM0BW01.FM0BW-NIKE-PO-ID-YY
   || FM0BM110.FM0BM-NIKE-PO-ID-PP != FM0BW01.FM0BW-NIKE-PO-ID-PP
   || FM0BM110.FM0BM-NIKE-PO-ID-DD != FM0BW01.FM0BW-NIKE-PO-ID-DD
   || FM0BM110.FY1FCTYC != FM0BW01.FY1FCTYC
  )
    FM0BW00.FM0BW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0B-1600

// Select DCMPNT.VFVHDR01 row
Function FM0B-1610()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0BW00.FK-INTRN-PO-ID[FM0BW-NXTPO-IDX]; /* Internal PO id*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      set VFVHDR01 empty;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S  )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-1610

// Process add map
Function FM0B-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0B-2100(); /* Obtain the data to display*/
  FM0B-2200(); /* Format and display the map*/
  FM0B-2300(); /* Check attention identifier*/
  FM0B-2400(); /* Reset fields to normal intensity*/
  FM0B-2500(); /* Verify the entered data*/
  FM0B-2600(); /* Process valid input request*/
  ;
  ;
end // end FM0B-2000

// Obtain the data to display
Function FM0B-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select vendor description from DCMPNT.VVNDR001.*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-2110(); /* Get vendor description (DCMPNT.VVNDR001)*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the PO header information.*/
   /* Then, obtain any additional data for any detail lines entered.*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-2120(); /* Get header information*/
  FM0B-2130(); /* Get detail information*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If header found, and we are confirming the delete, set a msg.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "Y" /* If po header found*/
   && FM0BW00.FM0BW-CONFIRM-ADD-SW == "Y") /* and confirming add*/
    ;
    FKWREC.XXXMSGNO = 147; /* Hdr already exists, enter or pa2*/
    FKWREC.XXX-MOD-ID = "2100"; /* Module identification*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-FMAT-MAP-SW = "Y";
  FM0BW00.FM0BW-REQUEST-DATA-SW = "N";
  ;
  ;
end // end FM0B-2100

// Select the vender description
Function FM0B-2110()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0BM210.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0BW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0BW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE VENDOR DESCRIPTION   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-2110

// Obtain PO header information
Function FM0B-2120()
   /* --------------------------------------------------------------*/
   /* Initialize variables.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0BW01 empty;
  ;
  FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N"; /* PO header found switch*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select Factory/Vender P.O. Header record from DCMPNT.VFVHDR01*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-2121(); /* Select DCMPNT.VFVHDR01*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save retrieved data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "Y") /* If PO header found*/
    ;
    FM0BW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
    FM0BW01.FK-VEND-CD = FM0BM210.FK-VEND-CD; /* Vendor*/
    FM0BW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor desc*/
    FM0BW01.FK-FCTY-PO-DT = FM0BM210.FK-FCTY-PO-DT; /* Order date*/
    ;
     /* Nike PO Id */
    FM0BW01.FM0BW-NIKE-PO-ID-YY = FM0BM210.FM0BM-NIKE-PO-ID-YY;
    FM0BW01.FM0BW-NIKE-PO-ID-PP = FM0BM210.FM0BM-NIKE-PO-ID-PP;
    FM0BW01.FM0BW-NIKE-PO-ID-DD = FM0BM210.FM0BM-NIKE-PO-ID-DD;
    FM0BW01.FY1FCTYC = FM0BM210.FY1FCTYC; /* Factory code*/
    ;
    FM0BW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* Factory PO nbr*/
    FM0BW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Est Ship Dt1*/
    FM0BW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Est Ship Dt2*/
    FM0BW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Est Ship Dt3*/
    FM0BW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  else
    ;
    FM0BW01.FK-VEND-CD = FM0BM210.FK-VEND-CD; /* Vendor*/
    FM0BW01.FK-FCTY-PO-DT = FM0BM210.FK-FCTY-PO-DT; /* Order date*/
    FM0BW01.FM0BW-NIKE-PO-ID-YY = FM0BM210.FM0BM-NIKE-PO-ID-YY;
    FM0BW01.FM0BW-NIKE-PO-ID-PP = FM0BM210.FM0BM-NIKE-PO-ID-PP;
    FM0BW01.FM0BW-NIKE-PO-ID-DD = FM0BM210.FM0BM-NIKE-PO-ID-DD;
    FM0BW01.FY1FCTYC = FM0BM210.FY1FCTYC; /* Factory code*/
    FM0BW01.FK-FCTY-PO-ID = FM0BM210.FK-FCTY-PO-ID;
    FM0BW01.FK-EST-SHP-DT1 = FM0BM210.FK-EST-SHP-DT1;
    FM0BW01.FK-EST-SHP-DT2 = FM0BM210.FK-EST-SHP-DT2;
    FM0BW01.FK-EST-SHP-DT3 = FM0BM210.FK-EST-SHP-DT3;
    FM0BW01.FK-FCTY-PO-COMNT = FM0BM210.FK-FCTY-PO-COMNT;
  end
  ;
  ;
end // end FM0B-2120

// Select DCMPNT.VFVHDR01 row
Function FM0B-2121()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-VEND-CD = FM0BM210.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0BM210.FY1FCTYC; /* Factory*/
  ;
  FM0BW00.FM0BW-FMAT-PO-YY = FM0BM210.FM0BM-NIKE-PO-ID-YY;
  FM0BW00.FM0BW-FMAT-PO-PP = FM0BM210.FM0BM-NIKE-PO-ID-PP;
  FM0BW00.FM0BW-FMAT-PO-DD = FM0BM210.FM0BM-NIKE-PO-ID-DD;
  if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
    FM0BW-FMAT-PO-CC = 20;
  else
    FM0BW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
  ;
  FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM210.FK-FCTY-PO-DT;
  FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
  FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
  FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
  if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
    FM0BW00.FM0BW-FMAT-ORDER-CC = 20;
  else
    FM0BW00.FM0BW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SA"; /* Select alt*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0BW00.FM0BW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (SA)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-2121

// Obtain additional mtl data
Function FM0B-2130()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-IDX = 1; /* Initialize index*/
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS) /* Check each line*/
    ;
    if (FM0BM210.FK-MAT-NBR[FM0BW-IDX] != " ") /* Line data was entered*/
      ;
      FM0B-2131(); /* Select DCMPNT.VMATRL01*/
      ;
      /* --------------------------------------------------------------*/
      /* Save data in display storage*/
      /* --------------------------------------------------------------*/
      ;
      FM0BW01.FK-MAT-NBR[FM0BW-IDX] = FM0BM210.FK-MAT-NBR[FM0BW-IDX]; /* Material nbr*/
      FM0BW01.FK-DEPT-MAT-DESC[FM0BW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
      FM0BW01.XCLCD[FM0BW-IDX] = FM0BM210.XCLCD[FM0BW-IDX]; /* Color*/
      ;
      if (FM0BM210.XCLCD[FM0BW-IDX] in XCLTBL.XCLCD /* If color in table*/
       && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
        FM0BW01.XCLDESC[FM0BW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex];
      else
        FM0BW01.XCLDESC[FM0BW-IDX] = "************";
      end
      ;
      FM0BW01.FK-MAT-ORD-QTY[FM0BW-IDX] = FM0BM210.FK-MAT-ORD-QTY[FM0BW-IDX]; /* Orig ord qty*/
      FM0BW01.FM0BW-CURR-ORD-QTY[FM0BW-IDX] = FM0BM210.FK-MAT-ORD-QTY[FM0BW-IDX]; /* Curr ord qty*/
      FM0BW01.XMU-MAT-UOM-CD[FM0BW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Unit of measure*/
    end
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  ;
  ;
end // end FM0B-2130

// Select DCMPNT.VMATRL01 row
Function FM0B-2131()
   /* ------------------------------------------------------------*/
   /* Select a row.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Clear storage record*/
  ;
  VMATRL01.FK-MAT-NBR = FM0BM210.FK-MAT-NBR[FM0BW-IDX];
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Normal return code*/
      ;
      VMATRL01.FK-DEPT-MAT-DESC = "***************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-REQUEST-DATA-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2131"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATRL01 ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-2131

// Format and converse the map
Function FM0B-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* No errors*/
    ;
    FM0B-2210(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0BM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0BM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0BM210 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0BM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0BM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0BM210.FK-VEND-SNM = FM0BW00.FK-VEND-SNM; /* Vender desc*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Protect header data if it already exists.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "Y") /* If PO hdr found*/
    ;
    set FM0BM210.FK-FCTY-PO-ID skip;
    set FM0BM210.FK-EST-SHP-DT1 skip; /* Date1*/
    set FM0BM210.FK-EST-SHP-DT2 skip; /* Date2*/
    set FM0BM210.FK-EST-SHP-DT3 skip; /* Date3*/
    set FM0BM210.FK-FCTY-PO-COMNT skip; /* Comment*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0  /* If no message to display*/
   || converseVar.validationMsgNum == 30 /* Press enter or pa2*/
   || converseVar.validationMsgNum == 147) /* hdr displayed, enter or pa2*/
    if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "Y") /* If header found*/
      set FM0BM210.FK-MAT-NBR[1] cursor;
    else
      set FM0BM210.FK-VEND-CD cursor;
    end
  end
  ;
  ;
  converse FM0BM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0BM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0BM210.CAITEM; /* Application data*/
  ;
  ;
end // end FM0B-2200

// Format the data to display
Function FM0B-2210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0BM210 initial; /* Initialize map*/
  ;
  FM0BW00.FM0BW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0BM210.FK-VEND-CD = FM0BW01.FK-VEND-CD; /* Vendor*/
  FM0BM210.FK-VEND-SNM = FM0BW01.FK-VEND-SNM; /* Vendor description*/
  FM0BM210.FK-FCTY-PO-DT = FM0BW01.FK-FCTY-PO-DT; /* Order Date*/
  FM0BM210.FM0BM-NIKE-PO-ID-YY = FM0BW01.FM0BW-NIKE-PO-ID-YY; /* Year*/
  FM0BM210.FM0BM-NIKE-PO-ID-PP = FM0BW01.FM0BW-NIKE-PO-ID-PP; /* Prod*/
  FM0BM210.FM0BM-NIKE-PO-ID-DD = FM0BW01.FM0BW-NIKE-PO-ID-DD; /* Delv*/
  FM0BM210.FY1FCTYC = FM0BW01.FY1FCTYC;
  FM0BM210.FK-FCTY-PO-ID = FM0BW01.FK-FCTY-PO-ID;
  FM0BM210.FK-EST-SHP-DT1 = FM0BW01.FK-EST-SHP-DT1;
  FM0BM210.FK-EST-SHP-DT2 = FM0BW01.FK-EST-SHP-DT2;
  FM0BM210.FK-EST-SHP-DT3 = FM0BW01.FK-EST-SHP-DT3;
  FM0BM210.FK-FCTY-PO-COMNT = FM0BW01.FK-FCTY-PO-COMNT; /* *//* Comments*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-IDX = 1; /* Initialize idx*/
  ;
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS)
    ;
    FM0BM210.FK-MAT-NBR[FM0BW-IDX] = FM0BW01.FK-MAT-NBR[FM0BW-IDX]; /* Material Number*/
    FM0BM210.FK-DEPT-MAT-DESC[FM0BW-IDX] = FM0BW01.FK-DEPT-MAT-DESC[FM0BW-IDX]; /* Material Descr*/
    FM0BM210.XCLCD[FM0BW-IDX] = FM0BW01.XCLCD[FM0BW-IDX]; /* Color code*/
    FM0BM210.XCLDESC[FM0BW-IDX] = FM0BW01.XCLDESC[FM0BW-IDX]; /* Color desc*/
    FM0BM210.FK-MAT-ORD-QTY[FM0BW-IDX] = FM0BW01.FK-MAT-ORD-QTY[FM0BW-IDX]; /* Orig Ord qty*/
    FM0BM210.FM0BM-CURR-ORD-QTY[FM0BW-IDX] = FM0BW01.FM0BW-CURR-ORD-QTY[FM0BW-IDX]; /* Curr Ord qty*/
    FM0BM210.XMU-MAT-UOM-CD[FM0BW-IDX] = FM0BW01.XMU-MAT-UOM-CD[FM0BW-IDX]; /* UOM*/
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  ;
  ;
end // end FM0B-2210

// Check attention identifier
Function FM0B-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0BM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0BM210.FY1FCTYC; /* Factory*/
    ;
    if (FM0BM210.FM0BM-NIKE-PO-ID-YY == 0
     && FM0BM210.FM0BM-NIKE-PO-ID-PP == 0
     && FM0BM210.FM0BM-NIKE-PO-ID-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-PO-YY = FM0BM210.FM0BM-NIKE-PO-ID-YY;
      FM0BW00.FM0BW-FMAT-PO-PP = FM0BM210.FM0BM-NIKE-PO-ID-PP;
      FM0BW00.FM0BW-FMAT-PO-DD = FM0BM210.FM0BM-NIKE-PO-ID-DD;
      if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
        FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT; /**/
    end
    ;
    if (FM0BM210.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM210.FK-FCTY-PO-DT;
      FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
      FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
      FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
      if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
        FM0BW00.FM0BW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0B"; /* to applicaiton*/
    COMMAREA.CAITEM = "A"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0BM210.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FM0BM210.FK-VEND-CD; /* Vendor*/
      FKWREC.FY1FCTYC = FM0BM210.FY1FCTYC; /* Factory*/
      ;
      if (FM0BM210.FM0BM-NIKE-PO-ID-YY == 0
       && FM0BM210.FM0BM-NIKE-PO-ID-PP == 0
       && FM0BM210.FM0BM-NIKE-PO-ID-DD == 0)
        ;
        FKWREC.PC3POIDT = 0;
      else
        ;
        FM0BW00.FM0BW-FMAT-PO-YY = FM0BM210.FM0BM-NIKE-PO-ID-YY;
        FM0BW00.FM0BW-FMAT-PO-PP = FM0BM210.FM0BM-NIKE-PO-ID-PP;
        FM0BW00.FM0BW-FMAT-PO-DD = FM0BM210.FM0BM-NIKE-PO-ID-DD;
        if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
          FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
        else
          FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 19 to century*/
        end
        FKWREC.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
      end
      ;
      if (FM0BM210.FK-FCTY-PO-DT == 0)
        ;
        FKWREC.FK-FCTY-PO-DT = 0;
      else
        ;
        FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM210.FK-FCTY-PO-DT;
        FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
        FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
        FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
        if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
          FM0BW00.FM0BW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
        else
          FM0BW00.FM0BW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
        end
        FKWREC.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT;
      end
      ;
      COMMAREA.CATOAP = FM0BM210.CATOAP; /* to application*/
      COMMAREA.CAITEM = FM0BM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0BM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FM0A requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf14 /* POSHP requested*/
   || converseVar.eventKey is pf15 /* POSUM requested*/
   || converseVar.eventKey is pf16 /* POLST requested*/
   || converseVar.eventKey is pf17) /* POMLT requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0BM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0D"; /* TO application*/
      COMMAREA.CAITEM = FM0BM210.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FM0J"; /* TO application*/
      COMMAREA.CAITEM = FM0BM210.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FM0K"; /* TO application*/
      COMMAREA.CAITEM = FM0BM210.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0L"; /* TO application*/
      COMMAREA.CAITEM = FM0BM210.CAITEM; /* Application find code*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0BM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0BM210.FY1FCTYC; /* Factory*/
    ;
    if (FM0BM210.FM0BM-NIKE-PO-ID-YY == 0
     && FM0BM210.FM0BM-NIKE-PO-ID-PP == 0
     && FM0BM210.FM0BM-NIKE-PO-ID-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-PO-YY = FM0BM210.FM0BM-NIKE-PO-ID-YY;
      FM0BW00.FM0BW-FMAT-PO-PP = FM0BM210.FM0BM-NIKE-PO-ID-PP;
      FM0BW00.FM0BW-FMAT-PO-DD = FM0BM210.FM0BM-NIKE-PO-ID-DD;
      if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
        FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
    end
    ;
    if (FM0BM210.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM210.FK-FCTY-PO-DT;
      FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
      FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
      FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
      if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
        FM0BW00.FM0BW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6)  /* NXTPO requested*/
    ;
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0B-2300

// Reset highlighted fields
Function FM0B-2400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0BM210.FK-VEND-CD initialAttributes; /* Vender code*/
  set FM0BM210.FK-VEND-SNM initialAttributes; /* Vender desc*/
  set FM0BM210.FM0BM-NIKE-PO-ID-YY initialAttributes;
  set FM0BM210.FM0BM-NIKE-PO-ID-PP initialAttributes;
  set FM0BM210.FM0BM-NIKE-PO-ID-DD initialAttributes;
  set FM0BM210.FY1FCTYC initialAttributes;
  set FM0BM210.FK-FCTY-PO-DT initialAttributes;
  ;
  FM0BW00.FM0BW-IDX = 1; /* Init index*/
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS)
    ;
    set FM0BM210.FK-MAT-NBR[FM0BW-IDX] initialAttributes; /* Material Number*/
    set FM0BM210.FK-DEPT-MAT-DESC[FM0BW-IDX] initialAttributes; /* Material Desc*/
    set FM0BM210.XCLCD[FM0BW-IDX] initialAttributes; /* Color code*/
    set FM0BM210.XCLDESC[FM0BW-IDX] initialAttributes; /* Color desc*/
    set FM0BM210.FK-MAT-ORD-QTY[FM0BW-IDX] initialAttributes; /* Orig Ord qty*/
    set FM0BM210.FM0BM-CURR-ORD-QTY[FM0BW-IDX] initialAttributes; /* Curr Ord qty*/
    set FM0BM210.XMU-MAT-UOM-CD[FM0BW-IDX] initialAttributes; /* UOM*/
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  set FM0BM210.CATOAP initialAttributes; /* TO application*/
  set FM0BM210.CAITEM initialAttributes; /* Application item*/
  ;
  ;
  /* GET FM0B-2400*/
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0BM210.XCLCD[1] != "?"  /* If not requested*/
   && FM0BM210.XCLCD[2] != "?"  /* If not requested*/
   && FM0BM210.XCLCD[3] != "?"  /* If not requested*/
   && FM0BM210.XCLCD[4] != "?"  /* If not requested*/
   && FM0BM210.XCLCD[5] != "?"  /* If not requested*/
   && FM0BM210.XCLCD[6] != "?"  /* If not requested*/
   && FM0BM210.XCLCD[7] != "?"  /* If not requested*/
   && FM0BM210.XCLCD[8] != "?"  /* If not requested*/
   && FM0BM210.XCLCD[9] != "?"  /* If not requested*/
   && FM0BM210.XCLCD[10] != "?" /* If not requested*/
   && FM0BM210.XCLCD[11] != "?") /* If not requested*/
    return;
  end
  ;
  ;
  FM0BW00.FM0BW-IDX = 1; /* Init index*/
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0BM210.XCLCD[FM0BW-IDX] == "?") /* XCL list requested*/
      ;
      if (converseVar.eventKey not enter) /* Enter not pressed*/
        ;
        FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
        converseLib.validationFailed(19); /* Pa/pf key may not be used*/
        exit stack; /* Exit to display the map*/
      end
    end
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-IDX = 1; /* Init index*/
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0BM210.XCLCD[FM0BW-IDX] == "?") /* XCL list requested*/
      ;
      XPXX001(); /* Window initialization*/
      XX0XW02.XX0XWHDR = "      COLOR"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
        XPXCL01(); /* Display the list*/
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FM0BM210.XCLCD = FM0BW01.XCLCD[FM0BW-IDX]; /* Restore prior code*/
      else
        FM0BM210.XCLCD[FM0BW-IDX] = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
      end
      ;
      set FM0BM210.XCLCD[FM0BW-IDX] cursor; /* Establish cursor position*/
    end
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0B-2400

// Verify the entered data
Function FM0B-2500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0BM210.CAITEM > " " /* Application data was entered*/
  )                        
    set FM0BM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* -----------------------------------------------------------------*/
   /* If NXTPO (PF6) entered, verify request.*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next Internal PO requested*/
    ;
    if (FM0BW00.FM0BW-NXTPO-IDX >= FM0BW00.FM0BW-NBR-PASSED-PO)
      ;
      converseLib.validationFailed(130); /* No more PO's to display*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      exit stack;
    else
      return;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the detail data.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0B-2520(); /* Verify detail*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the header data.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0B-2510(); /* Verify header data*/
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    ;
    FM0BW00.FM0BW-CONFIRM-ADD-SW = "N"; /* Reset switch*/
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify no data was changed during the confirm process.*/
   /* If it was, head back and confirm the add.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-CONFIRM-ADD-SW == "Y") /* If confirming add*/
    ;
    /* Check the header first.  If header changed, exit to re-confirm.*/
    ;
    if (FM0BM210.FK-VEND-CD == FM0BW01.FK-VEND-CD
     && FM0BM210.FK-FCTY-PO-DT == FM0BW01.FK-FCTY-PO-DT
     && FM0BM210.FM0BM-NIKE-PO-ID-YY == FM0BW01.FM0BW-NIKE-PO-ID-YY
     && FM0BM210.FM0BM-NIKE-PO-ID-PP == FM0BW01.FM0BW-NIKE-PO-ID-PP
     && FM0BM210.FM0BM-NIKE-PO-ID-DD == FM0BW01.FM0BW-NIKE-PO-ID-DD
     && FM0BM210.FY1FCTYC == FM0BW01.FY1FCTYC
     && FM0BM210.FK-FCTY-PO-ID == FM0BW01.FK-FCTY-PO-ID
     && FM0BM210.FK-EST-SHP-DT1 == FM0BW01.FK-EST-SHP-DT1
     && FM0BM210.FK-EST-SHP-DT2 == FM0BW01.FK-EST-SHP-DT2
     && FM0BM210.FK-EST-SHP-DT3 == FM0BW01.FK-EST-SHP-DT3
     && FM0BM210.FK-FCTY-PO-COMNT == FM0BW01.FK-FCTY-PO-COMNT
    )
      ;
       /* Nothing changed in the header, check the detail.*/
      ;
      FM0BW00.FM0BW-IDX = 1;
      while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS)
        ;
        if (FM0BM210.FK-MAT-NBR[FM0BW-IDX]
         != FM0BW01.FK-MAT-NBR[FM0BW-IDX] /* Material changed*/
         || FM0BM210.XCLCD[FM0BW-IDX]     
         != FM0BW01.XCLCD[FM0BW-IDX]      /* Color changed*/
         || FM0BM210.FK-MAT-ORD-QTY[FM0BW-IDX]
         != FM0BW01.FK-MAT-ORD-QTY[FM0BW-IDX]) /* Qty changed*/
          ;
          FKWREC.XXXMSGNO = 30; /* Press enter to continue*/
          FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
          FM0BW00.FM0BW-REQUEST-DATA-SW = "Y";
          exit stack;
        end
        ;
        FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
      end
    else
      ;
      FKWREC.XXXMSGNO = 30; /* Press enter to continue*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
      FM0BW00.FM0BW-REQUEST-DATA-SW = "Y";
      exit stack;
    end
  end
  ;
  ;
end // end FM0B-2500

// Verify header data
Function FM0B-2510()
   /* ---------------------------------------------------------------*/
   /* Verify the estimated ship dates.*/
   /* ---------------------------------------------------------------*/
  ;
   /* Verify est ship date 3*/
  ;
  if (FM0BM210.FK-EST-SHP-DT3 > 0) /* If date entered*/
    ;
    set TA2REC empty; /* Initialize ta2rec*/
    ;
    TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
    TA2REC.TA2GRTYP = "E"; /* Date format*/
    TA2REC.TA2GRGEN = FM0BM210.FK-EST-SHP-DT3;
    ;
    try
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Date validation routine*/
    ;
    if (sysVar.errorCode == "00000000") /* Call successful*/
      if (TA2REC.TA2RTNCD != 0)
        set FM0BM210.FK-EST-SHP-DT3 cursor, bold; /* Highlight*/
        converseLib.validationFailed(84); /* Date missing or invalid*/
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      end
    end
  end
  ;
  ;
   /* Verify est ship date 2*/
  ;
  if (FM0BM210.FK-EST-SHP-DT2 > 0) /* If date entered*/
    ;
    set TA2REC empty; /* Initialize ta2rec*/
    ;
    TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
    TA2REC.TA2GRTYP = "E"; /* Date format*/
    TA2REC.TA2GRGEN = FM0BM210.FK-EST-SHP-DT2;
    ;
    try
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Date validation routine*/
    ;
    if (sysVar.errorCode == "00000000") /* Call successful*/
      if (TA2REC.TA2RTNCD != 0)
        set FM0BM210.FK-EST-SHP-DT2 cursor, bold; /* Highlight*/
        converseLib.validationFailed(84); /* Date missing or invalid*/
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      end
    end
  end
  ;
  ;
   /* Verify est ship date 1*/
  ;
  if (FM0BM210.FK-EST-SHP-DT1 > 0) /* If date entered*/
    ;
    set TA2REC empty; /* Initialize ta2rec*/
    ;
    TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
    TA2REC.TA2GRTYP = "E"; /* Date format*/
    TA2REC.TA2GRGEN = FM0BM210.FK-EST-SHP-DT1;
    ;
    try
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Date validation routine*/
    ;
    if (sysVar.errorCode == "00000000") /* Call successful*/
      if (TA2REC.TA2RTNCD != 0)
        set FM0BM210.FK-EST-SHP-DT1 cursor, bold; /* Highlight*/
        converseLib.validationFailed(84); /* Date missing or invalid*/
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      end
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the factory P.O. number.*/
   /* Only do this edit if confirming the add.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-CONFIRM-ADD-SW == "Y") /* If confirming add*/
    ;
    if (FM0BM210.FK-FCTY-PO-ID == " ") /* If PO id not entered*/
      ;
      set FM0BM210.FK-FCTY-PO-ID cursor, bold;
      converseLib.validationFailed(8); /* Required field missing or invalid*/
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the factory code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM210.FY1FCTYC == " ") /* If factory blank*/
    ;
    converseLib.validationFailed(121); /* Factory code missing or invalid*/
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    set FM0BM210.FY1FCTYC cursor, bold; /* Highlight*/
  else
    ;
    FM0B-2511(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the PO date.*/
   /* ------------------------------------------------------------*/
  ;
   /* Verify production and delivery months always 2 months apart.*/
  ;
  if (FM0BM210.FM0BM-NIKE-PO-ID-PP == 11)
    if (FM0BM210.FM0BM-NIKE-PO-ID-DD != 1)
      ;
      converseLib.validationFailed(129); /* PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      set FM0BM210.FM0BM-NIKE-PO-ID-PP cursor, bold; /* Highlight*/
      set FM0BM210.FM0BM-NIKE-PO-ID-DD bold; /* Highlight*/
    end
  else
    ;
    if (FM0BM210.FM0BM-NIKE-PO-ID-PP == 12)
      if (FM0BM210.FM0BM-NIKE-PO-ID-DD != 2)
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
        set FM0BM210.FM0BM-NIKE-PO-ID-PP cursor, bold; /* Highlight*/
        set FM0BM210.FM0BM-NIKE-PO-ID-DD bold; /* Highlight*/
      end
    else
      ;
      FM0BW00.FM0BW-COUNT = FM0BM210.FM0BM-NIKE-PO-ID-DD       - FM0BM210.FM0BM-NIKE-PO-ID-PP;
      ;
      if (FM0BW00.FM0BW-COUNT != 2) /* Not 2 months different*/
        ;
        converseLib.validationFailed(129); /* PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
        set FM0BM210.FM0BM-NIKE-PO-ID-PP cursor, bold; /* Highlight*/
        set FM0BM210.FM0BM-NIKE-PO-ID-DD bold; /* Highlight*/
      end
    end
  end


  if (FM0BM210.FM0BM-NIKE-PO-ID-DD >= 1
   && FM0BM210.FM0BM-NIKE-PO-ID-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    set FM0BM210.FM0BM-NIKE-PO-ID-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0BM210.FM0BM-NIKE-PO-ID-PP >= 1
   && FM0BM210.FM0BM-NIKE-PO-ID-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    set FM0BM210.FM0BM-NIKE-PO-ID-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Call TA0040 to verify the order date.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FM0BM210.FK-FCTY-PO-DT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(84); /* Date missing or invalid*/
      FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
      set FM0BM210.FK-FCTY-PO-DT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor code.*/
   /* ------------------------------------------------------------*/
  ;
  FM0B-2512(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0B-2510

// Select DFCTY.VFCTY001 row
Function FM0B-2511()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02"; /* GPC code*/
  FY1REC.FY1FCTYC = FM0BM210.FY1FCTYC; /* Factory nbr*/
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FKWREC.XXX-MOD-ID = "2511"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory missing or invalid*/
      set FM0BM210.FY1FCTYC cursor, bold; /* Highlight*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2511"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2511 SELECT DCMPNT.VFCTY001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DFCTY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-2511

// Select DCMPNT.VVNDR001 row
Function FM0B-2512()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0BM210.FK-VEND-CD; /* Vender nbr*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FKWREC.XXX-MOD-ID = "2512"; /* Module identification*/
      converseLib.validationFailed(21); /* Vender missing or invalid*/
      set FM0BM210.FK-VEND-CD cursor, bold; /* Highlight*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2512"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2512 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-2512

// Verify detail data
Function FM0B-2520()
   /* ---------------------------------------------------------------*/
   /* Verify the detail lines.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-COUNT = 0; /* Initialize counter*/
  FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-NBR-MAP-ROWS;
  ;
  while (FM0BW00.FM0BW-IDX > 0) /* Check each map field*/
    ;
    if (FM0BM210.FK-MAT-NBR[FM0BW-IDX] > " " /* If material entered*/
     || FM0BM210.XCLCD[FM0BW-IDX] > " "      /* or color entered*/
     || FM0BM210.FK-MAT-ORD-QTY[FM0BW-IDX] > 0) /* or orig ord qty entered*/
      ;
      FM0BW00.FM0BW-COUNT = FM0BW00.FM0BW-COUNT + 1; /* Increment counter*/
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the orig ord qty.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0BM210.FK-MAT-ORD-QTY[FM0BW-IDX] <= 0) /* If qty not entered*/
        ;
        set FM0BM210.FK-MAT-ORD-QTY[FM0BW-IDX] cursor, bold;
        converseLib.validationFailed(131); /* Value must be > 0*/
        FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      end
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the material/color exist on DCMPNT.VMCOLR01*/
      /* ---------------------------------------------------------------*/
      ;
      FM0B-2522(); /* Decl DCMPNT.VMCOLR01 csr*/
      FM0B-2523(); /* Fetch DCMPNT.VMCOLR01 csr*/
      FM0B-2524(); /* Close DCMPNT.VMCOLR01 csr*/
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the color code.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0BM210.XCLCD[FM0BW-IDX] in XCLTBL.XCLCD /* If color in table*/
       && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
        ;
         /* Next sentence*/
      else
        ;
        set FM0BM210.XCLCD[FM0BW-IDX] cursor, bold;
        converseLib.validationFailed(32); /* Color code is missing or invalid*/
        FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      end
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the material nbr.*/
      /* ---------------------------------------------------------------*/
      ;
      FM0B-2521(); /* Select DCMPNT.VMATRL01*/
      ;
    end
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX - 1; /* Decrement index*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify at least 1 line of detail entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-COUNT <= 0) /* If no data entered*/
    ;
    set FM0BM210.FK-MAT-NBR[1] cursor, bold;
    set FM0BM210.XCLCD[1] bold;
    set FM0BM210.FK-MAT-ORD-QTY[1] bold;
    converseLib.validationFailed(142); /* At least 1 line of data must be entered*/
    FKWREC.XXX-MOD-ID = "2520";
  end
  ;
  ;
end // end FM0B-2520

// Select DCMPNT.VMATRL01 row
Function FM0B-2521()
   /* ------------------------------------------------------------*/
   /* Select a row.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Clear storage record*/
  ;
  VMATRL01.FK-MAT-NBR = FM0BM210.FK-MAT-NBR[FM0BW-IDX];
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (VMATRL01.FK-VEND-CD != FM0BM210.FK-VEND-CD) /* If vendors match*/
        ;
        set FM0BM210.FK-VEND-CD cursor, bold;
        set FM0BM210.FK-MAT-NBR[FM0BW-IDX] bold;
        converseLib.validationFailed(132); /* Mtl exists for different vendor*/
        FKWREC.XXX-MOD-ID = "2521"; /* Module identification*/
      end
      ;
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Normal return code*/
      ;
      set FM0BM210.FK-MAT-NBR[FM0BW-IDX] cursor, bold;
      converseLib.validationFailed(26); /* Material nbr missing or invalid*/
      FKWREC.XXX-MOD-ID = "2521"; /* Module identification*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-REQUEST-DATA-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATRL01 ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-2521

// Declare DCMPNT.VMCOLR01
Function FM0B-2522()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the specified table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty; /* Clear storage record*/
  ;
  VMCOLR01.FK-MAT-NBR = FM0BM210.FK-MAT-NBR[FM0BW-IDX]; /* Material nbr*/
  VMCOLR01.XCLCD = FM0BM210.XCLCD[FM0BW-IDX]; /* Color code*/
  ;
  ;
  try
    call "IO6210" ("S2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-2522

// Fetch DCMPNT.VMCOLR01
Function FM0B-2523()
   /* ------------------------------------------------------------*/
   /* Fetch a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6210" ("N2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0BM210.FK-MAT-NBR[FM0BW-IDX] cursor, bold;
      set FM0BM210.XCLCD[FM0BW-IDX] bold;
      converseLib.validationFailed(139); /* Mtl/clr combination invalid*/
      FKWREC.XXX-MOD-ID = "2523"; /* Module identification*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2523"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VMCOLR01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-2523

// Close DCMPNT.VMCOLR01
Function FM0B-2524()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the specified table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6210" ("C2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2524"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VMCOLR01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-2524

// Process valid input requests
Function FM0B-2600()
   /* ------------------------------------------------------------*/
   /* If PF6 pressed, obtain the next vendor header and exit to*/
   /* re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    FM0BW00.FM0BW-NXTPO-IDX = FM0BW00.FM0BW-NXTPO-IDX + 1;
    ;
    FM0B-2610(); /* Select VFVHDR01*/
    ;
     /* Format map header with PO header data*/
    ;
    FM0BM210.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0BM210.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0BW00.FM0BW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0BM210.FM0BM-NIKE-PO-ID-YY = FM0BW00.FM0BW-FMAT-PO-YY;
    FM0BM210.FM0BM-NIKE-PO-ID-PP = FM0BW00.FM0BW-FMAT-PO-PP;
    FM0BM210.FM0BM-NIKE-PO-ID-DD = FM0BW00.FM0BW-FMAT-PO-DD;
    FM0BM210.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
    FM0BW00.FM0BW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If add not confirmed yet, go back and confirm it.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-CONFIRM-ADD-SW != "Y") /* If add not confirmed*/
    ;
    FKWREC.XXXMSGNO = 30; /* Press enter to continue*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
    FM0BW00.FM0BW-CONFIRM-ADD-SW = "Y"; /* Confirm id*/
    FM0BW00.FM0BW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If add has been confirmed, insert records the databases.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-DATA-UPDATED-SW = "N"; /* Data not updated yet*/
  ;
  if (FM0BW00.FM0BW-CONFIRM-ADD-SW == "Y") /* If add confirmed*/
    ;
    XX0XS01(); /* Get current date and time*/
    ;
    if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "N") /* If po hdr not found*/
      ;
      FM0B-2620(); /* Check DCMPNT.VFVHDR01*/
      FM0B-2630(); /* Select MAX fk-intrn-po-id (VFVHDR01)*/
      FM0B-2640(); /* Insert DCMPNT.VFVHDR01*/
    end
    ;
    FM0BW00.FM0BW-IDX = 1;
    while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-MAP-ROWS)
      ;
      if (FM0BM210.FK-MAT-NBR[FM0BW-IDX] > " ") /* If detail data exists*/
        ;
        FM0B-2650(); /* Decl DCMPNT.VMCOLR01 csr*/
        FM0B-2660(); /* Fetch DCMPNT.VMCOLR01 csr*/
        FM0B-2670(); /* Close DCMPNT.VMCOLR01 csr*/
        ;
        FM0B-2680(); /* Check DCMPNT.VFVITM01*/
        FM0B-2690(); /* Insert DCMPNT.VFVITM01*/
      end
      ;
      FM0BW00.FM0BW-IDX = FM0BW-IDX + 1; /* Increment index*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data was successfully updated, clear the map and working*/
   /* storage and display a 'update successfully completed' msg.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-DATA-UPDATED-SW == "Y") /* If data was updated*/
    ;
    set FM0BM210 initial; /* Clear the map*/
    set FM0BW01 empty; /* Clear display storage*/
    ;
    FKWREC.XXXMSGNO = 1; /* Update successful*/
    FM0BW00.FK-VEND-SNM = " ";
    FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
    FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N";
    FM0BW00.FM0BW-REQUEST-DATA-SW = "N";
    FM0BW00.FM0BW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0B-2600

// Select DCMPNT.VFVHDR01 row
Function FM0B-2610()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0BW00.FK-INTRN-PO-ID[FM0BW-NXTPO-IDX]; /* Internal PO id*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      set VFVHDR01 empty;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S  )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-2610

// Select DCMPNT.VFVHDR01 (SA)
Function FM0B-2620()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-VEND-CD = FM0BM210.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0BM210.FY1FCTYC; /* Factory*/
  ;
  FM0BW00.FM0BW-FMAT-PO-YY = FM0BM210.FM0BM-NIKE-PO-ID-YY;
  FM0BW00.FM0BW-FMAT-PO-PP = FM0BM210.FM0BM-NIKE-PO-ID-PP;
  FM0BW00.FM0BW-FMAT-PO-DD = FM0BM210.FM0BM-NIKE-PO-ID-DD;
  if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
    FM0BW-FMAT-PO-CC = 20;
  else
    FM0BW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
  ;
  FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM210.FK-FCTY-PO-DT;
  FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
  FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
  FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
  if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
    FM0BW00.FM0BW-FMAT-ORDER-CC = 20;
  else
    FM0BW00.FM0BW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SA"; /* Select alt*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all database changes*/
      FKWREC.XXXMSGNO = 12; /* Data updated by another*/
      FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
      FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
      FM0BW00.FM0BW-REQUEST-DATA-SW = "Y";
      exit stack; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (SA)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-2620

// Select Max DCMPNT.VFVHDR01
Function FM0B-2630()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SM"; /* Select max*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0BW00.FM0BW-NEW-FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
      FM0BW00.FM0BW-NEW-FK-INTRN-PO-ID = FM0BW00.FM0BW-NEW-FK-INTRN-PO-ID + 1; /* Add 1 to po id*/
      FM0BW01.FK-INTRN-PO-ID = FM0BW00.FM0BW-NEW-FK-INTRN-PO-ID;
      ;
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT MAX DCMPNT.VFVHDR01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-2630

// Insert DCMPNT.VFVHDR01
Function FM0B-2640()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0BW00.FM0BW-NEW-FK-INTRN-PO-ID;
  VFVHDR01.FK-VEND-CD = FM0BM210.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0BM210.FY1FCTYC; /* Factory*/
  ;
   /* Format fcty po date*/
  FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM210.FK-FCTY-PO-DT;
  FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
  FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
  FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
  if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
    FM0BW00.FM0BW-FMAT-ORDER-CC = 20;
  else
    FM0BW00.FM0BW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
  ;
  VFVHDR01.FK-FCTY-PO-ID = FM0BM210.FK-FCTY-PO-ID; /* Fcty PO ID*/
  ;
   /* Format nike po date*/
  FM0BW00.FM0BW-FMAT-PO-YY = FM0BM210.FM0BM-NIKE-PO-ID-YY;
  FM0BW00.FM0BW-FMAT-PO-PP = FM0BM210.FM0BM-NIKE-PO-ID-PP;
  FM0BW00.FM0BW-FMAT-PO-DD = FM0BM210.FM0BM-NIKE-PO-ID-DD;
  if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
    FM0BW-FMAT-PO-CC = 20;
  else
    FM0BW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
  ;
   /* Format estimated ship date 1*/
  if (FM0BM210.FK-EST-SHP-DT1 > 0) /* If ship date was entered*/
    FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM210.FK-EST-SHP-DT1;
    FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
    FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
    FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
    if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
      FM0BW00.FM0BW-FMAT-ORDER-CC = 20;
    else
      FM0BW00.FM0BW-FMAT-ORDER-CC = 19;
    end
    VFVHDR01.FK-EST-SHP-DT1 = FM0BW00.FM0BW-FMAT-ORDER-DT; /* Ship date 1*/
  end
  ;
   /* Format estimated ship date 2*/
  if (FM0BM210.FK-EST-SHP-DT2 > 0) /* If ship date was entered*/
    FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM210.FK-EST-SHP-DT2;
    FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
    FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
    FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
    if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
      FM0BW00.FM0BW-FMAT-ORDER-CC = 20;
    else
      FM0BW00.FM0BW-FMAT-ORDER-CC = 19;
    end
    VFVHDR01.FK-EST-SHP-DT2 = FM0BW00.FM0BW-FMAT-ORDER-DT; /* Ship date 2*/
  end
  ;
   /* Format estimated ship date 3*/
  if (FM0BM210.FK-EST-SHP-DT3 > 0) /* If ship date was entered*/
    FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM210.FK-EST-SHP-DT3;
    FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
    FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
    FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
    if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
      FM0BW00.FM0BW-FMAT-ORDER-CC = 20;
    else
      FM0BW00.FM0BW-FMAT-ORDER-CC = 19;
    end
    VFVHDR01.FK-EST-SHP-DT3 = FM0BW00.FM0BW-FMAT-ORDER-DT; /* Ship date 3*/
  end
  ;
  VFVHDR01.FK-FCTY-PO-COMNT = FM0BM210.FK-FCTY-PO-COMNT; /* Comment*/
  ;
  VFVHDR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VFVHDR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VFVHDR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VFVHDR01.ZZZCHGCT = 0;
  ;
  ;
  FKFREC.FKF-FUNCTION = "A "; /* Add*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0BW00.FM0BW-DATA-UPDATED-SW = "Y";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2640"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT DCMPNT.VFVHDR01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-2640

// Declare DCMPNT.VMCOLR01
Function FM0B-2650()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the specified table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty; /* Clear storage record*/
  ;
  VMCOLR01.FK-MAT-NBR = FM0BM210.FK-MAT-NBR[FM0BW-IDX]; /* Material nbr*/
  VMCOLR01.XCLCD = FM0BM210.XCLCD[FM0BW-IDX]; /* Color code*/
  ;
  ;
  try
    call "IO6210" ("S2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-2650

// Fetch DCMPNT.VMCOLR01
Function FM0B-2660()
   /* ------------------------------------------------------------*/
   /* Fetch a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6210" ("N2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      VMCOLR01.XMG-COLR-GRP-CD = "**";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2660"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VMCOLR01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-2660

// Close DCMPNT.VMCOLR01
Function FM0B-2670()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the specified table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6210" ("C2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  FKWREC.XXX-MOD-ID = "2670"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VMCOLR01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-2670

// Select DCMPNT.VFVITM01
Function FM0B-2680()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVITM01 empty; /* Clear storage record*/
  ;
  VFVITM01.FK-INTRN-PO-ID = FM0BW01.FK-INTRN-PO-ID;
  VFVITM01.FK-MAT-NBR = FM0BM210.FK-MAT-NBR[FM0BW-IDX];
  VFVITM01.XMG-COLR-GRP-CD = VMCOLR01.XMG-COLR-GRP-CD;
  VFVITM01.XCLCD = FM0BM210.XCLCD[FM0BW-IDX];
  ;
  ;
  try
    call "IO6830" ("S ", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all database changes*/
      set FM0BM210.FK-MAT-NBR[FM0BW-IDX] cursor, bold;
      set FM0BM210.XCLCD[FM0BW-IDX] bold;
      converseLib.validationFailed(16); /* Key already exists*/
      FKWREC.XXX-MOD-ID = "2680"; /* Module identification*/
      FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
      exit stack; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2680"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVITM01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-2680

// Insert DCMPNT.VFVITM01
Function FM0B-2690()
   /* ------------------------------------------------------------*/
   /* Insert a record to the database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVITM01 empty; /* Clear storage record*/
  ;
  VFVITM01.FK-INTRN-PO-ID = FM0BW01.FK-INTRN-PO-ID;
  VFVITM01.FK-MAT-NBR = FM0BM210.FK-MAT-NBR[FM0BW-IDX];
  VFVITM01.XMG-COLR-GRP-CD = VMCOLR01.XMG-COLR-GRP-CD;
  VFVITM01.XCLCD = FM0BM210.XCLCD[FM0BW-IDX];
  VFVITM01.FK-MAT-ORD-QTY = FM0BM210.FK-MAT-ORD-QTY[FM0BW-IDX];
  ;
  VFVITM01.ZZZSDT = XX0XW01.XX0XWDAT;
  VFVITM01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VFVITM01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VFVITM01.ZZZCHGCT = 0;
  ;
  ;
  try
    call "IO6830" ("A ", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0BW00.FM0BW-DATA-UPDATED-SW = "Y";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  FM0BW00.FM0BW-CONFIRM-ADD-SW = "N";
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2690"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT DCMPNT.VFVITM01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-2690

// Process change map
Function FM0B-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0B-3100(); /* Obtain the data to display*/
  FM0B-3200(); /* Format and display the map*/
  FM0B-3300(); /* Check attention identifier*/
  FM0B-3400(); /* Reset fields to normal intensity*/
  FM0B-3500(); /* Verify the entered data*/
  FM0B-3600(); /* Process valid input request*/
  ;
  ;
end // end FM0B-3000

// Obtain the data to display
Function FM0B-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW00.XXXTSLEN = 973;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0BW00.XXXTSPAG = 1; /* Page nbr to display*/
  end
  ;
  FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N"; /* PO header found switch*/
  FM0BW00.FM0BW-PO-DTL-FOUND-SW = "N"; /* PO detail found switch*/
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-3110(); /* Purge temporary storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the vendor description from the vendor table.*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-3120(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select Factory/Vender P.O. Header record from DCMPNT.VFVHDR01*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-3130(); /* Select DCMPNT.VFVHDR01*/
  ;
   /* --------------------------------------------------------------*/
   /* Get factory/vendor information from VFVITM01 table.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-IDX = 1; /* Init index*/
  FM0BW00.FM0BW-VFVITM01-CURSOR-SW = "N"; /* Init index*/
  ;
  FM0B-3140(); /* Declare cursor DCMPNT.VFVITM01*/
  ;
  FM0B-3150(); /* Fetch record from DCMPNT.VFVITM01*/
  ;
  while (FM0BW00.FM0BW-VFVITM01-CURSOR-SW != "Y") /* Until end of cursor*/
    FM0B-3160(); /* Get item information*/
  end
  ;
  FM0B-3180(); /* Close DCMPNT.VFVITM01 cursor*/
  ;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Add any partially formatted data.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-IDX > 1) /* If partial data data exists*/
    ;
    FM0B-3167(); /* Add page to temporary storage*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, save map header (if header was found).*/
   /* Set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0BW00.TA5TSQIX <= 0) /* If data not found*/
    ;
    if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "Y") /* If PO header was found*/
      ;
      FM0B-3190(); /* Save hdr data in disp storage*/
      FM0B-3167(); /* Add page to temporary storage*/
    end
    ;
    converseLib.validationFailed(18); /* No data found*/
    FKWREC.XXX-MOD-ID = "3100"; /* Module identification*/
  else
    ;
    FM0BW00.FM0BW-PO-DTL-FOUND-SW = "Y"; /* PO dtl was found*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-FMAT-MAP-SW = "Y";
  FM0BW00.FM0BW-REQUEST-DATA-SW = "N";
  ;
  ;
end // end FM0B-3100

// Purge temporary storage
Function FM0B-3110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0BW01 empty; /* m310 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0BW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3110

// Select the vender description
Function FM0B-3120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0BM310.FK-VEND-CD; /* Vendor*/
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0BW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      FM0BW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3120 SELECT DCMPNT.VVNDR001     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "FM0BM310"; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3120

// Select DCMPNT.VFVHDR01 row
Function FM0B-3130()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-VEND-CD = FM0BM310.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0BM310.FY1FCTYC; /* Factory*/
  ;
  FM0BW00.FM0BW-FMAT-PO-YY = FM0BM310.FM0BM-NIKE-PO-ID-YY;
  FM0BW00.FM0BW-FMAT-PO-PP = FM0BM310.FM0BM-NIKE-PO-ID-PP;
  FM0BW00.FM0BW-FMAT-PO-DD = FM0BM310.FM0BM-NIKE-PO-ID-DD;
  if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
    FM0BW-FMAT-PO-CC = 20;
  else
    FM0BW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
  ;
  FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM310.FK-FCTY-PO-DT;
  FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
  FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
  FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
  if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
    FM0BW00.FM0BW-FMAT-ORDER-CC = 20;
  else
    FM0BW00.FM0BW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SA"; /* Select alt*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0BW00.FM0BW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (SA)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3130

// Declare DCMPNT.VFVITM01 cursor
Function FM0B-3140()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVITM01 empty;
  ;
  VFVITM01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  ;
  try
    call "IO6830" ("S1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3140 DECLARE DCMPNT.VFVITM01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3140

// Fetch DCMPNT.VFVITM01 cursor
Function FM0B-3150()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6830" ("N1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      FM0BW00.FM0BW-VFVITM01-CURSOR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3150 FETCH DCMPNT.VFVITM01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3150

// Obtain item information
Function FM0B-3160()
   /* --------------------------------------------------------------*/
   /* Obtain P.O. item information*/
   /* --------------------------------------------------------------*/
  ;
  FM0B-3161(); /* Select record from DCMPNT.VMATRL01*/
  ;
   /* Get color description */
  ;
  if (VFVITM01.XCLCD in XCLTBL.XCLCD)
    FM0BW00.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Colr descr*/
  else
    FM0BW00.XCLDESC = "************"; /* Colr descr*/
  end
  ;
  FM0B-3162(); /* Calculate current order Quantity*/
  ;
  FM0B-3166(); /* Save data in display storage*/
  ;
  if (FM0BW00.FM0BW-IDX > FM0BW00.FM0BW-NBR-CHG-MAP-ROWS) /* If page full*/
    FM0B-3167(); /* Add record to temp storage*/
    FM0BW00.FM0BW-IDX = 1; /* Re-initialize index*/
  end
  ;
  FM0B-3150(); /* Fetch record from DCMPNT.VFVITM01*/
  ;
end // end FM0B-3160

// Select DCMPNT.VMATRL01 row
Function FM0B-3161()
   /* ------------------------------------------------------------*/
   /* Select a row.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Clear storage record*/
  ;
  VMATRL01.FK-MAT-NBR = VFVITM01.FK-MAT-NBR; /* Material nbr*/
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-REQUEST-DATA-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3161"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VMATRL01 ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-3161

// Calculate current order qty
Function FM0B-3162()
   /* Get order adjustments from DCMPNT.VFVADJ01 */
  ;
  FM0BW00.FK-FCTY-PO-ADJ-QTY = 0; /* Adjustment quantity*/
  ;
  FM0B-3163(); /* Declare DCMPNT.VFVADJ01 cursor*/
  ;
  FM0BW00.FM0BW-VFVADJ01-CURSOR-SW = "N";
  ;
  while (FM0BW00.FM0BW-VFVADJ01-CURSOR-SW == "N")
    FM0B-3164(); /* Fetch DCMPNT.VFVADJ01 cursor*/
    if (FM0BW00.FM0BW-VFVADJ01-CURSOR-SW == "N")
      FM0BW00.FK-FCTY-PO-ADJ-QTY = FM0BW00.FK-FCTY-PO-ADJ-QTY +       VFVADJ01.FK-FCTY-PO-ADJ-QTY;
    end
  end
  ;
  FM0B-3165(); /* Close dcmpnt.vfvadj01 cursor*/
  ;
  FM0BW00.FM0BW-CURR-ORD-QTY = VFVITM01.FK-MAT-ORD-QTY   + FM0BW00.FK-FCTY-PO-ADJ-QTY; /* Current order qty calculation*/
  ;
  ;
end // end FM0B-3162

// Declare DCMPNT.VFVADJ01 cursor
Function FM0B-3163()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVADJ01 empty;
  ;
  VFVADJ01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  VFVADJ01.FK-MAT-NBR = VMATRL01.FK-MAT-NBR; /* Material nbr*/
  VFVADJ01.XMG-COLR-GRP-CD = VFVITM01.XMG-COLR-GRP-CD; /* Colr group*/
  VFVADJ01.XCLCD = VFVITM01.XCLCD; /* Colr code*/
  ;
  try
    call "IO6840" ("S2", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3163"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3163 DECLARE DCMPNT.VFVADJ01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
  ;
end // end FM0B-3163

// Fetch DCMPNT.VFVADJ01 cursor
Function FM0B-3164()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6840" ("N2", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No record found*/
      ;
      FM0BW00.FM0BW-VFVADJ01-CURSOR-SW = "Y"; /* Set of cursor switch*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3164"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3164 FETCH DCMPNT.VFVADJ01      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-3164

// Close DCMPNT.VFVADJ01 cursor
Function FM0B-3165()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6840" ("C2", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3165"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3165 CLOSE DMCPNT.VFVADJ01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3165

// Save data to display storage
Function FM0B-3166()
   /* --------------------------------------------------------------*/
   /* Save data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  ;
  if (FM0BW00.FM0BW-IDX == 1) /* If first record on page*/
    ;
    FM0BW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
    FM0BW01.FK-VEND-CD = FM0BM310.FK-VEND-CD; /* Vendor*/
    FM0BW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor desc*/
    FM0BW01.FK-FCTY-PO-DT = FM0BM310.FK-FCTY-PO-DT; /* Order date*/
    ;
     /* Nike PO Id */
    FM0BW01.FM0BW-NIKE-PO-ID-YY = FM0BM310.FM0BM-NIKE-PO-ID-YY;
    FM0BW01.FM0BW-NIKE-PO-ID-PP = FM0BM310.FM0BM-NIKE-PO-ID-PP;
    FM0BW01.FM0BW-NIKE-PO-ID-DD = FM0BM310.FM0BM-NIKE-PO-ID-DD;
    FM0BW01.FY1FCTYC = FM0BM310.FY1FCTYC; /* Factory code*/
    ;
    FM0BW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* Factory PO nbr*/
    FM0BW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Est Ship Dt1*/
    FM0BW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Est Ship Dt2*/
    FM0BW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Est Ship Dt3*/
    FM0BW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
    ;
    FM0BW01.VFVHDR01-GROUP = VFVHDR01.VFVHDR01-GROUP; /* Hdr record*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save detail data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0BW01.FM0BW-SEL[FM0BW-IDX] = FM0BM310.FM0BM-SEL[FM0BW-IDX]; /* Selection field*/
  ;
  FM0BW01.FK-MAT-NBR[FM0BW-IDX] = VFVITM01.FK-MAT-NBR; /* Material number*/
  ;
  FM0BW01.FK-DEPT-MAT-DESC[FM0BW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material description*/
  ;
  FM0BW01.XMG-COLR-GRP-CD[FM0BW-IDX] = VFVITM01.XMG-COLR-GRP-CD; /* Color group*/
  ;
  FM0BW01.XCLCD[FM0BW-IDX] = VFVITM01.XCLCD; /* Color code*/
  ;
  if (VFVITM01.XCLCD in XCLTBL.XCLCD /* If color on table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    FM0BW01.XCLDESC[FM0BW-IDX] = XCLTBL.XCLDESC[sysVar.arrayIndex];
  else
    ;
    FM0BW01.XCLDESC[FM0BW-IDX] = "************"; /* Color desc*/
  end
  ;
  FM0BW01.FK-MAT-ORD-QTY[FM0BW-IDX] = VFVITM01.FK-MAT-ORD-QTY; /* Orig order quantity*/
  ;
  FM0BW01.FM0BW-CURR-ORD-QTY[FM0BW-IDX] = FM0BW00.FM0BW-CURR-ORD-QTY; /* Calculated order qty*/
  ;
  FM0BW01.XMU-MAT-UOM-CD[FM0BW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* UOM*/
  ;
  FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1; /* Increment*/
end // end FM0B-3166

// Add page to temporary storage
Function FM0B-3167()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW01.XXXTSLEN = FM0BW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0BW01 empty; /* m310 display storage*/
    ;
    FM0BW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3167"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3167

// Close DCMPNT.VFVITM01 cursor
Function FM0B-3180()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6830" ("C1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3180"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3180 CLOSE DMCPNT.VFVITM01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3180

// Save hdr data in display store
Function FM0B-3190()
   /* --------------------------------------------------------------*/
   /* Save header data (only) in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0BW01 empty;
  ;
  FM0BW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  FM0BW01.FK-VEND-CD = FM0BM310.FK-VEND-CD; /* Vendor*/
  FM0BW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor desc*/
  FM0BW01.FK-FCTY-PO-DT = FM0BM310.FK-FCTY-PO-DT; /* Order date*/
  ;
   /* Nike PO Id */
  FM0BW01.FM0BW-NIKE-PO-ID-YY = FM0BM310.FM0BM-NIKE-PO-ID-YY;
  FM0BW01.FM0BW-NIKE-PO-ID-PP = FM0BM310.FM0BM-NIKE-PO-ID-PP;
  FM0BW01.FM0BW-NIKE-PO-ID-DD = FM0BM310.FM0BM-NIKE-PO-ID-DD;
  FM0BW01.FY1FCTYC = FM0BM310.FY1FCTYC; /* Factory code*/
  ;
  FM0BW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* Factory PO nbr*/
  FM0BW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Est Ship Dt1*/
  FM0BW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Est Ship Dt2*/
  FM0BW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Est Ship Dt3*/
  FM0BW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  ;
  FM0BW01.VFVHDR01-GROUP = VFVHDR01.VFVHDR01-GROUP; /* Entire record*/
  ;
  ;
end // end FM0B-3190

// Format and converse the map
Function FM0B-3200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-FMAT-MAP-SW == "Y" /* Format requested*/
  )                                   
    if (converseVar.validationMsgNum == 0   /* No errors*/
     || (converseVar.validationMsgNum == 18 /* No data to display*/
     && FM0BW00.FM0BW-PO-HDR-FOUND-SW == "Y")) /* and po hdr found*/
      ;
      FM0B-3210(); /* Format the map*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0BM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0BM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0BM310 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0BM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0BM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0BM310.FK-VEND-SNM = FM0BW00.FK-VEND-SNM; /* Vender desc*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set header dark if no data found to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-PO-HDR-FOUND-SW == "N") /* If no po hdr found*/
    ;
    set FM0BM310.XXXTSPAG invisible, skip;
    set FM0BM310.TA5TSQIX invisible, skip;
    set FM0BM310.FK-FCTY-PO-ID invisible, skip;
    set FM0BM310.FK-EST-SHP-DT1 invisible, skip; /* Date1*/
    set FM0BM310.FK-EST-SHP-DT2 invisible, skip; /* Date2*/
    set FM0BM310.FK-EST-SHP-DT3 invisible, skip; /* Date3*/
    set FM0BM310.FK-FCTY-PO-COMNT invisible, skip; /* Comment*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set detail dark if no data found to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-PO-DTL-FOUND-SW == "N") /* If no po dtl found*/
    ;
    FM0BW00.FM0BW-IDX = 1; /* Init index*/
    ;
    while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-CHG-MAP-ROWS)
      ;
      set FM0BM310.FM0BM-SEL[FM0BW-IDX] invisible, skip;
      set FM0BM310.FK-MAT-NBR[FM0BW-IDX] invisible, skip;
      set FM0BM310.FK-DEPT-MAT-DESC[FM0BW-IDX] invisible, skip;
      set FM0BM310.XCLCD[FM0BW-IDX] invisible, skip;
      set FM0BM310.XCLDESC[FM0BW-IDX] invisible, skip;
      set FM0BM310.FK-MAT-ORD-QTY[FM0BW-IDX] invisible, skip;
      set FM0BM310.FM0BM-CURR-ORD-QTY[FM0BW-IDX] invisible, skip;
      set FM0BM310.XMU-MAT-UOM-CD[FM0BW-IDX] invisible, skip;
      set FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX] invisible, skip;
      set FM0BM310.FM0BM-COMNT-LIT[FM0BW-IDX] invisible, skip;
      set FM0BM310.FK-PO-ADJ-COMNT[FM0BW-IDX] invisible, skip;
      FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but there is at least partial data on the map).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-PO-DTL-FOUND-SW == "Y") /* If po dtl found*/
    ;
    FM0BW00.FM0BW-IDX = 1; /* Init index*/
    while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-CHG-MAP-ROWS)
      ;
      if (FM0BM310.FK-MAT-NBR[FM0BW-IDX] == " " /* No data*/
       && FM0BM310.XCLCD[FM0BW-IDX] == " ")     /* No data*/
        set FM0BM310.FM0BM-SEL[FM0BW-IDX] invisible, skip;
        set FM0BM310.FK-MAT-NBR[FM0BW-IDX] invisible, skip;
        set FM0BM310.FK-DEPT-MAT-DESC[FM0BW-IDX] invisible, skip;
        set FM0BM310.XCLCD[FM0BW-IDX] invisible, skip;
        set FM0BM310.XCLDESC[FM0BW-IDX] invisible, skip;
        set FM0BM310.FK-MAT-ORD-QTY[FM0BW-IDX] invisible, skip;
        set FM0BM310.FM0BM-CURR-ORD-QTY[FM0BW-IDX] invisible, skip;
        set FM0BM310.XMU-MAT-UOM-CD[FM0BW-IDX] invisible, skip;
        set FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX] invisible, skip;
        set FM0BM310.FM0BM-COMNT-LIT[FM0BW-IDX] invisible, skip;
        set FM0BM310.FK-PO-ADJ-COMNT[FM0BW-IDX] invisible, skip;
      end
      ;
      FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* If no message to display*/
    set FM0BM310.FK-VEND-CD cursor;
  end
  ;
  ;
  converse FM0BM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0BM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0BM310.CAITEM; /* Application data*/
  ;
  ;
end // end FM0B-3200

// Format the data to display
Function FM0B-3210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0BM310 initial; /* Initialize map*/
  ;
  FM0BW00.FM0BW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0BW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0BW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0BW00.XXXTSPAG > FM0BW00.TA5TSQIX) /* Desired page > highest*/
        FM0BW00.XXXTSPAG = FM0BW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0B-3220(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0BM310.FK-VEND-CD = FM0BW01.FK-VEND-CD; /* Vendor*/
  FM0BM310.FK-VEND-SNM = FM0BW01.FK-VEND-SNM; /* Vendor description*/
  FM0BM310.FK-FCTY-PO-DT = FM0BW01.FK-FCTY-PO-DT; /* Order Date*/
  FM0BM310.FM0BM-NIKE-PO-ID-YY = FM0BW01.FM0BW-NIKE-PO-ID-YY; /* Year*/
  FM0BM310.FM0BM-NIKE-PO-ID-PP = FM0BW01.FM0BW-NIKE-PO-ID-PP; /* Prod*/
  FM0BM310.FM0BM-NIKE-PO-ID-DD = FM0BW01.FM0BW-NIKE-PO-ID-DD; /* Delv*/
  FM0BM310.FY1FCTYC = FM0BW01.FY1FCTYC;
  FM0BM310.FK-FCTY-PO-ID = FM0BW01.FK-FCTY-PO-ID;
  FM0BM310.FK-EST-SHP-DT1 = FM0BW01.FK-EST-SHP-DT1;
  FM0BM310.FK-EST-SHP-DT2 = FM0BW01.FK-EST-SHP-DT2;
  FM0BM310.FK-EST-SHP-DT3 = FM0BW01.FK-EST-SHP-DT3;
  FM0BM310.FK-FCTY-PO-COMNT = FM0BW01.FK-FCTY-PO-COMNT; /* *//* Comments*/
  ;
  FM0BM310.XXXTSPAG = FM0BW00.XXXTSPAG; /* Current page*/
  FM0BM310.TA5TSQIX = FM0BW00.TA5TSQIX; /* Max page*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-IDX = 1; /* Initialize idx*/
  ;
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-CHG-MAP-ROWS)
    ;
    FM0BM310.FK-MAT-NBR[FM0BW-IDX] = FM0BW01.FK-MAT-NBR[FM0BW-IDX]; /* Material Number*/
    FM0BM310.FK-DEPT-MAT-DESC[FM0BW-IDX] = FM0BW01.FK-DEPT-MAT-DESC[FM0BW-IDX]; /* Material Descr*/
    FM0BM310.XCLCD[FM0BW-IDX] = FM0BW01.XCLCD[FM0BW-IDX]; /* Color code*/
    FM0BM310.XCLDESC[FM0BW-IDX] = FM0BW01.XCLDESC[FM0BW-IDX]; /* Color desc*/
    FM0BM310.FK-MAT-ORD-QTY[FM0BW-IDX] = FM0BW01.FK-MAT-ORD-QTY[FM0BW-IDX]; /* Orig Ord qty*/
    FM0BM310.FM0BM-CURR-ORD-QTY[FM0BW-IDX] = FM0BW01.FM0BW-CURR-ORD-QTY[FM0BW-IDX]; /* Curr Ord qty*/
    FM0BM310.XMU-MAT-UOM-CD[FM0BW-IDX] = FM0BW01.XMU-MAT-UOM-CD[FM0BW-IDX]; /* UOM*/
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  ;
  ;
end // end FM0B-3210

// Read page from temp storage
Function FM0B-3220()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0BW01.XXXTSLEN = FM0BW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0BW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3220"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-3220

// Check attention identifier
Function FM0B-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0BM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0BM310.FY1FCTYC; /* Factory*/
    ;
    if (FM0BM310.FM0BM-NIKE-PO-ID-YY == 0
     && FM0BM310.FM0BM-NIKE-PO-ID-PP == 0
     && FM0BM310.FM0BM-NIKE-PO-ID-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-PO-YY = FM0BM310.FM0BM-NIKE-PO-ID-YY;
      FM0BW00.FM0BW-FMAT-PO-PP = FM0BM310.FM0BM-NIKE-PO-ID-PP;
      FM0BW00.FM0BW-FMAT-PO-DD = FM0BM310.FM0BM-NIKE-PO-ID-DD;
      if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
        FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT; /**/
    end
    ;
    if (FM0BM310.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM310.FK-FCTY-PO-DT;
      FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
      FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
      FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
      if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
        FM0BW00.FM0BW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0B"; /* to applicaiton*/
    COMMAREA.CAITEM = "C"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0BM310.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FM0BM310.FK-VEND-CD; /* Vendor*/
      FKWREC.FY1FCTYC = FM0BM310.FY1FCTYC; /* Factory*/
      ;
      if (FM0BM310.FM0BM-NIKE-PO-ID-YY == 0
       && FM0BM310.FM0BM-NIKE-PO-ID-PP == 0
       && FM0BM310.FM0BM-NIKE-PO-ID-DD == 0)
        ;
        FKWREC.PC3POIDT = 0;
      else
        ;
        FM0BW00.FM0BW-FMAT-PO-YY = FM0BM310.FM0BM-NIKE-PO-ID-YY;
        FM0BW00.FM0BW-FMAT-PO-PP = FM0BM310.FM0BM-NIKE-PO-ID-PP;
        FM0BW00.FM0BW-FMAT-PO-DD = FM0BM310.FM0BM-NIKE-PO-ID-DD;
        if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
          FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
        else
          FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 19 to century*/
        end
        FKWREC.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
      end
      ;
      if (FM0BM310.FK-FCTY-PO-DT == 0)
        ;
        FKWREC.FK-FCTY-PO-DT = 0;
      else
        ;
        FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM310.FK-FCTY-PO-DT;
        FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
        FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
        FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
        if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
          FM0BW00.FM0BW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
        else
          FM0BW00.FM0BW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
        end
        FKWREC.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT;
      end
      ;
      COMMAREA.CATOAP = FM0BM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0BM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0BM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FM0A requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf14 /* POSHP requested*/
   || converseVar.eventKey is pf15 /* POSUM requested*/
   || converseVar.eventKey is pf16 /* POLST requested*/
   || converseVar.eventKey is pf17) /* POMLT requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0BM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0D"; /* TO application*/
      COMMAREA.CAITEM = FM0BM310.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FM0J"; /* TO application*/
      COMMAREA.CAITEM = FM0BM310.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FM0K"; /* TO application*/
      COMMAREA.CAITEM = FM0BM310.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0L"; /* TO application*/
      COMMAREA.CAITEM = FM0BM310.CAITEM; /* Application find code*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0BM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0BM310.FY1FCTYC; /* Factory*/
    ;
    if (FM0BM310.FM0BM-NIKE-PO-ID-YY == 0
     && FM0BM310.FM0BM-NIKE-PO-ID-PP == 0
     && FM0BM310.FM0BM-NIKE-PO-ID-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-PO-YY = FM0BM310.FM0BM-NIKE-PO-ID-YY;
      FM0BW00.FM0BW-FMAT-PO-PP = FM0BM310.FM0BM-NIKE-PO-ID-PP;
      FM0BW00.FM0BW-FMAT-PO-DD = FM0BM310.FM0BM-NIKE-PO-ID-DD;
      if (FM0BW00.FM0BW-FMAT-PO-YY < 80)
        FM0BW00.FM0BW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0BW00.FM0BW-FMAT-PO-DT;
    end
    ;
    if (FM0BM310.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM310.FK-FCTY-PO-DT;
      FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
      FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
      FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
      if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
        FM0BW00.FM0BW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0BW00.FM0BW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0BW00.FM0BW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTPO requested*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8)  /* FWRD requested*/
    ;
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0B-3300

// Reset highlighted fields
Function FM0B-3400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0BM310.FK-VEND-CD initialAttributes; /* Vender code*/
  set FM0BM310.FK-VEND-SNM initialAttributes; /* Vender desc*/
  set FM0BM310.FM0BM-NIKE-PO-ID-YY initialAttributes;
  set FM0BM310.FM0BM-NIKE-PO-ID-PP initialAttributes;
  set FM0BM310.FM0BM-NIKE-PO-ID-DD initialAttributes;
  set FM0BM310.FY1FCTYC initialAttributes;
  set FM0BM310.FK-FCTY-PO-DT initialAttributes;
  ;
  FM0BW00.FM0BW-IDX = 1; /* Init index*/
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-CHG-MAP-ROWS)
    ;
    set FM0BM310.FM0BM-SEL[FM0BW-IDX] initialAttributes; /* Selection field*/
    set FM0BM310.FK-MAT-NBR[FM0BW-IDX] initialAttributes; /* Material Number*/
    set FM0BM310.FK-DEPT-MAT-DESC[FM0BW-IDX] initialAttributes; /* Material Desc*/
    set FM0BM310.XCLCD[FM0BW-IDX] initialAttributes; /* Color code*/
    set FM0BM310.XCLDESC[FM0BW-IDX] initialAttributes; /* Color desc*/
    set FM0BM310.FK-MAT-ORD-QTY[FM0BW-IDX] initialAttributes; /* Orig Ord qty*/
    set FM0BM310.FM0BM-CURR-ORD-QTY[FM0BW-IDX] initialAttributes; /* Curr Ord qty*/
    set FM0BM310.XMU-MAT-UOM-CD[FM0BW-IDX] initialAttributes; /* UOM*/
    set FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX] initialAttributes; /* Adjust date*/
    set FM0BM310.FM0BM-COMNT-LIT[FM0BW-IDX] initialAttributes; /* Comment literal*/
    set FM0BM310.FK-PO-ADJ-COMNT[FM0BW-IDX] initialAttributes; /* Adjust comment*/
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  ;
  set FM0BM310.CATOAP initialAttributes; /* TO application*/
  set FM0BM310.CAITEM initialAttributes; /* Application item*/
  ;
  ;
end // end FM0B-3400

// Verify the entered data
Function FM0B-3500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0BM310.CAITEM > " " /* Application data was entered*/
  )                        
    set FM0BM310.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* -----------------------------------------------------------------*/
   /* If NXTPO (PF6) entered, verify request*/
   /* -----------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Next Internal PO requested*/
    ;
    if (FM0BW00.FM0BW-NXTPO-IDX >= FM0BW00.FM0BW-NBR-PASSED-PO)
      ;
      converseLib.validationFailed(130); /* No more PO's to display*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0B-3510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key was changed, verify it.*/
   /* Otherwise, verify the detail data.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0BM310.FK-VEND-CD != FM0BW01.FK-VEND-CD /* Vender change*/
   || FM0BM310.FM0BM-NIKE-PO-ID-YY != FM0BW01.FM0BW-NIKE-PO-ID-YY
   || FM0BM310.FM0BM-NIKE-PO-ID-PP != FM0BW01.FM0BW-NIKE-PO-ID-PP
   || FM0BM310.FM0BM-NIKE-PO-ID-DD != FM0BW01.FM0BW-NIKE-PO-ID-DD
   || FM0BM310.FY1FCTYC != FM0BW01.FY1FCTYC     
   || FM0BM310.FK-FCTY-PO-DT != FM0BW01.FK-FCTY-PO-DT)
    ;
    FM0B-3520(); /* Verify key*/
  else
    ;
    FM0B-3530(); /* Verify detail*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0B-3500

// Verify scroll request
Function FM0B-3510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0BW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0BW00.XXXTSPAG >= FM0BW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0B-3510

// Verify header
Function FM0B-3520()
   /* ------------------------------------------------------------*/
   /* Verify the factory code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM310.FY1FCTYC == " ") /* If factory blank*/
    ;
    converseLib.validationFailed(121); /* Factory code missing or invalid*/
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    set FM0BM310.FY1FCTYC cursor, bold; /* Highlight*/
  else
    ;
    FM0B-3521(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the PO date.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM310.FM0BM-NIKE-PO-ID-DD >= 1
   && FM0BM310.FM0BM-NIKE-PO-ID-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    set FM0BM310.FM0BM-NIKE-PO-ID-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0BM310.FM0BM-NIKE-PO-ID-PP >= 1
   && FM0BM310.FM0BM-NIKE-PO-ID-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
    set FM0BM310.FM0BM-NIKE-PO-ID-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Call TA0040 to verify the order date.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FM0BM310.FK-FCTY-PO-DT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(84); /* Date missing or invalid*/
      FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
      set FM0BM310.FK-FCTY-PO-DT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor code.*/
   /* ------------------------------------------------------------*/
  ;
  FM0B-3522(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0B-3520

// Select DFCTY.VFCTY001 row
Function FM0B-3521()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02"; /* /GPC code*/
  FY1REC.FY1FCTYC = FM0BM310.FY1FCTYC; /* Factory nbr*/
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FKWREC.XXX-MOD-ID = "3521"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory missing or invalid*/
      set FM0BM310.FY1FCTYC cursor, bold; /* Highlight*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3521 SELECT DCMPNT.VFCTY001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3521

// Select DCMPNT.VVNDR001 row
Function FM0B-3522()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0BM310.FK-VEND-CD; /* Vender nbr*/
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FKWREC.XXX-MOD-ID = "3522"; /* Module identification*/
      converseLib.validationFailed(21); /* Vender missing or invalid*/
      set FM0BM310.FK-VEND-CD cursor, bold; /* Highlight*/
      return;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3522 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1DBASE = "DCMPNT "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3522

// Verify detail
Function FM0B-3530()
   /* ---------------------------------------------------------------*/
   /* Verify the detail lines.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-NBR-CHG-MAP-ROWS;
  ;
  while (FM0BW00.FM0BW-IDX > 0) /* Check each map field*/
    ;
    if (FM0BM310.FK-MAT-NBR[FM0BW-IDX] > " ") /* If data on line*/
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the adj order date - use TA0040.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0BM310.FM0BM-SEL[FM0BW-IDX] == "S") /* If line selected*/
        ;
        if (FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX] <= 0) /* and no dt entered*/
          ;
          converseLib.validationFailed(84); /* Date missing or invalid*/
          FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
          set FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX] cursor, bold;
        else
          ;
          set TA2REC empty; /* Initialize ta2rec*/
          ;
          TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
          TA2REC.TA2GRTYP = "E"; /* Date format*/
          TA2REC.TA2GRGEN = FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX];
          ;
          try
            call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
          end /* Date validate routine*/
          ;
          if (sysVar.errorCode == "00000000") /* Call successful*/
            if (TA2REC.TA2RTNCD != 0)
              converseLib.validationFailed(84); /* Date missing or invalid*/
              FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
              set FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX] cursor, bold;
            end
          end
        end
      end
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the current order date.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0BM310.FM0BM-CURR-ORD-QTY[FM0BW-IDX] < 0) /* If nbr negative*/
        ;
        converseLib.validationFailed(131); /* Value must be > 0*/
        FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
        set FM0BM310.FM0BM-CURR-ORD-QTY[FM0BW-IDX] cursor, bold;
      end
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the select fields.*/
      /* ---------------------------------------------------------------*/
      ;
       /* Verify data changed if line selected*/
      ;
      if (FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX] == 0 /* Date didn't chg*/
       && FM0BM310.FM0BM-CURR-ORD-QTY[FM0BW-IDX]     
       == FM0BW01.FM0BW-CURR-ORD-QTY[FM0BW-IDX]      /* Same ord qty*/
       && FM0BM310.FM0BM-SEL[FM0BW-IDX] == "S"       /* And line selected*/
       && FM0BM310.FK-PO-ADJ-COMNT[FM0BW-IDX] == " ") /* Comment blank*/
        ;
        converseLib.validationFailed(25); /* No changes made to this row*/
        FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
        set FM0BM310.FM0BM-SEL[FM0BW-IDX] cursor, bold; /* Highlight*/
      end
      ;
       /* Verify line selected if data changed*/
      ;
      if (FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX] == 0 /* Date didn't chg*/
       && FM0BM310.FM0BM-CURR-ORD-QTY[FM0BW-IDX]     
       == FM0BW01.FM0BW-CURR-ORD-QTY[FM0BW-IDX]      /* Same ord qty*/
       && FM0BM310.FK-PO-ADJ-COMNT[FM0BW-IDX] == " ") /* Comment blank*/
        ;
         /* Next sentence*/
      else
        if (FM0BM310.FM0BM-SEL[FM0BW-IDX] != "S") /* Not selected*/
          ;
          converseLib.validationFailed(24); /* Enter 's' to change a row*/
          FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
          set FM0BM310.FM0BM-SEL[FM0BW-IDX] cursor, bold; /* Highlight*/
        end
      end
      ;
       /* Verify line selected with an 's'*/
      ;
      if (FM0BM310.FM0BM-SEL[FM0BW-IDX] != "S" /* If not selected*/
       && FM0BM310.FM0BM-SEL[FM0BW-IDX] != " ") /* and not blank*/
        ;
        converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
        FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
        set FM0BM310.FM0BM-SEL[FM0BW-IDX] cursor, bold; /* Highlight*/
      end
      ;
    end
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX - 1; /* Decrement index*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Now verify non-key header fields.*/
   /* ---------------------------------------------------------------*/
   /* ---------------------------------------------------------------*/
   /* Verify the estimated ship dates.*/
   /* ---------------------------------------------------------------*/
  ;
   /* Verify est ship date 3*/
  ;
  if (FM0BM310.FK-EST-SHP-DT3 > 0) /* If date entered*/
    ;
    set TA2REC empty; /* Initialize ta2rec*/
    ;
    TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
    TA2REC.TA2GRTYP = "E"; /* Date format*/
    TA2REC.TA2GRGEN = FM0BM310.FK-EST-SHP-DT3;
    ;
    try
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Date validation routine*/
    ;
    if (sysVar.errorCode == "00000000") /* Call successful*/
      if (TA2REC.TA2RTNCD != 0)
        set FM0BM310.FK-EST-SHP-DT3 cursor, bold; /* Highlight*/
        converseLib.validationFailed(84); /* Date missing or invalid*/
        FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
      end
    end
  end
  ;
  ;
   /* Verify est ship date 2*/
  ;
  if (FM0BM310.FK-EST-SHP-DT2 > 0) /* If date entered*/
    ;
    set TA2REC empty; /* Initialize ta2rec*/
    ;
    TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
    TA2REC.TA2GRTYP = "E"; /* Date format*/
    TA2REC.TA2GRGEN = FM0BM310.FK-EST-SHP-DT2;
    ;
    try
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Date validation routine*/
    ;
    if (sysVar.errorCode == "00000000") /* Call successful*/
      if (TA2REC.TA2RTNCD != 0)
        set FM0BM310.FK-EST-SHP-DT2 cursor, bold; /* Highlight*/
        converseLib.validationFailed(84); /* Date missing or invalid*/
        FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
      end
    end
  end
  ;
  ;
   /* Verify est ship date 1*/
  ;
  if (FM0BM310.FK-EST-SHP-DT1 > 0) /* If date entered*/
    ;
    set TA2REC empty; /* Initialize ta2rec*/
    ;
    TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
    TA2REC.TA2GRTYP = "E"; /* Date format*/
    TA2REC.TA2GRGEN = FM0BM310.FK-EST-SHP-DT1;
    ;
    try
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Date validation routine*/
    ;
    if (sysVar.errorCode == "00000000") /* Call successful*/
      if (TA2REC.TA2RTNCD != 0)
        set FM0BM310.FK-EST-SHP-DT1 cursor, bold; /* Highlight*/
        converseLib.validationFailed(84); /* Date missing or invalid*/
        FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
      end
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify the factory P.O. number.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0BM310.FK-FCTY-PO-ID == " ") /* If PO id not entered*/
    ;
    set FM0BM310.FK-FCTY-PO-ID cursor, bold;
    converseLib.validationFailed(8); /* Required field missing or invalid*/
    FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0B-3530

// Process valid input requests
Function FM0B-3600()
   /* ------------------------------------------------------------*/
   /* If PF6 pressed, obtain the next vendor header and exit to*/
   /* re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    FM0BW00.FM0BW-NXTPO-IDX = FM0BW00.FM0BW-NXTPO-IDX + 1;
    ;
    FM0B-3610(); /* Select VFVHDR01*/
    ;
     /* Format map header with PO header data*/
    ;
    FM0BM310.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0BM310.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0BW00.FM0BW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0BM310.FM0BM-NIKE-PO-ID-YY = FM0BW00.FM0BW-FMAT-PO-YY;
    FM0BM310.FM0BM-NIKE-PO-ID-PP = FM0BW00.FM0BW-FMAT-PO-PP;
    FM0BM310.FM0BM-NIKE-PO-ID-DD = FM0BW00.FM0BW-FMAT-PO-DD;
    FM0BM310.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0BW00.FM0BW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0BW00.XXXTSPAG = FM0BW00.XXXTSPAG - 1; /* Decrement page*/
    FM0BW00.FM0BW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0BW00.XXXTSPAG = FM0BW00.XXXTSPAG + 1; /* Increment page*/
    FM0BW00.FM0BW-FMAT-MAP-SW = "Y";
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BM310.FK-VEND-CD != FM0BW01.FK-VEND-CD
   || FM0BM310.FK-FCTY-PO-DT != FM0BW01.FK-FCTY-PO-DT
   || FM0BM310.FM0BM-NIKE-PO-ID-YY != FM0BW01.FM0BW-NIKE-PO-ID-YY
   || FM0BM310.FM0BM-NIKE-PO-ID-PP != FM0BW01.FM0BW-NIKE-PO-ID-PP
   || FM0BM310.FM0BM-NIKE-PO-ID-DD != FM0BW01.FM0BW-NIKE-PO-ID-DD
   || FM0BM310.FY1FCTYC != FM0BW01.FY1FCTYC
  )
    FM0BW00.FM0BW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Check for any data updates.  If any found, insert records*/
   /* If any header data was changed, update to DCMPNT.VFVHDR01.*/
   /* If any detail data was changed, insert to DCMPNT.VFVADJ01.*/
   /* ------------------------------------------------------------*/
  ;
  XX0XS01();
  ;
  FM0BW00.FM0BW-DATA-UPDATED-SW = "N";
  ;
   /* Check for header updates*/
  ;
  if (FM0BM310.FK-FCTY-PO-ID != FM0BW01.FK-FCTY-PO-ID
   || FM0BM310.FK-EST-SHP-DT1 != FM0BW01.FK-EST-SHP-DT1
   || FM0BM310.FK-EST-SHP-DT2 != FM0BW01.FK-EST-SHP-DT2
   || FM0BM310.FK-EST-SHP-DT3 != FM0BW01.FK-EST-SHP-DT3
   || FM0BM310.FK-FCTY-PO-COMNT != FM0BW01.FK-FCTY-PO-COMNT
  )
    FM0B-3630(); /* Update DCMPNT.VFVHDR01*/
  end
  ;
   /* Check for detail updates*/
  ;
  FM0BW00.FM0BW-IDX = 1;
  while (FM0BW00.FM0BW-IDX <= FM0BW00.FM0BW-NBR-CHG-MAP-ROWS)
    ;
    if (FM0BM310.FM0BM-SEL[FM0BW-IDX] == "S") /* If line selected*/
      FM0B-3620(); /* Insert DCMPNT.VFVADJ01*/
    end
    ;
    FM0BW00.FM0BW-IDX = FM0BW00.FM0BW-IDX + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data successfully updated, set message and exit to re-obtain*/
   /* the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0BW00.FM0BW-DATA-UPDATED-SW == "Y") /* If data updated*/
    ;
    FKWREC.XXXMSGNO = 1; /* Data updated*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module identification*/
    FM0BW00.FM0BW-REQUEST-DATA-SW = "Y"; /* Re-obtain the data*/
  end
  ;
  ;
end // end FM0B-3600

// Select DCMPNT.VFVHDR01 row
Function FM0B-3610()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0BW00.FK-INTRN-PO-ID[FM0BW-NXTPO-IDX]; /* Internal PO id*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      set VFVHDR01 empty;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S  )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0B-3610

// Insert DCMPNT.VFVADJ01
Function FM0B-3620()
   /* ------------------------------------------------------------*/
   /* Insert a record to the database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVADJ01 empty; /* Clear storage record*/
  ;
  VFVADJ01.FK-INTRN-PO-ID = FM0BW01.FK-INTRN-PO-ID;
  VFVADJ01.FK-MAT-NBR = FM0BM310.FK-MAT-NBR[FM0BW-IDX];
  VFVADJ01.XMG-COLR-GRP-CD = FM0BW01.XMG-COLR-GRP-CD[FM0BW-IDX];
  VFVADJ01.XCLCD = FM0BM310.XCLCD[FM0BW-IDX];
  ;
  FM0BW00.FM0BW-FMAT-MAP-DT = FM0BM310.FK-FCTY-PO-ADJ-DT[FM0BW-IDX];
  FM0BW00.FM0BW-FMAT-ORDER-YY = FM0BW00.FM0BW-FMAT-MAP-YY;
  FM0BW00.FM0BW-FMAT-ORDER-MM = FM0BW00.FM0BW-FMAT-MAP-MM;
  FM0BW00.FM0BW-FMAT-ORDER-DD = FM0BW00.FM0BW-FMAT-MAP-DD;
  if (FM0BW00.FM0BW-FMAT-ORDER-YY < 80)
    FM0BW00.FM0BW-FMAT-ORDER-CC = 20;
  else
    FM0BW00.FM0BW-FMAT-ORDER-CC = 19;
  end
  VFVADJ01.FK-FCTY-PO-ADJ-DT = FM0BW00.FM0BW-FMAT-ORDER-DT;
  ;
  VFVADJ01.FK-FCTY-PO-ADJ-QTY = FM0BM310.FM0BM-CURR-ORD-QTY[FM0BW-IDX]   - FM0BW01.FM0BW-CURR-ORD-QTY[FM0BW-IDX];
  ;
  VFVADJ01.FK-PO-ADJ-COMNT = FM0BM310.FK-PO-ADJ-COMNT[FM0BW-IDX];
  ;
  VFVADJ01.ZZZSDT = XX0XW01.XX0XWDAT;
  VFVADJ01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VFVADJ01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VFVADJ01.ZZZCHGCT = 0;
  ;
  ;
  try
    call "IO6840" ("A ", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0BW00.FM0BW-DATA-UPDATED-SW = "Y";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT DCMPNT.VFVADJ01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3620

// Update DCMPNT.VFVHDR01
Function FM0B-3630()
   /* ------------------------------------------------------------*/
   /* Update the requested record.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear I/O mod record*/
  ;
  VFVHDR01.VFVHDR01-GROUP = FM0BW01.VFVHDR01-GROUP; /* Restore record*/
  VFVHDR01.FK-FCTY-PO-ID = FM0BM310.FK-FCTY-PO-ID; /* Fcty po nbr*/
  VFVHDR01.FK-EST-SHP-DT1 = FM0BM310.FK-EST-SHP-DT1; /* Est ship date*/
  VFVHDR01.FK-EST-SHP-DT2 = FM0BM310.FK-EST-SHP-DT2; /* Est ship date*/
  VFVHDR01.FK-EST-SHP-DT3 = FM0BM310.FK-EST-SHP-DT3; /* Est ship date*/
  VFVHDR01.FK-FCTY-PO-COMNT = FM0BM310.FK-FCTY-PO-COMNT; /* Comment*/
  ;
  VFVHDR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VFVHDR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  FKFREC.FKF-FUNCTION = "U "; /* Update it*/
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0BW00.FM0BW-DATA-UPDATED-SW = "Y";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DCMPNT.VFVHDR01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0B-3630

//*** RECORD=FM0BW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0BW00 type basicRecord
  10 FM0BW-REQUEST-DATA-SW FM0BW-REQUEST-DATA-SW ; 
  10 FM0BW-CONFIRM-ADD-SW FM0BW-CONFIRM-ADD-SW ; 
  10 FM0BW-VFVITM01-CURSOR-SW FM0BW-VFVITM01-CURSOR-SW ; 
  10 FM0BW-VFVADJ01-CURSOR-SW FM0BW-VFVADJ01-CURSOR-SW ; 
  10 FM0BW-DATA-UPDATED-SW FM0BW-DATA-UPDATED-SW ; 
  10 FM0BW-MAP-SW FM0BW-MAP-SW ; 
  10 FM0BW-FMAT-MAP-SW FM0BW-FMAT-MAP-SW ; 
  10 FM0BW-MAP-SEL-SW FM0BW-MAP-SEL-SW ; 
  10 FM0BW-PO-HDR-FOUND-SW FM0BW-PO-HDR-FOUND-SW ; 
  10 FM0BW-PO-DTL-FOUND-SW FM0BW-PO-DTL-FOUND-SW ; 
  10 FM0BW-IDX FM0BW-IDX ; 
  10 FM0BW-NXTPO-IDX FM0BW-NXTPO-IDX ; 
  10 FM0BW-NBR-MAP-ROWS FM0BW-NBR-MAP-ROWS ; 
  10 FM0BW-NBR-CHG-MAP-ROWS FM0BW-NBR-CHG-MAP-ROWS ; 
  10 FM0BW-NBR-PASSED-PO FM0BW-NBR-PASSED-PO ; 
  10 FK-INTRN-PO-ID FK-INTRN-PO-ID [15] ; 
  10 FK-VEND-CD FK-VEND-CD ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 FK-FCTY-PO-DT FK-FCTY-PO-DT ; 
  10 FM0BW-FMAT-PO-DT FM0BW-FMAT-PO-DT ; 
    15 FM0BW-FMAT-PO-CC FM0BW-FMAT-PO-CC ; 
    15 FM0BW-FMAT-PO-YY FM0BW-FMAT-PO-YY ; 
    15 FM0BW-FMAT-PO-PP FM0BW-FMAT-PO-PP ; 
    15 FM0BW-FMAT-PO-DD FM0BW-FMAT-PO-DD ; 
  10 FM0BW-FMAT-MAP-DT FM0BW-FMAT-MAP-DT ; 
    15 FM0BW-FMAT-MAP-YY FM0BW-FMAT-MAP-YY ; 
    15 FM0BW-FMAT-MAP-MM FM0BW-FMAT-MAP-MM ; 
    15 FM0BW-FMAT-MAP-DD FM0BW-FMAT-MAP-DD ; 
  10 FM0BW-FMAT-ORDER-DT FM0BW-FMAT-ORDER-DT ; 
    15 FM0BW-FMAT-ORDER-CC FM0BW-FMAT-ORDER-CC ; 
    15 FM0BW-FMAT-ORDER-YY FM0BW-FMAT-ORDER-YY ; 
    15 FM0BW-FMAT-ORDER-MM FM0BW-FMAT-ORDER-MM ; 
    15 FM0BW-FMAT-ORDER-DD FM0BW-FMAT-ORDER-DD ; 
  10 FY1FCTYC FY1FCTYC ; 
  10 FK-EST-SHP-DT1 FK-EST-SHP-DT1 ; 
  10 FK-EST-SHP-DT2 FK-EST-SHP-DT2 ; 
  10 FK-EST-SHP-DT3 FK-EST-SHP-DT3 ; 
  10 FK-FCTY-PO-COMNT FK-FCTY-PO-COMNT ; 
  10 FM0BW-SEL FM0BW-SEL ; 
  10 FK-MAT-NBR FK-MAT-NBR ; 
  10 FK-MAT-ORD-QTY FK-MAT-ORD-QTY ; 
  10 FK-FCTY-PO-ADJ-QTY FK-FCTY-PO-ADJ-QTY ; 
  10 FM0BW-CURR-ORD-QTY FM0BW-CURR-ORD-QTY ; 
  10 XMU-MAT-UOM-CD XMU-MAT-UOM-CD ; 
  10 XCLCD XCLCD ; 
  10 XCLDESC XCLDESC ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FM0BW-COUNT FM0BW-COUNT ; 
  10 FM0BW-NEW-FK-INTRN-PO-ID FM0BW-NEW-FK-INTRN-PO-ID ; 
end // end FM0BW00

//*** RECORD=FM0BW01 ****
// ------------------------
// Map 110 display storage.
// ------------------------
// ***********************
Record FM0BW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(973) ; 
    10 FM0BW01-GROUP FM0BW01-GROUP ; 
      15 FK-INTRN-PO-ID FK-INTRN-PO-ID ; 
      15 FK-VEND-CD FK-VEND-CD ; 
      15 FK-VEND-SNM FK-VEND-SNM ; 
      15 FK-FCTY-PO-DT FK-FCTY-PO-DT ; 
      15 FM0BW-NIKE-PO-ID-YY FM0BW-NIKE-PO-ID-YY ; 
      15 FM0BW-NIKE-PO-ID-PP FM0BW-NIKE-PO-ID-PP ; 
      15 FM0BW-NIKE-PO-ID-DD FM0BW-NIKE-PO-ID-DD ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 FK-FCTY-PO-ID FK-FCTY-PO-ID ; 
      15 FK-EST-SHP-DT1 FK-EST-SHP-DT1 ; 
      15 FK-EST-SHP-DT2 FK-EST-SHP-DT2 ; 
      15 FK-EST-SHP-DT3 FK-EST-SHP-DT3 ; 
      15 FK-FCTY-PO-COMNT FK-FCTY-PO-COMNT ; 
      15 VFVHDR01-GROUP VFVHDR01-GROUP ; 
      15 FM0BW-SEL FM0BW-SEL [11] ; 
      15 FK-MAT-NBR FK-MAT-NBR [11] ; 
      15 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC [11] ; 
      15 XMG-COLR-GRP-CD XMG-COLR-GRP-CD [11] ; 
      15 XCLCD XCLCD [11] ; 
      15 XCLDESC XCLDESC [11] ; 
      15 FK-MAT-ORD-QTY FK-MAT-ORD-QTY [11] ; 
      15 FM0BW-CURR-ORD-QTY FM0BW-CURR-ORD-QTY [11] ; 
      15 XMU-MAT-UOM-CD XMU-MAT-UOM-CD [11] ; 
end // end FM0BW01

// Confirm the add switch
DataItem FM0BW-CONFIRM-ADD-SW char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Generic count variable
DataItem FM0BW-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Current Order quantity
DataItem FM0BW-CURR-ORD-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data was updated switch
DataItem FM0BW-DATA-UPDATED-SW char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Format day from map
DataItem FM0BW-FMAT-MAP-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date from map
DataItem FM0BW-FMAT-MAP-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format month from map
DataItem FM0BW-FMAT-MAP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FM0BW-FMAT-MAP-SW char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Format year from map
DataItem FM0BW-FMAT-MAP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order century
DataItem FM0BW-FMAT-ORDER-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order date
DataItem FM0BW-FMAT-ORDER-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order date
DataItem FM0BW-FMAT-ORDER-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order month
DataItem FM0BW-FMAT-ORDER-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order year
DataItem FM0BW-FMAT-ORDER-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format PO century
DataItem FM0BW-FMAT-PO-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format PO deliv month
DataItem FM0BW-FMAT-PO-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Format PO date
DataItem FM0BW-FMAT-PO-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Format PO prod month
DataItem FM0BW-FMAT-PO-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Format PO year
DataItem FM0BW-FMAT-PO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic index
DataItem FM0BW-IDX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem FM0BW-MAP-SEL-SW char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Map to display switch
DataItem FM0BW-MAP-SW char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Number of change map rows
DataItem FM0BW-NBR-CHG-MAP-ROWS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Number of map rows
DataItem FM0BW-NBR-MAP-ROWS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Number of Passed POs in FKWREC
DataItem FM0BW-NBR-PASSED-PO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// New FK-INTRN-PO-ID nbr
DataItem FM0BW-NEW-FK-INTRN-PO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Nike Po Id Delivery Month
DataItem FM0BW-NIKE-PO-ID-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO Id Production Month
DataItem FM0BW-NIKE-PO-ID-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO Id Year
DataItem FM0BW-NIKE-PO-ID-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Next PO index
DataItem FM0BW-NXTPO-IDX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PO detail found switch
DataItem FM0BW-PO-DTL-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VFVHDR01 rec found sw
DataItem FM0BW-PO-HDR-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request data switch
DataItem FM0BW-REQUEST-DATA-SW char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Selection field
DataItem FM0BW-SEL char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// End of VFVADJ01 cursor switch
DataItem FM0BW-VFVADJ01-CURSOR-SW char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// End of VFVITM01 cursor switch
DataItem FM0BW-VFVITM01-CURSOR-SW char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// FM0BW01 Group level
DataItem FM0BW01-GROUP char(973)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

