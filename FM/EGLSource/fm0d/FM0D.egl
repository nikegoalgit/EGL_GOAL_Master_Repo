package fm0d;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPXX001;
import corpcom3.XPYMT01;
import corpcom4.XSFKS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XCLCD;
import corpx1.XCLDESC;
import corpx1.XCLTBL;
import corpx2.XMU-MAT-UOM-CD;
import corpy2.YMTABRV;
import corpy2.YMTCD;
import corpy2.YMTTBL;
import fk.common.*;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VFVHDR01;
import vv.common.VFVITM01;
import vv.common.VFVSHP01;
import vv.common.VFVSHP01-GROUP;
import vv.common.VMATRL01;
import vv.common.VMCOLR01;
import vv.common.VVNDR001;
//*** PROGRAM=FM0D ****
// THIS APPLICATION IS PART OF THE FOOTWEAR MATERIALS SYSTEM.
// 
// THIS APPLICATION WILL ALLOW USERS TO INQUIRE, ADD, CHANGE,
// AND DELETE FACTORY/VENDOR P.O. SHIPMENT INFORMATION THROUGH
// THE FOUR MAPS PROVIDED IN THIS APPLICATION.
// 
// INQUIRE MAP - MAP FM0DM110 IS PROVIDED FOR USERS TO INQUIRE
// UPON FACTORY/VENDOR P.O. SHIPMENT INFORMATION.  USERS WILL
// ENTER THE VENDOR, NIKE P.O. ID, AND ORDER DATE OF THE P.O.
// AND ALL SHIPMENT INFORMATION RELATING TO THE HEADER WILL BE
// DISPLAYED ON THE MAP.
// 
// ADD MAP - MAP FM0DM210 IS PROVIDED FOR USERS TO ADD
// FACTORY/VENDOR P.O.'S TO THE FOOTWEAR MATERIALS SYSTEM.
// USERS WILL ENTER NEW P.O. SHIPMENT INFORMATION AND THE DATA
// WILL BE INSERTED TO THE P.O. SHIPMENT TABLE, DCMPNT.VFVSHP01
// 
// CHANGE MAP - MAP FM0DM310 IS PROVIDED FOR USERS TO CHANGE
// FACTORY/VENDOR P.O. SHIPMENT INFORMATION.  USERS WILL ENTER
// THE VENDOR, NIKE P.O. ID, AND THE ORDER DATE OF AN
// EXISTING P.O.  ALL P.O. SHIPMENT INFORMATION WILL BE
// RETRIEVED AND DISPLAYED ON THE MAP.  USERS MAY THEN CHANGE
// SHIPMENT INFORMATION AND HAVE THE DATA UPDATED ON
// DCMPNT.VFVSHP01.
// 
// DELETE MAP - MAP FM0DM410 IS PROVIDED FOR USERS TO DELETE
// FACTORY/VENDOR P.O. SHIPMENT INFORMATION.  USERS WILL ENTER
// THE VENDOR, NIKE P.O. ID, AND THE ORDER DATE OF AN
// EXISTING P.O.  ALL P.O. SHIPMENT INFORMATION WILL BE
// RETRIEVED AND DISPLAYED ON THE MAP.  USERS MAY THEN SELECT
// SHIPMENT INFORMATION TO BE DELETED, CONFIRM IT, AND THE
// APPROPRIATE DELETES WILL BE PERFORMED ON DCMPNT.VFVSHP01.
// 
// 
// USERS WILL BE ALLOWED TO EXIT THIS APPLICATION VIA PFKEYS
// OR FASTPATH, WITH THE 'OPTION' FIELD AVAILABLE FOR USE WITH
// ANY APPLICATION TRANSFER.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          09/28/93  JALLE1  New application.
// ppharwo  10/31/97  pharwo  Regenerate for XX0XS01 changes
// *********************
Program FM0D type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FKFREC FKFREC; // record
  FKWREC FKWREC; // record
  FM0DW00 FM0DW00; // record
  FM0DW01 FM0DW01; // record
  FY1REC FY1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VFVHDR01 VFVHDR01; // record
  VFVITM01 VFVITM01; // record
  VFVSHP01 VFVSHP01; // record
  VMATRL01 VMATRL01; // record
  VMCOLR01 VMCOLR01; // record
  VVNDR001 VVNDR001; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCLTBL {deleteAfterUse = yes}; // table
  use YMTTBL {deleteAfterUse = yes}; // table
  use FM0DM.FM0DM110,  // forms
      FM0DM.FM0DM210, 
      FM0DM.FM0DM310, 
      FM0DM.FM0DM410,
      FM0DM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the application special initialization.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0D-0005; /* Application special initialization*/
    ;
    ;
    FM0D-0005: FM0D-0005();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0D-0010; /* Converse the main process*/
    ;
    ;
    FM0D-0010: FM0D-0010();
     /* -----------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* -----------------------------------------------------------------*/
    ;
    goto FM0D-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FM0D

// Special application init
Function FM0D-0005()
   /* ------------------------------------------------------------*/
   /* Initialize working storage and display storage areas.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0DM110 initial; /* M110 inquiry map input/output*/
  set FM0DM210 initial; /* M210 add map input/output*/
  set FM0DM310 initial; /* M310 change map input/output*/
  set FM0DM410 initial; /* M410 delete map input/output*/
  set FM0DW00 empty; /* Application working storage*/
  set FM0DW01 empty; /* Application display storage*/
  set SQLCA empty; /* SQL communication area*/
  set TAEREC empty; /* Error diagnosis information*/
  set TA1REC empty; /* Error diagnosis parameters*/
  set TA5REC empty; /* Error diagnosis parameters*/
  set XX0XW01 empty; /* Date/time subroutine parameters*/
  set XX0XW02 empty; /* Date/time subroutine parameters*/
  ;
  FM0DW00.FM0DW-NBR-MAP-ROWS = 4; /* 4 rows on the map*/
  ;
   /* ------------------------------------------------------------*/
   /* If data was passed in the COMMAREA, use as initial key.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FK-INTRN-PO-ID[1] > 0) /* If PO was passed*/
    ;
     /* Load internal PO id's to a working storage array*/
    ;
    FM0DW00.FM0DW-NBR-PASSED-PO = 0; /* Counter of # PO's passed*/
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= 15)
      ;
      if (FKWREC.FK-INTRN-PO-ID[FM0DW-IDX] > 0) /* If data passed*/
        ;
        FM0DW00.FK-INTRN-PO-ID[FM0DW-IDX] = FKWREC.FK-INTRN-PO-ID[FM0DW-IDX]; /* Save PO nbr*/
        FM0DW00.FM0DW-NBR-PASSED-PO = FM0DW00.FM0DW-NBR-PASSED-PO + 1;
      end
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment*/
    end
    ;
    FM0D-0006(); /* Get first PO header*/
    ;
    if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If PO header was found*/
      ;
       /* Move PO hdr info to map*/
      ;
      FM0DW00.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
      FM0DW00.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
      FM0DW00.FM0DW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
      FM0DW00.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DW-FMAT-PO-YY;
      FM0DW00.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DW-FMAT-PO-PP;
      FM0DW00.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DW-FMAT-PO-DD;
      FM0DW00.FY1FCTYC = VFVHDR01.FY1FCTYC;
    end
    ;
  else
    ;
    FM0DW00.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
    FM0DW00.FK-FCTY-PO-DT = FKWREC.FK-FCTY-PO-DT; /* Fcty po date*/
    FM0DW00.FM0DW-FMAT-PO-DT = FKWREC.PC3POIDT; /* Format the po date*/
    FM0DW00.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DW-FMAT-PO-YY;
    FM0DW00.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DW-FMAT-PO-PP;
    FM0DW00.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DW-FMAT-PO-DD;
    ;
    if (FKWREC.PC3POIDT > 0) /* If po date is passed*/
      FM0DW00.FY1FCTYC = FKWREC.FY1FCTYC; /* Get fcty code*/
    else
      FM0DW00.FY1FCTYC = " "; /* Set it blank*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize map key variables.  Also determine which map*/
   /* to process.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.FKW-UPDATE-FUNCTION == "A") /* Add requested*/
    ;
    FM0DW00.FM0DW-MAP-SW = "2"; /* ; /* Display add map*/
    FM0DM210.FK-VEND-CD = FM0DW00.FK-VEND-CD;
    FM0DM210.FK-FCTY-PO-DT = FM0DW00.FK-FCTY-PO-DT;
    FM0DM210.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DM-FK-NIKE-PO-YY;
    FM0DM210.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DM-FK-NIKE-PO-PP;
    FM0DM210.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DM-FK-NIKE-PO-DD;
    FM0DM210.FY1FCTYC = FM0DW00.FY1FCTYC;
  else
    ;
    if (FKWREC.FKW-UPDATE-FUNCTION == "C") /* Chg requested*/
      ;
      FM0DW00.FM0DW-MAP-SW = "3"; /* ; /* Display chg map*/
      FM0DM310.FK-VEND-CD = FM0DW00.FK-VEND-CD;
      FM0DM310.FK-FCTY-PO-DT = FM0DW00.FK-FCTY-PO-DT;
      FM0DM310.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DM-FK-NIKE-PO-YY;
      FM0DM310.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DM-FK-NIKE-PO-PP;
      FM0DM310.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DM-FK-NIKE-PO-DD;
      FM0DM310.FY1FCTYC = FM0DW00.FY1FCTYC;
    else
      ;
      if (FKWREC.FKW-UPDATE-FUNCTION == "D") /* Del requested*/
        ;
        FM0DW00.FM0DW-MAP-SW = "4"; /* ; /* Display del map*/
        FM0DM410.FK-VEND-CD = FM0DW00.FK-VEND-CD;
        FM0DM410.FK-FCTY-PO-DT = FM0DW00.FK-FCTY-PO-DT;
        FM0DM410.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DM-FK-NIKE-PO-YY;
        FM0DM410.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DM-FK-NIKE-PO-PP;
        FM0DM410.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DM-FK-NIKE-PO-DD;
        FM0DM410.FY1FCTYC = FM0DW00.FY1FCTYC;
      else
        ;
        FM0DW00.FM0DW-MAP-SW = "1"; /* ; /* Display inq map*/
        FM0DM110.FK-VEND-CD = FM0DW00.FK-VEND-CD;
        FM0DM110.FK-FCTY-PO-DT = FM0DW00.FK-FCTY-PO-DT;
        FM0DM110.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DM-FK-NIKE-PO-YY;
        FM0DM110.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DM-FK-NIKE-PO-PP;
        FM0DM110.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DM-FK-NIKE-PO-DD;
        FM0DM110.FY1FCTYC = FM0DW00.FY1FCTYC;
      end
    end
  end
  ;
  ;
  set FKWREC empty; /* Intitialize FKWREC*/
  ;
   /* ------------------------------------------------------------*/
   /* Initialize working storage variables.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FK-VEND-CD > " "
   && FM0DW00.FM0DM-FK-NIKE-PO-PP > 0
   && FM0DW00.FY1FCTYC > " "
   && FM0DW00.FK-FCTY-PO-DT > 0)
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y"; /* Request data*/
  else
    FM0DW00.FM0DW-REQUEST-DATA-SW = "N"; /* Don't request data*/
  end
  ;
  FM0DW00.FM0DW-FMAT-MAP-SW = "N"; /* Format the map switch*/
  FM0DW00.FM0DW-CONFIRM-DELETE-SW = "N"; /* Confirm the delete switch*/
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N"; /* PO header found switch*/
  FM0DW00.FM0DW-PO-DTL-FOUND-SW = "N"; /* PO detail found switch*/
  FM0DW00.FM0DW-NXTPO-IDX = 1; /* Next PO index*/
  ;
  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";
  ;
  ;
end // end FM0D-0005

// Select DCMPNT.VFVHDR01 ('S ')
Function FM0D-0006()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0DW00.FK-INTRN-PO-ID[1];
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0DW00.FM0DW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N"; /* PO was not found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0006"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-0006

// Main process to display a map
Function FM0D-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the second map.*/
   /* 2) Otherwise, if specified, display the third map.*/
   /* 3) Otherwise, if specified, display the fourth map.*/
   /* 4) Otherwise, display the first map.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-MAP-SW == "2") /* Map 2 was requested*/
    FM0D-2000(); /* Display map 2*/
  else
    ;
    if (FM0DW00.FM0DW-MAP-SW == "3") /* Map 3 was requested*/
      FM0D-3000(); /* Display map 3*/
    else
      ;
      if (FM0DW00.FM0DW-MAP-SW == "4") /* Map 4 was requested*/
        FM0D-4000(); /* Display map 4*/
      else
        ;
        FM0D-1000(); /* Display map 1*/
      end
    end
  end
  ;
  ;
end // end FM0D-0010

// Process Inq map
Function FM0D-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0D-1100(); /* Obtain the data to display*/
  ;
  FM0D-1200(); /* Format and display the map*/
  ;
  FM0D-1300(); /* Check attention identifier*/
  ;
  FM0D-1400(); /* Reset fields to normal intensity*/
  ;
  FM0D-1500(); /* Verify the entered data*/
  ;
  FM0D-1600(); /* Process valid input request*/
  ;
  ;
end // end FM0D-1000

// Obtain data to display
Function FM0D-1100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.XXXTSLEN = 1067; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0DW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N"; /* PO header found switch*/
  FM0DW00.FM0DW-PO-DTL-FOUND-SW = "N"; /* PO detail found switch*/
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-1110(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-1120(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the factory/vendor PO header record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-1130(); /* Select DCMPNT.VFVHDR01*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare and process a cursor to get all po shipment records*/
   /* from DCMPNT.VFVSHP01.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 0; /* Initialize index*/
  ;
  if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If PO hdr was found*/
    ;
    FM0DW00.FM0DW-END-VFVSHP01-CSR-SW = "N";
    ;
    FM0D-1140(); /* Declare DCMPNT.VFVSHP01 cursor*/
    FM0D-1150(); /* Fetch DCMPNT.VFVSHP01 cursor*/
    ;
    while (FM0DW00.FM0DW-END-VFVSHP01-CSR-SW != "Y")
      ;
      FM0D-1160(); /* Select DCMPNT.VMATRL01*/
      ;
      if (VFVSHP01.XCLCD in XCLTBL.XCLCD /* If color in corp color table*/
       && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
        FM0DW00.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Save desc*/
      else
        FM0DW00.XCLDESC = "************"; /* Otherwise move **/
      end
      ;
      if (VFVSHP01.YMTCD in YMTTBL.YMTCD /* If trans code in table*/
       && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
        FM0DW00.YMTABRV = YMTTBL.YMTABRV[sysVar.arrayIndex]; /* Save abrv*/
      else
        FM0DW00.YMTABRV = "******"; /* Otherwise move **/
      end
      ;
      FM0D-1170(); /* Format a display storage line*/
      ;
      if (FM0DW00.FM0DW-IDX >= 4) /* If 4th line added to page*/
        FM0D-1180(); /* Add page temp store page queue*/
        FM0DW00.FM0DW-IDX = 0; /* Reset index*/
      end
      ;
      FM0D-1150(); /* Fetch DCMPNT.VFVSHP01 cursor*/
    end
    ;
    FM0D-1190(); /* Close DCMPNT.VFVSHP01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save any partially formatted data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-IDX > 0) /* If line(s) were formatted*/
    ;
    FM0D-1180(); /* Add page temp store page queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, save map header (if header was found).*/
   /* set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If PO header was found*/
      ;
      FM0D-1171(); /* Format hdr only to display storage*/
      FM0D-1180(); /* Add page temp store page queue*/
    end
    ;
    converseLib.validationFailed(18); /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
  else
    ;
    FM0DW00.FM0DW-PO-DTL-FOUND-SW = "Y"; /* PO detail was found*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-REQUEST-DATA-SW = "N";
  FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0D-1100

// Purge any temporary storage
Function FM0D-1110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0DW01 empty; /* m110 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0DW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-1110

// Select DCMPNT.VVNDR001
Function FM0D-1120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0DM110.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0DW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0DW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1120 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-1120

// Select DCMPNT.VFVHDR01 ('SA')
Function FM0D-1130()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-VEND-CD = FM0DM110.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0DM110.FY1FCTYC; /* Factory*/
  ;
  FM0DW00.FM0DW-FMAT-PO-YY = FM0DM110.FM0DM-FK-NIKE-PO-YY;
  FM0DW00.FM0DW-FMAT-PO-PP = FM0DM110.FM0DM-FK-NIKE-PO-PP;
  FM0DW00.FM0DW-FMAT-PO-DD = FM0DM110.FM0DM-FK-NIKE-PO-DD;
  if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
    FM0DW-FMAT-PO-CC = 20;
  else
    FM0DW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
  ;
  FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM110.FK-FCTY-PO-DT;
  FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
  FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
  FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
  if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
    FM0DW00.FM0DW-FMAT-ORDER-CC = 20;
  else
    FM0DW00.FM0DW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SA"; /* Select alt*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0DW00.FM0DW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N"; /* PO was not found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (SA)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-1130

// Decl DCMPNT.VFVSHP01 csr
Function FM0D-1140()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVSHP01 empty; /* Clear storage record*/
  ;
  VFVSHP01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  ;
  try
    call "IO6850" ("S1", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECL DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-1140

// Fetch DCMPNT.VFVSHP01 csr
Function FM0D-1150()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6850" ("N1", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0DW00.FM0DW-END-VFVSHP01-CSR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-1150

// Select DCMPNT.VMATRL01
Function FM0D-1160()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Clear storage record*/
  ;
  VMATRL01.FK-MAT-NBR = VFVSHP01.FK-MAT-NBR; /* Material nbr*/
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1160"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVITM01  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-1160

// Save data in disp storage
Function FM0D-1170()
   /* --------------------------------------------------------------*/
   /* Increment the line index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-IDX == 1) /* If first line on page*/
    ;
    FM0DW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID; /* Intrn po id*/
    FM0DW01.FK-VEND-CD = FM0DM110.FK-VEND-CD; /* Vendor*/
    FM0DW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FM0DW01.FK-FCTY-PO-DT = FM0DM110.FK-FCTY-PO-DT; /* PO date*/
    FM0DW01.FM0DM-FK-NIKE-PO-YY = FM0DM110.FM0DM-FK-NIKE-PO-YY;
    FM0DW01.FM0DM-FK-NIKE-PO-PP = FM0DM110.FM0DM-FK-NIKE-PO-PP;
    FM0DW01.FM0DM-FK-NIKE-PO-DD = FM0DM110.FM0DM-FK-NIKE-PO-DD;
    FM0DW01.FY1FCTYC = FM0DM110.FY1FCTYC; /* Factory*/
    FM0DW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
    FM0DW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
    FM0DW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
    FM0DW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
    FM0DW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW01.FK-MAT-NBR[FM0DW-IDX] = VFVSHP01.FK-MAT-NBR; /* Material nbr*/
  FM0DW01.FK-DEPT-MAT-DESC[FM0DW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0DW01.XCLCD[FM0DW-IDX] = VFVSHP01.XCLCD; /* Color code*/
  FM0DW01.XCLDESC[FM0DW-IDX] = FM0DW00.XCLDESC; /* Color desc*/
  FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] = VFVSHP01.FK-FCTY-PO-SHP-QTY; /* Shipped qty*/
  FM0DW01.XMU-MAT-UOM-CD[FM0DW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Unit of measure*/
  FM0DW01.FK-ACTL-SHP-DT[FM0DW-IDX] = VFVSHP01.FK-ACTL-SHP-DT; /* Shipped date*/
  FM0DW01.YMTCD[FM0DW-IDX] = VFVSHP01.YMTCD; /* Mode of transportation*/
  FM0DW01.YMTABRV[FM0DW-IDX] = FM0DW00.YMTABRV; /* Transportation abrv*/
  FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX] = VFVSHP01.FK-TRANS-COST-AMT; /* Transportation cost*/
  FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX] = VFVSHP01.FK-PO-SHP-COMNT; /* Shipment comment*/
  ;
  FM0DW01.VFVSHP01-GROUP = VFVSHP01.VFVSHP01-GROUP; /* Save entire DCMPNT.VFVSHP01 record*/
  ;
  ;
end // end FM0D-1170

// Save hdr only in disp storage
Function FM0D-1171()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0DW01 empty; /* Init entire record*/
  ;
  FM0DW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID; /* Intrn po id*/
  FM0DW01.FK-VEND-CD = FM0DM110.FK-VEND-CD; /* Vendor*/
  FM0DW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
  FM0DW01.FK-FCTY-PO-DT = FM0DM110.FK-FCTY-PO-DT; /* PO date*/
  FM0DW01.FM0DM-FK-NIKE-PO-YY = FM0DM110.FM0DM-FK-NIKE-PO-YY;
  FM0DW01.FM0DM-FK-NIKE-PO-PP = FM0DM110.FM0DM-FK-NIKE-PO-PP;
  FM0DW01.FM0DM-FK-NIKE-PO-DD = FM0DM110.FM0DM-FK-NIKE-PO-DD;
  FM0DW01.FY1FCTYC = FM0DM110.FY1FCTYC; /* Factory*/
  FM0DW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
  FM0DW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
  FM0DW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
  FM0DW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
  FM0DW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
end // end FM0D-1171

// Add page to temporary storage
Function FM0D-1180()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW01.XXXTSLEN = FM0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0DW01 empty; /* m110 display storage*/
    ;
    FM0DW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1180"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-1180

// Close DCMPNT.VFVSHP01 csr
Function FM0D-1190()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6850" ("C1", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1190"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-1190

// Format and converse INQ map
Function FM0D-1200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-FMAT-MAP-SW == "Y" /* Format requested*/
  )                                   
    if (converseVar.validationMsgNum == 0   /* If no errors*/
     || (converseVar.validationMsgNum == 18 /* No data to display*/
     && FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y")) /* And po hdr found*/
      ;
      FM0D-1210(); /* Format the map*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0DM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0DM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0DM110 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0DM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0DM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0DM110.FK-VEND-SNM = FM0DW00.FK-VEND-SNM;
  ;
   /* ------------------------------------------------------------*/
   /* Set header dark if no data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "N") /* No header data found*/
    ;
    set FM0DM110.XXXTSPAG invisible, skip;
    set FM0DM110.TA5TSQIX invisible, skip;
    set FM0DM110.FK-FCTY-PO-ID invisible, skip;
    set FM0DM110.FK-EST-SHP-DT1 invisible, skip;
    set FM0DM110.FK-EST-SHP-DT2 invisible, skip;
    set FM0DM110.FK-EST-SHP-DT3 invisible, skip;
    set FM0DM110.FK-FCTY-PO-COMNT invisible, skip;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-DTL-FOUND-SW == "N") /* If no p.o. detail found*/
    ;
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      set FM0DM110.FM0DM-SELECT[FM0DW-IDX] invisible, skip;
      set FM0DM110.FK-MAT-NBR[FM0DW-IDX] invisible, skip;
      set FM0DM110.FK-DEPT-MAT-DESC[FM0DW-IDX] invisible, skip;
      set FM0DM110.XCLCD[FM0DW-IDX] invisible, skip;
      set FM0DM110.XCLDESC[FM0DW-IDX] invisible, skip;
      set FM0DM110.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] invisible, skip;
      set FM0DM110.XMU-MAT-UOM-CD[FM0DW-IDX] invisible, skip;
      set FM0DM110.FK-ACTL-SHP-DT[FM0DW-IDX] invisible, skip;
      set FM0DM110.YMTCD[FM0DW-IDX] invisible, skip;
      set FM0DM110.YMTABRV[FM0DW-IDX] invisible, skip;
      set FM0DM110.FK-TRANS-COST-AMT[FM0DW-IDX] invisible, skip;
      set FM0DM110.FM0DM-COMNT-LIT[FM0DW-IDX] invisible, skip;
      set FM0DM110.FK-PO-SHP-COMNT[FM0DW-IDX] invisible, skip;
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but at least partial data exists).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-DTL-FOUND-SW == "Y") /* If p.o. detail found*/
    ;
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      if (FM0DM110.FK-MAT-NBR[FM0DW-IDX] == " ") /* No data on this line*/
        ;
        set FM0DM110.FM0DM-SELECT[FM0DW-IDX] invisible, skip;
        set FM0DM110.FK-MAT-NBR[FM0DW-IDX] invisible, skip;
        set FM0DM110.FK-DEPT-MAT-DESC[FM0DW-IDX] invisible, skip;
        set FM0DM110.XCLCD[FM0DW-IDX] invisible, skip;
        set FM0DM110.XCLDESC[FM0DW-IDX] invisible, skip;
        set FM0DM110.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] invisible, skip;
        set FM0DM110.XMU-MAT-UOM-CD[FM0DW-IDX] invisible, skip;
        set FM0DM110.FK-ACTL-SHP-DT[FM0DW-IDX] invisible, skip;
        set FM0DM110.YMTCD[FM0DW-IDX] invisible, skip;
        set FM0DM110.YMTABRV[FM0DW-IDX] invisible, skip;
        set FM0DM110.FK-TRANS-COST-AMT[FM0DW-IDX] invisible, skip;
        set FM0DM110.FM0DM-COMNT-LIT[FM0DW-IDX] invisible, skip;
        set FM0DM110.FK-PO-SHP-COMNT[FM0DW-IDX] invisible, skip;
      end
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* If no message to display*/
   || converseVar.validationMsgNum == 18) /* No data to display*/
    set FM0DM110.FK-VEND-CD cursor;
  end
  ;
  ;
  converse FM0DM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0DM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0DM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0D-1200

// Format the data to display
Function FM0D-1210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0DM110 initial; /* Initialize map*/
  ;
  FM0DW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0DW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0DW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0DW00.XXXTSPAG > FM0DW00.TA5TSQIX) /* Desired page > highest*/
        FM0DW00.XXXTSPAG = FM0DW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0D-1211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DM110.XXXTSPAG = FM0DW00.XXXTSPAG; /* Current page*/
  FM0DM110.TA5TSQIX = FM0DW00.TA5TSQIX; /* Max page*/
  ;
  FM0DM110.FK-VEND-CD = FM0DW01.FK-VEND-CD; /* Vendor*/
  FM0DM110.FK-FCTY-PO-DT = FM0DW01.FK-FCTY-PO-DT;
  FM0DM110.FM0DM-FK-NIKE-PO-YY = FM0DW01.FM0DM-FK-NIKE-PO-YY;
  FM0DM110.FM0DM-FK-NIKE-PO-PP = FM0DW01.FM0DM-FK-NIKE-PO-PP;
  FM0DM110.FM0DM-FK-NIKE-PO-DD = FM0DW01.FM0DM-FK-NIKE-PO-DD;
  FM0DM110.FY1FCTYC = FM0DW01.FY1FCTYC;
  FM0DM110.FK-FCTY-PO-ID = FM0DW01.FK-FCTY-PO-ID;
  FM0DM110.FK-EST-SHP-DT1 = FM0DW01.FK-EST-SHP-DT1;
  FM0DM110.FK-EST-SHP-DT2 = FM0DW01.FK-EST-SHP-DT2;
  FM0DM110.FK-EST-SHP-DT3 = FM0DW01.FK-EST-SHP-DT3;
  FM0DM110.FK-FCTY-PO-COMNT = FM0DW01.FK-FCTY-PO-COMNT;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 1; /* Initialize idx*/
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
    ;
    FM0DM110.FK-MAT-NBR[FM0DW-IDX] = FM0DW01.FK-MAT-NBR[FM0DW-IDX]; /* Material nbr*/
    FM0DM110.FK-DEPT-MAT-DESC[FM0DW-IDX] = FM0DW01.FK-DEPT-MAT-DESC[FM0DW-IDX]; /* Material desc*/
    FM0DM110.XCLCD[FM0DW-IDX] = FM0DW01.XCLCD[FM0DW-IDX]; /* Color code*/
    FM0DM110.XCLDESC[FM0DW-IDX] = FM0DW01.XCLDESC[FM0DW-IDX]; /* Color desc*/
    FM0DM110.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] = FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX]; /* Shipped qty*/
    FM0DM110.XMU-MAT-UOM-CD[FM0DW-IDX] = FM0DW01.XMU-MAT-UOM-CD[FM0DW-IDX]; /* UOM*/
    FM0DM110.FK-ACTL-SHP-DT[FM0DW-IDX] = FM0DW01.FK-ACTL-SHP-DT[FM0DW-IDX]; /* Ship date*/
    FM0DM110.YMTCD[FM0DW-IDX] = FM0DW01.YMTCD[FM0DW-IDX]; /* Transportation code*/
    FM0DM110.YMTABRV[FM0DW-IDX] = FM0DW01.YMTABRV[FM0DW-IDX]; /* Transportation abrv*/
    FM0DM110.FK-TRANS-COST-AMT[FM0DW-IDX] = FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX]; /* Transportation cost*/
   /* Shipment comment*/
    FM0DM110.FK-PO-SHP-COMNT[FM0DW-IDX] = FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX];
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
end // end FM0D-1210

// Read page from temp storage
Function FM0D-1211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW01.XXXTSLEN = FM0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0DW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-1211

// Check attention identifier
Function FM0D-1300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0DM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0DM110.FY1FCTYC; /* Factory*/
    ;
    if (FM0DM110.FM0DM-FK-NIKE-PO-YY == 0
     && FM0DM110.FM0DM-FK-NIKE-PO-PP == 0
     && FM0DM110.FM0DM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-PO-YY = FM0DM110.FM0DM-FK-NIKE-PO-YY;
      FM0DW00.FM0DW-FMAT-PO-PP = FM0DM110.FM0DM-FK-NIKE-PO-PP;
      FM0DW00.FM0DW-FMAT-PO-DD = FM0DM110.FM0DM-FK-NIKE-PO-DD;
      if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
        FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT; /**/
    end
    ;
    if (FM0DM110.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM110.FK-FCTY-PO-DT;
      FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
      FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
      FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
      if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
        FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0D"; /* to applicaiton*/
    COMMAREA.CAITEM = "I"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0DM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FM0DM110.FK-VEND-CD; /* Vendor*/
      FKWREC.FY1FCTYC = FM0DM110.FY1FCTYC; /* Factory*/
      ;
      if (FM0DM110.FM0DM-FK-NIKE-PO-YY == 0
       && FM0DM110.FM0DM-FK-NIKE-PO-PP == 0
       && FM0DM110.FM0DM-FK-NIKE-PO-DD == 0)
        ;
        FKWREC.PC3POIDT = 0;
      else
        ;
        FM0DW00.FM0DW-FMAT-PO-YY = FM0DM110.FM0DM-FK-NIKE-PO-YY;
        FM0DW00.FM0DW-FMAT-PO-PP = FM0DM110.FM0DM-FK-NIKE-PO-PP;
        FM0DW00.FM0DW-FMAT-PO-DD = FM0DM110.FM0DM-FK-NIKE-PO-DD;
        if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
          FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
        else
          FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
        end
        FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
      end
      ;
      if (FM0DM110.FK-FCTY-PO-DT == 0)
        ;
        FKWREC.FK-FCTY-PO-DT = 0;
      else
        ;
        FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM110.FK-FCTY-PO-DT;
        FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
        FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
        FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
        if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
          FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
        else
          FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
        end
        FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT;
      end
      ;
      COMMAREA.CATOAP = FM0DM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0DM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0DM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* FK0B requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0DM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTPO requested*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8   /* FWRD requested*/
   && converseVar.eventKey not pf12  /* POMNT requested*/
   && converseVar.eventKey not pf15  /* POSUM requested*/
   && converseVar.eventKey not pf16  /* POPOLSTequested*/
   && converseVar.eventKey not pf17) /* POMLT requested*/
    ;
    FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0D-1300

// Reset Highlighted fields
Function FM0D-1400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0DM110.XXXTSPAG initialAttributes; /* Page nbr*/
  set FM0DM110.TA5TSQIX initialAttributes; /* Max page*/
  ;
  set FM0DM110.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FM0DM110.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FM0DM110.FK-FCTY-PO-DT initialAttributes; /* Order date*/
  set FM0DM110.FM0DM-FK-NIKE-PO-YY initialAttributes; /* PO year*/
  set FM0DM110.FM0DM-FK-NIKE-PO-PP initialAttributes; /* PO prod month*/
  set FM0DM110.FM0DM-FK-NIKE-PO-DD initialAttributes; /* PO delivery month*/
  set FM0DM110.FY1FCTYC initialAttributes; /* Factory*/
  set FM0DM110.FK-FCTY-PO-ID initialAttributes; /* Factory PO*/
  set FM0DM110.FK-EST-SHP-DT1 initialAttributes; /* Est ship date 1*/
  set FM0DM110.FK-EST-SHP-DT2 initialAttributes; /* Est ship date 2*/
  set FM0DM110.FK-EST-SHP-DT3 initialAttributes; /* Est ship date 3*/
  set FM0DM110.FK-FCTY-PO-COMNT initialAttributes; /* PO comment*/
  ;
  ;
  FM0DW00.FM0DW-IDX = 1; /* Initialize index*/
  ;
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* For each line*/
    ;
    set FM0DM110.FM0DM-SELECT[FM0DW-IDX] initialAttributes; /* Selection*/
    set FM0DM110.FK-MAT-NBR[FM0DW-IDX] initialAttributes; /* Material nbr*/
    set FM0DM110.FK-DEPT-MAT-DESC[FM0DW-IDX] initialAttributes; /* Material desc*/
    set FM0DM110.XCLCD[FM0DW-IDX] initialAttributes; /* Color code*/
    set FM0DM110.XCLDESC[FM0DW-IDX] initialAttributes; /* Color desc*/
    set FM0DM110.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] initialAttributes; /* Shipped qty*/
    set FM0DM110.XMU-MAT-UOM-CD[FM0DW-IDX] initialAttributes; /* Unit of measure*/
    set FM0DM110.FK-ACTL-SHP-DT[FM0DW-IDX] initialAttributes; /* Shipped date*/
    set FM0DM110.YMTCD[FM0DW-IDX] initialAttributes; /* Transportation code*/
    set FM0DM110.YMTABRV[FM0DW-IDX] initialAttributes; /* Transportation abrv*/
    set FM0DM110.FK-TRANS-COST-AMT[FM0DW-IDX] initialAttributes; /* Cost*/
    set FM0DM110.FK-PO-SHP-COMNT[FM0DW-IDX] initialAttributes; /* Ship comment*/
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  set FM0DM110.CATOAP initialAttributes; /* To application*/
  set FM0DM110.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FM0D-1400

// Verify entered fields
Function FM0D-1500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0DM110.CAITEM > " "         /* Application data was entered*/
   && converseVar.eventKey not pf12 /* POMNT*/
   && converseVar.eventKey not pf15 /* POSUM*/
   && converseVar.eventKey not pf16 /* POLST*/
   && converseVar.eventKey not pf17) /* POMLT*/
    ;
    set FM0DM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify NXTPO request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    if (FM0DW00.FM0DW-NXTPO-IDX >= FM0DW00.FM0DW-NBR-PASSED-PO)
      ;
      converseLib.validationFailed(130); /* No more PO's to display*/
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0D-1510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify select field for any application transfer.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* POMNT*/
   || converseVar.eventKey is pf15 /* POSUM*/
   || converseVar.eventKey is pf16 /* POLST*/
   || converseVar.eventKey is pf17) /* POMLT*/
    ;
    if (FM0DM110.FM0DM-SELECT == "S" /* If selected*/
     || FM0DM110.FM0DM-SELECT == " ") /* Or blank*/
      ;
    else
      ;
      set FM0DM110.FM0DM-SELECT cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1500"; /* Module identification*/
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0DM110.FK-VEND-CD == FM0DW01.FK-VEND-CD
   && FM0DM110.FK-FCTY-PO-DT == FM0DW01.FK-FCTY-PO-DT
   && FM0DM110.FM0DM-FK-NIKE-PO-YY == FM0DW01.FM0DM-FK-NIKE-PO-YY
   && FM0DM110.FM0DM-FK-NIKE-PO-PP == FM0DW01.FM0DM-FK-NIKE-PO-PP
   && FM0DM110.FM0DM-FK-NIKE-PO-DD == FM0DW01.FM0DM-FK-NIKE-PO-DD
   && FM0DM110.FY1FCTYC == FM0DW01.FY1FCTYC)
    ;
    FM0D-1520(); /* Verify detail*/
  else
    ;
    FM0D-1530(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0D-1500

// Verify scroll request
Function FM0D-1510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0DW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0DW00.XXXTSPAG >= FM0DW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "1510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0D-1510

// Verify detail data
Function FM0D-1520()
   /* ---------------------------------------------------------------*/
   /* Verify the detail lines.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-NBR-MAP-ROWS;
  ;
  while (FM0DW00.FM0DW-IDX > 0)
    ;
    if (FM0DM110.FM0DM-SELECT[FM0DW-IDX] == "S" /* If selected*/
     || FM0DM110.FM0DM-SELECT[FM0DW-IDX] == " ") /* Or blank*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0DM110.FM0DM-SELECT[FM0DW-IDX] cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1520"; /* Module identification*/
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
    end
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX - 1;
  end
  ;
  ;
end // end FM0D-1520

// Verify key data
Function FM0D-1530()
   /* ------------------------------------------------------------*/
   /* Verify the factory code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM110.FY1FCTYC == " ") /* If factory blank*/
    ;
    converseLib.validationFailed(121); /* Factory code missing or invalid*/
    FKWREC.XXX-MOD-ID = "1530"; /* Module identification*/
    set FM0DM110.FY1FCTYC cursor, bold; /* Highlight*/
  else
    ;
    FM0D-1531(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the PO date.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM110.FM0DM-FK-NIKE-PO-DD >= 1
   && FM0DM110.FM0DM-FK-NIKE-PO-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "1530"; /* Module identification*/
    set FM0DM110.FM0DM-FK-NIKE-PO-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0DM110.FM0DM-FK-NIKE-PO-PP >= 1
   && FM0DM110.FM0DM-FK-NIKE-PO-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "1530"; /* Module identification*/
    set FM0DM110.FM0DM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Call TA0040 to verify the order date.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FM0DM110.FK-FCTY-PO-DT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(84); /* Date missing or invalid*/
      FKWREC.XXX-MOD-ID = "1530"; /* Module identification*/
      set FM0DM110.FK-FCTY-PO-DT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor code.*/
   /* ------------------------------------------------------------*/
  ;
  FM0D-1532(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0D-1530

// Verify factory code
Function FM0D-1531()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0DM110.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0DM110.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1531"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1531"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-1531

// Verify vendor code
Function FM0D-1532()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0DM110.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0DM110.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "1532"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1532"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-1532

// Process valid request
Function FM0D-1600()
   /* ------------------------------------------------------------*/
   /* If PF6 pressed, obtain the next vendor header and exit to*/
   /* re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf7 pressed*/
    ;
    FM0DW00.FM0DW-NXTPO-IDX = FM0DW00.FM0DW-NXTPO-IDX + 1;
    ;
    FM0D-1610(); /* Select DCMPNT.VFVHDR01*/
    ;
     /* Format map header with PO header data*/
    ;
    FM0DM110.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0DM110.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0DW00.FM0DW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0DM110.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DW-FMAT-PO-YY;
    FM0DM110.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DW-FMAT-PO-PP;
    FM0DM110.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DW-FMAT-PO-DD;
    FM0DM110.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0DW00.XXXTSPAG = FM0DW00.XXXTSPAG - 1; /* Decrement page*/
    FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0DW00.XXXTSPAG = FM0DW00.XXXTSPAG + 1; /* Increment page*/
    FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process application transfer request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* PF12 was pressed*/
   || converseVar.eventKey is pf15 /* PF15 was pressed*/
   || converseVar.eventKey is pf16 /* PF16 was pressed*/
   || converseVar.eventKey is pf17) /* PF17 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0DM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0DM110.FY1FCTYC; /* Factory*/
    ;
    if (FM0DM110.FM0DM-FK-NIKE-PO-YY == 0
     && FM0DM110.FM0DM-FK-NIKE-PO-PP == 0
     && FM0DM110.FM0DM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-PO-YY = FM0DM110.FM0DM-FK-NIKE-PO-YY;
      FM0DW00.FM0DW-FMAT-PO-PP = FM0DM110.FM0DM-FK-NIKE-PO-PP;
      FM0DW00.FM0DW-FMAT-PO-DD = FM0DM110.FM0DM-FK-NIKE-PO-DD;
      if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
        FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
    end
    ;
    if (FM0DM110.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM110.FK-FCTY-PO-DT;
      FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
      FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
      FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
      if (FM0DW00.FM0DW-FMAT-MAP-YY < 80)
        FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 20 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    ;
    if (FM0DM110.FM0DM-SELECT == "S") /* If line selected*/
      ;
      FKWREC.FK-MAT-NBR[1] = FM0DM110.FK-MAT-NBR[1];
      FKWREC.XCLCD[1] = FM0DM110.XCLCD[1];
    end
    ;
    ;
    if (converseVar.eventKey is pf12) /* PF12 pressed*/
      COMMAREA.CATOAP = "FM0B"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0DM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 pressed*/
      COMMAREA.CATOAP = "FM0J"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0DM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 pressed*/
      COMMAREA.CATOAP = "FM0K"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0DM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 pressed*/
      COMMAREA.CATOAP = "FM0L"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0DM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0DM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM110.FK-VEND-CD != FM0DW01.FK-VEND-CD
   || FM0DM110.FK-FCTY-PO-DT != FM0DW01.FK-FCTY-PO-DT
   || FM0DM110.FM0DM-FK-NIKE-PO-YY != FM0DW01.FM0DM-FK-NIKE-PO-YY
   || FM0DM110.FM0DM-FK-NIKE-PO-PP != FM0DW01.FM0DM-FK-NIKE-PO-PP
   || FM0DM110.FM0DM-FK-NIKE-PO-DD != FM0DW01.FM0DM-FK-NIKE-PO-DD
   || FM0DM110.FY1FCTYC != FM0DW01.FY1FCTYC
  )
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0D-1600

// Select DCMPNT.VFVHDR01 ('S ')
Function FM0D-1610()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0DW00.FK-INTRN-PO-ID[FM0DW-NXTPO-IDX]; /* Internal PO id*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      set VFVHDR01 empty;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S  )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-1610

// Process Add map
Function FM0D-2000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0D-2100(); /* Obtain the data to display*/
  ;
  FM0D-2200(); /* Format and display the map*/
  ;
  FM0D-2300(); /* Check attention identifier*/
  ;
  FM0D-2400(); /* Reset fields to normal intensity*/
  ;
  FM0D-2500(); /* Verify the entered data*/
  ;
  FM0D-2600(); /* Process valid input request*/
  ;
  ;
end // end FM0D-2000

// Obtain data to display
Function FM0D-2100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.XXXTSLEN = 1067; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0DW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N"; /* Header data found switch*/
  FM0DW00.FM0DW-PO-DTL-FOUND-SW = "N"; /* Detail data found switch*/
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-2110(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-2120(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the factory/vendor PO header record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-2130(); /* Select DCMPNT.VFVHDR01*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare and process a cursor to get all po shipment records*/
   /* from DCMPNT.VFVSHP01.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 0; /* Initialize index*/
  ;
  if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If PO hdr was found*/
    ;
    FM0DW00.FM0DW-END-VFVITM01-CSR-SW = "N";
    ;
    FM0D-2140(); /* Declare DCMPNT.VFVITM01 cursor*/
    FM0D-2150(); /* Fetch DCMPNT.VFVITM01 cursor*/
    ;
    while (FM0DW00.FM0DW-END-VFVITM01-CSR-SW != "Y")
      ;
      FM0D-2160(); /* Select DCMPNT.VMATRL01*/
      ;
      if (VFVITM01.XCLCD in XCLTBL.XCLCD /* If color in corp color table*/
       && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
        FM0DW00.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Save desc*/
      else
        FM0DW00.XCLDESC = "************"; /* Otherwise move **/
      end
      ;
      FM0D-2170(); /* Format a display storage line*/
      ;
      if (FM0DW00.FM0DW-IDX >= 4) /* If 4th line added to page*/
        FM0D-2180(); /* Add page temp store page queue*/
        FM0DW00.FM0DW-IDX = 0; /* Reset index*/
      end
      ;
      FM0D-2150(); /* Fetch DCMPNT.VFVITM01 cursor*/
    end
    ;
    FM0D-2190(); /* Close DCMPNT.VFVITM01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save any partially formatted data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-IDX > 0) /* If line(s) were formatted*/
    ;
    FM0D-2180(); /* Add page temp store page queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, save map header (if header was found).*/
   /* Set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If PO header was found*/
      ;
      FM0D-2171(); /* Format hdr only to disp storage*/
      FM0D-2180(); /* Add page temp storage page queue*/
    end
    ;
    converseLib.validationFailed(18); /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "2100"; /* Module identification*/
  else
    ;
    FM0DW00.FM0DW-PO-DTL-FOUND-SW = "Y"; /* PO detail found*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-REQUEST-DATA-SW = "N";
  FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0D-2100

// Purge any temporary storage
Function FM0D-2110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0DW01 empty; /* M210 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0DW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M210"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-2110

// Select DCMPNT.VVNDR001
Function FM0D-2120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0DM210.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0DW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0DW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "2120 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-2120

// Select DCMPNT.VFVHDR01 ('SA')
Function FM0D-2130()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-VEND-CD = FM0DM210.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0DM210.FY1FCTYC; /* Factory*/
  ;
  FM0DW00.FM0DW-FMAT-PO-YY = FM0DM210.FM0DM-FK-NIKE-PO-YY;
  FM0DW00.FM0DW-FMAT-PO-PP = FM0DM210.FM0DM-FK-NIKE-PO-PP;
  FM0DW00.FM0DW-FMAT-PO-DD = FM0DM210.FM0DM-FK-NIKE-PO-DD;
  if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
    FM0DW-FMAT-PO-CC = 20;
  else
    FM0DW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
  ;
  FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM210.FK-FCTY-PO-DT;
  FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
  FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
  FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
  if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
    FM0DW00.FM0DW-FMAT-ORDER-CC = 20;
  else
    FM0DW00.FM0DW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SA"; /* Select alt*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0DW00.FM0DW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N"; /* PO was not found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (SA)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2130

// Decl DCMPNT.VFVITM01 csr
Function FM0D-2140()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVITM01 empty; /* Clear storage record*/
  ;
  VFVITM01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  ;
  try
    call "IO6830" ("S1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECL DCMPNT.VFVITM01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2140

// Fetch DCMPNT.VFVITM01 csr
Function FM0D-2150()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6830" ("N1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0DW00.FM0DW-END-VFVITM01-CSR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VFVITM01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-2150

// Select DCMPNT.VMATRL01
Function FM0D-2160()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Clear storage record*/
  ;
  VMATRL01.FK-MAT-NBR = VFVITM01.FK-MAT-NBR; /* Material nbr*/
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2160"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVITM01  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2160

// Save data in disp storage
Function FM0D-2170()
   /* --------------------------------------------------------------*/
   /* Increment the line index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-IDX == 1) /* If first line on page*/
    ;
    FM0DW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID; /* Intrn po id*/
    FM0DW01.FK-VEND-CD = FM0DM210.FK-VEND-CD; /* Vendor*/
    FM0DW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FM0DW01.FK-FCTY-PO-DT = FM0DM210.FK-FCTY-PO-DT; /* PO date*/
    FM0DW01.FM0DM-FK-NIKE-PO-YY = FM0DM210.FM0DM-FK-NIKE-PO-YY;
    FM0DW01.FM0DM-FK-NIKE-PO-PP = FM0DM210.FM0DM-FK-NIKE-PO-PP;
    FM0DW01.FM0DM-FK-NIKE-PO-DD = FM0DM210.FM0DM-FK-NIKE-PO-DD;
    FM0DW01.FY1FCTYC = FM0DM210.FY1FCTYC; /* Factory*/
    FM0DW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
    FM0DW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
    FM0DW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
    FM0DW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
    FM0DW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW01.FK-MAT-NBR[FM0DW-IDX] = VFVITM01.FK-MAT-NBR; /* Material nbr*/
  FM0DW01.FK-DEPT-MAT-DESC[FM0DW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0DW01.XCLCD[FM0DW-IDX] = VFVITM01.XCLCD; /* Color code*/
  FM0DW01.XCLDESC[FM0DW-IDX] = FM0DW00.XCLDESC; /* Color desc*/
  FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] = 0; /* Shipped qty*/
  FM0DW01.XMU-MAT-UOM-CD[FM0DW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Unit of measure*/
  FM0DW01.FK-ACTL-SHP-DT[FM0DW-IDX] = 0; /* Shipped date*/
  FM0DW01.YMTCD[FM0DW-IDX] = "  "; /* Mode of transportation*/
  FM0DW01.YMTABRV[FM0DW-IDX] = "  "; /* Transportation abrv*/
  FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX] = 0; /* Transportation cost*/
  FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX] = "  "; /* Shipment comment*/
  ;
  ;
end // end FM0D-2170

// Save hdr only in disp storage
Function FM0D-2171()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0DW01 empty; /* Init entire record*/
  ;
  FM0DW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID; /* Intrn po id*/
  FM0DW01.FK-VEND-CD = FM0DM210.FK-VEND-CD; /* Vendor*/
  FM0DW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
  FM0DW01.FK-FCTY-PO-DT = FM0DM210.FK-FCTY-PO-DT; /* PO date*/
  FM0DW01.FM0DM-FK-NIKE-PO-YY = FM0DM210.FM0DM-FK-NIKE-PO-YY;
  FM0DW01.FM0DM-FK-NIKE-PO-PP = FM0DM210.FM0DM-FK-NIKE-PO-PP;
  FM0DW01.FM0DM-FK-NIKE-PO-DD = FM0DM210.FM0DM-FK-NIKE-PO-DD;
  FM0DW01.FY1FCTYC = FM0DM210.FY1FCTYC; /* Factory*/
  FM0DW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
  FM0DW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
  FM0DW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
  FM0DW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
  FM0DW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
end // end FM0D-2171

// Add page to temporary storage
Function FM0D-2180()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW01.XXXTSLEN = FM0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0DW01 empty; /* m210 display storage*/
    ;
    FM0DW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "2180"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M210"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-2180

// Close DCMPNT.VFVITM01 csr
Function FM0D-2190()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6830" ("C1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2190"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VFVITM01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2190

// Format and converse ADD map
Function FM0D-2200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-FMAT-MAP-SW == "Y" /* Format requested*/
  )                                   
    if (converseVar.validationMsgNum == 0   /* If no errors*/
     || (converseVar.validationMsgNum == 18 /* No data to display*/
     && FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y")) /* And po hdr found*/
      ;
      FM0D-2210(); /* Format the map*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DM210.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0DM210.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0DM210.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0DM210 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0DM210.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0DM210.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0DM210.FK-VEND-SNM = FM0DW00.FK-VEND-SNM;
  ;
   /* ------------------------------------------------------------*/
   /* Set header dark if no data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "N") /* No header data found*/
    ;
    set FM0DM210.XXXTSPAG invisible, skip;
    set FM0DM210.TA5TSQIX invisible, skip;
    set FM0DM210.FK-FCTY-PO-ID invisible, skip;
    set FM0DM210.FK-EST-SHP-DT1 invisible, skip;
    set FM0DM210.FK-EST-SHP-DT2 invisible, skip;
    set FM0DM210.FK-EST-SHP-DT3 invisible, skip;
    set FM0DM210.FK-FCTY-PO-COMNT invisible, skip;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-DTL-FOUND-SW == "N") /* If no p.o. detail found*/
    ;
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      set FM0DM210.FM0DM-SELECT[FM0DW-IDX] invisible, skip;
      set FM0DM210.FK-MAT-NBR[FM0DW-IDX] invisible, skip;
      set FM0DM210.FK-DEPT-MAT-DESC[FM0DW-IDX] invisible, skip;
      set FM0DM210.XCLCD[FM0DW-IDX] invisible, skip;
      set FM0DM210.XCLDESC[FM0DW-IDX] invisible, skip;
      set FM0DM210.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] invisible, skip;
      set FM0DM210.XMU-MAT-UOM-CD[FM0DW-IDX] invisible, skip;
      set FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX] invisible, skip;
      set FM0DM210.YMTCD[FM0DW-IDX] invisible, skip;
      set FM0DM210.YMTABRV[FM0DW-IDX] invisible, skip;
      set FM0DM210.FK-TRANS-COST-AMT[FM0DW-IDX] invisible, skip;
      set FM0DM210.FM0DM-COMNT-LIT[FM0DW-IDX] invisible, skip;
      set FM0DM210.FK-PO-SHP-COMNT[FM0DW-IDX] invisible, skip;
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but at least partial data exists).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-DTL-FOUND-SW == "Y") /* If p.o. detail found*/
    ;
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      if (FM0DM210.FK-MAT-NBR[FM0DW-IDX] == " ") /* No data on this line*/
        ;
        set FM0DM210.FM0DM-SELECT[FM0DW-IDX] invisible, skip;
        set FM0DM210.FK-MAT-NBR[FM0DW-IDX] invisible, skip;
        set FM0DM210.FK-DEPT-MAT-DESC[FM0DW-IDX] invisible, skip;
        set FM0DM210.XCLCD[FM0DW-IDX] invisible, skip;
        set FM0DM210.XCLDESC[FM0DW-IDX] invisible, skip;
        set FM0DM210.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] invisible, skip;
        set FM0DM210.XMU-MAT-UOM-CD[FM0DW-IDX] invisible, skip;
        set FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX] invisible, skip;
        set FM0DM210.YMTCD[FM0DW-IDX] invisible, skip;
        set FM0DM210.YMTABRV[FM0DW-IDX] invisible, skip;
        set FM0DM210.FK-TRANS-COST-AMT[FM0DW-IDX] invisible, skip;
        set FM0DM210.FM0DM-COMNT-LIT[FM0DW-IDX] invisible, skip;
        set FM0DM210.FK-PO-SHP-COMNT[FM0DW-IDX] invisible, skip;
      end
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* If no message to display*/
  )                                    
    if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If po hdr found*/
      set FM0DM210.FM0DM-SELECT[1] cursor;
    else
      set FM0DM210.FK-VEND-CD cursor;
    end
  else
    if (converseVar.validationMsgNum == 1 /* Update complete*/
     || converseVar.validationMsgNum == 18) /* No data to display*/
      set FM0DM210.FK-VEND-CD cursor;
    end
  end
  ;
  ;
  converse FM0DM210 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0DM210.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0DM210.CAITEM; /* Application data*/
  ;
  ;
end // end FM0D-2200

// Format the data to display
Function FM0D-2210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0DM210 initial; /* Initialize map*/
  ;
  FM0DW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0DW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0DW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0DW00.XXXTSPAG > FM0DW00.TA5TSQIX) /* Desired page > highest*/
        FM0DW00.XXXTSPAG = FM0DW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0D-2211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DM210.XXXTSPAG = FM0DW00.XXXTSPAG; /* Current page*/
  FM0DM210.TA5TSQIX = FM0DW00.TA5TSQIX; /* Max page*/
  ;
  FM0DM210.FK-VEND-CD = FM0DW01.FK-VEND-CD; /* Vendor*/
  FM0DM210.FK-FCTY-PO-DT = FM0DW01.FK-FCTY-PO-DT;
  FM0DM210.FM0DM-FK-NIKE-PO-YY = FM0DW01.FM0DM-FK-NIKE-PO-YY;
  FM0DM210.FM0DM-FK-NIKE-PO-PP = FM0DW01.FM0DM-FK-NIKE-PO-PP;
  FM0DM210.FM0DM-FK-NIKE-PO-DD = FM0DW01.FM0DM-FK-NIKE-PO-DD;
  FM0DM210.FY1FCTYC = FM0DW01.FY1FCTYC;
  FM0DM210.FK-FCTY-PO-ID = FM0DW01.FK-FCTY-PO-ID;
  FM0DM210.FK-EST-SHP-DT1 = FM0DW01.FK-EST-SHP-DT1;
  FM0DM210.FK-EST-SHP-DT2 = FM0DW01.FK-EST-SHP-DT2;
  FM0DM210.FK-EST-SHP-DT3 = FM0DW01.FK-EST-SHP-DT3;
  FM0DM210.FK-FCTY-PO-COMNT = FM0DW01.FK-FCTY-PO-COMNT;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 1; /* Initialize idx*/
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
    ;
    FM0DM210.FK-MAT-NBR[FM0DW-IDX] = FM0DW01.FK-MAT-NBR[FM0DW-IDX]; /* Material nbr*/
    FM0DM210.FK-DEPT-MAT-DESC[FM0DW-IDX] = FM0DW01.FK-DEPT-MAT-DESC[FM0DW-IDX]; /* Material desc*/
    FM0DM210.XCLCD[FM0DW-IDX] = FM0DW01.XCLCD[FM0DW-IDX]; /* Color code*/
    FM0DM210.XCLDESC[FM0DW-IDX] = FM0DW01.XCLDESC[FM0DW-IDX]; /* Color desc*/
    FM0DM210.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] = FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX]; /* Shipped qty*/
    FM0DM210.XMU-MAT-UOM-CD[FM0DW-IDX] = FM0DW01.XMU-MAT-UOM-CD[FM0DW-IDX]; /* UOM*/
    FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX] = FM0DW01.FK-ACTL-SHP-DT[FM0DW-IDX]; /* Ship date*/
    FM0DM210.YMTCD[FM0DW-IDX] = FM0DW01.YMTCD[FM0DW-IDX]; /* Transportation code*/
    FM0DM210.YMTABRV[FM0DW-IDX] = FM0DW01.YMTABRV[FM0DW-IDX]; /* Transportation abrv*/
    FM0DM210.FK-TRANS-COST-AMT[FM0DW-IDX] = FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX]; /* Transportation cost*/
   /* Shipment comment*/
    FM0DM210.FK-PO-SHP-COMNT[FM0DW-IDX] = FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX];
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
end // end FM0D-2210

// Read page from temp storage
Function FM0D-2211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW01.XXXTSLEN = FM0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0DW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "2211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M210"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-2211

// Check attention identifier
Function FM0D-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0DM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0DM210.FY1FCTYC; /* Factory*/
    ;
    if (FM0DM210.FM0DM-FK-NIKE-PO-YY == 0
     && FM0DM210.FM0DM-FK-NIKE-PO-PP == 0
     && FM0DM210.FM0DM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-PO-YY = FM0DM210.FM0DM-FK-NIKE-PO-YY;
      FM0DW00.FM0DW-FMAT-PO-PP = FM0DM210.FM0DM-FK-NIKE-PO-PP;
      FM0DW00.FM0DW-FMAT-PO-DD = FM0DM210.FM0DM-FK-NIKE-PO-DD;
      if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
        FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT; /**/
    end
    ;
    if (FM0DM210.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM210.FK-FCTY-PO-DT;
      FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
      FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
      FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
      if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
        FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT;
    end
    ;
    COMMAREA.CATOAP = "FM0D"; /* to applicaiton*/
    COMMAREA.CAITEM = "A"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0DM210.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM210.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FM0DM210.FK-VEND-CD; /* Vendor*/
      FKWREC.FY1FCTYC = FM0DM210.FY1FCTYC; /* Factory*/
      ;
      if (FM0DM210.FM0DM-FK-NIKE-PO-YY == 0
       && FM0DM210.FM0DM-FK-NIKE-PO-PP == 0
       && FM0DM210.FM0DM-FK-NIKE-PO-DD == 0)
        ;
        FKWREC.PC3POIDT = 0;
      else
        ;
        FM0DW00.FM0DW-FMAT-PO-YY = FM0DM210.FM0DM-FK-NIKE-PO-YY;
        FM0DW00.FM0DW-FMAT-PO-PP = FM0DM210.FM0DM-FK-NIKE-PO-PP;
        FM0DW00.FM0DW-FMAT-PO-DD = FM0DM210.FM0DM-FK-NIKE-PO-DD;
        if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
          FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
        else
          FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
        end
        FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
      end
      ;
      if (FM0DM210.FK-FCTY-PO-DT == 0)
        ;
        FKWREC.FK-FCTY-PO-DT = 0;
      else
        ;
        FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM210.FK-FCTY-PO-DT;
        FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
        FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
        FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
        if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
          FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
        else
          FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
        end
        FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT;
      end
      ;
      COMMAREA.CATOAP = FM0DM210.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0DM210.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0DM210.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* POMNT requested*/
   || converseVar.eventKey is pf15 /* POSUM requested*/
   || converseVar.eventKey is pf16 /* POLST requested*/
   || converseVar.eventKey is pf17) /* POMLT requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0DM210"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0DM210.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0B"; /* TO application*/
      COMMAREA.CAITEM = FM0DM210.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FM0J"; /* TO application*/
      COMMAREA.CAITEM = FM0DM210.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FM0K"; /* TO application*/
      COMMAREA.CAITEM = FM0DM210.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0L"; /* TO application*/
      COMMAREA.CAITEM = FM0DM210.CAITEM; /* Application find code*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0DM210.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0DM210.FY1FCTYC; /* Factory*/
    ;
    if (FM0DM210.FM0DM-FK-NIKE-PO-YY == 0
     && FM0DM210.FM0DM-FK-NIKE-PO-PP == 0
     && FM0DM210.FM0DM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-PO-YY = FM0DM210.FM0DM-FK-NIKE-PO-YY;
      FM0DW00.FM0DW-FMAT-PO-PP = FM0DM210.FM0DM-FK-NIKE-PO-PP;
      FM0DW00.FM0DW-FMAT-PO-DD = FM0DM210.FM0DM-FK-NIKE-PO-DD;
      if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
        FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
    end
    ;
    if (FM0DM210.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM210.FK-FCTY-PO-DT;
      FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
      FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
      FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
      if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
        FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT;
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTPO requested*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8   /* FWRD requested*/
  )                                 
    FKWREC.XXX-MOD-ID = "2300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0D-2300

// Reset Highlighted fields
Function FM0D-2400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0DM210.XXXTSPAG initialAttributes; /* Page nbr*/
  set FM0DM210.TA5TSQIX initialAttributes; /* Max page*/
  ;
  set FM0DM210.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FM0DM210.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FM0DM210.FK-FCTY-PO-DT initialAttributes; /* Order date*/
  set FM0DM210.FM0DM-FK-NIKE-PO-YY initialAttributes; /* PO year*/
  set FM0DM210.FM0DM-FK-NIKE-PO-PP initialAttributes; /* PO prod month*/
  set FM0DM210.FM0DM-FK-NIKE-PO-DD initialAttributes; /* PO delivery month*/
  set FM0DM210.FY1FCTYC initialAttributes; /* Factory*/
  set FM0DM210.FK-FCTY-PO-ID initialAttributes; /* Factory PO*/
  set FM0DM210.FK-EST-SHP-DT1 initialAttributes; /* Est ship date 1*/
  set FM0DM210.FK-EST-SHP-DT2 initialAttributes; /* Est ship date 2*/
  set FM0DM210.FK-EST-SHP-DT3 initialAttributes; /* Est ship date 3*/
  set FM0DM210.FK-FCTY-PO-COMNT initialAttributes; /* PO comment*/
  ;
  ;
  FM0DW00.FM0DW-IDX = 1; /* Initialize index*/
  ;
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* For each line*/
    ;
    set FM0DM210.FM0DM-SELECT[FM0DW-IDX] initialAttributes; /* Selection*/
    set FM0DM210.FK-MAT-NBR[FM0DW-IDX] initialAttributes; /* Material nbr*/
    set FM0DM210.FK-DEPT-MAT-DESC[FM0DW-IDX] initialAttributes; /* Material desc*/
    set FM0DM210.XCLCD[FM0DW-IDX] initialAttributes; /* Color code*/
    set FM0DM210.XCLDESC[FM0DW-IDX] initialAttributes; /* Color desc*/
    set FM0DM210.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] initialAttributes; /* Shipped qty*/
    set FM0DM210.XMU-MAT-UOM-CD[FM0DW-IDX] initialAttributes; /* Unit of measure*/
    set FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX] initialAttributes; /* Shipped date*/
    set FM0DM210.YMTCD[FM0DW-IDX] initialAttributes; /* Transportation code*/
    set FM0DM210.YMTABRV[FM0DW-IDX] initialAttributes; /* Transportation abrv*/
    set FM0DM210.FK-TRANS-COST-AMT[FM0DW-IDX] initialAttributes; /* Cost*/
    set FM0DM210.FK-PO-SHP-COMNT[FM0DW-IDX] initialAttributes; /* Ship comment*/
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  set FM0DM210.CATOAP initialAttributes; /* To application*/
  set FM0DM210.CAITEM initialAttributes; /* Application data*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0DM210.YMTCD[1] != "?" /* If not requested*/
   && FM0DM210.YMTCD[2] != "?" /* If not requested*/
   && FM0DM210.YMTCD[3] != "?" /* If not requested*/
   && FM0DM210.YMTCD[4] != "?") /* If not requested*/
    return;
  end
  ;
  ;
  ;
  ;
  FM0DW00.FM0DW-IDX = 1; /* Init index*/
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0DM210.YMTCD[FM0DW-IDX] == "?") /* YMT list requested*/
      ;
      if (converseVar.eventKey not enter) /* Enter not pressed*/
        ;
        FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
        converseLib.validationFailed(19); /* Pa/pf key may not be used*/
        exit stack; /* Exit to display the map*/
      end
    end
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of YMT codes.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 1; /* Init index*/
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0DM210.YMTCD[FM0DW-IDX] == "?") /* YMT list requested*/
      ;
      XPXX001(); /* Window initialization*/
      XX0XW02.XX0XWHDR = "TRANSPORTATION CODE"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
        XPYMT01(); /* Display the list*/
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FM0DM210.YMTCD = FM0DW01.YMTCD[FM0DW-IDX]; /* Restore prior code*/
      else
        FM0DM210.YMTCD[FM0DW-IDX] = YMTTBL.YMTCD[XX0XWPIX]; /* Selected code*/
      end
      ;
      set FM0DM210.YMTCD[FM0DW-IDX] cursor; /* Establish cursor position*/
    end
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "2400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0D-2400

// Verify entered fields
Function FM0D-2500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0DM210.CAITEM > " " /* Application data was entered*/
  )                        
    set FM0DM210.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify NXTPO request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    if (FM0DW00.FM0DW-NXTPO-IDX >= FM0DW00.FM0DW-NBR-PASSED-PO)
      ;
      converseLib.validationFailed(130); /* No more PO's to display*/
      FKWREC.XXX-MOD-ID = "2500"; /* Module identification*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0D-2510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0DM210.FK-VEND-CD == FM0DW01.FK-VEND-CD
   && FM0DM210.FK-FCTY-PO-DT == FM0DW01.FK-FCTY-PO-DT
   && FM0DM210.FM0DM-FK-NIKE-PO-YY == FM0DW01.FM0DM-FK-NIKE-PO-YY
   && FM0DM210.FM0DM-FK-NIKE-PO-PP == FM0DW01.FM0DM-FK-NIKE-PO-PP
   && FM0DM210.FM0DM-FK-NIKE-PO-DD == FM0DW01.FM0DM-FK-NIKE-PO-DD
   && FM0DM210.FY1FCTYC == FM0DW01.FY1FCTYC)
    ;
    FM0D-2520(); /* Verify detail*/
  else
    ;
    FM0D-2530(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0D-2500

// Verify scroll request
Function FM0D-2510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0DW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0DW00.XXXTSPAG >= FM0DW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "2510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0D-2510

// Verify detail data
Function FM0D-2520()
   /* ---------------------------------------------------------------*/
   /* Verify the detail lines.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-NBR-MAP-ROWS;
  ;
  while (FM0DW00.FM0DW-IDX > 0)
    ;
    /* ---------------------------------------------------------------*/
    /* If a line was selected, verify data.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0DM210.FM0DM-SELECT[FM0DW-IDX] == "S") /* If line selected*/
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the transportation code.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0DM210.YMTCD[FM0DW-IDX] in YMTTBL.YMTCD /* If code in table*/
       && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
        ;
         /* Next sentence*/
      else
        ;
        set FM0DM210.YMTCD[FM0DW-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
        converseLib.validationFailed(135); /* Transportation code is missing or*/
                                   /* invalid*/
      end
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the ship date - use TA0040.*/
      /* ---------------------------------------------------------------*/
      ;
      set TA2REC empty; /* Initialize ta2rec*/
      ;
      TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
      TA2REC.TA2GRTYP = "E"; /* Date format*/
      TA2REC.TA2GRGEN = FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX];
      ;
      try
        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      end /* Date validation routine*/
      ;
      if (sysVar.errorCode == "00000000") /* Call successful*/
        if (TA2REC.TA2RTNCD != 0)
          converseLib.validationFailed(84); /* Date missing or invalid*/
          FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
          set FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX] cursor, bold; /* Highlight*/
        end
      end
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the quantity shipped.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0DM210.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] <= 0) /* If qty <= 0*/
        ;
        converseLib.validationFailed(131); /* Value must be greater than 0*/
        FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
        set FM0DM210.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] cursor, bold;
      end
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* If a line was not selected, verify no data was changed.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0DM210.FM0DM-SELECT[FM0DW-IDX] != "S") /* If line not selected*/
      ;
      if (FM0DM210.FK-FCTY-PO-SHP-QTY[FM0DW-IDX]
       == FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] /* Same qty*/
       && FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX]    
       == FM0DW01.FK-ACTL-SHP-DT[FM0DW-IDX]     /* Same ship date*/
       && FM0DM210.YMTCD[FM0DW-IDX]             
       == FM0DW01.YMTCD[FM0DW-IDX]              /* Same transportation code*/
       && FM0DM210.FK-TRANS-COST-AMT[FM0DW-IDX] 
       == FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX]  /* Same trans cost*/
       && FM0DM210.FK-PO-SHP-COMNT[FM0DW-IDX]   
       == FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX]    /* Same comment*/
      )                                        
         /* Next sentence*/
      else
        ;
        set FM0DM210.FM0DM-SELECT[FM0DW-IDX] cursor, bold;
        FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
        converseLib.validationFailed(136); /* Enter 's' to add a row*/
      end
    end
    ;
    ;
    /* ---------------------------------------------------------------*/
    /* Verify select field = 's' or ' ';.*/
    /* ---------------------------------------------------------------*/
    ;
    if (FM0DM210.FM0DM-SELECT[FM0DW-IDX] == "S" /* If selected*/
     || FM0DM210.FM0DM-SELECT[FM0DW-IDX] == " ") /* Or blank*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0DM210.FM0DM-SELECT[FM0DW-IDX] cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2520"; /* Module identification*/
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
    end
    ;
    /* ---------------------------------------------------------------*/
    /* Decrement the index*/
    /* ---------------------------------------------------------------*/
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX - 1;
  end
  ;
  ;
end // end FM0D-2520

// Verify key data
Function FM0D-2530()
   /* ------------------------------------------------------------*/
   /* Verify the factory code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM210.FY1FCTYC == " ") /* If factory blank*/
    ;
    converseLib.validationFailed(121); /* Factory code missing or invalid*/
    FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
    set FM0DM210.FY1FCTYC cursor, bold; /* Highlight*/
  else
    ;
    FM0D-2531(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the PO date.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM210.FM0DM-FK-NIKE-PO-DD >= 1
   && FM0DM210.FM0DM-FK-NIKE-PO-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
    set FM0DM210.FM0DM-FK-NIKE-PO-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0DM210.FM0DM-FK-NIKE-PO-PP >= 1
   && FM0DM210.FM0DM-FK-NIKE-PO-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
    set FM0DM210.FM0DM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Call TA0040 to verify the order date.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FM0DM210.FK-FCTY-PO-DT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(84); /* Date missing or invalid*/
      FKWREC.XXX-MOD-ID = "2530"; /* Module identification*/
      set FM0DM210.FK-FCTY-PO-DT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor code.*/
   /* ------------------------------------------------------------*/
  ;
  FM0D-2532(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0D-2530

// Verify factory code
Function FM0D-2531()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0DM210.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0DM210.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2531"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2531"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-2531

// Verify vendor code
Function FM0D-2532()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0DM210.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0DM210.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "2532"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "2532"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-2532

// Process valid request
Function FM0D-2600()
   /* ------------------------------------------------------------*/
   /* If PF6 pressed, obtain the next vendor header and exit to*/
   /* re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    FM0DW00.FM0DW-NXTPO-IDX = FM0DW00.FM0DW-NXTPO-IDX + 1;
    ;
    FM0D-2610(); /* Select DCMPNT.VFVHDR01*/
    ;
     /* Format map header with PO header data*/
    ;
    FM0DM210.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0DM210.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0DW00.FM0DW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0DM210.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DW-FMAT-PO-YY;
    FM0DM210.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DW-FMAT-PO-PP;
    FM0DM210.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DW-FMAT-PO-DD;
    FM0DM210.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0DW00.XXXTSPAG = FM0DW00.XXXTSPAG - 1; /* Decrement page*/
    FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0DW00.XXXTSPAG = FM0DW00.XXXTSPAG + 1; /* Increment page*/
    FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM210.FK-VEND-CD != FM0DW01.FK-VEND-CD
   || FM0DM210.FK-FCTY-PO-DT != FM0DW01.FK-FCTY-PO-DT
   || FM0DM210.FM0DM-FK-NIKE-PO-YY != FM0DW01.FM0DM-FK-NIKE-PO-YY
   || FM0DM210.FM0DM-FK-NIKE-PO-PP != FM0DW01.FM0DM-FK-NIKE-PO-PP
   || FM0DM210.FM0DM-FK-NIKE-PO-DD != FM0DW01.FM0DM-FK-NIKE-PO-DD
   || FM0DM210.FY1FCTYC != FM0DW01.FY1FCTYC
  )
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process add request.*/
   /* ------------------------------------------------------------*/
  ;
  XX0XS01(); /* Get current date and time*/
  ;
  FM0DW00.FM0DW-IDX = 1; /* Reset the index*/
  FM0DW00.FM0DW-DATA-UPDATED-SW = "N"; /* Init data update switch*/
  ;
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* Check each row*/
    ;
    if (FM0DM210.FM0DM-SELECT[FM0DW-IDX] == "S") /* If line selected*/
      ;
      ;
      /* Get the XMG-COLR-GRP-CD for the current mtl/color*/
      ;
      FM0D-2620(); /* Declare DCMPNT.VMCOLR01*/
      FM0D-2630(); /* Fetch DCMPNT.VMCOLR01*/
      FM0D-2640(); /* Close DCMPNT.VMCOLR01*/
      ;
      ;
       /* Perform the insert*/
      ;
      FM0D-2650(); /* Check duplicate DCMPNT.VFVSHP01*/
      FM0D-2660(); /* Add DCMPNT.VFVSHP01*/
    end
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set 'update complete' message if the data was succesfully*/
   /* completed.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-DATA-UPDATED-SW == "Y") /* If data updated*/
    ;
    FKWREC.XXXMSGNO = 1; /* Update successfuly completed*/
    FKWREC.XXX-MOD-ID = "2600"; /* Module identification*/
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
  end
  ;
  ;
end // end FM0D-2600

// Select DCMPNT.VFVHDR01 ('S ')
Function FM0D-2610()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0DW00.FK-INTRN-PO-ID[FM0DW-NXTPO-IDX]; /* Internal PO id*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      set VFVHDR01 empty;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S  )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2610

// Declare DCMPNT.VMCOLR01
Function FM0D-2620()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the specified table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty; /* Clear storage record*/
  ;
  VMCOLR01.FK-MAT-NBR = FM0DM210.FK-MAT-NBR[FM0DW-IDX]; /* Material nbr*/
  VMCOLR01.XCLCD = FM0DM210.XCLCD[FM0DW-IDX]; /* Color code*/
  ;
  ;
  try
    call "IO6210" ("S2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  FKWREC.XXX-MOD-ID = "2620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE DCMPNT.VMCOLR01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2620

// Fetch DCMPNT.VMCOLR01
Function FM0D-2630()
   /* ------------------------------------------------------------*/
   /* Fetch a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6210" ("N2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      VMCOLR01.XMG-COLR-GRP-CD = "**";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  FKWREC.XXX-MOD-ID = "2630"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VMCOLR01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2630

// Close DCMPNT.VMCOLR01
Function FM0D-2640()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the specified table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO6210" ("C2", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  FKWREC.XXX-MOD-ID = "2640"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VMCOLR01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2640

// Select DCMPNT.VFVSHP01
Function FM0D-2650()
   /* ------------------------------------------------------------*/
   /* Select the requested row on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVSHP01 empty; /* Clear storage record*/
  ;
  VFVSHP01.FK-INTRN-PO-ID = FM0DW01.FK-INTRN-PO-ID; /* Ship qty*/
  VFVSHP01.FK-MAT-NBR = FM0DM210.FK-MAT-NBR[FM0DW-IDX]; /* Material nbr*/
  VFVSHP01.XMG-COLR-GRP-CD = VMCOLR01.XMG-COLR-GRP-CD; /* Color group*/
  VFVSHP01.XCLCD = FM0DM210.XCLCD[FM0DW-IDX]; /* Color code*/
  ;
  FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX]; /* Actual ship date - reformat it*/
  FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
  FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
  FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
  if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
    FM0DW00.FM0DW-FMAT-ORDER-CC = 20;
  else
    FM0DW00.FM0DW-FMAT-ORDER-CC = 19;
  end
  VFVSHP01.FK-ACTL-SHP-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* Actual ship date*/
  ;
  ;
  try
    call "IO6850" ("S ", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all database changes*/
      FKWREC.XXXMSGNO = 16; /* Already row on table*/
      FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
      set FM0DM210.FM0DM-SELECT[FM0DW-IDX] cursor, bold;
      set FM0DM210.FK-MAT-NBR[FM0DW-IDX] bold;
      set FM0DM210.XCLCD[FM0DW-IDX] bold;
      set FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX] bold;
      exit stack; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return; /* Exit to display the map*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  FKWREC.XXX-MOD-ID = "2650"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DCMPNT.VFVSHP01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2650

// Insert DCMPNT.VFVSHP01
Function FM0D-2660()
   /* ------------------------------------------------------------*/
   /* Select the requested row on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVSHP01 empty; /* Clear storage record*/
  ;
  VFVSHP01.FK-INTRN-PO-ID = FM0DW01.FK-INTRN-PO-ID; /* Ship qty*/
  VFVSHP01.FK-MAT-NBR = FM0DM210.FK-MAT-NBR[FM0DW-IDX]; /* Material nbr*/
  VFVSHP01.XMG-COLR-GRP-CD = VMCOLR01.XMG-COLR-GRP-CD; /* Color group*/
  VFVSHP01.XCLCD = FM0DM210.XCLCD[FM0DW-IDX]; /* Color code*/
  ;
  FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM210.FK-ACTL-SHP-DT[FM0DW-IDX]; /* Actual ship date - reformat it*/
  FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
  FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
  FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
  if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
    FM0DW00.FM0DW-FMAT-ORDER-CC = 20;
  else
    FM0DW00.FM0DW-FMAT-ORDER-CC = 19;
  end
  VFVSHP01.FK-ACTL-SHP-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* Actual ship date*/
  ;
  VFVSHP01.YMTCD = FM0DM210.YMTCD[FM0DW-IDX]; /* Mode of transportation*/
  VFVSHP01.FK-TRANS-COST-AMT = FM0DM210.FK-TRANS-COST-AMT[FM0DW-IDX]; /* Cost of transportation*/
  VFVSHP01.FK-FCTY-PO-SHP-QTY = FM0DM210.FK-FCTY-PO-SHP-QTY[FM0DW-IDX]; /* Ship qty*/
  VFVSHP01.FK-PO-SHP-COMNT = FM0DM210.FK-PO-SHP-COMNT[FM0DW-IDX]; /* Ship comment*/
  ;
  VFVSHP01.ZZZSDT = XX0XW01.XX0XWDAT;
  VFVSHP01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VFVSHP01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VFVSHP01.ZZZCHGCT = 0;
  ;
  ;
  try
    call "IO6850" ("A ", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0DW00.FM0DW-DATA-UPDATED-SW = "Y"; /* Data was updated*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback database changes*/
  ;
  FKWREC.XXX-MOD-ID = "2660"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT DCMPNT.VFVSHP01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-2660

// Process Chg map
Function FM0D-3000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0D-3100(); /* Obtain the data to display*/
  ;
  FM0D-3200(); /* Format and display the map*/
  ;
  FM0D-3300(); /* Check attention identifier*/
  ;
  FM0D-3400(); /* Reset fields to normal intensity*/
  ;
  FM0D-3500(); /* Verify the entered data*/
  ;
  FM0D-3600(); /* Process valid input request*/
  ;
  ;
end // end FM0D-3000

// Obtain data to display
Function FM0D-3100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.XXXTSLEN = 1067; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0DW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N"; /* PO header found switch*/
  FM0DW00.FM0DW-PO-DTL-FOUND-SW = "N"; /* PO detail found switch*/
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-3110(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-3120(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the factory/vendor PO header record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-3130(); /* Select DCMPNT.VFVHDR01*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare and process a cursor to get all po shipment records*/
   /* from DCMPNT.VFVSHP01.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 0; /* Initialize index*/
  ;
  if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If PO hdr was found*/
    ;
    FM0DW00.FM0DW-END-VFVSHP01-CSR-SW = "N";
    ;
    FM0D-3140(); /* Declare DCMPNT.VFVSHP01 cursor*/
    FM0D-3150(); /* Fetch DCMPNT.VFVSHP01 cursor*/
    ;
    while (FM0DW00.FM0DW-END-VFVSHP01-CSR-SW != "Y")
      ;
      FM0D-3160(); /* Select DCMPNT.VMATRL01*/
      ;
      if (VFVSHP01.XCLCD in XCLTBL.XCLCD /* If color in corp color table*/
       && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
        FM0DW00.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Save desc*/
      else
        FM0DW00.XCLDESC = "************"; /* Otherwise move **/
      end
      ;
      if (VFVSHP01.YMTCD in YMTTBL.YMTCD /* If trans code in table*/
       && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
        FM0DW00.YMTABRV = YMTTBL.YMTABRV[sysVar.arrayIndex]; /* Save abrv*/
      else
        FM0DW00.YMTABRV = "******"; /* Otherwise move **/
      end
      ;
      FM0D-3170(); /* Format a display storage line*/
      ;
      if (FM0DW00.FM0DW-IDX >= 4) /* If 4th line added to page*/
        FM0D-3180(); /* Add page temp store page queue*/
        FM0DW00.FM0DW-IDX = 0; /* Reset index*/
      end
      ;
      FM0D-3150(); /* Fetch DCMPNT.VFVSHP01 cursor*/
    end
    ;
    FM0D-3190(); /* Close DCMPNT.VFVSHP01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save any partially formatted data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-IDX > 0) /* If line(s) were formatted*/
    ;
    FM0D-3180(); /* Add page temp store page queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If data was found, save map header information.  Otherwise,*/
   /* set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If PO header found*/
      ;
      FM0D-3171(); /* Format hdr only to display storage*/
      FM0D-3180(); /* Add page to temp store page queue*/
    end
    ;
    converseLib.validationFailed(18); /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "3100"; /* Module identification*/
  else
    ;
    FM0DW00.FM0DW-PO-DTL-FOUND-SW = "Y"; /* PO detail found*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-REQUEST-DATA-SW = "N";
  FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0D-3100

// Purge any temporary storage
Function FM0D-3110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0DW01 empty; /* m310 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0DW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-3110

// Select DCMPNT.VVNDR001
Function FM0D-3120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0DM310.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0DW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0DW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "3120 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-3120

// Select DCMPNT.VFVHDR01 ('SA')
Function FM0D-3130()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-VEND-CD = FM0DM310.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0DM310.FY1FCTYC; /* Factory*/
  ;
  FM0DW00.FM0DW-FMAT-PO-YY = FM0DM310.FM0DM-FK-NIKE-PO-YY;
  FM0DW00.FM0DW-FMAT-PO-PP = FM0DM310.FM0DM-FK-NIKE-PO-PP;
  FM0DW00.FM0DW-FMAT-PO-DD = FM0DM310.FM0DM-FK-NIKE-PO-DD;
  if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
    FM0DW-FMAT-PO-CC = 20;
  else
    FM0DW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
  ;
  FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM310.FK-FCTY-PO-DT;
  FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
  FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
  FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
  if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
    FM0DW00.FM0DW-FMAT-ORDER-CC = 20;
  else
    FM0DW00.FM0DW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SA"; /* Select alt*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0DW00.FM0DW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N"; /* PO was not found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (SA)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-3130

// Decl DCMPNT.VFVSHP01 csr
Function FM0D-3140()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVSHP01 empty; /* Clear storage record*/
  ;
  VFVSHP01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  ;
  try
    call "IO6850" ("S1", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECL DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-3140

// Fetch DCMPNT.VFVSHP01 csr
Function FM0D-3150()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6850" ("N1", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0DW00.FM0DW-END-VFVSHP01-CSR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-3150

// Select DCMPNT.VMATRL01
Function FM0D-3160()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Clear storage record*/
  ;
  VMATRL01.FK-MAT-NBR = VFVSHP01.FK-MAT-NBR; /* Material nbr*/
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3160"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVITM01  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-3160

// Save data in disp storage
Function FM0D-3170()
   /* --------------------------------------------------------------*/
   /* Increment the line index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-IDX == 1) /* If first line on page*/
    ;
    FM0DW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID; /* Intrn po id*/
    FM0DW01.FK-VEND-CD = FM0DM310.FK-VEND-CD; /* Vendor*/
    FM0DW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FM0DW01.FK-FCTY-PO-DT = FM0DM310.FK-FCTY-PO-DT; /* PO date*/
    FM0DW01.FM0DM-FK-NIKE-PO-YY = FM0DM310.FM0DM-FK-NIKE-PO-YY;
    FM0DW01.FM0DM-FK-NIKE-PO-PP = FM0DM310.FM0DM-FK-NIKE-PO-PP;
    FM0DW01.FM0DM-FK-NIKE-PO-DD = FM0DM310.FM0DM-FK-NIKE-PO-DD;
    FM0DW01.FY1FCTYC = FM0DM310.FY1FCTYC; /* Factory*/
    FM0DW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
    FM0DW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
    FM0DW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
    FM0DW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
    FM0DW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW01.FK-MAT-NBR[FM0DW-IDX] = VFVSHP01.FK-MAT-NBR; /* Material nbr*/
  FM0DW01.FK-DEPT-MAT-DESC[FM0DW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0DW01.XCLCD[FM0DW-IDX] = VFVSHP01.XCLCD; /* Color code*/
  FM0DW01.XCLDESC[FM0DW-IDX] = FM0DW00.XCLDESC; /* Color desc*/
  FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] = VFVSHP01.FK-FCTY-PO-SHP-QTY; /* Shipped qty*/
  FM0DW01.XMU-MAT-UOM-CD[FM0DW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Unit of measure*/
  FM0DW01.FK-ACTL-SHP-DT[FM0DW-IDX] = VFVSHP01.FK-ACTL-SHP-DT; /* Shipped date*/
  FM0DW01.YMTCD[FM0DW-IDX] = VFVSHP01.YMTCD; /* Mode of transportation*/
  FM0DW01.YMTABRV[FM0DW-IDX] = FM0DW00.YMTABRV; /* Transportation abrv*/
  FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX] = VFVSHP01.FK-TRANS-COST-AMT; /* Transportation cost*/
  FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX] = VFVSHP01.FK-PO-SHP-COMNT; /* Shipment comment*/
  ;
  FM0DW01.VFVSHP01-GROUP[FM0DW-IDX] = VFVSHP01.VFVSHP01-GROUP; /* Save entire DCMPNT.VFVSHP01*/
  ;
  ;
end // end FM0D-3170

// Save hdr only in disp storage
Function FM0D-3171()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0DW01 empty; /* Init entire record*/
  ;
  FM0DW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID; /* Intrn po id*/
  FM0DW01.FK-VEND-CD = FM0DM310.FK-VEND-CD; /* Vendor*/
  FM0DW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
  FM0DW01.FK-FCTY-PO-DT = FM0DM310.FK-FCTY-PO-DT; /* PO date*/
  FM0DW01.FM0DM-FK-NIKE-PO-YY = FM0DM310.FM0DM-FK-NIKE-PO-YY;
  FM0DW01.FM0DM-FK-NIKE-PO-PP = FM0DM310.FM0DM-FK-NIKE-PO-PP;
  FM0DW01.FM0DM-FK-NIKE-PO-DD = FM0DM310.FM0DM-FK-NIKE-PO-DD;
  FM0DW01.FY1FCTYC = FM0DM310.FY1FCTYC; /* Factory*/
  FM0DW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
  FM0DW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
  FM0DW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
  FM0DW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
  FM0DW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
end // end FM0D-3171

// Add page to temporary storage
Function FM0D-3180()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW01.XXXTSLEN = FM0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0DW01 empty; /* m310 display storage*/
    ;
    FM0DW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3180"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-3180

// Close DCMPNT.VFVSHP01 csr
Function FM0D-3190()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6850" ("C1", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3190"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-3190

// Format and converse CHG map
Function FM0D-3200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-FMAT-MAP-SW == "Y" /* Format requested*/
  )                                   
    if (converseVar.validationMsgNum == 0   /* If no errors*/
     || (converseVar.validationMsgNum == 18 /* No data to display*/
     && FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y")) /* And po hdr found*/
      ;
      FM0D-3210(); /* Format the map*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DM310.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0DM310.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0DM310.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0DM310 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0DM310.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0DM310.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0DM310.FK-VEND-SNM = FM0DW00.FK-VEND-SNM;
  ;
   /* ------------------------------------------------------------*/
   /* Set header dark if no data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "N") /* No header data found*/
    ;
    set FM0DM310.XXXTSPAG invisible, skip;
    set FM0DM310.TA5TSQIX invisible, skip;
    set FM0DM310.FK-FCTY-PO-ID invisible, skip;
    set FM0DM310.FK-EST-SHP-DT1 invisible, skip;
    set FM0DM310.FK-EST-SHP-DT2 invisible, skip;
    set FM0DM310.FK-EST-SHP-DT3 invisible, skip;
    set FM0DM310.FK-FCTY-PO-COMNT invisible, skip;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-DTL-FOUND-SW == "N") /* If no p.o. detail found*/
    ;
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      set FM0DM310.FM0DM-SELECT[FM0DW-IDX] invisible, skip;
      set FM0DM310.FK-MAT-NBR[FM0DW-IDX] invisible, skip;
      set FM0DM310.FK-DEPT-MAT-DESC[FM0DW-IDX] invisible, skip;
      set FM0DM310.XCLCD[FM0DW-IDX] invisible, skip;
      set FM0DM310.XCLDESC[FM0DW-IDX] invisible, skip;
      set FM0DM310.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] invisible, skip;
      set FM0DM310.XMU-MAT-UOM-CD[FM0DW-IDX] invisible, skip;
      set FM0DM310.FK-ACTL-SHP-DT[FM0DW-IDX] invisible, skip;
      set FM0DM310.YMTCD[FM0DW-IDX] invisible, skip;
      set FM0DM310.YMTABRV[FM0DW-IDX] invisible, skip;
      set FM0DM310.FK-TRANS-COST-AMT[FM0DW-IDX] invisible, skip;
      set FM0DM310.FM0DM-COMNT-LIT[FM0DW-IDX] invisible, skip;
      set FM0DM310.FK-PO-SHP-COMNT[FM0DW-IDX] invisible, skip;
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but at least partial data exists).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-DTL-FOUND-SW == "Y") /* If p.o. detail found*/
    ;
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      if (FM0DM310.FK-MAT-NBR[FM0DW-IDX] == " ") /* No data on this line*/
        ;
        set FM0DM310.FM0DM-SELECT[FM0DW-IDX] invisible, skip;
        set FM0DM310.FK-MAT-NBR[FM0DW-IDX] invisible, skip;
        set FM0DM310.FK-DEPT-MAT-DESC[FM0DW-IDX] invisible, skip;
        set FM0DM310.XCLCD[FM0DW-IDX] invisible, skip;
        set FM0DM310.XCLDESC[FM0DW-IDX] invisible, skip;
        set FM0DM310.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] invisible, skip;
        set FM0DM310.XMU-MAT-UOM-CD[FM0DW-IDX] invisible, skip;
        set FM0DM310.FK-ACTL-SHP-DT[FM0DW-IDX] invisible, skip;
        set FM0DM310.YMTCD[FM0DW-IDX] invisible, skip;
        set FM0DM310.YMTABRV[FM0DW-IDX] invisible, skip;
        set FM0DM310.FK-TRANS-COST-AMT[FM0DW-IDX] invisible, skip;
        set FM0DM310.FM0DM-COMNT-LIT[FM0DW-IDX] invisible, skip;
        set FM0DM310.FK-PO-SHP-COMNT[FM0DW-IDX] invisible, skip;
      end
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* If no message to display*/
    ;
    if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If po hdr found*/
      set FM0DM310.FM0DM-SELECT[1] cursor;
    else
      set FM0DM310.FK-VEND-CD cursor;
    end
  else
    if (converseVar.validationMsgNum == 18 /* No data to display*/
     || converseVar.validationMsgNum == 1) /* Update complete*/
      set FM0DM310.FK-VEND-CD cursor;
    end
  end
  ;
  ;
  converse FM0DM310 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0DM310.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0DM310.CAITEM; /* Application data*/
  ;
  ;
end // end FM0D-3200

// Format the data to display
Function FM0D-3210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0DM310 initial; /* Initialize map*/
  ;
  FM0DW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0DW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0DW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0DW00.XXXTSPAG > FM0DW00.TA5TSQIX) /* Desired page > highest*/
        FM0DW00.XXXTSPAG = FM0DW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0D-3211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DM310.XXXTSPAG = FM0DW00.XXXTSPAG; /* Current page*/
  FM0DM310.TA5TSQIX = FM0DW00.TA5TSQIX; /* Max page*/
  ;
  FM0DM310.FK-VEND-CD = FM0DW01.FK-VEND-CD; /* Vendor*/
  FM0DM310.FK-FCTY-PO-DT = FM0DW01.FK-FCTY-PO-DT;
  FM0DM310.FM0DM-FK-NIKE-PO-YY = FM0DW01.FM0DM-FK-NIKE-PO-YY;
  FM0DM310.FM0DM-FK-NIKE-PO-PP = FM0DW01.FM0DM-FK-NIKE-PO-PP;
  FM0DM310.FM0DM-FK-NIKE-PO-DD = FM0DW01.FM0DM-FK-NIKE-PO-DD;
  FM0DM310.FY1FCTYC = FM0DW01.FY1FCTYC;
  FM0DM310.FK-FCTY-PO-ID = FM0DW01.FK-FCTY-PO-ID;
  FM0DM310.FK-EST-SHP-DT1 = FM0DW01.FK-EST-SHP-DT1;
  FM0DM310.FK-EST-SHP-DT2 = FM0DW01.FK-EST-SHP-DT2;
  FM0DM310.FK-EST-SHP-DT3 = FM0DW01.FK-EST-SHP-DT3;
  FM0DM310.FK-FCTY-PO-COMNT = FM0DW01.FK-FCTY-PO-COMNT;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 1; /* Initialize idx*/
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
    ;
    FM0DM310.FK-MAT-NBR[FM0DW-IDX] = FM0DW01.FK-MAT-NBR[FM0DW-IDX]; /* Material nbr*/
    FM0DM310.FK-DEPT-MAT-DESC[FM0DW-IDX] = FM0DW01.FK-DEPT-MAT-DESC[FM0DW-IDX]; /* Material desc*/
    FM0DM310.XCLCD[FM0DW-IDX] = FM0DW01.XCLCD[FM0DW-IDX]; /* Color code*/
    FM0DM310.XCLDESC[FM0DW-IDX] = FM0DW01.XCLDESC[FM0DW-IDX]; /* Color desc*/
    FM0DM310.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] = FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX]; /* Shipped qty*/
    FM0DM310.XMU-MAT-UOM-CD[FM0DW-IDX] = FM0DW01.XMU-MAT-UOM-CD[FM0DW-IDX]; /* UOM*/
    FM0DM310.FK-ACTL-SHP-DT[FM0DW-IDX] = FM0DW01.FK-ACTL-SHP-DT[FM0DW-IDX]; /* Ship date*/
    FM0DM310.YMTCD[FM0DW-IDX] = FM0DW01.YMTCD[FM0DW-IDX]; /* Transportation code*/
    FM0DM310.YMTABRV[FM0DW-IDX] = FM0DW01.YMTABRV[FM0DW-IDX]; /* Transportation abrv*/
    FM0DM310.FK-TRANS-COST-AMT[FM0DW-IDX] = FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX]; /* Transportation cost*/
   /* Shipment comment*/
    FM0DM310.FK-PO-SHP-COMNT[FM0DW-IDX] = FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX];
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
end // end FM0D-3210

// Read page from temp storage
Function FM0D-3211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW01.XXXTSLEN = FM0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0DW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "3211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M310"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-3211

// Check attention identifier
Function FM0D-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0DM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0DM310.FY1FCTYC; /* Factory*/
    ;
    if (FM0DM310.FM0DM-FK-NIKE-PO-YY == 0
     && FM0DM310.FM0DM-FK-NIKE-PO-PP == 0
     && FM0DM310.FM0DM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-PO-YY = FM0DM310.FM0DM-FK-NIKE-PO-YY;
      FM0DW00.FM0DW-FMAT-PO-PP = FM0DM310.FM0DM-FK-NIKE-PO-PP;
      FM0DW00.FM0DW-FMAT-PO-DD = FM0DM310.FM0DM-FK-NIKE-PO-DD;
      if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
        FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT; /**/
    end
    ;
    if (FM0DM310.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM310.FK-FCTY-PO-DT;
      FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
      FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
      FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
      if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
        FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0D"; /* to applicaiton*/
    COMMAREA.CAITEM = "C"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0DM310.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM310.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FM0DM310.FK-VEND-CD; /* Vendor*/
      FKWREC.FY1FCTYC = FM0DM310.FY1FCTYC; /* Factory*/
      ;
      if (FM0DM310.FM0DM-FK-NIKE-PO-YY == 0
       && FM0DM310.FM0DM-FK-NIKE-PO-PP == 0
       && FM0DM310.FM0DM-FK-NIKE-PO-DD == 0)
        ;
        FKWREC.PC3POIDT = 0;
      else
        ;
        FM0DW00.FM0DW-FMAT-PO-YY = FM0DM310.FM0DM-FK-NIKE-PO-YY;
        FM0DW00.FM0DW-FMAT-PO-PP = FM0DM310.FM0DM-FK-NIKE-PO-PP;
        FM0DW00.FM0DW-FMAT-PO-DD = FM0DM310.FM0DM-FK-NIKE-PO-DD;
        if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
          FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
        else
          FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
        end
        FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
      end
      ;
      if (FM0DM310.FK-FCTY-PO-DT == 0)
        ;
        FKWREC.FK-FCTY-PO-DT = 0;
      else
        ;
        FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM310.FK-FCTY-PO-DT;
        FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
        FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
        FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
        if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
          FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
        else
          FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
        end
        FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT;
      end
      ;
      COMMAREA.CATOAP = FM0DM310.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0DM310.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0DM310.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* POMNT requested*/
   || converseVar.eventKey is pf15 /* POSUM requested*/
   || converseVar.eventKey is pf16 /* POLSTequested*/
   || converseVar.eventKey is pf17) /* POMLT requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0DM310"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0DM310.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0B"; /* TO application*/
      COMMAREA.CAITEM = FM0DM310.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FM0J"; /* TO application*/
      COMMAREA.CAITEM = FM0DM310.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FM0K"; /* TO application*/
      COMMAREA.CAITEM = FM0DM310.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0L"; /* TO application*/
      COMMAREA.CAITEM = FM0DM310.CAITEM; /* Application find code*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0DM310.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0DM310.FY1FCTYC; /* Factory*/
    ;
    if (FM0DM310.FM0DM-FK-NIKE-PO-YY == 0
     && FM0DM310.FM0DM-FK-NIKE-PO-PP == 0
     && FM0DM310.FM0DM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-PO-YY = FM0DM310.FM0DM-FK-NIKE-PO-YY;
      FM0DW00.FM0DW-FMAT-PO-PP = FM0DM310.FM0DM-FK-NIKE-PO-PP;
      FM0DW00.FM0DW-FMAT-PO-DD = FM0DM310.FM0DM-FK-NIKE-PO-DD;
      if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
        FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
    end
    ;
    if (FM0DM310.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM310.FK-FCTY-PO-DT;
      FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
      FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
      FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
      if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
        FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTPO requested*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8   /* FWRD requested*/
  )                                 
    FKWREC.XXX-MOD-ID = "3300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0D-3300

// Reset Highlighted fields
Function FM0D-3400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0DM310.XXXTSPAG initialAttributes; /* Page nbr*/
  set FM0DM310.TA5TSQIX initialAttributes; /* Max page*/
  ;
  set FM0DM310.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FM0DM310.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FM0DM310.FK-FCTY-PO-DT initialAttributes; /* Order date*/
  set FM0DM310.FM0DM-FK-NIKE-PO-YY initialAttributes; /* PO year*/
  set FM0DM310.FM0DM-FK-NIKE-PO-PP initialAttributes; /* PO prod month*/
  set FM0DM310.FM0DM-FK-NIKE-PO-DD initialAttributes; /* PO delivery month*/
  set FM0DM310.FY1FCTYC initialAttributes; /* Factory*/
  set FM0DM310.FK-FCTY-PO-ID initialAttributes; /* Factory PO*/
  set FM0DM310.FK-EST-SHP-DT1 initialAttributes; /* Est ship date 1*/
  set FM0DM310.FK-EST-SHP-DT2 initialAttributes; /* Est ship date 2*/
  set FM0DM310.FK-EST-SHP-DT3 initialAttributes; /* Est ship date 3*/
  set FM0DM310.FK-FCTY-PO-COMNT initialAttributes; /* PO comment*/
  ;
  ;
  FM0DW00.FM0DW-IDX = 1; /* Initialize index*/
  ;
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* For each line*/
    ;
    set FM0DM310.FM0DM-SELECT[FM0DW-IDX] initialAttributes; /* Selection*/
    set FM0DM310.FK-MAT-NBR[FM0DW-IDX] initialAttributes; /* Material nbr*/
    set FM0DM310.FK-DEPT-MAT-DESC[FM0DW-IDX] initialAttributes; /* Material desc*/
    set FM0DM310.XCLCD[FM0DW-IDX] initialAttributes; /* Color code*/
    set FM0DM310.XCLDESC[FM0DW-IDX] initialAttributes; /* Color desc*/
    set FM0DM310.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] initialAttributes; /* Shipped qty*/
    set FM0DM310.XMU-MAT-UOM-CD[FM0DW-IDX] initialAttributes; /* Unit of measure*/
    set FM0DM310.FK-ACTL-SHP-DT[FM0DW-IDX] initialAttributes; /* Shipped date*/
    set FM0DM310.YMTCD[FM0DW-IDX] initialAttributes; /* Transportation code*/
    set FM0DM310.YMTABRV[FM0DW-IDX] initialAttributes; /* Transportation abrv*/
    set FM0DM310.FK-TRANS-COST-AMT[FM0DW-IDX] initialAttributes; /* Cost*/
    set FM0DM310.FK-PO-SHP-COMNT[FM0DW-IDX] initialAttributes; /* Ship comment*/
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  set FM0DM310.CATOAP initialAttributes; /* To application*/
  set FM0DM310.CAITEM initialAttributes; /* Application data*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0DM310.YMTCD[1] != "?" /* If not requested*/
   && FM0DM310.YMTCD[2] != "?" /* If not requested*/
   && FM0DM310.YMTCD[3] != "?" /* If not requested*/
   && FM0DM310.YMTCD[4] != "?") /* If not requested*/
    return;
  end
  ;
  ;
  ;
  ;
  FM0DW00.FM0DW-IDX = 1; /* Init index*/
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0DM310.YMTCD[FM0DW-IDX] == "?") /* YMT list requested*/
      ;
      if (converseVar.eventKey not enter) /* Enter not pressed*/
        ;
        FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
        converseLib.validationFailed(19); /* Pa/pf key may not be used*/
        exit stack; /* Exit to display the map*/
      end
    end
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of YMT codes.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 1; /* Init index*/
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* For each line*/
    ;
    if (FM0DM310.YMTCD[FM0DW-IDX] == "?") /* YMT list requested*/
      ;
      XPXX001(); /* Window initialization*/
      XX0XW02.XX0XWHDR = "TRANSPORTATION CODE"; /* Heading*/
      ;
      while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
        XPYMT01(); /* Display the list*/
      end
      ;
      if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
        FM0DM310.YMTCD = FM0DW01.YMTCD[FM0DW-IDX]; /* Restore prior code*/
      else
        FM0DM310.YMTCD[FM0DW-IDX] = YMTTBL.YMTCD[XX0XWPIX]; /* Selected code*/
      end
      ;
      set FM0DM310.YMTCD[FM0DW-IDX] cursor; /* Establish cursor position*/
    end
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "3400"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0D-3400

// Verify entered fields
Function FM0D-3500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0DM310.CAITEM > " " /* Application data was entered*/
  )                        
    set FM0DM310.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify NXTPO request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    if (FM0DW00.FM0DW-NXTPO-IDX >= FM0DW00.FM0DW-NBR-PASSED-PO)
      ;
      converseLib.validationFailed(130); /* No more PO's to display*/
      FKWREC.XXX-MOD-ID = "3500"; /* Module identification*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0D-3510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0DM310.FK-VEND-CD == FM0DW01.FK-VEND-CD
   && FM0DM310.FK-FCTY-PO-DT == FM0DW01.FK-FCTY-PO-DT
   && FM0DM310.FM0DM-FK-NIKE-PO-YY == FM0DW01.FM0DM-FK-NIKE-PO-YY
   && FM0DM310.FM0DM-FK-NIKE-PO-PP == FM0DW01.FM0DM-FK-NIKE-PO-PP
   && FM0DM310.FM0DM-FK-NIKE-PO-DD == FM0DW01.FM0DM-FK-NIKE-PO-DD
   && FM0DM310.FY1FCTYC == FM0DW01.FY1FCTYC)
    ;
    FM0D-3520(); /* Verify detail*/
  else
    ;
    FM0D-3530(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0D-3500

// Verify scroll request
Function FM0D-3510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0DW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0DW00.XXXTSPAG >= FM0DW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "3510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0D-3510

// Verify detail data
Function FM0D-3520()
   /* ---------------------------------------------------------------*/
   /* Verify the detail lines.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-NBR-MAP-ROWS;
  ;
  while (FM0DW00.FM0DW-IDX > 0)
    ;
    if (FM0DM310.FK-MAT-NBR[FM0DW-IDX] > " ") /* If data on line*/
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the transportation code.*/
      /* ---------------------------------------------------------------*/
      ;
      if (FM0DM310.YMTCD[FM0DW-IDX] in YMTTBL.YMTCD /* If code in table*/
       && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
        ;
         /* Next sentence*/
      else
        ;
        set FM0DM310.YMTCD[FM0DW-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
        converseLib.validationFailed(135); /* Transportation code is missing or*/
                                     /* invalid*/
      end
      ;
      ;
      /* ---------------------------------------------------------------*/
      /* Verify the select field.*/
      /* ---------------------------------------------------------------*/
      ;
       /* ===> Verify data changed if line selected*/
      ;
      if (FM0DM310.FK-FCTY-PO-SHP-QTY[FM0DW-IDX]
       == FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] /* Same qty*/
       && FM0DM310.YMTCD[FM0DW-IDX]             
       == FM0DW01.YMTCD[FM0DW-IDX]              /* Same transportation code*/
       && FM0DM310.FK-TRANS-COST-AMT[FM0DW-IDX] 
       == FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX]  /* Same trans cost*/
       && FM0DM310.FK-PO-SHP-COMNT[FM0DW-IDX]   
       == FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX]    /* Same comment*/
       && FM0DM310.FM0DM-SELECT[FM0DW-IDX] == "S") /* And line selected*/
        ;
        set FM0DM310.FM0DM-SELECT[FM0DW-IDX] cursor, bold;
        FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
        converseLib.validationFailed(25); /* No changes made to this row*/
      end
      ;
       /* ===> Verify line selected if data changed*/
      ;
      if (FM0DM310.FK-FCTY-PO-SHP-QTY[FM0DW-IDX]
       == FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] /* Same qty*/
       && FM0DM310.YMTCD[FM0DW-IDX]             
       == FM0DW01.YMTCD[FM0DW-IDX]              /* Same transportation code*/
       && FM0DM310.FK-TRANS-COST-AMT[FM0DW-IDX] 
       == FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX]  /* Same trans cost*/
       && FM0DM310.FK-PO-SHP-COMNT[FM0DW-IDX]   
       == FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX]    /* Same comment*/
      )                                        
         /* Next sentence*/
      else
        ;
        if (FM0DM310.FM0DM-SELECT[FM0DW-IDX] != "S") /* Line not selected*/
          ;
          set FM0DM310.FM0DM-SELECT[FM0DW-IDX] cursor, bold;
          FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
          converseLib.validationFailed(24); /* Enter 's' to change a row*/
        end
      end
      ;
       /* ===> Verify line selected with an 's'*/
      ;
      if (FM0DM310.FM0DM-SELECT[FM0DW-IDX] == "S" /* If selected*/
       || FM0DM310.FM0DM-SELECT[FM0DW-IDX] == " ") /* Or blank*/
        ;
         /* Next sentence*/
      else
        ;
        set FM0DM310.FM0DM-SELECT[FM0DW-IDX] cursor, bold; /* Highlight*/
        FKWREC.XXX-MOD-ID = "3520"; /* Module identification*/
        converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
      end
    end
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX - 1;
  end
  ;
  ;
end // end FM0D-3520

// Verify key data
Function FM0D-3530()
   /* ------------------------------------------------------------*/
   /* Verify the factory code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM310.FY1FCTYC == " ") /* If factory blank*/
    ;
    converseLib.validationFailed(121); /* Factory code missing or invalid*/
    FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
    set FM0DM310.FY1FCTYC cursor, bold; /* Highlight*/
  else
    ;
    FM0D-3531(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the PO date.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM310.FM0DM-FK-NIKE-PO-DD >= 1
   && FM0DM310.FM0DM-FK-NIKE-PO-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
    set FM0DM310.FM0DM-FK-NIKE-PO-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0DM310.FM0DM-FK-NIKE-PO-PP >= 1
   && FM0DM310.FM0DM-FK-NIKE-PO-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
    set FM0DM310.FM0DM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Call TA0040 to verify the order date.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FM0DM310.FK-FCTY-PO-DT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(84); /* Date missing or invalid*/
      FKWREC.XXX-MOD-ID = "3530"; /* Module identification*/
      set FM0DM310.FK-FCTY-PO-DT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor code.*/
   /* ------------------------------------------------------------*/
  ;
  FM0D-3532(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0D-3530

// Verify factory code
Function FM0D-3531()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0DM310.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0DM310.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3531"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3531"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-3531

// Verify vendor code
Function FM0D-3532()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0DM310.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0DM310.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "3532"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3532"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-3532

// Process valid request
Function FM0D-3600()
   /* ------------------------------------------------------------*/
   /* If PF6 pressed, obtain the next vendor header and exit to*/
   /* re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf7 pressed*/
    ;
    FM0DW00.FM0DW-NXTPO-IDX = FM0DW00.FM0DW-NXTPO-IDX + 1;
    ;
    FM0D-3610(); /* Select DCMPNT.VFVHDR01*/
    ;
     /* Format map header with PO header data*/
    ;
    FM0DM310.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0DM310.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0DW00.FM0DW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0DM310.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DW-FMAT-PO-YY;
    FM0DM310.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DW-FMAT-PO-PP;
    FM0DM310.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DW-FMAT-PO-DD;
    FM0DM310.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0DW00.XXXTSPAG = FM0DW00.XXXTSPAG - 1; /* Decrement page*/
    FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0DW00.XXXTSPAG = FM0DW00.XXXTSPAG + 1; /* Increment page*/
    FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM310.FK-VEND-CD != FM0DW01.FK-VEND-CD
   || FM0DM310.FK-FCTY-PO-DT != FM0DW01.FK-FCTY-PO-DT
   || FM0DM310.FM0DM-FK-NIKE-PO-YY != FM0DW01.FM0DM-FK-NIKE-PO-YY
   || FM0DM310.FM0DM-FK-NIKE-PO-PP != FM0DW01.FM0DM-FK-NIKE-PO-PP
   || FM0DM310.FM0DM-FK-NIKE-PO-DD != FM0DW01.FM0DM-FK-NIKE-PO-DD
   || FM0DM310.FY1FCTYC != FM0DW01.FY1FCTYC
  )
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process change request.*/
   /* ------------------------------------------------------------*/
  ;
  XX0XS01(); /* Get current date and time*/
  ;
  FM0DW00.FM0DW-IDX = 1; /* Reset the index*/
  FM0DW00.FM0DW-DATA-UPDATED-SW = "N"; /* Init data update switch*/
  ;
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* Check each row*/
    ;
    if (FM0DM310.FM0DM-SELECT[FM0DW-IDX] == "S") /* If line selected*/
      ;
      FM0D-3620(); /* Update DCMPNT.VFVSHP01*/
    end
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set 'update complete' message if the data was succesfully*/
   /* completed.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-DATA-UPDATED-SW == "Y") /* If data updated*/
    ;
    FKWREC.XXXMSGNO = 1; /* Update successfuly completed*/
    FKWREC.XXX-MOD-ID = "3600"; /* Module identification*/
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
  end
  ;
  ;
end // end FM0D-3600

// Select DCMPNT.VFVHDR01 ('S ')
Function FM0D-3610()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0DW00.FK-INTRN-PO-ID[FM0DW-NXTPO-IDX]; /* Internal PO id*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      set VFVHDR01 empty;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "3610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S  )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-3610

// Update DCMPNT.VFVSHP01
Function FM0D-3620()
   /* ------------------------------------------------------------*/
   /* Update the requested row on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVSHP01 empty; /* Clear storage record*/
  ;
  VFVSHP01.VFVSHP01-GROUP = FM0DW01.VFVSHP01-GROUP[FM0DW-IDX]; /* Restore original record*/
  ;
  VFVSHP01.FK-FCTY-PO-SHP-QTY = FM0DM310.FK-FCTY-PO-SHP-QTY[FM0DW-IDX]; /* Ship qty*/
  VFVSHP01.YMTCD = FM0DM310.YMTCD[FM0DW-IDX]; /* Transportation code*/
  VFVSHP01.FK-TRANS-COST-AMT = FM0DM310.FK-TRANS-COST-AMT[FM0DW-IDX]; /* Transportation cost*/
  VFVSHP01.FK-PO-SHP-COMNT = FM0DM310.FK-PO-SHP-COMNT[FM0DW-IDX]; /* PO shipment comment*/
  VFVSHP01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change count*/
  VFVSHP01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  ;
  try
    call "IO6850" ("U ", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0DW00.FM0DW-DATA-UPDATED-SW = "Y"; /* Data was updated*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all changes*/
      FKWREC.XXXMSGNO = 12; /* Database updated by another*/
      FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
      FM0DW00.FM0DW-REQUEST-DATA-SW = "Y"; /* Request the data*/
      exit stack; /* Exit to display the map*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all database changes*/
  ;
  FKWREC.XXX-MOD-ID = "3620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE DCMPNT.VFVSHP01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program  name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-3620

// Process Del map
Function FM0D-4000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0D-4100(); /* Obtain the data to display*/
  ;
  FM0D-4200(); /* Format and display the map*/
  ;
  FM0D-4300(); /* Check attention identifier*/
  ;
  FM0D-4400(); /* Reset fields to normal intensity*/
  ;
  FM0D-4500(); /* Verify the entered data*/
  ;
  FM0D-4600(); /* Process valid input request*/
  ;
  ;
end // end FM0D-4000

// Obtain data to display
Function FM0D-4100()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.XXXTSLEN = 1067; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0DW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N"; /* Int po header found switch*/
  FM0DW00.FM0DW-PO-DTL-FOUND-SW = "N"; /* Int po detail found switch*/
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-4110(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-4120(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the factory/vendor PO header record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0D-4130(); /* Select DCMPNT.VFVHDR01*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare and process a cursor to get all po shipment records*/
   /* from DCMPNT.VFVSHP01.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 0; /* Initialize index*/
  ;
  if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If PO hdr was found*/
    ;
    FM0DW00.FM0DW-END-VFVSHP01-CSR-SW = "N";
    ;
    FM0D-4140(); /* Declare DCMPNT.VFVSHP01 cursor*/
    FM0D-4150(); /* Fetch DCMPNT.VFVSHP01 cursor*/
    ;
    while (FM0DW00.FM0DW-END-VFVSHP01-CSR-SW != "Y")
      ;
      FM0D-4160(); /* Select DCMPNT.VMATRL01*/
      ;
      if (VFVSHP01.XCLCD in XCLTBL.XCLCD /* If color in corp color table*/
       && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
        FM0DW00.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Save desc*/
      else
        FM0DW00.XCLDESC = "************"; /* Otherwise move **/
      end
      ;
      if (VFVSHP01.YMTCD in YMTTBL.YMTCD /* If trans code in table*/
       && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
        FM0DW00.YMTABRV = YMTTBL.YMTABRV[sysVar.arrayIndex]; /* Save abrv*/
      else
        FM0DW00.YMTABRV = "******"; /* Otherwise move **/
      end
      ;
      FM0D-4170(); /* Format a display storage line*/
      ;
      if (FM0DW00.FM0DW-IDX >= 4) /* If 4th line added to page*/
        FM0D-4180(); /* Add page temp store page queue*/
        FM0DW00.FM0DW-IDX = 0; /* Reset index*/
      end
      ;
      FM0D-4150(); /* Fetch DCMPNT.VFVSHP01 cursor*/
    end
    ;
    FM0D-4190(); /* Close DCMPNT.VFVSHP01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save any partially formatted data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-IDX > 0) /* If line(s) were formatted*/
    ;
    FM0D-4180(); /* Add page temp store page queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, save map header (if header was found).*/
   /* Set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If PO hdr was found*/
      ;
      FM0D-4171(); /* Format hdr only to disp storage*/
      FM0D-4180(); /* Add page temp store page queue*/
    end
    ;
    converseLib.validationFailed(18); /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "4100"; /* Module identification*/
  else
    ;
    FM0DW00.FM0DW-PO-DTL-FOUND-SW = "Y"; /* PO detail found*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-REQUEST-DATA-SW = "N";
  FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0D-4100

// Purge any temporary storage
Function FM0D-4110()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0DW01 empty; /* m410 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0DW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-4110

// Select DCMPNT.VVNDR001
Function FM0D-4120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0DM410.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0DW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0DW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4120"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "4120 SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-4120

// Select DCMPNT.VFVHDR01 ('SA')
Function FM0D-4130()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-VEND-CD = FM0DM410.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0DM410.FY1FCTYC; /* Factory*/
  ;
  FM0DW00.FM0DW-FMAT-PO-YY = FM0DM410.FM0DM-FK-NIKE-PO-YY;
  FM0DW00.FM0DW-FMAT-PO-PP = FM0DM410.FM0DM-FK-NIKE-PO-PP;
  FM0DW00.FM0DW-FMAT-PO-DD = FM0DM410.FM0DM-FK-NIKE-PO-DD;
  if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
    FM0DW-FMAT-PO-CC = 20;
  else
    FM0DW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
  ;
  FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM410.FK-FCTY-PO-DT;
  FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
  FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
  FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
  if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
    FM0DW00.FM0DW-FMAT-ORDER-CC = 20;
  else
    FM0DW00.FM0DW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SA"; /* Select alt*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0DW00.FM0DW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4130"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (SA)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-4130

// Decl DCMPNT.VFVSHP01 csr
Function FM0D-4140()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVSHP01 empty; /* Clear storage record*/
  ;
  VFVSHP01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  ;
  try
    call "IO6850" ("S1", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4140"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECL DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-4140

// Fetch DCMPNT.VFVSHP01 csr
Function FM0D-4150()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6850" ("N1", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0DW00.FM0DW-END-VFVSHP01-CSR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-4150

// Select DCMPNT.VMATRL01
Function FM0D-4160()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Clear storage record*/
  ;
  VMATRL01.FK-MAT-NBR = VFVSHP01.FK-MAT-NBR; /* Material nbr*/
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4160"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVITM01  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-4160

// Save data in disp storage
Function FM0D-4170()
   /* --------------------------------------------------------------*/
   /* Increment the line index.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment line index*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-IDX == 1) /* If first line on page*/
    ;
    FM0DW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID; /* Intrn po id*/
    FM0DW01.FK-VEND-CD = FM0DM410.FK-VEND-CD; /* Vendor*/
    FM0DW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
    FM0DW01.FK-FCTY-PO-DT = FM0DM410.FK-FCTY-PO-DT; /* PO date*/
    FM0DW01.FM0DM-FK-NIKE-PO-YY = FM0DM410.FM0DM-FK-NIKE-PO-YY;
    FM0DW01.FM0DM-FK-NIKE-PO-PP = FM0DM410.FM0DM-FK-NIKE-PO-PP;
    FM0DW01.FM0DM-FK-NIKE-PO-DD = FM0DM410.FM0DM-FK-NIKE-PO-DD;
    FM0DW01.FY1FCTYC = FM0DM410.FY1FCTYC; /* Factory*/
    FM0DW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
    FM0DW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
    FM0DW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
    FM0DW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
    FM0DW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0DW01.FK-MAT-NBR[FM0DW-IDX] = VFVSHP01.FK-MAT-NBR; /* Material nbr*/
  FM0DW01.FK-DEPT-MAT-DESC[FM0DW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0DW01.XCLCD[FM0DW-IDX] = VFVSHP01.XCLCD; /* Color code*/
  FM0DW01.XCLDESC[FM0DW-IDX] = FM0DW00.XCLDESC; /* Color desc*/
  FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] = VFVSHP01.FK-FCTY-PO-SHP-QTY; /* Shipped qty*/
  FM0DW01.XMU-MAT-UOM-CD[FM0DW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* Unit of measure*/
  FM0DW01.FK-ACTL-SHP-DT[FM0DW-IDX] = VFVSHP01.FK-ACTL-SHP-DT; /* Shipped date*/
  FM0DW01.YMTCD[FM0DW-IDX] = VFVSHP01.YMTCD; /* Mode of transportation*/
  FM0DW01.YMTABRV[FM0DW-IDX] = FM0DW00.YMTABRV; /* Transportation abrv*/
  FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX] = VFVSHP01.FK-TRANS-COST-AMT; /* Transportation cost*/
  FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX] = VFVSHP01.FK-PO-SHP-COMNT; /* Shipment comment*/
  ;
  FM0DW01.VFVSHP01-GROUP[FM0DW-IDX] = VFVSHP01.VFVSHP01-GROUP; /* Save DCMPNT.VFVSHP01 record*/
  ;
  ;
end // end FM0D-4170

// Save hdr only in disp storage
Function FM0D-4171()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  set FM0DW01 empty; /* Init entire record*/
  ;
  FM0DW01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID; /* Intrn po id*/
  FM0DW01.FK-VEND-CD = FM0DM410.FK-VEND-CD; /* Vendor*/
  FM0DW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
  FM0DW01.FK-FCTY-PO-DT = FM0DM410.FK-FCTY-PO-DT; /* PO date*/
  FM0DW01.FM0DM-FK-NIKE-PO-YY = FM0DM410.FM0DM-FK-NIKE-PO-YY;
  FM0DW01.FM0DM-FK-NIKE-PO-PP = FM0DM410.FM0DM-FK-NIKE-PO-PP;
  FM0DW01.FM0DM-FK-NIKE-PO-DD = FM0DM410.FM0DM-FK-NIKE-PO-DD;
  FM0DW01.FY1FCTYC = FM0DM410.FY1FCTYC; /* Factory*/
  FM0DW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
  FM0DW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
  FM0DW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
  FM0DW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
  FM0DW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
end // end FM0D-4171

// Add page to temporary storage
Function FM0D-4180()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW01.XXXTSLEN = FM0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0DW01 empty; /* m410 display storage*/
    ;
    FM0DW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4180"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-4180

// Close DCMPNT.VFVSHP01 csr
Function FM0D-4190()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6850" ("C1", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4190"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-4190

// Format and converse DEL map
Function FM0D-4200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-FMAT-MAP-SW == "Y" /* Format requested*/
  )                                   
    if (converseVar.validationMsgNum == 0   /* If no errors*/
     || (converseVar.validationMsgNum == 18 /* No data to display*/
     && FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y")) /* And po hdr found*/
      ;
      FM0D-4210(); /* Format the map*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DM410.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0DM410.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0DM410.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0DM410 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0DM410.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0DM410.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0DM410.FK-VEND-SNM = FM0DW00.FK-VEND-SNM;
  ;
   /* ------------------------------------------------------------*/
   /* Set header dark if no data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "N") /* No header data found*/
    ;
    set FM0DM410.XXXTSPAG invisible, skip;
    set FM0DM410.TA5TSQIX invisible, skip;
    set FM0DM410.FK-FCTY-PO-ID invisible, skip;
    set FM0DM410.FK-EST-SHP-DT1 invisible, skip;
    set FM0DM410.FK-EST-SHP-DT2 invisible, skip;
    set FM0DM410.FK-EST-SHP-DT3 invisible, skip;
    set FM0DM410.FK-FCTY-PO-COMNT invisible, skip;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-DTL-FOUND-SW == "N") /* If no p.o. detail found*/
    ;
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      set FM0DM410.FM0DM-SELECT[FM0DW-IDX] invisible, skip;
      set FM0DM410.FK-MAT-NBR[FM0DW-IDX] invisible, skip;
      set FM0DM410.FK-DEPT-MAT-DESC[FM0DW-IDX] invisible, skip;
      set FM0DM410.XCLCD[FM0DW-IDX] invisible, skip;
      set FM0DM410.XCLDESC[FM0DW-IDX] invisible, skip;
      set FM0DM410.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] invisible, skip;
      set FM0DM410.XMU-MAT-UOM-CD[FM0DW-IDX] invisible, skip;
      set FM0DM410.FK-ACTL-SHP-DT[FM0DW-IDX] invisible, skip;
      set FM0DM410.YMTCD[FM0DW-IDX] invisible, skip;
      set FM0DM410.YMTABRV[FM0DW-IDX] invisible, skip;
      set FM0DM410.FK-TRANS-COST-AMT[FM0DW-IDX] invisible, skip;
      set FM0DM410.FM0DM-COMNT-LIT[FM0DW-IDX] invisible, skip;
      set FM0DM410.FK-PO-SHP-COMNT[FM0DW-IDX] invisible, skip;
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but at least partial data exists).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-PO-DTL-FOUND-SW == "Y") /* If p.o. detail found*/
    ;
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      if (FM0DM410.FK-MAT-NBR[FM0DW-IDX] == " ") /* No data on this line*/
        ;
        set FM0DM410.FM0DM-SELECT[FM0DW-IDX] invisible, skip;
        set FM0DM410.FK-MAT-NBR[FM0DW-IDX] invisible, skip;
        set FM0DM410.FK-DEPT-MAT-DESC[FM0DW-IDX] invisible, skip;
        set FM0DM410.XCLCD[FM0DW-IDX] invisible, skip;
        set FM0DM410.XCLDESC[FM0DW-IDX] invisible, skip;
        set FM0DM410.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] invisible, skip;
        set FM0DM410.XMU-MAT-UOM-CD[FM0DW-IDX] invisible, skip;
        set FM0DM410.FK-ACTL-SHP-DT[FM0DW-IDX] invisible, skip;
        set FM0DM410.YMTCD[FM0DW-IDX] invisible, skip;
        set FM0DM410.YMTABRV[FM0DW-IDX] invisible, skip;
        set FM0DM410.FK-TRANS-COST-AMT[FM0DW-IDX] invisible, skip;
        set FM0DM410.FM0DM-COMNT-LIT[FM0DW-IDX] invisible, skip;
        set FM0DM410.FK-PO-SHP-COMNT[FM0DW-IDX] invisible, skip;
      end
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* If no message to display*/
  )                                    
    if (FM0DW00.FM0DW-PO-HDR-FOUND-SW == "Y") /* If po hdr found*/
      set FM0DM410.FM0DM-SELECT[1] cursor;
    else
      set FM0DM410.FK-VEND-CD cursor;
    end
  else
    ;
    if (converseVar.validationMsgNum == 1 /* Update complete*/
     || converseVar.validationMsgNum == 18) /* No data to display*/
      set FM0DM410.FK-VEND-CD cursor;
    end
  end
  ;
  ;
  converse FM0DM410 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0DM410.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0DM410.CAITEM; /* Application data*/
  ;
  ;
end // end FM0D-4200

// Format the data to display
Function FM0D-4210()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0DM410 initial; /* Initialize map*/
  ;
  FM0DW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0DW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0DW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0DW00.XXXTSPAG > FM0DW00.TA5TSQIX) /* Desired page > highest*/
        FM0DW00.XXXTSPAG = FM0DW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0D-4211(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DM410.XXXTSPAG = FM0DW00.XXXTSPAG; /* Current page*/
  FM0DM410.TA5TSQIX = FM0DW00.TA5TSQIX; /* Max page*/
  ;
  FM0DM410.FK-VEND-CD = FM0DW01.FK-VEND-CD; /* Vendor*/
  FM0DM410.FK-FCTY-PO-DT = FM0DW01.FK-FCTY-PO-DT;
  FM0DM410.FM0DM-FK-NIKE-PO-YY = FM0DW01.FM0DM-FK-NIKE-PO-YY;
  FM0DM410.FM0DM-FK-NIKE-PO-PP = FM0DW01.FM0DM-FK-NIKE-PO-PP;
  FM0DM410.FM0DM-FK-NIKE-PO-DD = FM0DW01.FM0DM-FK-NIKE-PO-DD;
  FM0DM410.FY1FCTYC = FM0DW01.FY1FCTYC;
  FM0DM410.FK-FCTY-PO-ID = FM0DW01.FK-FCTY-PO-ID;
  FM0DM410.FK-EST-SHP-DT1 = FM0DW01.FK-EST-SHP-DT1;
  FM0DM410.FK-EST-SHP-DT2 = FM0DW01.FK-EST-SHP-DT2;
  FM0DM410.FK-EST-SHP-DT3 = FM0DW01.FK-EST-SHP-DT3;
  FM0DM410.FK-FCTY-PO-COMNT = FM0DW01.FK-FCTY-PO-COMNT;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 1; /* Initialize idx*/
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
    ;
    FM0DM410.FK-MAT-NBR[FM0DW-IDX] = FM0DW01.FK-MAT-NBR[FM0DW-IDX]; /* Material nbr*/
    FM0DM410.FK-DEPT-MAT-DESC[FM0DW-IDX] = FM0DW01.FK-DEPT-MAT-DESC[FM0DW-IDX]; /* Material desc*/
    FM0DM410.XCLCD[FM0DW-IDX] = FM0DW01.XCLCD[FM0DW-IDX]; /* Color code*/
    FM0DM410.XCLDESC[FM0DW-IDX] = FM0DW01.XCLDESC[FM0DW-IDX]; /* Color desc*/
    FM0DM410.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] = FM0DW01.FK-FCTY-PO-SHP-QTY[FM0DW-IDX]; /* Shipped qty*/
    FM0DM410.XMU-MAT-UOM-CD[FM0DW-IDX] = FM0DW01.XMU-MAT-UOM-CD[FM0DW-IDX]; /* UOM*/
    FM0DM410.FK-ACTL-SHP-DT[FM0DW-IDX] = FM0DW01.FK-ACTL-SHP-DT[FM0DW-IDX]; /* Ship date*/
    FM0DM410.YMTCD[FM0DW-IDX] = FM0DW01.YMTCD[FM0DW-IDX]; /* Transportation code*/
    FM0DM410.YMTABRV[FM0DW-IDX] = FM0DW01.YMTABRV[FM0DW-IDX]; /* Transportation abrv*/
    FM0DM410.FK-TRANS-COST-AMT[FM0DW-IDX] = FM0DW01.FK-TRANS-COST-AMT[FM0DW-IDX]; /* Transportation cost*/
   /* Shipment comment*/
    FM0DM410.FK-PO-SHP-COMNT[FM0DW-IDX] = FM0DW01.FK-PO-SHP-COMNT[FM0DW-IDX];
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  ;
end // end FM0D-4210

// Read page from temp storage
Function FM0D-4211()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW01.XXXTSLEN = FM0DW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0DW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0DW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "4211"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M410"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-4211

// Check attention identifier
Function FM0D-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0DM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0DM410.FY1FCTYC; /* Factory*/
    ;
    if (FM0DM410.FM0DM-FK-NIKE-PO-YY == 0
     && FM0DM410.FM0DM-FK-NIKE-PO-PP == 0
     && FM0DM410.FM0DM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-PO-YY = FM0DM410.FM0DM-FK-NIKE-PO-YY;
      FM0DW00.FM0DW-FMAT-PO-PP = FM0DM410.FM0DM-FK-NIKE-PO-PP;
      FM0DW00.FM0DW-FMAT-PO-DD = FM0DM410.FM0DM-FK-NIKE-PO-DD;
      if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
        FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT; /**/
    end
    ;
    if (FM0DM410.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM410.FK-FCTY-PO-DT;
      FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
      FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
      FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
      if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
        FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0D"; /* to applicaiton*/
    COMMAREA.CAITEM = "D"; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0DM410.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM410.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FM0DM410.FK-VEND-CD; /* Vendor*/
      FKWREC.FY1FCTYC = FM0DM410.FY1FCTYC; /* Factory*/
      ;
      if (FM0DM410.FM0DM-FK-NIKE-PO-YY == 0
       && FM0DM410.FM0DM-FK-NIKE-PO-PP == 0
       && FM0DM410.FM0DM-FK-NIKE-PO-DD == 0)
        ;
        FKWREC.PC3POIDT = 0;
      else
        ;
        FM0DW00.FM0DW-FMAT-PO-YY = FM0DM410.FM0DM-FK-NIKE-PO-YY;
        FM0DW00.FM0DW-FMAT-PO-PP = FM0DM410.FM0DM-FK-NIKE-PO-PP;
        FM0DW00.FM0DW-FMAT-PO-DD = FM0DM410.FM0DM-FK-NIKE-PO-DD;
        if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
          FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
        else
          FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
        end
        FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
      end
      ;
      if (FM0DM410.FK-FCTY-PO-DT == 0)
        ;
        FKWREC.FK-FCTY-PO-DT = 0;
      else
        ;
        FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM410.FK-FCTY-PO-DT;
        FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
        FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
        FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
        if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
          FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
        else
          FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
        end
        FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT;
      end
      ;
      COMMAREA.CATOAP = FM0DM410.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0DM410.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0DM410.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* POMNT requested*/
   || converseVar.eventKey is pf15 /* POSUM requested*/
   || converseVar.eventKey is pf16 /* POLSTequested*/
   || converseVar.eventKey is pf17) /* POMLT requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0DM410"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0DM410.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0B"; /* TO application*/
      COMMAREA.CAITEM = FM0DM410.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FM0J"; /* TO application*/
      COMMAREA.CAITEM = FM0DM410.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FM0K"; /* TO application*/
      COMMAREA.CAITEM = FM0DM410.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0L"; /* TO application*/
      COMMAREA.CAITEM = FM0DM410.CAITEM; /* Application find code*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0DM410.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0DM410.FY1FCTYC; /* Factory*/
    ;
    if (FM0DM410.FM0DM-FK-NIKE-PO-YY == 0
     && FM0DM410.FM0DM-FK-NIKE-PO-PP == 0
     && FM0DM410.FM0DM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-PO-YY = FM0DM410.FM0DM-FK-NIKE-PO-YY;
      FM0DW00.FM0DW-FMAT-PO-PP = FM0DM410.FM0DM-FK-NIKE-PO-PP;
      FM0DW00.FM0DW-FMAT-PO-DD = FM0DM410.FM0DM-FK-NIKE-PO-DD;
      if (FM0DW00.FM0DW-FMAT-PO-YY < 80)
        FM0DW00.FM0DW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0DW00.FM0DW-FMAT-PO-DT;
    end
    ;
    if (FM0DM410.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0DW00.FM0DW-FMAT-MAP-DT = FM0DM410.FK-FCTY-PO-DT;
      FM0DW00.FM0DW-FMAT-ORDER-YY = FM0DW00.FM0DW-FMAT-MAP-YY;
      FM0DW00.FM0DW-FMAT-ORDER-MM = FM0DW00.FM0DW-FMAT-MAP-MM;
      FM0DW00.FM0DW-FMAT-ORDER-DD = FM0DW00.FM0DW-FMAT-MAP-DD;
      if (FM0DW00.FM0DW-FMAT-ORDER-YY < 80)
        FM0DW00.FM0DW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0DW00.FM0DW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0DW00.FM0DW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTPO requested*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8   /* FWRD requested*/
  )                                 
    FKWREC.XXX-MOD-ID = "4300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0D-4300

// Reset Highlighted fields
Function FM0D-4400()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0DM410.XXXTSPAG initialAttributes; /* Page nbr*/
  set FM0DM410.TA5TSQIX initialAttributes; /* Max page*/
  ;
  set FM0DM410.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FM0DM410.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FM0DM410.FK-FCTY-PO-DT initialAttributes; /* Order date*/
  set FM0DM410.FM0DM-FK-NIKE-PO-YY initialAttributes; /* PO year*/
  set FM0DM410.FM0DM-FK-NIKE-PO-PP initialAttributes; /* PO prod month*/
  set FM0DM410.FM0DM-FK-NIKE-PO-DD initialAttributes; /* PO delivery month*/
  set FM0DM410.FY1FCTYC initialAttributes; /* Factory*/
  set FM0DM410.FK-FCTY-PO-ID initialAttributes; /* Factory PO*/
  set FM0DM410.FK-EST-SHP-DT1 initialAttributes; /* Est ship date 1*/
  set FM0DM410.FK-EST-SHP-DT2 initialAttributes; /* Est ship date 2*/
  set FM0DM410.FK-EST-SHP-DT3 initialAttributes; /* Est ship date 3*/
  set FM0DM410.FK-FCTY-PO-COMNT initialAttributes; /* PO comment*/
  ;
  ;
  FM0DW00.FM0DW-IDX = 1; /* Initialize index*/
  ;
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS) /* For each line*/
    ;
    set FM0DM410.FM0DM-SELECT[FM0DW-IDX] initialAttributes; /* Selection*/
    set FM0DM410.FK-MAT-NBR[FM0DW-IDX] initialAttributes; /* Material nbr*/
    set FM0DM410.FK-DEPT-MAT-DESC[FM0DW-IDX] initialAttributes; /* Material desc*/
    set FM0DM410.XCLCD[FM0DW-IDX] initialAttributes; /* Color code*/
    set FM0DM410.XCLDESC[FM0DW-IDX] initialAttributes; /* Color desc*/
    set FM0DM410.FK-FCTY-PO-SHP-QTY[FM0DW-IDX] initialAttributes; /* Shipped qty*/
    set FM0DM410.XMU-MAT-UOM-CD[FM0DW-IDX] initialAttributes; /* Unit of measure*/
    set FM0DM410.FK-ACTL-SHP-DT[FM0DW-IDX] initialAttributes; /* Shipped date*/
    set FM0DM410.YMTCD[FM0DW-IDX] initialAttributes; /* Transportation code*/
    set FM0DM410.YMTABRV[FM0DW-IDX] initialAttributes; /* Transportation abrv*/
    set FM0DM410.FK-TRANS-COST-AMT[FM0DW-IDX] initialAttributes; /* Cost*/
    set FM0DM410.FK-PO-SHP-COMNT[FM0DW-IDX] initialAttributes; /* Ship comment*/
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
  end
  ;
  set FM0DM410.CATOAP initialAttributes; /* To application*/
  set FM0DM410.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FM0D-4400

// Verify entered fields
Function FM0D-4500()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0DM410.CAITEM > " " /* Application data was entered*/
  )                        
    set FM0DM410.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify NXTPO request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    if (FM0DW00.FM0DW-NXTPO-IDX >= FM0DW00.FM0DW-NBR-PASSED-PO)
      ;
      converseLib.validationFailed(130); /* No more PO's to display*/
      FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0D-4510(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0DM410.FK-VEND-CD == FM0DW01.FK-VEND-CD
   && FM0DM410.FK-FCTY-PO-DT == FM0DW01.FK-FCTY-PO-DT
   && FM0DM410.FM0DM-FK-NIKE-PO-YY == FM0DW01.FM0DM-FK-NIKE-PO-YY
   && FM0DM410.FM0DM-FK-NIKE-PO-PP == FM0DW01.FM0DM-FK-NIKE-PO-PP
   && FM0DM410.FM0DM-FK-NIKE-PO-DD == FM0DW01.FM0DM-FK-NIKE-PO-DD
   && FM0DM410.FY1FCTYC == FM0DW01.FY1FCTYC)
    ;
    FM0D-4520(); /* Verify detail*/
  else
    ;
    FM0D-4530(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FM0DW00.FM0DW-CONFIRM-DELETE-SW = "N";
    exit stack;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If confirming delete, verify no select lines changed.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-CONFIRM-DELETE-SW == "Y") /* If confirming delete*/
    ;
    FM0DW00.FM0DW-IDX = 1;
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      if (FM0DM410.FM0DM-SELECT[FM0DW-IDX]
       != FM0DW00.FM0DM-SELECT[FM0DW-IDX])
        ;
        FKWREC.XXX-MOD-ID = "4500"; /* Module identification*/
        converseLib.validationFailed(30); /* Press enter to continue, pa2 to cancel*/
      end
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment index*/
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Save rows selected for delete.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = 1; /* Init index*/
  while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
    ;
    FM0DW00.FM0DM-SELECT[FM0DW-IDX] = FM0DM410.FM0DM-SELECT[FM0DW-IDX]; /* Save select*/
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1; /* Increment index*/
    ;
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0D-4500

// Verify scroll request
Function FM0D-4510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0DW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0DW00.XXXTSPAG >= FM0DW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "4510"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0D-4510

// Verify detail data
Function FM0D-4520()
   /* ---------------------------------------------------------------*/
   /* Verify the detail lines.*/
   /* ---------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-NBR-MAP-ROWS;
  ;
  while (FM0DW00.FM0DW-IDX > 0)
    ;
    if (FM0DM410.FM0DM-SELECT[FM0DW-IDX] == "S" /* If selected*/
     || FM0DM410.FM0DM-SELECT[FM0DW-IDX] == " ") /* Or blank*/
      ;
       /* Next sentence*/
    else
      ;
      set FM0DM410.FM0DM-SELECT[FM0DW-IDX] cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4520"; /* Module identification*/
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
    end
    ;
    FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX - 1;
  end
  ;
  ;
end // end FM0D-4520

// Verify key data
Function FM0D-4530()
   /* ------------------------------------------------------------*/
   /* Verify the factory code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM410.FY1FCTYC == " ") /* If factory blank*/
    ;
    converseLib.validationFailed(121); /* Factory code missing or invalid*/
    FKWREC.XXX-MOD-ID = "4530"; /* Module identification*/
    set FM0DM410.FY1FCTYC cursor, bold; /* Highlight*/
  else
    ;
    FM0D-4531(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the PO date.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM410.FM0DM-FK-NIKE-PO-DD >= 1
   && FM0DM410.FM0DM-FK-NIKE-PO-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "4530"; /* Module identification*/
    set FM0DM410.FM0DM-FK-NIKE-PO-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0DM410.FM0DM-FK-NIKE-PO-PP >= 1
   && FM0DM410.FM0DM-FK-NIKE-PO-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "4530"; /* Module identification*/
    set FM0DM410.FM0DM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Call TA0040 to verify the order date.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FM0DM410.FK-FCTY-PO-DT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(84); /* Date missing or invalid*/
      FKWREC.XXX-MOD-ID = "4530"; /* Module identification*/
      set FM0DM410.FK-FCTY-PO-DT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor code.*/
   /* ------------------------------------------------------------*/
  ;
  FM0D-4532(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0D-4530

// Verify factory code
Function FM0D-4531()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0DM410.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0DM410.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4531"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4531"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-4531

// Verify vendor code
Function FM0D-4532()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0DM410.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0DM410.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "4532"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4532"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0D-4532

// Process valid request
Function FM0D-4600()
   /* ------------------------------------------------------------*/
   /* If PF6 pressed, obtain the next vendor header and exit to*/
   /* re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf7 pressed*/
    ;
    FM0DW00.FM0DW-NXTPO-IDX = FM0DW00.FM0DW-NXTPO-IDX + 1;
    ;
    FM0D-4610(); /* Select DCMPNT.VFVHDR01*/
    ;
     /* Format map header with PO header data*/
    ;
    FM0DM410.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0DM410.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0DW00.FM0DW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0DM410.FM0DM-FK-NIKE-PO-YY = FM0DW00.FM0DW-FMAT-PO-YY;
    FM0DM410.FM0DM-FK-NIKE-PO-PP = FM0DW00.FM0DW-FMAT-PO-PP;
    FM0DM410.FM0DM-FK-NIKE-PO-DD = FM0DW00.FM0DW-FMAT-PO-DD;
    FM0DM410.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0DW00.FM0DW-CONFIRM-DELETE-SW = "N";
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0DW00.XXXTSPAG = FM0DW00.XXXTSPAG - 1; /* Decrement page*/
    FM0DW00.FM0DW-CONFIRM-DELETE-SW = "N";
    FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0DW00.XXXTSPAG = FM0DW00.XXXTSPAG + 1; /* Increment page*/
    FM0DW00.FM0DW-CONFIRM-DELETE-SW = "N";
    FM0DW00.FM0DW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM410.FK-VEND-CD != FM0DW01.FK-VEND-CD
   || FM0DM410.FK-FCTY-PO-DT != FM0DW01.FK-FCTY-PO-DT
   || FM0DM410.FM0DM-FK-NIKE-PO-YY != FM0DW01.FM0DM-FK-NIKE-PO-YY
   || FM0DM410.FM0DM-FK-NIKE-PO-PP != FM0DW01.FM0DM-FK-NIKE-PO-PP
   || FM0DM410.FM0DM-FK-NIKE-PO-DD != FM0DW01.FM0DM-FK-NIKE-PO-DD
   || FM0DM410.FY1FCTYC != FM0DW01.FY1FCTYC
  )
    FM0DW00.FM0DW-CONFIRM-DELETE-SW = "N";
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Confirm the delete.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DM410.FM0DM-SELECT[1] == "S" /* If any line selected*/
   || FM0DM410.FM0DM-SELECT[2] == "S" 
   || FM0DM410.FM0DM-SELECT[3] == "S" 
   || FM0DM410.FM0DM-SELECT[4] == "S")
    ;
    if (FM0DW00.FM0DW-CONFIRM-DELETE-SW == "N") /* If not confirmed*/
      ;
      FKWREC.XXX-MOD-ID = "4600";
      converseLib.validationFailed(30);
      FM0DW00.FM0DW-CONFIRM-DELETE-SW = "Y"; /* Confirm it*/
      return;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* At this point we are ready to delete DCMPNT.VFVSHP01 recs.*/
   /* Check for records to delete and delete them.*/
   /* ------------------------------------------------------------*/
  ;
  FM0DW00.FM0DW-DATA-UPDATED-SW = "N"; /* No updates yet*/
  ;
  if (FM0DW00.FM0DW-CONFIRM-DELETE-SW == "Y") /* If delete confirmed*/
    ;
    FM0DW00.FM0DW-IDX = 1; /* Init index*/
    while (FM0DW00.FM0DW-IDX <= FM0DW00.FM0DW-NBR-MAP-ROWS)
      ;
      if (FM0DM410.FM0DM-SELECT[FM0DW-IDX] == "S") /* If line selected*/
        FM0D-4620(); /* Delete the line*/
      end
      ;
      FM0DW00.FM0DW-IDX = FM0DW00.FM0DW-IDX + 1;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If deletes were successfully performed, set message and*/
   /* exit to re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0DW00.FM0DW-DATA-UPDATED-SW == "Y") /* If updated performed*/
    ;
    FKWREC.XXX-MOD-ID = "4600"; /* Module identification*/
    FKWREC.XXXMSGNO = 1; /* Update successful*/
    FM0DW00.FM0DW-CONFIRM-DELETE-SW = "N";
    FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
  end
  ;
  ;
end // end FM0D-4600

// Select DCMPNT.VFVHDR01 ('S ')
Function FM0D-4610()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0DW00.FK-INTRN-PO-ID[FM0DW-NXTPO-IDX]; /* Internal PO id*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "S ";
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      set VFVHDR01 empty;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "4610"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S  )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-4610

// Delete DCMPNT.VFVSHP01
Function FM0D-4620()
   /* ------------------------------------------------------------*/
   /* Update the requested row on the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVSHP01 empty; /* Clear storage record*/
  ;
  VFVSHP01.VFVSHP01-GROUP = FM0DW01.VFVSHP01-GROUP[FM0DW-IDX]; /* Replace group for delete*/
  ;
  ;
  try
    call "IO6850" ("D ", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0DW00.FM0DW-DATA-UPDATED-SW = "Y"; /* Data was updated*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* Row not found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all database changes*/
      FKWREC.XXXMSGNO = 12; /* Database updated by another*/
      FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
      FM0DW00.FM0DW-CONFIRM-DELETE-SW = "N";
      FM0DW00.FM0DW-REQUEST-DATA-SW = "Y";
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all database changes*/
  ;
  FKWREC.XXX-MOD-ID = "4620"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE DCMPNT.VFVSHP01     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0D-4620

//*** RECORD=FM0DW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0DW00 type basicRecord
  10 FM0DW-MAP-SW FM0DW-MAP-SW ; 
  10 FM0DW-REQUEST-DATA-SW FM0DW-REQUEST-DATA-SW ; 
  10 FM0DW-FMAT-MAP-SW FM0DW-FMAT-MAP-SW ; 
  10 FM0DW-END-VFVITM01-CSR-SW FM0DW-END-VFVITM01-CSR-SW ; 
  10 FM0DW-END-VFVSHP01-CSR-SW FM0DW-END-VFVSHP01-CSR-SW ; 
  10 FM0DW-PO-HDR-FOUND-SW FM0DW-PO-HDR-FOUND-SW ; 
  10 FM0DW-PO-DTL-FOUND-SW FM0DW-PO-DTL-FOUND-SW ; 
  10 FM0DW-DATA-UPDATED-SW FM0DW-DATA-UPDATED-SW ; 
  10 FM0DW-CONFIRM-DELETE-SW FM0DW-CONFIRM-DELETE-SW ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FM0DW-IDX FM0DW-IDX ; 
  10 FM0DW-NXTPO-IDX FM0DW-NXTPO-IDX ; 
  10 FM0DW-NBR-MAP-ROWS FM0DW-NBR-MAP-ROWS ; 
  10 FM0DW-FMAT-PO-DT FM0DW-FMAT-PO-DT ; 
    15 FM0DW-FMAT-PO-CC FM0DW-FMAT-PO-CC ; 
    15 FM0DW-FMAT-PO-YY FM0DW-FMAT-PO-YY ; 
    15 FM0DW-FMAT-PO-PP FM0DW-FMAT-PO-PP ; 
    15 FM0DW-FMAT-PO-DD FM0DW-FMAT-PO-DD ; 
  10 FM0DW-FMAT-MAP-DT FM0DW-FMAT-MAP-DT ; 
    15 FM0DW-FMAT-MAP-YY FM0DW-FMAT-MAP-YY ; 
    15 FM0DW-FMAT-MAP-MM FM0DW-FMAT-MAP-MM ; 
    15 FM0DW-FMAT-MAP-DD FM0DW-FMAT-MAP-DD ; 
  10 FM0DW-FMAT-ORDER-DT FM0DW-FMAT-ORDER-DT ; 
    15 FM0DW-FMAT-ORDER-CC FM0DW-FMAT-ORDER-CC ; 
    15 FM0DW-FMAT-ORDER-YY FM0DW-FMAT-ORDER-YY ; 
    15 FM0DW-FMAT-ORDER-MM FM0DW-FMAT-ORDER-MM ; 
    15 FM0DW-FMAT-ORDER-DD FM0DW-FMAT-ORDER-DD ; 
  10 FK-INTRN-PO-ID FK-INTRN-PO-ID [15] ; 
  10 FM0DW-NBR-PASSED-PO FM0DW-NBR-PASSED-PO ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 XCLDESC XCLDESC ; 
  10 YMTABRV YMTABRV ; 
  10 FM0DW-MAP-KEY FM0DW-MAP-KEY ; 
    15 FK-VEND-CD FK-VEND-CD ; 
    15 FK-FCTY-PO-DT FK-FCTY-PO-DT ; 
    15 FM0DM-FK-NIKE-PO-YY FM0DM-FK-NIKE-PO-YY ; 
    15 FM0DM-FK-NIKE-PO-PP FM0DM-FK-NIKE-PO-PP ; 
    15 FM0DM-FK-NIKE-PO-DD FM0DM-FK-NIKE-PO-DD ; 
    15 FY1FCTYC FY1FCTYC ; 
  10 FM0DM-SELECT FM0DM-SELECT [4] ; 
end // end FM0DW00

//*** RECORD=FM0DW01 ****
// ------------------------------------------------------------
// Application display storage.
// ------------------------------------------------------------
// 
// ***********************
Record FM0DW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(1067) ; 
    10 FK-INTRN-PO-ID FK-INTRN-PO-ID ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-VEND-SNM FK-VEND-SNM ; 
    10 FM0DM-FK-NIKE-PO-YY FM0DM-FK-NIKE-PO-YY ; 
    10 FM0DM-FK-NIKE-PO-PP FM0DM-FK-NIKE-PO-PP ; 
    10 FM0DM-FK-NIKE-PO-DD FM0DM-FK-NIKE-PO-DD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FK-FCTY-PO-DT FK-FCTY-PO-DT ; 
    10 FK-FCTY-PO-ID FK-FCTY-PO-ID ; 
    10 FK-EST-SHP-DT1 FK-EST-SHP-DT1 ; 
    10 FK-EST-SHP-DT2 FK-EST-SHP-DT2 ; 
    10 FK-EST-SHP-DT3 FK-EST-SHP-DT3 ; 
    10 FK-FCTY-PO-COMNT FK-FCTY-PO-COMNT ; 
    10 FK-MAT-NBR FK-MAT-NBR [4] ; 
    10 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC [4] ; 
    10 XCLCD XCLCD [4] ; 
    10 XCLDESC XCLDESC [4] ; 
    10 FK-FCTY-PO-SHP-QTY FK-FCTY-PO-SHP-QTY [4] ; 
    10 XMU-MAT-UOM-CD XMU-MAT-UOM-CD [4] ; 
    10 FK-ACTL-SHP-DT FK-ACTL-SHP-DT [4] ; 
    10 YMTCD YMTCD [4] ; 
    10 YMTABRV YMTABRV [4] ; 
    10 FK-TRANS-COST-AMT FK-TRANS-COST-AMT [4] ; 
    10 FK-PO-SHP-COMNT FK-PO-SHP-COMNT [4] ; 
    10 VFVSHP01-GROUP VFVSHP01-GROUP [4] ; 
end // end FM0DW01

// Nike PO ID delivery month
DataItem FM0DM-FK-NIKE-PO-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO ID prod month
DataItem FM0DM-FK-NIKE-PO-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO ID year
DataItem FM0DM-FK-NIKE-PO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem FM0DM-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Confirm the delete switch
DataItem FM0DW-CONFIRM-DELETE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Data successfully updated sw
DataItem FM0DW-DATA-UPDATED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VFVITM01 csr switch
DataItem FM0DW-END-VFVITM01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VFVSHP01 csr switch
DataItem FM0DW-END-VFVSHP01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format day from map
DataItem FM0DW-FMAT-MAP-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date from map
DataItem FM0DW-FMAT-MAP-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format month from map
DataItem FM0DW-FMAT-MAP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FM0DW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format year from map
DataItem FM0DW-FMAT-MAP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order century
DataItem FM0DW-FMAT-ORDER-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order date
DataItem FM0DW-FMAT-ORDER-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order date
DataItem FM0DW-FMAT-ORDER-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order month
DataItem FM0DW-FMAT-ORDER-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order year
DataItem FM0DW-FMAT-ORDER-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. century
DataItem FM0DW-FMAT-PO-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. delivery month
DataItem FM0DW-FMAT-PO-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. date
DataItem FM0DW-FMAT-PO-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. production month
DataItem FM0DW-FMAT-PO-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. year
DataItem FM0DW-FMAT-PO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic index
DataItem FM0DW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map key (all maps)
DataItem FM0DW-MAP-KEY char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to display switch
DataItem FM0DW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of rows on map
DataItem FM0DW-NBR-MAP-ROWS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of Passed POs in FKWREC
DataItem FM0DW-NBR-PASSED-PO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Next PO index
DataItem FM0DW-NXTPO-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PO detail data found switch
DataItem FM0DW-PO-DTL-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VFVHDR01 rec found sw
DataItem FM0DW-PO-HDR-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FM0DW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

