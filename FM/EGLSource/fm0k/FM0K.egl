package fm0k;

import corpcom2.XX0XW01;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import fb.common.FB9REC;
import fk.common.FK-FCTY-PO-COMNT;
import fk.common.FK-FCTY-PO-DT;
import fk.common.FK-FCTY-PO-ID;
import fk.common.FK-INTRN-PO-ID;
import fk.common.FK-VEND-CD;
import fk.common.FK-VEND-SNM;
import fk.common.FKFREC;
import fk.common.FKWREC;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VFVHDR01;
import vv.common.VVNDR001;
//*** PROGRAM=FM0K ****
// THIS APPLICATION IS PART OF THE FOOTWEAR MATERIALS SYSTEM.
// 
// THIS APPLICATION WILL ALLOW USERS TO LIST FACTORY P.O.'S
// ACCORDING TO ENTERED SELECTION CRITERIA.  USERS WILL BE
// ALLOWED TO SELECT SPECIFIC P.O.'S OFF A PAGE OF DATA (UP
// TO A MAXIMUM OF 12 P.O.'S), AND TRANSFER TO OTHER
// APPLICATIONS, CARRYING THE P.O. HEADER INFORMATION WITH
// THE TRANSFER.
// 
// USERS WILL BE ALLOWED TO EXIT THIS APPLICATION VI PFKEYS
// OR FASTPATH, WITH THE 'OPTION' FIELD AVAILABLE FOR USE WITH
// ANY APPLICATION TRANSFER.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          10/18/93  JALLE1  New application.
// Y2KFIX   11-03-97  ORICHA  Y2K MODIFICATIONS MADE TO:
//                            FM0KW00, ADDING CCYY LEVELS;
//                            FM0K-0005 FOR DATE CALC.
// *********************
Program FM0K type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FKFREC FKFREC; // record
  FKWREC FKWREC; // record
  FM0KW00 FM0KW00; // record
  FM0KW01 FM0KW01; // record
  FY1REC FY1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VFVHDR01 VFVHDR01; // record
  VVNDR001 VVNDR001; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FM0KM.FM0KM110 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the application special initialization.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0K-0005; /* Application special initialization*/
    ;
    ;
    FM0K-0005: FM0K-0005();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0K-0010; /* Converse the main process*/
    ;
    ;
    FM0K-0010: FM0K-0010();
     /* -----------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* -----------------------------------------------------------------*/
    ;
    goto FM0K-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FM0K

// Special application init
Function FM0K-0005()
   /* ------------------------------------------------------------*/
   /* Initialize working storage and display storage areas.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0KM110 initial; /* M110 inquiry map input/output*/
  set FM0KW00 empty; /* Application working storage*/
  set FM0KW01 empty; /* Application display storage*/
  set SQLCA empty; /* SQL communication area*/
  set TAEREC empty; /* Error diagnosis information*/
  set TA1REC empty; /* Error diagnosis parameters*/
  set TA5REC empty; /* Error diagnosis parameters*/
  set XX0XW01 empty; /* Date/time subroutine parameters*/
  ;
  FM0KW00.FM0KW-NBR-MAP-ROWS = 12; /* 12 rows on the map*/
  ;
   /* ------------------------------------------------------------*/
   /* Set up default values for map variables.*/
   /* ------------------------------------------------------------*/
  ;
  FM0KM110.FM0KM-HDR-VEND-CD = "*"; /* Vendor code*/
  FM0KM110.FK-VEND-SNM = "ALL"; /* Vendor short name*/
  FM0KM110.FM0KM-HDR-ORD-MO = "*"; /* Order month*/
  FM0KM110.FM0KM-HDR-FY1FCTYC = "*"; /* Factory*/
  FM0KM110.FM0KM-HDR-FCTY-PO-ID = "*"; /* PO id*/
  ;
  FM0K-0006(); /* Select buy date from DFBUY.VFMCTL01*/
  ;
   /* Format the buy date into NIKE PO ID format*/
  ;
   /* ------------ Y2K OUT BEGIN --------------*/
   /* MOVE FB9REC.FB8BUYDT TO FM0KW00.FM0KW-FMAT-ORDER-DT;*/
   /* MOVE FM0KW00.FM0KW-FMAT-ORDER-YY TO FM0KW00.FM0KW-FMAT-PO-YY;*/
   /* MOVE FM0KW00.FM0KW-FMAT-ORDER-MM TO FM0KW00.FM0KW-FMAT-PO-DD;*/
   /* ;*/
   /* IF FM0KW00.FM0KW-FMAT-PO-DD EQ 1;*/
    /* MOVE 11 TO FM0KW00.FM0KW-FMAT-PO-PP;*/
    /* FM0KW00.FM0KW-FMAT-PO-YY = FM0KW00.FM0KW-FMAT-PO-YY - 1;*/
   /* ELSE;*/
    /* IF FM0KW00.FM0KW-FMAT-PO-DD EQ 2;*/
      /* MOVE 12 TO FM0KW00.FM0KW-FMAT-PO-PP;*/
      /* FM0KW00.FM0KW-FMAT-PO-YY = FM0KW00.FM0KW-FMAT-PO-YY - 1;*/
    /* ELSE;*/
      /* FM0KW00.FM0KW-FMAT-PO-PP = FM0KW00.FM0KW-FMAT-PO-DD - 2;*/
    /* END;*/
   /* END;*/
   /* ------------- Y2K OUT END -----------------*/
  ;
   /* ------------ Y2K IN BEGIN ----------------*/
  FM0KW00.FM0KW-FMAT-ORDER-DT = FB9REC.FB8BUYDT;
  FM0KW00.FM0KW-FMAT-PO-CCYY = FM0KW00.FM0KW-FMAT-ORDER-CCYY;
  FM0KW00.FM0KW-FMAT-PO-DD = FM0KW00.FM0KW-FMAT-ORDER-MM;
  ;
  if (FM0KW00.FM0KW-FMAT-PO-DD == 1)
    FM0KW00.FM0KW-FMAT-PO-PP = 11;
    FM0KW00.FM0KW-FMAT-PO-CCYY = FM0KW00.FM0KW-FMAT-PO-CCYY - 1;
  else
    if (FM0KW00.FM0KW-FMAT-PO-DD == 2)
      FM0KW00.FM0KW-FMAT-PO-PP = 12;
      FM0KW00.FM0KW-FMAT-PO-CCYY = FM0KW00.FM0KW-FMAT-PO-CCYY - 1;
    else
      FM0KW00.FM0KW-FMAT-PO-PP = FM0KW00.FM0KW-FMAT-PO-DD - 2;
    end
  end
   /* ------------ Y2K IN END ------------------*/
  ;
  FM0KM110.FM0KM-HDR-NIKE-PO-YY = FM0KW00.FM0KW-FMAT-PO-YY;
  FM0KM110.FM0KM-HDR-NIKE-PO-PP = FM0KW00.FM0KW-FMAT-PO-PP;
  FM0KM110.FM0KM-HDR-NIKE-PO-DD = FM0KW00.FM0KW-FMAT-PO-DD;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize working storage variables.*/
   /* ------------------------------------------------------------*/
  ;
  FM0KW00.FM0KW-REQUEST-DATA-SW = "N"; /* Don't request data*/
  FM0KW00.FM0KW-FMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";
  ;
  ;
end // end FM0K-0005

// Select DFBUY.VFMCTL01
Function FM0K-0006()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FB9REC empty;
  ;
  ;
  try
    call "IO3650" ("S ", SQLCA, FB9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0006"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DFBUY.VFMCTL01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFMCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB9REC.FB9GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0K-0006

// Main process to display a map
Function FM0K-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0K-1000(); /* Obtain the data to display*/
  FM0K-2000(); /* Format and display the map*/
  FM0K-3000(); /* Check attention identifier*/
  FM0K-4000(); /* Reset fields to normal intensity*/
  FM0K-5000(); /* Verify the entered data*/
  FM0K-6000(); /* Process valid input request*/
  ;
  ;
end // end FM0K-0010

// Obtain data to display
Function FM0K-1000()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0KW00.FM0KW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0KW00.XXXTSLEN = 1180; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0KW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0K-1100(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0KM110.FM0KM-HDR-VEND-CD == "*") /* If wildcard*/
    ;
    FM0KW00.FK-VEND-SNM = " "; /* Vendor short name*/
  else
    ;
    FM0K-1200(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the factory/vendor P.O. header table.*/
   /* --------------------------------------------------------------*/
  ;
  FM0K-1300(); /* Declare DCMPNT.VFVHDR01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Fetch a record from the factory/vendor P.O. header cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FM0KW00.FM0KW-END-VFVHDR01-CSR-SW = "N";
  FM0KW00.FM0KW-IDX = 1; /* Init index*/
  ;
  FM0K-1400(); /* Fetch DCMPNT.VFVHDR01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Load the factory/vendor P.O. header records to display storage*/
   /* until end of cursor is found.*/
   /* When necessary, add the temporary storage page to the temporary*/
   /* storage page queue.*/
   /* --------------------------------------------------------------*/
  ;
  while (FM0KW00.FM0KW-END-VFVHDR01-CSR-SW != "Y")
    ;
    FM0K-1500(); /* Save data to display storage*/
    ;
    if (FM0KW00.FM0KW-IDX > FM0KW00.FM0KW-NBR-MAP-ROWS
    )
      FM0K-1600(); /* Add page to temp storage page queue*/
      FM0KW00.FM0KW-IDX = 1; /* Init index*/
    end
    ;
    FM0K-1400(); /* Fetch DCMPNT.VFVHDR01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the factory/vendor P.O. header table.*/
   /* --------------------------------------------------------------*/
  ;
  FM0K-1700(); /* Close DCMPNT.VFVHDR01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save any parially formatted page to temporary storage page queue.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0KW00.FM0KW-IDX > 1) /* Data was formatted*/
    ;
    FM0K-1600(); /* Add page to temp storage page queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was found, set message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0KW00.TA5TSQIX <= 0) /* No data was formatted*/
    ;
    converseLib.validationFailed(18); /* Request processed, no data to display*/
    FKWREC.XXX-MOD-ID = "1000"; /* Module identification*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0KW00.FM0KW-REQUEST-DATA-SW = "N";
  FM0KW00.FM0KW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0K-1000

// Purge any temporary storage
Function FM0K-1100()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0KW01 empty; /* m110 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0KW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0KW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0K-1100

// Select DCMPNT.VVNDR001
Function FM0K-1200()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0KM110.FM0KM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0KW00.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0KW00.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1200"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0K-1200

// Decl DCMPNT.VFVHDR01 csr
Function FM0K-1300()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Initialize i/o mod parameters*/
  ;
   /* Format VFVHDR01*/
  ;
  VFVHDR01.FK-VEND-CD = FM0KM110.FM0KM-HDR-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0KM110.FM0KM-HDR-FY1FCTYC; /* Factory*/
  VFVHDR01.FK-FCTY-PO-ID = FM0KM110.FM0KM-HDR-FCTY-PO-ID; /* PO id*/
  if (FM0KM110.FM0KM-HDR-NIKE-PO-YY == "*")
    VFVHDR01.PC3POIDT = -1; /* Wildcard it*/
  else
    FM0KW00.FM0KW-FMAT-PO-YY = FM0KM110.FM0KM-HDR-NIKE-PO-YY;
    FM0KW00.FM0KW-FMAT-PO-PP = FM0KM110.FM0KM-HDR-NIKE-PO-PP;
    FM0KW00.FM0KW-FMAT-PO-DD = FM0KM110.FM0KM-HDR-NIKE-PO-DD;
    if (FM0KW00.FM0KW-FMAT-PO-YY < 80)
      FM0KW00.FM0KW-FMAT-PO-CC = 20;
    else
      FM0KW00.FM0KW-FMAT-PO-CC = 19;
    end
    VFVHDR01.PC3POIDT = FM0KW00.FM0KW-FMAT-PO-DT;
  end
  ;
  ;
   /* Format FKFREC*/
  ;
  if (FM0KM110.FM0KM-HDR-ORD-MO == "*")
    FKF-LO-DATE = 0;
    FKF-HI-DATE = 999999999;
  else
    FM0KW00.FM0KW-FMAT-ORD-MO = FM0KM110.FM0KM-HDR-ORD-MO;
    FM0KW00.FM0KW-FMAT-ORDER-YY = FM0KW00.FM0KW-FMAT-ORD-MO-YY;
    FM0KW00.FM0KW-FMAT-ORDER-MM = FM0KW00.FM0KW-FMAT-ORD-MO-MM;
    FM0KW00.FM0KW-FMAT-ORDER-DD = 0;
    if (FM0KW00.FM0KW-FMAT-ORDER-YY < 80)
      FM0KW00.FM0KW-FMAT-ORDER-CC = 20;
    else
      FM0KW00.FM0KW-FMAT-ORDER-CC = 19;
    end
    FKFREC.FKF-LO-DATE = FM0KW00.FM0KW-FMAT-ORDER-DT; /* Lo date*/
    FM0KW00.FM0KW-FMAT-ORDER-DD = 99;
    FKFREC.FKF-HI-DATE = FM0KW00.FM0KW-FMAT-ORDER-DT; /* Hi date*/
  end
  ;
  FKFREC.FKF-FUNCTION = "S1"; /* Select a cursor*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECL DCMPNT.VFVHDR01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0K-1300

// Fetch DCMPNT.VFVHDR01 csr
Function FM0K-1400()
   /* ------------------------------------------------------------*/
   /* Fetch a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  FKFREC.FKF-FUNCTION = "N1"; /* Select next row*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0KW00.FM0KW-END-VFVHDR01-CSR-SW = "Y";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1400"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VFVHDR01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0K-1400

// Save data in display storage
Function FM0K-1500()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0KW00.FM0KW-IDX == 1) /* If first line on page*/
    ;
    FM0KW01.FM0KM-HDR-VEND-CD = FM0KM110.FM0KM-HDR-VEND-CD; /* Vendor code*/
    FM0KW01.FK-VEND-SNM = FM0KW00.FK-VEND-SNM; /* Vendor short name*/
    FM0KW01.FM0KM-HDR-ORD-MO = FM0KM110.FM0KM-HDR-ORD-MO; /* Order month*/
    FM0KW01.FM0KM-HDR-NIKE-PO-YY = FM0KM110.FM0KM-HDR-NIKE-PO-YY; /* Nike PO year*/
    FM0KW01.FM0KM-HDR-NIKE-PO-PP = FM0KM110.FM0KM-HDR-NIKE-PO-PP; /* Nike PO production month*/
    FM0KW01.FM0KM-HDR-NIKE-PO-DD = FM0KM110.FM0KM-HDR-NIKE-PO-DD; /* Nike PO delivery month*/
    FM0KW01.FM0KM-HDR-FY1FCTYC = FM0KM110.FM0KM-HDR-FY1FCTYC; /* Nike PO factory*/
    FM0KW01.FM0KM-HDR-FCTY-PO-ID = FM0KM110.FM0KM-HDR-FCTY-PO-ID; /* Factory PO id*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0KW01.FK-INTRN-PO-ID[FM0KW-IDX] = VFVHDR01.FK-INTRN-PO-ID; /* Internal PO id*/
  FM0KW01.FK-VEND-CD[FM0KW-IDX] = VFVHDR01.FK-VEND-CD; /* Vendor code*/
  FM0KW01.FK-FCTY-PO-DT[FM0KW-IDX] = VFVHDR01.FK-FCTY-PO-DT; /* Factory PO date*/
  ;
  FM0KW00.FM0KW-FMAT-PO-DT = VFVHDR01.PC3POIDT; /* Full PO date*/
  FM0KW01.FM0KM-FK-NIKE-PO-YY[FM0KW-IDX] = FM0KW00.FM0KW-FMAT-PO-YY; /* Nike PO year*/
  FM0KW01.FM0KM-FK-NIKE-PO-PP[FM0KW-IDX] = FM0KW00.FM0KW-FMAT-PO-PP; /* Nike PO prod month*/
  FM0KW01.FM0KM-FK-NIKE-PO-DD[FM0KW-IDX] = FM0KW00.FM0KW-FMAT-PO-DD; /* Nike PO delivery month*/
  ;
  FM0KW01.FY1FCTYC[FM0KW-IDX] = VFVHDR01.FY1FCTYC; /* Factory*/
  FM0KW01.FK-FCTY-PO-ID[FM0KW-IDX] = VFVHDR01.FK-FCTY-PO-ID; /* Factory PO id*/
  FM0KW01.FK-FCTY-PO-COMNT[FM0KW-IDX] = VFVHDR01.FK-FCTY-PO-COMNT; /* Factory PO comment*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Increment the index for the display storage page.*/
   /* --------------------------------------------------------------*/
  ;
  FM0KW00.FM0KW-IDX = FM0KW00.FM0KW-IDX + 1; /* Increment line index*/
  ;
  ;
end // end FM0K-1500

// Add page to temporary storage
Function FM0K-1600()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0KW01.XXXTSLEN = FM0KW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0KW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0KW01 empty; /* m110 display storage*/
    ;
    FM0KW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1600"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0K-1600

// Close DCMPNT.VFVHDR01 csr
Function FM0K-1700()
   /* ------------------------------------------------------------*/
   /* Close the requested table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  FKFREC.FKF-FUNCTION = "C1"; /* Close the cursor*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1700"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VFVHDR01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0K-1700

// Format and converse the map
Function FM0K-2000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0KW00.FM0KW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0K-2100(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0KM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0KM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0KM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0KM110 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0KM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0KM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0KM110.FK-VEND-SNM = FM0KW00.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set detail lines dark if there is no data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0KW00.TA5TSQIX <= 0) /* No data to display*/
    ;
    FM0KW00.FM0KW-IDX = 1; /* Init index*/
    while (FM0KW00.FM0KW-IDX <= FM0KW00.FM0KW-NBR-MAP-ROWS)
      ;
      set FM0KM110.FM0KM-SELECT[FM0KW-IDX] invisible, skip;
      set FM0KM110.FK-VEND-CD[FM0KW-IDX] invisible, skip;
      set FM0KM110.FK-FCTY-PO-DT[FM0KW-IDX] invisible, skip;
      set FM0KM110.FM0KM-FK-NIKE-PO-YY[FM0KW-IDX] invisible, skip;
      set FM0KM110.FM0KM-FK-NIKE-PO-PP[FM0KW-IDX] invisible, skip;
      set FM0KM110.FM0KM-FK-NIKE-PO-DD[FM0KW-IDX] invisible, skip;
      set FM0KM110.FY1FCTYC[FM0KW-IDX] invisible, skip;
      set FM0KM110.FK-FCTY-PO-ID[FM0KW-IDX] invisible, skip;
      set FM0KM110.FK-FCTY-PO-COMNT[FM0KW-IDX] invisible, skip;
      ;
      FM0KW00.FM0KW-IDX = FM0KW00.FM0KW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set detail lines dark where there is no data to display*/
   /* (but at least partial data exists).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0KW00.TA5TSQIX > 0) /* If data exists*/
    ;
    FM0KW00.FM0KW-IDX = 1; /* Init index*/
    while (FM0KW00.FM0KW-IDX <= FM0KW00.FM0KW-NBR-MAP-ROWS)
      ;
      if (FM0KM110.FK-VEND-CD[FM0KW-IDX] <= " ") /* No data on line*/
        ;
        set FM0KM110.FM0KM-SELECT[FM0KW-IDX] invisible, skip;
        set FM0KM110.FK-VEND-CD[FM0KW-IDX] invisible, skip;
        set FM0KM110.FK-FCTY-PO-DT[FM0KW-IDX] invisible, skip;
        set FM0KM110.FM0KM-FK-NIKE-PO-YY[FM0KW-IDX] invisible, skip;
        set FM0KM110.FM0KM-FK-NIKE-PO-PP[FM0KW-IDX] invisible, skip;
        set FM0KM110.FM0KM-FK-NIKE-PO-DD[FM0KW-IDX] invisible, skip;
        set FM0KM110.FY1FCTYC[FM0KW-IDX] invisible, skip;
        set FM0KM110.FK-FCTY-PO-ID[FM0KW-IDX] invisible, skip;
        set FM0KM110.FK-FCTY-PO-COMNT[FM0KW-IDX] invisible, skip;
      end
      ;
      FM0KW00.FM0KW-IDX = FM0KW00.FM0KW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* If no message to display*/
    set FM0KM110.FM0KM-HDR-VEND-CD cursor;
  end
  ;
  ;
  converse FM0KM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0KM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0KM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0K-2000

// Format the data to display
Function FM0K-2100()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0KM110 initial; /* Initialize map*/
  ;
  FM0KW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0KW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0KW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0KW00.XXXTSPAG > FM0KW00.TA5TSQIX) /* Desired page > highest*/
        FM0KW00.XXXTSPAG = FM0KW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0K-2110(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0KM110.XXXTSPAG = FM0KW00.XXXTSPAG; /* Current page*/
  FM0KM110.TA5TSQIX = FM0KW00.TA5TSQIX; /* Max page*/
  ;
  FM0KM110.FM0KM-HDR-VEND-CD = FM0KW01.FM0KM-HDR-VEND-CD;
  FM0KM110.FK-VEND-SNM = FM0KW01.FK-VEND-SNM;
  FM0KM110.FM0KM-HDR-ORD-MO = FM0KW01.FM0KM-HDR-ORD-MO;
  FM0KM110.FM0KM-HDR-NIKE-PO-YY = FM0KW01.FM0KM-HDR-NIKE-PO-YY;
  FM0KM110.FM0KM-HDR-NIKE-PO-PP = FM0KW01.FM0KM-HDR-NIKE-PO-PP;
  FM0KM110.FM0KM-HDR-NIKE-PO-DD = FM0KW01.FM0KM-HDR-NIKE-PO-DD;
  FM0KM110.FM0KM-HDR-FY1FCTYC = FM0KW01.FM0KM-HDR-FY1FCTYC;
  FM0KM110.FM0KM-HDR-FCTY-PO-ID = FM0KW01.FM0KM-HDR-FCTY-PO-ID;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0KW00.FM0KW-IDX = 1; /* Initialize idx*/
  while (FM0KW00.FM0KW-IDX <= FM0KW00.FM0KW-NBR-MAP-ROWS)
    ;
    FM0KM110.FK-VEND-CD[FM0KW-IDX] = FM0KW01.FK-VEND-CD[FM0KW-IDX];
    FM0KM110.FK-FCTY-PO-DT[FM0KW-IDX] = FM0KW01.FK-FCTY-PO-DT[FM0KW-IDX];
    FM0KM110.FM0KM-FK-NIKE-PO-YY[FM0KW-IDX] = FM0KW01.FM0KM-FK-NIKE-PO-YY[FM0KW-IDX];
    FM0KM110.FM0KM-FK-NIKE-PO-PP[FM0KW-IDX] = FM0KW01.FM0KM-FK-NIKE-PO-PP[FM0KW-IDX];
    FM0KM110.FM0KM-FK-NIKE-PO-DD[FM0KW-IDX] = FM0KW01.FM0KM-FK-NIKE-PO-DD[FM0KW-IDX];
    FM0KM110.FY1FCTYC[FM0KW-IDX] = FM0KW01.FY1FCTYC[FM0KW-IDX];
    FM0KM110.FK-FCTY-PO-ID[FM0KW-IDX] = FM0KW01.FK-FCTY-PO-ID[FM0KW-IDX];
    FM0KM110.FK-FCTY-PO-COMNT[FM0KW-IDX] = FM0KW01.FK-FCTY-PO-COMNT[FM0KW-IDX];
    ;
    FM0KW00.FM0KW-IDX = FM0KW00.FM0KW-IDX + 1;
  end
  ;
  ;
end // end FM0K-2100

// Read page from temp storage
Function FM0K-2110()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0KW01.XXXTSLEN = FM0KW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0KW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0KW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0K-2110

// Check attention identifier
Function FM0K-3000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    ;
    COMMAREA.CATOAP = "FM0K"; /* to applicaiton*/
    COMMAREA.CAITEM = " "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0KM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0KM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      ;
      COMMAREA.CATOAP = FM0KM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0KM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0KM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* FK0B requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0KM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8   /* FWRD requested*/
   && converseVar.eventKey not pf12  /* POMNT requested*/
   && converseVar.eventKey not pf14  /* POSHP requested*/
   && converseVar.eventKey not pf15  /* POSUM requested*/
   && converseVar.eventKey not pf17) /* POMLT requested*/
    ;
    FKWREC.XXX-MOD-ID = "3000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0K-3000

// Reset Highlighted fields
Function FM0K-4000()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0KM110.XXXTSPAG initialAttributes; /* Page nbr*/
  set FM0KM110.TA5TSQIX initialAttributes; /* Max page*/
  ;
  set FM0KM110.FM0KM-HDR-VEND-CD initialAttributes;
  set FM0KM110.FK-VEND-SNM initialAttributes;
  set FM0KM110.FM0KM-HDR-ORD-MO initialAttributes;
  set FM0KM110.FM0KM-HDR-NIKE-PO-YY initialAttributes;
  set FM0KM110.FM0KM-HDR-NIKE-PO-PP initialAttributes;
  set FM0KM110.FM0KM-HDR-NIKE-PO-DD initialAttributes;
  set FM0KM110.FM0KM-HDR-FY1FCTYC initialAttributes;
  set FM0KM110.FM0KM-HDR-FCTY-PO-ID initialAttributes;
  ;
  ;
  FM0KW00.FM0KW-IDX = 1; /* Initialize index*/
  ;
  while (FM0KW00.FM0KW-IDX <= FM0KW00.FM0KW-NBR-MAP-ROWS) /* For each line*/
    ;
    set FM0KM110.FM0KM-SELECT[FM0KW-IDX] initialAttributes;
    set FM0KM110.FK-VEND-CD[FM0KW-IDX] initialAttributes;
    set FM0KM110.FK-FCTY-PO-DT[FM0KW-IDX] initialAttributes;
    set FM0KM110.FM0KM-FK-NIKE-PO-YY[FM0KW-IDX] initialAttributes;
    set FM0KM110.FM0KM-FK-NIKE-PO-PP[FM0KW-IDX] initialAttributes;
    set FM0KM110.FM0KM-FK-NIKE-PO-DD[FM0KW-IDX] initialAttributes;
    set FM0KM110.FY1FCTYC[FM0KW-IDX] initialAttributes;
    set FM0KM110.FK-FCTY-PO-ID[FM0KW-IDX] initialAttributes;
    set FM0KM110.FK-FCTY-PO-COMNT[FM0KW-IDX] initialAttributes;
    ;
    FM0KW00.FM0KW-IDX = FM0KW00.FM0KW-IDX + 1;
  end
  ;
  set FM0KM110.CATOAP initialAttributes; /* To application*/
  set FM0KM110.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FM0K-4000

// Verify entered fields
Function FM0K-5000()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0KM110.CAITEM > " "         /* Application data was entered*/
   && converseVar.eventKey not pf12 /* POMNT*/
   && converseVar.eventKey not pf14 /* POSHP*/
   && converseVar.eventKey not pf15 /* POSUM*/
   && converseVar.eventKey not pf17) /* POMLT*/
    ;
    set FM0KM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0K-5100(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If PFKEY transfer requested, verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* POMNT*/
   || converseVar.eventKey is pf14 /* POSHP*/
   || converseVar.eventKey is pf15 /* POSUM*/
   || converseVar.eventKey is pf17) /* POMLT*/
    ;
    FM0K-5200(); /* Verify detail*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0KM110.FM0KM-HDR-VEND-CD == FM0KW01.FM0KM-HDR-VEND-CD
   && FM0KM110.FM0KM-HDR-ORD-MO == FM0KW01.FM0KM-HDR-ORD-MO
   && FM0KM110.FM0KM-HDR-NIKE-PO-YY == FM0KW01.FM0KM-HDR-NIKE-PO-YY
   && FM0KM110.FM0KM-HDR-NIKE-PO-PP == FM0KW01.FM0KM-HDR-NIKE-PO-PP
   && FM0KM110.FM0KM-HDR-NIKE-PO-DD == FM0KW01.FM0KM-HDR-NIKE-PO-DD
   && FM0KM110.FM0KM-HDR-FY1FCTYC == FM0KW01.FM0KM-HDR-FY1FCTYC
   && FM0KM110.FM0KM-HDR-FCTY-PO-ID == FM0KW01.FM0KM-HDR-FCTY-PO-ID)
    ;
    FM0K-5200(); /* Verify detail*/
  else
    ;
    FM0K-5300(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0K-5000

// Verify scroll request
Function FM0K-5100()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0KW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0KW00.XXXTSPAG >= FM0KW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0K-5100

// Verify non-key data
Function FM0K-5200()
   /* ------------------------------------------------------------*/
   /* Verify the select fields.*/
   /* ------------------------------------------------------------*/
  ;
  FM0KW00.FM0KW-IDX = FM0KW00.FM0KW-NBR-MAP-ROWS; /* Initialize idx*/
  while (FM0KW00.FM0KW-IDX > 0)
    ;
    if (FM0KM110.FM0KM-SELECT[FM0KW-IDX] == " " /* If blank*/
     || FM0KM110.FM0KM-SELECT[FM0KW-IDX] == "S") /* or selected*/
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
      FKWREC.XXX-MOD-ID = "5200"; /* Module identification*/
      set FM0KM110.FM0KM-SELECT[FM0KW-IDX] cursor, bold; /* Hightlight*/
    end
    ;
    FM0KW00.FM0KW-IDX = FM0KW00.FM0KW-IDX - 1;
  end
  ;
  ;
end // end FM0K-5200

// Verify key data
Function FM0K-5300()
   /* ------------------------------------------------------------*/
   /* Verify the factory PO number.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0KM110.FM0KM-HDR-FCTY-PO-ID == " ") /* If field blank*/
    ;
    converseLib.validationFailed(128); /* Fcty PO missing or invalid*/
    FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
    set FM0KM110.FM0KM-HDR-FCTY-PO-ID cursor, bold;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the NIKE PO ID.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0KM110.FM0KM-HDR-FY1FCTYC == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0KM110.FM0KM-HDR-FY1FCTYC == " ") /* If blank*/
      ;
      converseLib.validationFailed(121); /* Factory code is missing or invalid*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0KM110.FM0KM-HDR-FY1FCTYC cursor, bold;
    else
      ;
      FM0K-5310(); /* Select DFCTY.VFCTY001*/
    end
  end
  ;
  ;
  if (FM0KM110.FM0KM-HDR-NIKE-PO-YY == "*") /* If wildcarded*/
    ;
    if ((FM0KM110.FM0KM-HDR-NIKE-PO-PP == " " /* If pp blank*/
     || FM0KM110.FM0KM-HDR-NIKE-PO-PP == "*") /* or wildcarded*/
     && (FM0KM110.FM0KM-HDR-NIKE-PO-DD == " " /* and dd blank*/
     || FM0KM110.FM0KM-HDR-NIKE-PO-DD == "*")) /* or wildcarded*/
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(150); /* NIKE PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0KM110.FM0KM-HDR-NIKE-PO-YY cursor, bold;
      set FM0KM110.FM0KM-HDR-NIKE-PO-PP bold;
      set FM0KM110.FM0KM-HDR-NIKE-PO-DD bold;
    end
  else
    ;
     /* PO year entered, verify entire PO date*/
    ;
    if (FM0KM110.FM0KM-HDR-NIKE-PO-DD is numeric)
      ;
      if (FM0KM110.FM0KM-HDR-NIKE-PO-DD <= 0 /* If date not valid*/
       || FM0KM110.FM0KM-HDR-NIKE-PO-DD > 12)
        ;
        converseLib.validationFailed(150); /* NIKE PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
        set FM0KM110.FM0KM-HDR-NIKE-PO-DD cursor, bold;
      end
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0KM110.FM0KM-HDR-NIKE-PO-DD cursor, bold;
    end
    ;
    if (FM0KM110.FM0KM-HDR-NIKE-PO-PP is numeric)
      ;
      if (FM0KM110.FM0KM-HDR-NIKE-PO-PP <= 0 /* If date not valid*/
       || FM0KM110.FM0KM-HDR-NIKE-PO-PP > 12)
        ;
        converseLib.validationFailed(150); /* NIKE PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
        set FM0KM110.FM0KM-HDR-NIKE-PO-PP cursor, bold;
      end
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0KM110.FM0KM-HDR-NIKE-PO-PP cursor, bold;
    end
    ;
    if (FM0KM110.FM0KM-HDR-NIKE-PO-YY is numeric)
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0KM110.FM0KM-HDR-NIKE-PO-YY cursor, bold;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the order month*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0KM110.FM0KM-HDR-ORD-MO != "*") /* If not wildcarded*/
    ;
     /* Check for numeric value*/
    ;
    if (FM0KM110.FM0KM-HDR-ORD-MO is numeric) /* If numeric value entered*/
      ;
       /* Check proper values*/
      ;
      FM0KW00.FM0KW-FMAT-ORD-MO = FM0KM110.FM0KM-HDR-ORD-MO;
      if (FM0KW00.FM0KW-FMAT-ORD-MO-MM <= 0 /* If month not valid*/
       || FM0KW00.FM0KW-FMAT-ORD-MO-MM > 12)
        ;
        converseLib.validationFailed(84); /* Date is missing or invalid*/
        FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
        set FM0KM110.FM0KM-HDR-ORD-MO cursor, bold;
      end
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0KM110.FM0KM-HDR-ORD-MO cursor, bold;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0KM110.FM0KM-HDR-VEND-CD == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    FM0K-5320(); /* Select DCMPNT.VVNDR001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify at least some selection criteria used.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (FM0KM110.FM0KM-HDR-VEND-CD == "*" /* If everything wildcarded*/
   && FM0KM110.FM0KM-HDR-ORD-MO == "*"  
   && FM0KM110.FM0KM-HDR-NIKE-PO-YY == "*"
   && FM0KM110.FM0KM-HDR-FY1FCTYC == "*"
   && FM0KM110.FM0KM-HDR-FCTY-PO-ID == "*")
    ;
    converseLib.validationFailed(149); /* At least 1 field must be specified*/
    FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
    set FM0KM110.FM0KM-HDR-VEND-CD cursor, bold;
    set FM0KM110.FM0KM-HDR-ORD-MO bold;
    set FM0KM110.FM0KM-HDR-NIKE-PO-YY bold;
    set FM0KM110.FM0KM-HDR-NIKE-PO-PP bold;
    set FM0KM110.FM0KM-HDR-NIKE-PO-DD bold;
    set FM0KM110.FM0KM-HDR-FY1FCTYC bold;
    set FM0KM110.FM0KM-HDR-FCTY-PO-ID bold;
  end
  ;
  ;
end // end FM0K-5300

// Verify factory code
Function FM0K-5310()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0KM110.FM0KM-HDR-FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0KM110.FM0KM-HDR-FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5310"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5310"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0K-5310

// Verify vendor code
Function FM0K-5320()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0KM110.FM0KM-HDR-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0KM110.FM0KM-HDR-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5320"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5320"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0K-5320

// Process valid request
Function FM0K-6000()
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0KW00.XXXTSPAG = FM0KW00.XXXTSPAG - 1; /* Decrement page*/
    FM0KW00.FM0KW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0KW00.XXXTSPAG = FM0KW00.XXXTSPAG + 1; /* Increment page*/
    FM0KW00.FM0KW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process application transfer request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* PF12 was pressed*/
   || converseVar.eventKey is pf14 /* PF14 was pressed*/
   || converseVar.eventKey is pf15 /* PF15 was pressed*/
   || converseVar.eventKey is pf17) /* PF17 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    ;
    FM0KW00.FM0KW-IDX = 1; /* Initialize index*/
    FM0KW00.FM0KW-IDX2 = 1; /* Initialize index2*/
    while (FM0KW00.FM0KW-IDX <= FM0KW00.FM0KW-NBR-MAP-ROWS)
      ;
      if (FM0KM110.FM0KM-SELECT[FM0KW-IDX] == "S") /* If line selected*/
        ;
        FKWREC.FK-INTRN-PO-ID[FM0KW-IDX2] = FM0KW01.FK-INTRN-PO-ID[FM0KW-IDX]; /* Save the PO id*/
        ;
        FM0KW00.FM0KW-IDX2 = FM0KW00.FM0KW-IDX2 + 1; /* Increment idx2*/
      end
      ;
      FM0KW00.FM0KW-IDX = FM0KW00.FM0KW-IDX + 1; /* Increment idx*/
    end
    ;
    ;
    if (converseVar.eventKey is pf12) /* PF12 pressed*/
      COMMAREA.CATOAP = "FM0B"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0KM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 pressed*/
      COMMAREA.CATOAP = "FM0D"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0KM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 pressed*/
      COMMAREA.CATOAP = "FM0J"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0KM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 pressed*/
      COMMAREA.CATOAP = "FM0L"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0KM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0KM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0KM110.FM0KM-HDR-VEND-CD != FM0KW01.FM0KM-HDR-VEND-CD
   || FM0KM110.FM0KM-HDR-ORD-MO != FM0KW01.FM0KM-HDR-ORD-MO
   || FM0KM110.FM0KM-HDR-NIKE-PO-YY != FM0KW01.FM0KM-HDR-NIKE-PO-YY
   || FM0KM110.FM0KM-HDR-NIKE-PO-PP != FM0KW01.FM0KM-HDR-NIKE-PO-PP
   || FM0KM110.FM0KM-HDR-NIKE-PO-DD != FM0KW01.FM0KM-HDR-NIKE-PO-DD
   || FM0KM110.FM0KM-HDR-FY1FCTYC != FM0KW01.FM0KM-HDR-FY1FCTYC
   || FM0KM110.FM0KM-HDR-FCTY-PO-ID != FM0KW01.FM0KM-HDR-FCTY-PO-ID)
    ;
    FM0KW00.FM0KW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0K-6000

//*** RECORD=FM0KW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0KW00 type basicRecord
  10 FM0KW-REQUEST-DATA-SW FM0KW-REQUEST-DATA-SW ; 
  10 FM0KW-FMAT-MAP-SW FM0KW-FMAT-MAP-SW ; 
  10 FM0KW-END-VFVHDR01-CSR-SW FM0KW-END-VFVHDR01-CSR-SW ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FM0KW-IDX FM0KW-IDX ; 
  10 FM0KW-IDX2 FM0KW-IDX2 ; 
  10 FM0KW-NBR-MAP-ROWS FM0KW-NBR-MAP-ROWS ; 
  10 FM0KW-FMAT-PO-DT FM0KW-FMAT-PO-DT ; 
    15 FM0KW-FMAT-PO-CCYY FM0KW-FMAT-PO-CCYY ; 
      20 FM0KW-FMAT-PO-CC FM0KW-FMAT-PO-CC ; 
      20 FM0KW-FMAT-PO-YY FM0KW-FMAT-PO-YY ; 
    15 FM0KW-FMAT-PO-PP FM0KW-FMAT-PO-PP ; 
    15 FM0KW-FMAT-PO-DD FM0KW-FMAT-PO-DD ; 
  10 FM0KW-FMAT-MAP-DT FM0KW-FMAT-MAP-DT ; 
    15 FM0KW-FMAT-MAP-YY FM0KW-FMAT-MAP-YY ; 
    15 FM0KW-FMAT-MAP-MM FM0KW-FMAT-MAP-MM ; 
    15 FM0KW-FMAT-MAP-DD FM0KW-FMAT-MAP-DD ; 
  10 FM0KW-FMAT-ORDER-DT FM0KW-FMAT-ORDER-DT ; 
    15 FM0KW-FMAT-ORDER-CCYY FM0KW-FMAT-ORDER-CCYY ; 
      20 FM0KW-FMAT-ORDER-CC FM0KW-FMAT-ORDER-CC ; 
      20 FM0KW-FMAT-ORDER-YY FM0KW-FMAT-ORDER-YY ; 
    15 FM0KW-FMAT-ORDER-MM FM0KW-FMAT-ORDER-MM ; 
    15 FM0KW-FMAT-ORDER-DD FM0KW-FMAT-ORDER-DD ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 FM0KW-FMAT-ORD-MO FM0KW-FMAT-ORD-MO ; 
    15 FM0KW-FMAT-ORD-MO-YY FM0KW-FMAT-ORD-MO-YY ; 
    15 FM0KW-FMAT-ORD-MO-MM FM0KW-FMAT-ORD-MO-MM ; 
end // end FM0KW00

//*** RECORD=FM0KW01 ****
// ------------------------------------------------------------
// Application display storage.
// ------------------------------------------------------------
// 
// ***********************
Record FM0KW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(1180) ; 
    10 FM0KM-HDR-VEND-CD FM0KM-HDR-VEND-CD ; 
    10 FK-VEND-SNM FK-VEND-SNM ; 
    10 FM0KM-HDR-ORD-MO FM0KM-HDR-ORD-MO ; 
    10 FM0KM-HDR-NIKE-PO-YY FM0KM-HDR-NIKE-PO-YY ; 
    10 FM0KM-HDR-NIKE-PO-PP FM0KM-HDR-NIKE-PO-PP ; 
    10 FM0KM-HDR-NIKE-PO-DD FM0KM-HDR-NIKE-PO-DD ; 
    10 FM0KM-HDR-FY1FCTYC FM0KM-HDR-FY1FCTYC ; 
    10 FM0KM-HDR-FCTY-PO-ID FM0KM-HDR-FCTY-PO-ID ; 
    10 FK-INTRN-PO-ID FK-INTRN-PO-ID [12] ; 
    10 FK-VEND-CD FK-VEND-CD [12] ; 
    10 FK-FCTY-PO-DT FK-FCTY-PO-DT [12] ; 
    10 FM0KM-FK-NIKE-PO-YY FM0KM-FK-NIKE-PO-YY [12] ; 
    10 FM0KM-FK-NIKE-PO-PP FM0KM-FK-NIKE-PO-PP [12] ; 
    10 FM0KM-FK-NIKE-PO-DD FM0KM-FK-NIKE-PO-DD [12] ; 
    10 FY1FCTYC FY1FCTYC [12] ; 
    10 FK-FCTY-PO-ID FK-FCTY-PO-ID [12] ; 
    10 FK-FCTY-PO-COMNT FK-FCTY-PO-COMNT [12] ; 
end // end FM0KW01

// Nike PO delivery month
DataItem FM0KM-FK-NIKE-PO-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO prod month
DataItem FM0KM-FK-NIKE-PO-PP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO year
DataItem FM0KM-FK-NIKE-PO-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header factory po id
DataItem FM0KM-HDR-FCTY-PO-ID char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header Nike PO factory
DataItem FM0KM-HDR-FY1FCTYC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header Nike PO delivery month
DataItem FM0KM-HDR-NIKE-PO-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header Nike PO prod month
DataItem FM0KM-HDR-NIKE-PO-PP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header Nike PO year
DataItem FM0KM-HDR-NIKE-PO-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header order month
DataItem FM0KM-HDR-ORD-MO char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FM0KM-HDR-VEND-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VFVHDR01 csr switch
DataItem FM0KW-END-VFVHDR01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format day from map
DataItem FM0KW-FMAT-MAP-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date from map
DataItem FM0KW-FMAT-MAP-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format month from map
DataItem FM0KW-FMAT-MAP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FM0KW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format year from map
DataItem FM0KW-FMAT-MAP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order month (map)
DataItem FM0KW-FMAT-ORD-MO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order month (map)
DataItem FM0KW-FMAT-ORD-MO-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order year  (map)
DataItem FM0KW-FMAT-ORD-MO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order century
DataItem FM0KW-FMAT-ORDER-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FORMAT CENTURY/YEAR
DataItem FM0KW-FMAT-ORDER-CCYY num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order date
DataItem FM0KW-FMAT-ORDER-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order date
DataItem FM0KW-FMAT-ORDER-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order month
DataItem FM0KW-FMAT-ORDER-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order year
DataItem FM0KW-FMAT-ORDER-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. century
DataItem FM0KW-FMAT-PO-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FORMAT CENTURY/YEAR
DataItem FM0KW-FMAT-PO-CCYY num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. delivery month
DataItem FM0KW-FMAT-PO-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. date
DataItem FM0KW-FMAT-PO-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. production month
DataItem FM0KW-FMAT-PO-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. year
DataItem FM0KW-FMAT-PO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic index
DataItem FM0KW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic index2
DataItem FM0KW-IDX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of rows on map
DataItem FM0KW-NBR-MAP-ROWS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Request for data switch
DataItem FM0KW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

