package fm0j;

import corpcom2.XX0XW01;
import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XCLCD;
import corpx1.XCLDESC;
import corpx1.XCLTBL;
import corpx2.XMU-MAT-UOM-CD;
import fk.common.FK-DEPT-MAT-DESC;
import fk.common.FK-EST-SHP-DT1;
import fk.common.FK-EST-SHP-DT2;
import fk.common.FK-EST-SHP-DT3;
import fk.common.FK-FCTY-PO-COMNT;
import fk.common.FK-FCTY-PO-DT;
import fk.common.FK-FCTY-PO-ID;
import fk.common.FK-INTRN-PO-ID;
import fk.common.FK-MAT-NBR;
import fk.common.FK-VEND-CD;
import fk.common.FK-VEND-SNM;
import fk.common.FKFREC;
import fk.common.FKWREC;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VFVADJ01;
import vv.common.VFVHDR01;
import vv.common.VFVITM01;
import vv.common.VFVSHP01;
import vv.common.VMATRL01;
import vv.common.VVNDR001;
//*** PROGRAM=FM0J ****
// THIS APPLICATION IS PART OF THE FOOTWEAR MATERIALS SYSTEM.
// 
// THIS APPLICATION WILL ALLOW USERS TO LIST A FACTORY PO AND
// ALL CORRESPONDING TRANSACTIONS AGAINST THAT P.O.  USERS
// WILL ENTERE P.O. HEADER INFORMATION, AND ALL MATERIALS
// ON THAT P.O. WILL BE RETRIEVED FROM DCMPNT.VFVITM01.  IN
// ADDITION, FOR EACH P.O. ITEM DISPLAYED, P.O. ADJUSTMENTS
// WILL BE RETRIEVED FROM DCMPNT.VFVADJ01 AND P.O. SHIPMENTS
// WILL BE RETRIEVED FROM DCMPNT.VFVSHP01.  EACH ITEM RECORD
// WITH ITS CORRESPONDING ADJUSTMENTS AND SHIPMENTS WILL BE
// DISPLAYED ON THE PAGE - USERS WILL PRESS PF7 AND PF8 TO
// BROWSE THROUGH MULTIPLE ITEMS ON THE SAME P.O. HEADER.
// 
// USERS WILL BE ALLOWED TO EXIT THIS APPLICATION VI PFKEYS
// OR FASTPATH, WITH THE 'OPTION' FIELD AVAILABLE FOR USE WITH
// ANY APPLICATION TRANSFER.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          09/21/93  JALLE1  New application.
// *********************
Program FM0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FKFREC FKFREC; // record
  FKWREC FKWREC; // record
  FM0JW00 FM0JW00; // record
  FM0JW01 FM0JW01; // record
  FY1REC FY1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VFVADJ01 VFVADJ01; // record
  VFVHDR01 VFVHDR01; // record
  VFVITM01 VFVITM01; // record
  VFVSHP01 VFVSHP01; // record
  VMATRL01 VMATRL01; // record
  VVNDR001 VVNDR001; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCLTBL {deleteAfterUse = yes}; // table
  use FM0JM.FM0JM110,  // forms
      FM0JM.FM0JM120
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the application special initialization.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0J-0005; /* Application special initialization*/
    ;
    ;
    FM0J-0005: FM0J-0005();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0J-0010; /* Converse the main process*/
    ;
    ;
    FM0J-0010: FM0J-0010();
     /* -----------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* -----------------------------------------------------------------*/
    ;
    goto FM0J-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FM0J

// Special application init
Function FM0J-0005()
   /* ------------------------------------------------------------*/
   /* Initialize working storage and display storage areas.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0JM110 initial; /* M110 inquiry map input/output*/
  set FM0JW00 empty; /* Application working storage*/
  set FM0JW01 empty; /* Application display storage*/
  set SQLCA empty; /* SQL communication area*/
  set TAEREC empty; /* Error diagnosis information*/
  set TA1REC empty; /* Error diagnosis parameters*/
  set TA5REC empty; /* Error diagnosis parameters*/
  set XX0XW01 empty; /* Date/time subroutine parameters*/
  ;
  FM0JW00.FM0JW-NBR-MAP-ROWS = 10; /* 10 rows on the map*/
  ;
   /* ------------------------------------------------------------*/
   /* If data was passed in the COMMAREA, use as initial key.*/
   /* ------------------------------------------------------------*/
  ;
  FM0JM110.VAGen_EZEMSG = COMMAREA.CAMSG;
  ;
  if (FKWREC.FK-INTRN-PO-ID[1] > 0) /* If PO was passed*/
    ;
     /* Load internal PO id's to a working storage array*/
    ;
    FM0JW00.FM0JW-NBR-PASSED-PO = 0; /* Counter of # PO's passed*/
    FM0JW00.FM0JW-IDX = 1; /* Init index*/
    while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS)
      ;
      if (FKWREC.FK-INTRN-PO-ID[FM0JW-IDX] > 0) /* If data exists*/
        ;
        FM0JW00.FK-INTRN-PO-ID[FM0JW-IDX] = FKWREC.FK-INTRN-PO-ID[FM0JW-IDX]; /* Save PO nbr*/
        FM0JW00.FM0JW-NBR-PASSED-PO = FM0JW00.FM0JW-NBR-PASSED-PO + 1;
      end
      ;
      FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1; /* Increment*/
    end
    ;
    FM0J-0006(); /* Get first PO header*/
    ;
    if (FM0JW00.FM0JW-PO-HDR-FOUND-SW == "Y") /* If PO header was found*/
      ;
       /* Move PO hdr info to map*/
      ;
      FM0JM110.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
      FM0JM110.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
      FM0JW00.FM0JW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
      FM0JM110.FM0JM-FK-NIKE-PO-YY = FM0JW00.FM0JW-FMAT-PO-YY;
      FM0JM110.FM0JM-FK-NIKE-PO-PP = FM0JW00.FM0JW-FMAT-PO-PP;
      FM0JM110.FM0JM-FK-NIKE-PO-DD = FM0JW00.FM0JW-FMAT-PO-DD;
      FM0JM110.FY1FCTYC = VFVHDR01.FY1FCTYC;
    end
    ;
  else
    ;
    FM0JM110.FK-VEND-CD = FKWREC.FK-VEND-CD[1]; /* Vendor*/
    FM0JM110.FK-FCTY-PO-DT = FKWREC.FK-FCTY-PO-DT; /* Fcty po date*/
    FM0JW00.FM0JW-FMAT-PO-DT = FKWREC.PC3POIDT; /* Format the po date*/
    FM0JM110.FM0JM-FK-NIKE-PO-YY = FM0JW00.FM0JW-FMAT-PO-YY;
    FM0JM110.FM0JM-FK-NIKE-PO-PP = FM0JW00.FM0JW-FMAT-PO-PP;
    FM0JM110.FM0JM-FK-NIKE-PO-DD = FM0JW00.FM0JW-FMAT-PO-DD;
    ;
    if (FKWREC.PC3POIDT > 0) /* If po date is passed*/
      FM0JM110.FY1FCTYC = FKWREC.FY1FCTYC; /* Get fcty code*/
    else
      FM0JM110.FY1FCTYC = " "; /* Set it blank*/
    end
  end
  ;
  set FKWREC empty; /* Intitialize FKWREC*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize working storage variables.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (FM0JM110.FK-VEND-CD > " "
   && FM0JM110.FM0JM-FK-NIKE-PO-PP > 0
   && FM0JM110.FY1FCTYC > " "
   && FM0JM110.FK-FCTY-PO-DT > 0)
    FM0JW00.FM0JW-REQUEST-DATA-SW = "Y"; /* Request data*/
  else
    FM0JW00.FM0JW-REQUEST-DATA-SW = "N"; /* Don't request data*/
  end
  ;
  FM0JW00.FM0JW-FMAT-MAP-SW = "N"; /* Format the map switch*/
  FM0JW00.FM0JW-SIDE-TO-DISP-SW = "L"; /* Display left map (m110)*/
  FM0JW00.FM0JW-PO-HDR-FOUND-SW = "N"; /* PO hdr not found yet*/
  FM0JW00.FM0JW-PO-DTL-FOUND-SW = "N"; /* PO dtl not found yet*/
  FM0JW00.FM0JW-NXTPO-IDX = 1; /* Next PO index*/
  ;
  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";
  ;
  ;
end // end FM0J-0005

// Select DCMPNT.VFVHDR01 ('S ')
Function FM0J-0006()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0JW00.FK-INTRN-PO-ID[1];
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0JW00.FM0JW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0JW00.FM0JW-PO-HDR-FOUND-SW = "N"; /* PO was not found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0006"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-0006

// Main process to display a map
Function FM0J-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-SIDE-TO-DISP-SW == "L") /* If m110 requested*/
    ;
    FM0J-1000L(); /* Obtain the data to display*/
    FM0J-2000L(); /* Format and display the map*/
    FM0J-3000L(); /* Check attention identifier*/
    FM0J-4000L(); /* Reset fields to normal intensity*/
    FM0J-5000L(); /* Verify the entered data*/
    FM0J-6000L(); /* Process valid input request*/
  else
    ;
     /* PERFORM FM0J-1000R;          /* Obtain the data to display*/
    FM0J-2000R(); /* Format and display the map*/
    FM0J-3000R(); /* Check attention identifier*/
    FM0J-4000R(); /* Reset fields to normal intensity*/
    FM0J-5000R(); /* Verify the entered data*/
    FM0J-6000R(); /* Process valid input request*/
  end
  ;
  ;
end // end FM0J-0010

// Obtain data to display
Function FM0J-1000L()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW00.XXXTSLEN = 1475; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0JW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  FM0JW00.FM0JW-PO-HDR-FOUND-SW = "N";
  FM0JW00.FM0JW-PO-DTL-FOUND-SW = "N";
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0J-1100L(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the vendor description.*/
   /* --------------------------------------------------------------*/
  ;
  FM0J-1200L(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Select the factory/vendor PO header record.*/
   /* --------------------------------------------------------------*/
  ;
  FM0J-1300L(); /* Select DCMPNT.VFVHDR01*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare and process a cursor to get all po item records from*/
   /* DCMPNT.VFVITM01.  For every color item found, obtain order*/
   /* adjustments and order shipments.  Format records to temporary*/
   /* storage.*/
   /*  */
   /* (NOTE:  NO MORE THAN 1 PO ITEM MAY BE DISPLAYED PER PAGE)*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-PO-HDR-FOUND-SW == "Y") /* If PO hdr was found*/
    ;
    FM0JW00.FM0JW-END-VFVITM01-CSR-SW = "N";

    FM0J-1400L(); /* Declare DCMPNT.VFVITM01 cursor*/
    FM0J-1500L(); /* Fetch DCMPNT.VFVITM01 cursor*/
    ;
    while (FM0JW00.FM0JW-END-VFVITM01-CSR-SW != "Y")
      ;
      FM0J-1600L(); /* Process PO item records*/
      ;
      if (FM0JW00.FM0JW-IDX > 1) /* Data formatted*/
        FM0J-1700L(); /* Add page to temporary storage queue*/
      end
      ;
      FM0J-1500L(); /* Fetch DCMPNT.VFVITM01 cursor*/
    end
    ;
    FM0J-1800L(); /* Close DCMPNT.VFVITM01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If data was found, save map header information.  Otherwise,*/
   /* set up 'no data to display' message.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0JW00.TA5TSQIX == 0) /* If data was not found*/
    ;
    if (FM0JW00.FM0JW-PO-HDR-FOUND-SW == "Y") /* If po hdr found*/
      ;
      FM0J-1900L(); /* Save header in disp storage*/
      FM0J-1700L(); /* Add page to temporary storage queue*/
    end
    ;
    converseLib.validationFailed(18); /* Request processed - no data*/
    FKWREC.XXX-MOD-ID = "1000L"; /* Module identification*/
  else
    ;
    FM0JW00.FM0JW-PO-DTL-FOUND-SW = "Y";
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-REQUEST-DATA-SW = "N";
  FM0JW00.FM0JW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0J-1000L

// Purge any temporary storage
Function FM0J-1100L()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0JW01 empty; /* m110 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0JW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0JW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1100L"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0J-1100L

// Select DCMPNT.VVNDR001
Function FM0J-1200L()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0JM110.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      VVNDR001.FK-VEND-SNM = "************";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1200L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1200L SELECT DCMPNT.VVNDR001";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0J-1200L

// Select DCMPNT.VFVHDR01 ('SA')
Function FM0J-1300L()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-VEND-CD = FM0JM110.FK-VEND-CD; /* Vendor*/
  VFVHDR01.FY1FCTYC = FM0JM110.FY1FCTYC; /* Factory*/
  ;
  FM0JW00.FM0JW-FMAT-PO-YY = FM0JM110.FM0JM-FK-NIKE-PO-YY;
  FM0JW00.FM0JW-FMAT-PO-PP = FM0JM110.FM0JM-FK-NIKE-PO-PP;
  FM0JW00.FM0JW-FMAT-PO-DD = FM0JM110.FM0JM-FK-NIKE-PO-DD;
  if (FM0JW00.FM0JW-FMAT-PO-YY < 80)
    FM0JW-FMAT-PO-CC = 20;
  else
    FM0JW-FMAT-PO-CC = 19;
  end
  VFVHDR01.PC3POIDT = FM0JW00.FM0JW-FMAT-PO-DT;
  ;
  FM0JW00.FM0JW-FMAT-MAP-DT = FM0JM110.FK-FCTY-PO-DT;
  FM0JW00.FM0JW-FMAT-ORDER-YY = FM0JW00.FM0JW-FMAT-MAP-YY;
  FM0JW00.FM0JW-FMAT-ORDER-MM = FM0JW00.FM0JW-FMAT-MAP-MM;
  FM0JW00.FM0JW-FMAT-ORDER-DD = FM0JW00.FM0JW-FMAT-MAP-DD;
  if (FM0JW00.FM0JW-FMAT-ORDER-YY < 80)
    FM0JW00.FM0JW-FMAT-ORDER-CC = 20;
  else
    FM0JW00.FM0JW-FMAT-ORDER-CC = 19;
  end
  VFVHDR01.FK-FCTY-PO-DT = FM0JW00.FM0JW-FMAT-ORDER-DT; /* PO date*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "SA"; /* Select alt*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0JW00.FM0JW-PO-HDR-FOUND-SW = "Y"; /* PO was found*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0JW00.FM0JW-PO-HDR-FOUND-SW = "N"; /* PO was not found*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-PO-HDR-FOUND-SW = "N";
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1300L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (SA)";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1300L

// Decl DCMPNT.VFVITM01 csr
Function FM0J-1400L()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVITM01 empty; /* Clear storage record*/
  ;
  VFVITM01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  ;
  try
    call "IO6830" ("S1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1400L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECL DCMPNT.VFVITM01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1400L

// Fetch DCMPNT.VFVITM01 csr
Function FM0J-1500L()
   /* ------------------------------------------------------------*/
   /* Fetch a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6830" ("N1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0JW00.FM0JW-END-VFVITM01-CSR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1500L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VFVITM01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1500L

// Process DCMPNT.VFVITM01 recs
Function FM0J-1600L()
   /* --------------------------------------------------------------*/
   /* Obtain the material description from DCMPNT.VMATRL01.*/
   /* --------------------------------------------------------------*/
  ;
  FM0J-1610L(); /* Select DCMPNT.VMATRL01*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Get the color description.*/
   /* --------------------------------------------------------------*/
  ;
  if (VFVITM01.XCLCD in XCLTBL.XCLCD /* If color in table*/
   && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* And active status*/
    ;
    FM0JW00.XCLDESC = XCLTBL.XCLDESC[sysVar.arrayIndex]; /* Save desc*/
  else
    ;
    FM0JW00.XCLDESC = "***************";
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save VFVHDR01 data and 'ORD' data in display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-IDX = 1; /* Init index*/
  ;
  FM0J-1620L(); /* Save data in display storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Process PO adjustments.*/
   /* --------------------------------------------------------------*/
  ;
  FM0J-1630L(); /* Process PO adjustments*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Process PO shipments.*/
   /* --------------------------------------------------------------*/
  ;
  FM0J-1640L(); /* Process PO shipments*/
  ;
  ;
end // end FM0J-1600L

// Select DCMPNT.VMATRL01
Function FM0J-1610L()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty; /* Clear storage record*/
  ;
  VMATRL01.FK-MAT-NBR = VFVITM01.FK-MAT-NBR; /* Material nbr*/
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FM0JW00.FM0JM-BAL-TO-SHIP-UOM = VMATRL01.XMU-MAT-UOM-CD;
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      VMATRL01.FK-DEPT-MAT-DESC = "************";
      VMATRL01.XMU-MAT-UOM-CD = "**";
      FM0JW00.FM0JM-BAL-TO-SHIP-UOM = "**";
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1610L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVITM01  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1610L

// Save hdr and ORD in disp store
Function FM0J-1620L()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW01.FK-VEND-CD = FM0JM110.FK-VEND-CD; /* Vendor*/
  FM0JW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
  FM0JW01.FK-FCTY-PO-DT = FM0JM110.FK-FCTY-PO-DT; /* PO date*/
  FM0JW01.FM0JM-FK-NIKE-PO-YY = FM0JM110.FM0JM-FK-NIKE-PO-YY;
  FM0JW01.FM0JM-FK-NIKE-PO-PP = FM0JM110.FM0JM-FK-NIKE-PO-PP;
  FM0JW01.FM0JM-FK-NIKE-PO-DD = FM0JM110.FM0JM-FK-NIKE-PO-DD;
  FM0JW01.FY1FCTYC = FM0JM110.FY1FCTYC; /* Factory*/
  FM0JW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
  FM0JW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
  FM0JW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
  FM0JW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
  FM0JW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the 'ORD' detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW01.FK-MAT-NBR[FM0JW-IDX] = VFVITM01.FK-MAT-NBR; /* Material*/
  FM0JW01.FK-DEPT-MAT-DESC[FM0JW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0JW01.XCLCD[FM0JW-IDX] = VFVITM01.XCLCD; /* Color*/
  FM0JW01.XCLDESC[FM0JW-IDX] = FM0JW00.XCLDESC; /* Color desc*/
  FM0JW01.FM0JM-LINE-DESC[FM0JW-IDX] = "ORD"; /* Line desc*/
  FM0JW01.FM0JM-QTY[FM0JW-IDX] = VFVITM01.FK-MAT-ORD-QTY; /* Qty*/
  FM0JW01.XMU-MAT-UOM-CD[FM0JW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* UOM*/
  FM0JW01.FM0JM-DT[FM0JW-IDX] = VFVHDR01.FK-FCTY-PO-DT; /* Order date*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Increment the index for the display storage page.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1; /* Increment line index*/
  ;
  ;
end // end FM0J-1620L

// Obtain order adjustments
Function FM0J-1630L()
   /* ----------------------------------------------------------------*/
   /* Declare a cursor to get order adjustments from DCMPNT.VFVADJ01.*/
   /* ----------------------------------------------------------------*/
  ;
  FM0J-1631L(); /* Decl DCMPNT.VFVADJ01 cursor*/
  ;
  ;
   /* ----------------------------------------------------------------*/
   /* Fetch a record from the DCMPNT.VFVADJ01 cursor.*/
   /* ----------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-END-VFVADJ01-CSR-SW = "N";
  ;
  FM0J-1632L(); /* Fetch DCMPNT.VFVADJ01 cursor*/
  ;
  ;
   /* ----------------------------------------------------------------*/
   /* Save adjustment records to display storage until end of cursor.*/
   /* ----------------------------------------------------------------*/
  ;
  while (FM0JW00.FM0JW-END-VFVADJ01-CSR-SW == "N")
    ;
    FM0J-1633L(); /* Format 'ADJ' line to display storage*/
    ;
    FM0J-1632L(); /* Fetch DCMPNT.VFVADJ01 cursor*/
  end
  ;
  ;
   /* ----------------------------------------------------------------*/
   /* Close the DCMPNT.VFVADJ01 cursor.*/
   /* ----------------------------------------------------------------*/
  ;
  FM0J-1634L(); /* Close DCMPNT.VFVADJ01 cursor*/
  ;
  ;
end // end FM0J-1630L

// Decl DCMPNT.VFVADJ01 csr
Function FM0J-1631L()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVADJ01 empty; /* Clear storage record*/
  ;
  VFVADJ01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  VFVADJ01.FK-MAT-NBR = VFVITM01.FK-MAT-NBR;
  VFVADJ01.XMG-COLR-GRP-CD = VFVITM01.XMG-COLR-GRP-CD;
  VFVADJ01.XCLCD = VFVITM01.XCLCD;
  ;
  try
    call "IO6840" ("S2", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1631L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECL DCMPNT.VFVADJ01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1631L

// Fetch DCMPNT.VFVADJ01 csr
Function FM0J-1632L()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6840" ("N2", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0JW00.FM0JW-END-VFVADJ01-CSR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1632L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VFVADJ01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1632L

// Save 'ADJ' in disp storage
Function FM0J-1633L()
   /* --------------------------------------------------------------*/
   /* If this is the first line on the page, save header.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW01.FK-VEND-CD = FM0JM110.FK-VEND-CD; /* Vendor*/
  FM0JW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
  FM0JW01.FK-FCTY-PO-DT = FM0JM110.FK-FCTY-PO-DT; /* PO date*/
  FM0JW01.FM0JM-FK-NIKE-PO-YY = FM0JM110.FM0JM-FK-NIKE-PO-YY;
  FM0JW01.FM0JM-FK-NIKE-PO-PP = FM0JM110.FM0JM-FK-NIKE-PO-PP;
  FM0JW01.FM0JM-FK-NIKE-PO-DD = FM0JM110.FM0JM-FK-NIKE-PO-DD;
  FM0JW01.FY1FCTYC = FM0JM110.FY1FCTYC; /* Factory*/
  FM0JW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
  FM0JW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
  FM0JW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
  FM0JW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
  FM0JW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the 'ADJ' detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW01.FK-MAT-NBR[FM0JW-IDX] = VFVITM01.FK-MAT-NBR; /* Material*/
  FM0JW01.FK-DEPT-MAT-DESC[FM0JW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0JW01.XCLCD[FM0JW-IDX] = VFVITM01.XCLCD; /* Color*/
  FM0JW01.XCLDESC[FM0JW-IDX] = FM0JW00.XCLDESC; /* Color desc*/
  FM0JW01.FM0JM-LINE-DESC[FM0JW-IDX] = "ADJ"; /* Line desc*/
  FM0JW01.FM0JM-QTY[FM0JW-IDX] = VFVADJ01.FK-FCTY-PO-ADJ-QTY; /* Qty*/
  FM0JW01.XMU-MAT-UOM-CD[FM0JW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* UOM*/
  FM0JW01.FM0JM-DT[FM0JW-IDX] = VFVADJ01.FK-FCTY-PO-ADJ-DT;
  FM0JW01.FM0JM-COMNT[FM0JW-IDX] = VFVADJ01.FK-PO-ADJ-COMNT;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Increment the index for the display storage page.*/
   /* If the page is full, add page to temporary storage page queue.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-IDX == FM0JW00.FM0JW-NBR-MAP-ROWS) /* If page full*/
    ;
    FM0J-1700L(); /* Add page to temp storage*/
    FM0JW00.FM0JW-IDX = 0; /* Reset index*/
  end
  ;
  FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1; /* Increment line index*/
  ;
  ;
end // end FM0J-1633L

// Close DCMPNT.VFVADJ01 csr
Function FM0J-1634L()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6840" ("C2", SQLCA, VFVADJ01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1634L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VFVADJ01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVADJ01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVADJ01.VFVADJ01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1634L

// Obtain order shipments
Function FM0J-1640L()
   /* ----------------------------------------------------------------*/
   /* Declare a cursor to get order adjustments from DCMPNT.VFVSHP01.*/
   /* ----------------------------------------------------------------*/
  ;
  FM0J-1641L(); /* Decl DCMPNT.VFVSHP01 cursor*/
  ;
  ;
   /* ----------------------------------------------------------------*/
   /* Fetch a record from the DCMPNT.VFVSHP01 cursor.*/
   /* ----------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-END-VFVSHP01-CSR-SW = "N";
  ;
  FM0J-1642L(); /* Fetch DCMPNT.VFVSHP01 cursor*/
  ;
  ;
   /* ----------------------------------------------------------------*/
   /* Save shipment records to display storage until end of cursor.*/
   /* ----------------------------------------------------------------*/
  ;
  while (FM0JW00.FM0JW-END-VFVSHP01-CSR-SW == "N")
    ;
    FM0J-1643L(); /* Format 'SHP' line to display storage*/
    ;
    FM0J-1642L(); /* Fetch DCMPNT.VFVSHP01 cursor*/
  end
  ;
  ;
   /* ----------------------------------------------------------------*/
   /* Close the DCMPNT.VFVSHP01 cursor.*/
   /* ----------------------------------------------------------------*/
  ;
  FM0J-1644L(); /* Close DCMPNT.VFVSHP01 cursor*/
  ;
  ;
end // end FM0J-1640L

// Decl DCMPNT.VFVSHP01 csr
Function FM0J-1641L()
   /* ------------------------------------------------------------*/
   /* Declare a cursor on the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVSHP01 empty; /* Clear storage record*/
  ;
  VFVSHP01.FK-INTRN-PO-ID = VFVHDR01.FK-INTRN-PO-ID;
  VFVSHP01.FK-MAT-NBR = VFVITM01.FK-MAT-NBR;
  VFVSHP01.XMG-COLR-GRP-CD = VFVITM01.XMG-COLR-GRP-CD;
  VFVSHP01.XCLCD = VFVITM01.XCLCD;
  ;
  try
    call "IO6850" ("S2", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1641L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECL DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1641L

// Fetch DCMPNT.VFVSHP01 csr
Function FM0J-1642L()
   /* ------------------------------------------------------------*/
   /* Fetch a row from the requested table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6850" ("N2", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      FM0JW00.FM0JW-END-VFVSHP01-CSR-SW = "Y"; /* End of cursor*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1642L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1642L

// Save 'SHP' in disp storage
Function FM0J-1643L()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW01.FK-VEND-CD = FM0JM110.FK-VEND-CD; /* Vendor*/
  FM0JW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
  FM0JW01.FK-FCTY-PO-DT = FM0JM110.FK-FCTY-PO-DT; /* PO date*/
  FM0JW01.FM0JM-FK-NIKE-PO-YY = FM0JM110.FM0JM-FK-NIKE-PO-YY;
  FM0JW01.FM0JM-FK-NIKE-PO-PP = FM0JM110.FM0JM-FK-NIKE-PO-PP;
  FM0JW01.FM0JM-FK-NIKE-PO-DD = FM0JM110.FM0JM-FK-NIKE-PO-DD;
  FM0JW01.FY1FCTYC = FM0JM110.FY1FCTYC; /* Factory*/
  FM0JW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
  FM0JW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
  FM0JW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
  FM0JW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
  FM0JW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the 'SHP' detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW01.FK-MAT-NBR[FM0JW-IDX] = VFVITM01.FK-MAT-NBR; /* Material*/
  FM0JW01.FK-DEPT-MAT-DESC[FM0JW-IDX] = VMATRL01.FK-DEPT-MAT-DESC; /* Material desc*/
  FM0JW01.XCLCD[FM0JW-IDX] = VFVITM01.XCLCD; /* Color*/
  FM0JW01.XCLDESC[FM0JW-IDX] = FM0JW00.XCLDESC; /* Color desc*/
  FM0JW01.FM0JM-LINE-DESC[FM0JW-IDX] = "SHP"; /* Line desc*/
  FM0JW01.FM0JM-QTY[FM0JW-IDX] = VFVSHP01.FK-FCTY-PO-SHP-QTY; /* Qty*/
  FM0JW01.XMU-MAT-UOM-CD[FM0JW-IDX] = VMATRL01.XMU-MAT-UOM-CD; /* UOM*/
  FM0JW01.FM0JM-DT[FM0JW-IDX] = VFVSHP01.FK-ACTL-SHP-DT;
  FM0JW01.FM0JM-COMNT[FM0JW-IDX] = VFVSHP01.FK-PO-SHP-COMNT;
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Increment the index for the display storage page.*/
   /* If the page is full, add page to temporary storage page queue.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-IDX == FM0JW00.FM0JW-NBR-MAP-ROWS) /* If page full*/
    ;
    FM0J-1700L(); /* Add page to temp storage*/
    FM0JW00.FM0JW-IDX = 0; /* Reset index*/
  end
  ;
  FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1; /* Increment line index*/
  ;
end // end FM0J-1643L

// Close DCMPNT.VFVSHP01 csr
Function FM0J-1644L()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6850" ("C2", SQLCA, VFVSHP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1644L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VFVSHP01 CSR   ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVSHP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVSHP01.VFVSHP01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1644L

// Add page to temporary storage
Function FM0J-1700L()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0JW01.XXXTSLEN = FM0JW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0JW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0JW01 empty; /* m110 display storage*/
    ;
    FM0JW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1700L"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0J-1700L

// Close DCMPNT.VFVITM01 csr
Function FM0J-1800L()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO6830" ("C1", SQLCA, VFVITM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1800L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE DCMPNT.VFVITM01 CSR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVITM01.VFVITM01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-1800L

// Save hdr in disp storage
Function FM0J-1900L()
   /* --------------------------------------------------------------*/
   /* Save the header.*/
   /* --------------------------------------------------------------*/
  ;
  FM0JW01.FK-VEND-CD = FM0JM110.FK-VEND-CD; /* Vendor*/
  FM0JW01.FK-VEND-SNM = VVNDR001.FK-VEND-SNM; /* Vendor name*/
  FM0JW01.FK-FCTY-PO-DT = FM0JM110.FK-FCTY-PO-DT; /* PO date*/
  FM0JW01.FM0JM-FK-NIKE-PO-YY = FM0JM110.FM0JM-FK-NIKE-PO-YY;
  FM0JW01.FM0JM-FK-NIKE-PO-PP = FM0JM110.FM0JM-FK-NIKE-PO-PP;
  FM0JW01.FM0JM-FK-NIKE-PO-DD = FM0JM110.FM0JM-FK-NIKE-PO-DD;
  FM0JW01.FY1FCTYC = FM0JM110.FY1FCTYC; /* Factory*/
  FM0JW01.FK-FCTY-PO-ID = VFVHDR01.FK-FCTY-PO-ID; /* PO nbr*/
  FM0JW01.FK-EST-SHP-DT1 = VFVHDR01.FK-EST-SHP-DT1; /* Ship date 1*/
  FM0JW01.FK-EST-SHP-DT2 = VFVHDR01.FK-EST-SHP-DT2; /* Ship date 2*/
  FM0JW01.FK-EST-SHP-DT3 = VFVHDR01.FK-EST-SHP-DT3; /* Ship date 3*/
  FM0JW01.FK-FCTY-PO-COMNT = VFVHDR01.FK-FCTY-PO-COMNT; /* Comment*/
  ;
  ;
end // end FM0J-1900L

// Format and converse the map
Function FM0J-2000L()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-FMAT-MAP-SW == "Y" /* Format requested*/
  )                                   
    if (converseVar.validationMsgNum == 0   /* No error to display*/
     || (converseVar.validationMsgNum == 18 /* No data to display*/
     && FM0JW00.FM0JW-PO-HDR-FOUND-SW == "Y")) /* And po hdr found*/
      ;
      FM0J-2100L(); /* Format the map*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0JM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0JM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0JM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0JM110 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0JM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0JM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0JM110.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set header data dark if no data to display.*/
   /* (no detail lines formatted to temporary storage).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-PO-HDR-FOUND-SW != "Y") /* If po hdr not found*/
    ;
    set FM0JM110.XXXTSPAG invisible, skip;
    set FM0JM110.TA5TSQIX invisible, skip;
    set FM0JM110.FK-FCTY-PO-ID invisible, skip;
    set FM0JM110.FK-EST-SHP-DT1 invisible, skip;
    set FM0JM110.FK-EST-SHP-DT2 invisible, skip;
    set FM0JM110.FK-EST-SHP-DT3 invisible, skip;
    set FM0JM110.FK-FCTY-PO-COMNT invisible, skip;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (no detail lines formatted to temporary storage).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-PO-DTL-FOUND-SW != "Y") /* If po dtl not found*/
    ;
    set FM0JM110.FM0JM-SELECT invisible, skip;
    FM0JW00.FM0JW-IDX = 1; /* Init index*/
    while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS)
      ;
      set FM0JM110.FK-MAT-NBR[FM0JW-IDX] invisible, skip;
      set FM0JM110.FK-DEPT-MAT-DESC[FM0JW-IDX] invisible, skip;
      set FM0JM110.XCLCD[FM0JW-IDX] invisible, skip;
      set FM0JM110.XCLDESC[FM0JW-IDX] invisible, skip;
      set FM0JM110.FM0JM-LINE-DESC[FM0JW-IDX] invisible, skip;
      set FM0JM110.FM0JM-QTY[FM0JW-IDX] invisible, skip;
      set FM0JM110.XMU-MAT-UOM-CD[FM0JW-IDX] invisible, skip;
      set FM0JM110.FM0JM-DT[FM0JW-IDX] invisible, skip;
      set FM0JM110.FM0JM-COMNT-FL[FM0JW-IDX] invisible, skip;
      ;
      FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1; /* Increment*/
    end
    ;
    set FM0JM110.FM0JM-BAL-TO-SHIP-QTY invisible, skip;
    set FM0JM110.FM0JM-BAL-TO-SHIP-UOM invisible, skip;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but there is at least partial data on the map).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-PO-DTL-FOUND-SW == "Y") /* PO dtl found*/
    ;
    FM0JW00.FM0JW-IDX = 1; /* Init index*/
    while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS)
      ;
      if (FM0JM110.FM0JM-DT[FM0JW-IDX] == 0) /* If no data on this line*/
        ;
        set FM0JM110.FK-MAT-NBR[FM0JW-IDX] invisible, skip;
        set FM0JM110.FK-DEPT-MAT-DESC[FM0JW-IDX] invisible, skip;
        set FM0JM110.XCLCD[FM0JW-IDX] invisible, skip;
        set FM0JM110.XCLDESC[FM0JW-IDX] invisible, skip;
        set FM0JM110.FM0JM-LINE-DESC[FM0JW-IDX] invisible, skip;
        set FM0JM110.FM0JM-QTY[FM0JW-IDX] invisible, skip;
        set FM0JM110.XMU-MAT-UOM-CD[FM0JW-IDX] invisible, skip;
        set FM0JM110.FM0JM-DT[FM0JW-IDX] invisible, skip;
        set FM0JM110.FM0JM-COMNT-FL[FM0JW-IDX] invisible, skip;
      end
      ;
      FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Always set duplicate data dark.*/
   /* ------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-IDX = 2; /* Init index*/
  while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS)
    ;
    set FM0JM110.FK-MAT-NBR[FM0JW-IDX] invisible, skip;
    set FM0JM110.FK-DEPT-MAT-DESC[FM0JW-IDX] invisible, skip;
    set FM0JM110.XCLCD[FM0JW-IDX] invisible, skip;
    set FM0JM110.XCLDESC[FM0JW-IDX] invisible, skip;
    ;
    FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1; /* Increment*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* If no message to display*/
   || converseVar.validationMsgNum == 18) /* No data to display*/
    set FM0JM110.FK-VEND-CD cursor;
  end
  ;
  ;
  converse FM0JM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0JM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0JM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0J-2000L

// Format and converse the map
Function FM0J-2000R()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JW00.FM0JW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0J-2100R(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0JM120.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0JM120.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0JM120.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0JM120 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0JM120.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0JM120.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0JM120.FK-VEND-SNM = VVNDR001.FK-VEND-SNM;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set all detail lines dark if no data to display on them*/
   /* (but there is at least partial data on the map).*/
   /* ------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-IDX = 1; /* Init index*/
  while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS)
    ;
    if (FM0JM120.FM0JM-DT[FM0JW-IDX] == 0) /* If no data on this line*/
      ;
      set FM0JM120.FM0JM-LINE-DESC[FM0JW-IDX] invisible, skip;
      set FM0JM120.FM0JM-DT[FM0JW-IDX] invisible, skip;
      set FM0JM120.FM0JM-COMNT[FM0JW-IDX] invisible, skip;
    end
    ;
    FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1; /* Increment*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0 /* If no message to display*/
   || converseVar.validationMsgNum == 18) /* No data to display*/
    set FM0JM120.FK-VEND-CD cursor;
  end
  ;
  ;
  converse FM0JM120 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0JM120.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0JM120.CAITEM; /* Application data*/
  ;
  ;
end // end FM0J-2000R

// Format the data to display
Function FM0J-2100L()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0JM110 initial; /* Initialize map*/
  ;
  FM0JW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0JW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0JW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0JW00.XXXTSPAG > FM0JW00.TA5TSQIX) /* Desired page > highest*/
        FM0JW00.XXXTSPAG = FM0JW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0J-2110L(); /* Obtain temp storage page*/
      ;
      FM0J-2120L(); /* Calculate balance to ship*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0JM110.XXXTSPAG = FM0JW00.XXXTSPAG; /* Current page*/
  FM0JM110.TA5TSQIX = FM0JW00.TA5TSQIX; /* Max page*/
  ;
  FM0JM110.FK-VEND-CD = FM0JW01.FK-VEND-CD; /* Vendor*/
  FM0JM110.FK-FCTY-PO-DT = FM0JW01.FK-FCTY-PO-DT;
  FM0JM110.FM0JM-FK-NIKE-PO-YY = FM0JW01.FM0JM-FK-NIKE-PO-YY;
  FM0JM110.FM0JM-FK-NIKE-PO-PP = FM0JW01.FM0JM-FK-NIKE-PO-PP;
  FM0JM110.FM0JM-FK-NIKE-PO-DD = FM0JW01.FM0JM-FK-NIKE-PO-DD;
  FM0JM110.FY1FCTYC = FM0JW01.FY1FCTYC;
  FM0JM110.FK-FCTY-PO-ID = FM0JW01.FK-FCTY-PO-ID;
  FM0JM110.FK-EST-SHP-DT1 = FM0JW01.FK-EST-SHP-DT1;
  FM0JM110.FK-EST-SHP-DT2 = FM0JW01.FK-EST-SHP-DT2;
  FM0JM110.FK-EST-SHP-DT3 = FM0JW01.FK-EST-SHP-DT3;
  FM0JM110.FK-FCTY-PO-COMNT = FM0JW01.FK-FCTY-PO-COMNT;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0JW00.FM0JW-IDX = 1; /* Initialize idx*/
  while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS)
    ;
    FM0JM110.FK-MAT-NBR[FM0JW-IDX] = FM0JW01.FK-MAT-NBR[FM0JW-IDX]; /* Material nbr*/
    FM0JM110.FK-DEPT-MAT-DESC[FM0JW-IDX] = FM0JW01.FK-DEPT-MAT-DESC[FM0JW-IDX]; /* Material desc*/
    FM0JM110.XCLCD[FM0JW-IDX] = FM0JW01.XCLCD[FM0JW-IDX]; /* Color code*/
    FM0JM110.XCLDESC[FM0JW-IDX] = FM0JW01.XCLDESC[FM0JW-IDX]; /* Color desc*/
    FM0JM110.FM0JM-LINE-DESC[FM0JW-IDX] = FM0JW01.FM0JM-LINE-DESC[FM0JW-IDX]; /* Color desc*/
    FM0JM110.FM0JM-QTY[FM0JW-IDX] = FM0JW01.FM0JM-QTY[FM0JW-IDX]; /* Quantity*/
    FM0JM110.XMU-MAT-UOM-CD[FM0JW-IDX] = FM0JW01.XMU-MAT-UOM-CD[FM0JW-IDX]; /* UOM*/
    FM0JM110.FM0JM-DT[FM0JW-IDX] = FM0JW01.FM0JM-DT[FM0JW-IDX]; /* Date*/
    if (FM0JW01.FM0JM-COMNT[FM0JW-IDX] > " ") /* If comment exists*/
      FM0JM110.FM0JM-COMNT-FL[FM0JW-IDX] = "Y"; /* Set flag 'y'*/
    else
      FM0JM110.FM0JM-COMNT-FL[FM0JW-IDX] = "N"; /* Set flag 'n'*/
    end
    ;
    FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1;
  end
  ;
  FM0JM110.FM0JM-BAL-TO-SHIP-QTY = FM0JW00.FM0JM-BAL-TO-SHIP-QTY; /* Balance to ship quantity*/
  FM0JM110.FM0JM-BAL-TO-SHIP-UOM = FM0JW00.FM0JM-BAL-TO-SHIP-UOM; /* Balance to ship UOM*/
  ;
  ;
end // end FM0J-2100L

// Format the data to display
Function FM0J-2100R()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0JM120 initial; /* Initialize map*/
  ;
  FM0JW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0JW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0JW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0JW00.XXXTSPAG > FM0JW00.TA5TSQIX) /* Desired page > highest*/
        FM0JW00.XXXTSPAG = FM0JW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0J-2110R(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0JM120.XXXTSPAG = FM0JW00.XXXTSPAG; /* Current page*/
  FM0JM120.TA5TSQIX = FM0JW00.TA5TSQIX; /* Max page*/
  ;
  FM0JM120.FK-VEND-CD = FM0JW01.FK-VEND-CD; /* Vendor*/
  FM0JM120.FK-FCTY-PO-DT = FM0JW01.FK-FCTY-PO-DT;
  FM0JM120.FM0JM-FK-NIKE-PO-YY = FM0JW01.FM0JM-FK-NIKE-PO-YY;
  FM0JM120.FM0JM-FK-NIKE-PO-PP = FM0JW01.FM0JM-FK-NIKE-PO-PP;
  FM0JM120.FM0JM-FK-NIKE-PO-DD = FM0JW01.FM0JM-FK-NIKE-PO-DD;
  FM0JM120.FY1FCTYC = FM0JW01.FY1FCTYC;
  FM0JM120.FK-FCTY-PO-ID = FM0JW01.FK-FCTY-PO-ID;
  FM0JM120.FK-EST-SHP-DT1 = FM0JW01.FK-EST-SHP-DT1;
  FM0JM120.FK-EST-SHP-DT2 = FM0JW01.FK-EST-SHP-DT2;
  FM0JM120.FK-EST-SHP-DT3 = FM0JW01.FK-EST-SHP-DT3;
  FM0JM120.FK-FCTY-PO-COMNT = FM0JW01.FK-FCTY-PO-COMNT;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0JM120.FK-MAT-NBR = FM0JW01.FK-MAT-NBR[1]; /* Material nbr*/
  FM0JM120.FK-DEPT-MAT-DESC = FM0JW01.FK-DEPT-MAT-DESC[1]; /* Material desc*/
  FM0JM120.XCLCD = FM0JW01.XCLCD[1]; /* Color code*/
  FM0JM120.XCLDESC = FM0JW01.XCLDESC[1]; /* Color desc*/
  ;
  FM0JW00.FM0JW-IDX = 1; /* Initialize idx*/
  while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS)
    ;
    FM0JM120.FM0JM-LINE-DESC[FM0JW-IDX] = FM0JW01.FM0JM-LINE-DESC[FM0JW-IDX]; /* Color desc*/
    FM0JM120.FM0JM-DT[FM0JW-IDX] = FM0JW01.FM0JM-DT[FM0JW-IDX]; /* Date*/
    FM0JM120.FM0JM-COMNT[FM0JW-IDX] = FM0JW01.FM0JM-COMNT[FM0JW-IDX]; /* Comment*/
    ;
    FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1;
  end
  ;
  ;
end // end FM0J-2100R

// Read page from temp storage
Function FM0J-2110L()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0JW01.XXXTSLEN = FM0JW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0JW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0JW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "2110L"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0J-2110L

// Read page from temp storage
Function FM0J-2110R()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0JW01.XXXTSLEN = FM0JW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0JW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0JW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "2110R"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M120"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0J-2110R

// Calculate balance to ship
Function FM0J-2120L()
   /* --------------------------------------------------------------------*/
   /* Calculate balance to ship.  Since it is possible to have adjustments*/
   /* and shipments cover more than 1 map page, we will need to search*/
   /* through all temporary storage pages for the current key (material*/
   /* and color) and handle each temporary storage page accordingly.*/
   /* When all is done, re-obtain the current temporary storage page.*/
   /* --------------------------------------------------------------------*/
  ;
   /* ====> Save the current page number*/
  ;
  FM0JW00.FM0JW-SAVED-PAGE-NBR = FM0JW00.XXXTSPAG; /* Save page*/
  ;
  ;
   /* ====> Save the current key (material/color)*/
  ;
  FM0JW00.FM0JW-SAVED-FK-MAT-NBR = FM0JW01.FK-MAT-NBR[1];
  FM0JW00.FM0JW-SAVED-XCLCD = FM0JW01.XCLCD[1];
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Search through each temporary storage page for the current key.*/
   /* Whenever a match is found, save the data to 'balance to ship'.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0JW00.XXXTSPAG = 1; /* Start at the fist page*/
  ;
  while (FM0JW00.XXXTSPAG <= FM0JW00.TA5TSQIX) /* For each page*/
    ;
    FM0J-2110L(); /* Obtain temp storage page*/
    ;
    if (FM0JW01.FK-MAT-NBR[1] == FM0JW00.FM0JW-SAVED-FK-MAT-NBR
     && FM0JW01.XCLCD[1] == FM0JW00.FM0JW-SAVED-XCLCD) /* If key matches*/
      ;
      FM0JW00.FM0JW-IDX = 1; /* Initialize line index*/
      while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS)
        ;
        if (FM0JW01.FM0JM-LINE-DESC[FM0JW-IDX] == "ORD") /* If ordered line*/
          FM0JW00.FM0JM-BAL-TO-SHIP-QTY = FM0JW01.FM0JM-QTY[FM0JW-IDX]; /* Move qty to bal to ship*/
        else
          ;
          if (FM0JW01.FM0JM-LINE-DESC[FM0JW-IDX] == "ADJ") /* If adj line*/
            FM0JW00.FM0JM-BAL-TO-SHIP-QTY = FM0JW00.FM0JM-BAL-TO-SHIP-QTY             + FM0JW01.FM0JM-QTY[FM0JW-IDX]; /* Add adjustment to balance*/
          else
            ;
            if (FM0JW01.FM0JM-LINE-DESC[FM0JW-IDX] == "SHP") /* Shipment*/
              FM0JW00.FM0JM-BAL-TO-SHIP-QTY = FM0JW00.FM0JM-BAL-TO-SHIP-QTY               - FM0JW01.FM0JM-QTY[FM0JW-IDX]; /* Sub ship from balance*/
            end
          end
        end
        ;
        FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1; /* Increment line index*/
      end
    end
    ;
    FM0JW00.XXXTSPAG = FM0JW00.XXXTSPAG + 1; /* Increment page index*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Re-obtain the current temporary storage page.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0JW00.XXXTSPAG = FM0JW00.FM0JW-SAVED-PAGE-NBR; /* Current page*/
  ;
  FM0J-2110L(); /* Obtain temp storage page*/
  ;
  ;
end // end FM0J-2120L

// Check attention identifier
Function FM0J-3000L()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0JM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0JM110.FY1FCTYC; /* Factory*/
    ;
    if (FM0JM110.FM0JM-FK-NIKE-PO-YY == 0
     && FM0JM110.FM0JM-FK-NIKE-PO-PP == 0
     && FM0JM110.FM0JM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0JW00.FM0JW-FMAT-PO-YY = FM0JM110.FM0JM-FK-NIKE-PO-YY;
      FM0JW00.FM0JW-FMAT-PO-PP = FM0JM110.FM0JM-FK-NIKE-PO-PP;
      FM0JW00.FM0JW-FMAT-PO-DD = FM0JM110.FM0JM-FK-NIKE-PO-DD;
      if (FM0JW00.FM0JW-FMAT-PO-YY < 80)
        FM0JW00.FM0JW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0JW00.FM0JW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0JW00.FM0JW-FMAT-PO-DT; /**/
    end
    ;
    if (FM0JM110.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0JW00.FM0JW-FMAT-MAP-DT = FM0JM110.FK-FCTY-PO-DT;
      FM0JW00.FM0JW-FMAT-ORDER-YY = FM0JW00.FM0JW-FMAT-MAP-YY;
      FM0JW00.FM0JW-FMAT-ORDER-MM = FM0JW00.FM0JW-FMAT-MAP-MM;
      FM0JW00.FM0JW-FMAT-ORDER-DD = FM0JW00.FM0JW-FMAT-MAP-DD;
      if (FM0JW00.FM0JW-FMAT-ORDER-YY < 80)
        FM0JW00.FM0JW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0JW00.FM0JW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0JW00.FM0JW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0J"; /* to applicaiton*/
    COMMAREA.CAITEM = " "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0JM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FM0JM110.FK-VEND-CD; /* Vendor*/
      FKWREC.FY1FCTYC = FM0JM110.FY1FCTYC; /* Factory*/
      ;
      if (FM0JM110.FM0JM-FK-NIKE-PO-YY == 0
       && FM0JM110.FM0JM-FK-NIKE-PO-PP == 0
       && FM0JM110.FM0JM-FK-NIKE-PO-DD == 0)
        ;
        FKWREC.PC3POIDT = 0;
      else
        ;
        FM0JW00.FM0JW-FMAT-PO-YY = FM0JM110.FM0JM-FK-NIKE-PO-YY;
        FM0JW00.FM0JW-FMAT-PO-PP = FM0JM110.FM0JM-FK-NIKE-PO-PP;
        FM0JW00.FM0JW-FMAT-PO-DD = FM0JM110.FM0JM-FK-NIKE-PO-DD;
        if (FM0JW00.FM0JW-FMAT-PO-YY < 80)
          FM0JW00.FM0JW-FMAT-PO-CC = 20; /* Move 20 to century*/
        else
          FM0JW00.FM0JW-FMAT-PO-CC = 19; /* Move 19 to century*/
        end
        FKWREC.PC3POIDT = FM0JW00.FM0JW-FMAT-PO-DT;
      end
      ;
      if (FM0JM110.FK-FCTY-PO-DT == 0)
        ;
        FKWREC.FK-FCTY-PO-DT = 0;
      else
        ;
        FM0JW00.FM0JW-FMAT-MAP-DT = FM0JM110.FK-FCTY-PO-DT;
        FM0JW00.FM0JW-FMAT-ORDER-YY = FM0JW00.FM0JW-FMAT-MAP-YY;
        FM0JW00.FM0JW-FMAT-ORDER-MM = FM0JW00.FM0JW-FMAT-MAP-MM;
        FM0JW00.FM0JW-FMAT-ORDER-DD = FM0JW00.FM0JW-FMAT-MAP-DD;
        if (FM0JW00.FM0JW-FMAT-ORDER-YY < 80)
          FM0JW00.FM0JW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
        else
          FM0JW00.FM0JW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
        end
        FKWREC.FK-FCTY-PO-DT = FM0JW00.FM0JW-FMAT-ORDER-DT;
      end
      ;
      COMMAREA.CATOAP = FM0JM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0JM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0JM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3000L"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* FK0B requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0JM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTPO requested*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8   /* FWRD requested*/
   && converseVar.eventKey not pf10  /* LEFT requested*/
   && converseVar.eventKey not pf11  /* RGHT requested*/
   && converseVar.eventKey not pf12  /* POMNT requested*/
   && converseVar.eventKey not pf14  /* POSHP requested*/
   && converseVar.eventKey not pf16  /* POLST requested*/
   && converseVar.eventKey not pf17) /* POMLT requested*/
    ;
    FKWREC.XXX-MOD-ID = "3000L"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0J-3000L

// Check attention identifier
Function FM0J-3000R()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0JM120.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0JM120.FY1FCTYC; /* Factory*/
    ;
    if (FM0JM120.FM0JM-FK-NIKE-PO-YY == 0
     && FM0JM120.FM0JM-FK-NIKE-PO-PP == 0
     && FM0JM120.FM0JM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0JW00.FM0JW-FMAT-PO-YY = FM0JM120.FM0JM-FK-NIKE-PO-YY;
      FM0JW00.FM0JW-FMAT-PO-PP = FM0JM120.FM0JM-FK-NIKE-PO-PP;
      FM0JW00.FM0JW-FMAT-PO-DD = FM0JM120.FM0JM-FK-NIKE-PO-DD;
      if (FM0JW00.FM0JW-FMAT-PO-YY < 80)
        FM0JW00.FM0JW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0JW00.FM0JW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0JW00.FM0JW-FMAT-PO-DT; /**/
    end
    ;
    if (FM0JM120.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0JW00.FM0JW-FMAT-MAP-DT = FM0JM120.FK-FCTY-PO-DT;
      FM0JW00.FM0JW-FMAT-ORDER-YY = FM0JW00.FM0JW-FMAT-MAP-YY;
      FM0JW00.FM0JW-FMAT-ORDER-MM = FM0JW00.FM0JW-FMAT-MAP-MM;
      FM0JW00.FM0JW-FMAT-ORDER-DD = FM0JW00.FM0JW-FMAT-MAP-DD;
      if (FM0JW00.FM0JW-FMAT-ORDER-YY < 80)
        FM0JW00.FM0JW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0JW00.FM0JW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0JW00.FM0JW-FMAT-ORDER-DT; /* PO date*/
    end
    ;
    COMMAREA.CATOAP = "FM0J"; /* to applicaiton*/
    COMMAREA.CAITEM = " "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0JM120.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JM120.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      FKWREC.FK-VEND-CD[1] = FM0JM120.FK-VEND-CD; /* Vendor*/
      FKWREC.FY1FCTYC = FM0JM120.FY1FCTYC; /* Factory*/
      ;
      if (FM0JM120.FM0JM-FK-NIKE-PO-YY == 0
       && FM0JM120.FM0JM-FK-NIKE-PO-PP == 0
       && FM0JM120.FM0JM-FK-NIKE-PO-DD == 0)
        ;
        FKWREC.PC3POIDT = 0;
      else
        ;
        FM0JW00.FM0JW-FMAT-PO-YY = FM0JM120.FM0JM-FK-NIKE-PO-YY;
        FM0JW00.FM0JW-FMAT-PO-PP = FM0JM120.FM0JM-FK-NIKE-PO-PP;
        FM0JW00.FM0JW-FMAT-PO-DD = FM0JM120.FM0JM-FK-NIKE-PO-DD;
        if (FM0JW00.FM0JW-FMAT-PO-YY < 80)
          FM0JW00.FM0JW-FMAT-PO-CC = 20; /* Move 20 to century*/
        else
          FM0JW00.FM0JW-FMAT-PO-CC = 19; /* Move 19 to century*/
        end
        FKWREC.PC3POIDT = FM0JW00.FM0JW-FMAT-PO-DT;
      end
      ;
      if (FM0JM120.FK-FCTY-PO-DT == 0)
        ;
        FKWREC.FK-FCTY-PO-DT = 0;
      else
        ;
        FM0JW00.FM0JW-FMAT-MAP-DT = FM0JM120.FK-FCTY-PO-DT;
        FM0JW00.FM0JW-FMAT-ORDER-YY = FM0JW00.FM0JW-FMAT-MAP-YY;
        FM0JW00.FM0JW-FMAT-ORDER-MM = FM0JW00.FM0JW-FMAT-MAP-MM;
        FM0JW00.FM0JW-FMAT-ORDER-DD = FM0JW00.FM0JW-FMAT-MAP-DD;
        if (FM0JW00.FM0JW-FMAT-ORDER-YY < 80)
          FM0JW00.FM0JW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
        else
          FM0JW00.FM0JW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
        end
        FKWREC.FK-FCTY-PO-DT = FM0JW00.FM0JW-FMAT-ORDER-DT;
      end
      ;
      COMMAREA.CATOAP = FM0JM120.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0JM120.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0JM120.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3000R"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* FK0B requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* POMNT requested*/
   || converseVar.eventKey is pf14 /* POSHP requested*/
   || converseVar.eventKey is pf16 /* POLST requested*/
   || converseVar.eventKey is pf17) /* POMLT requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0JM120"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0B"; /* TO application*/
      COMMAREA.CAITEM = FM0JM120.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0D"; /* TO application*/
      COMMAREA.CAITEM = FM0JM120.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FM0K"; /* TO application*/
      COMMAREA.CAITEM = FM0JM120.CAITEM; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0L"; /* TO application*/
      COMMAREA.CAITEM = FM0JM120.CAITEM; /* Application find code*/
    end
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0JM120.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0JM120.FY1FCTYC; /* Factory*/
    ;
    if (FM0JM120.FM0JM-FK-NIKE-PO-YY == 0
     && FM0JM120.FM0JM-FK-NIKE-PO-PP == 0
     && FM0JM120.FM0JM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0JW00.FM0JW-FMAT-PO-YY = FM0JM120.FM0JM-FK-NIKE-PO-YY;
      FM0JW00.FM0JW-FMAT-PO-PP = FM0JM120.FM0JM-FK-NIKE-PO-PP;
      FM0JW00.FM0JW-FMAT-PO-DD = FM0JM120.FM0JM-FK-NIKE-PO-DD;
      if (FM0JW00.FM0JW-FMAT-PO-YY < 80)
        FM0JW00.FM0JW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0JW00.FM0JW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0JW00.FM0JW-FMAT-PO-DT;
    end
    ;
    if (FM0JM120.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0JW00.FM0JW-FMAT-MAP-DT = FM0JM120.FK-FCTY-PO-DT;
      FM0JW00.FM0JW-FMAT-ORDER-YY = FM0JW00.FM0JW-FMAT-MAP-YY;
      FM0JW00.FM0JW-FMAT-ORDER-MM = FM0JW00.FM0JW-FMAT-MAP-MM;
      FM0JW00.FM0JW-FMAT-ORDER-DD = FM0JW00.FM0JW-FMAT-MAP-DD;
      if (FM0JW00.FM0JW-FMAT-ORDER-YY < 80)
        FM0JW00.FM0JW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0JW00.FM0JW-FMAT-ORDER-CC = 19; /* Move 19 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0JW00.FM0JW-FMAT-ORDER-DT;
    end
    ;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf6   /* NXTPO requested*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8   /* FWRD requested*/
   && converseVar.eventKey not pf10  /* LEFT requested*/
   && converseVar.eventKey not pf11) /* RGHT requested*/
    ;
    FKWREC.XXX-MOD-ID = "3000R"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0J-3000R

// Reset Highlighted fields
Function FM0J-4000L()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0JM110.XXXTSPAG initialAttributes; /* Page nbr*/
  set FM0JM110.TA5TSQIX initialAttributes; /* Max page*/
  ;
  set FM0JM110.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FM0JM110.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FM0JM110.FK-FCTY-PO-DT initialAttributes; /* Order date*/
  set FM0JM110.FM0JM-FK-NIKE-PO-YY initialAttributes; /* PO year*/
  set FM0JM110.FM0JM-FK-NIKE-PO-PP initialAttributes; /* PO prod month*/
  set FM0JM110.FM0JM-FK-NIKE-PO-DD initialAttributes; /* PO delivery month*/
  set FM0JM110.FY1FCTYC initialAttributes; /* Factory*/
  set FM0JM110.FK-FCTY-PO-ID initialAttributes; /* Factory PO*/
  set FM0JM110.FK-EST-SHP-DT1 initialAttributes; /* Est ship date 1*/
  set FM0JM110.FK-EST-SHP-DT2 initialAttributes; /* Est ship date 2*/
  set FM0JM110.FK-EST-SHP-DT3 initialAttributes; /* Est ship date 3*/
  set FM0JM110.FK-FCTY-PO-COMNT initialAttributes; /* PO comment*/
  ;
  set FM0JM110.FM0JM-SELECT initialAttributes; /* Selection*/
  ;
  FM0JW00.FM0JW-IDX = 1; /* Initialize index*/
  ;
  while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS) /* For each line*/
    ;
    set FM0JM110.FK-MAT-NBR[FM0JW-IDX] initialAttributes; /* Material nbr*/
    set FM0JM110.FK-DEPT-MAT-DESC[FM0JW-IDX] initialAttributes; /* Material desc*/
    set FM0JM110.XCLCD[FM0JW-IDX] initialAttributes; /* Color code*/
    set FM0JM110.XCLDESC[FM0JW-IDX] initialAttributes; /* Color desc*/
    set FM0JM110.FM0JM-LINE-DESC[FM0JW-IDX] initialAttributes; /* Line desc*/
    set FM0JM110.FM0JM-QTY[FM0JW-IDX] initialAttributes; /* Quantity*/
    set FM0JM110.XMU-MAT-UOM-CD[FM0JW-IDX] initialAttributes; /* Unit of measure*/
    set FM0JM110.FM0JM-DT[FM0JW-IDX] initialAttributes; /* Date*/
    set FM0JM110.FM0JM-COMNT-FL[FM0JW-IDX] initialAttributes; /* Comment flag*/
    ;
    FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1;
  end
  ;
  set FM0JM110.FM0JM-BAL-TO-SHIP-QTY initialAttributes;
  set FM0JM110.FM0JM-BAL-TO-SHIP-UOM initialAttributes;
  ;
  set FM0JM110.CATOAP initialAttributes; /* To application*/
  set FM0JM110.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FM0J-4000L

// Reset Highlighted fields
Function FM0J-4000R()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0JM120.XXXTSPAG initialAttributes; /* Page nbr*/
  set FM0JM120.TA5TSQIX initialAttributes; /* Max page*/
  ;
  set FM0JM120.FK-VEND-CD initialAttributes; /* Vendor code*/
  set FM0JM120.FK-VEND-SNM initialAttributes; /* Vendor name*/
  set FM0JM120.FK-FCTY-PO-DT initialAttributes; /* Order date*/
  set FM0JM120.FM0JM-FK-NIKE-PO-YY initialAttributes; /* PO year*/
  set FM0JM120.FM0JM-FK-NIKE-PO-PP initialAttributes; /* PO prod month*/
  set FM0JM120.FM0JM-FK-NIKE-PO-DD initialAttributes; /* PO delivery month*/
  set FM0JM120.FY1FCTYC initialAttributes; /* Factory*/
  set FM0JM120.FK-FCTY-PO-ID initialAttributes; /* Factory PO*/
  set FM0JM120.FK-EST-SHP-DT1 initialAttributes; /* Est ship date 1*/
  set FM0JM120.FK-EST-SHP-DT2 initialAttributes; /* Est ship date 2*/
  set FM0JM120.FK-EST-SHP-DT3 initialAttributes; /* Est ship date 3*/
  set FM0JM120.FK-FCTY-PO-COMNT initialAttributes; /* PO comment*/
  ;
  ;
  set FM0JM120.FK-MAT-NBR initialAttributes; /* Material nbr*/
  set FM0JM120.FK-DEPT-MAT-DESC initialAttributes; /* Material desc*/
  set FM0JM120.XCLCD initialAttributes; /* Color code*/
  set FM0JM120.XCLDESC initialAttributes; /* Color desc*/
  ;
  FM0JW00.FM0JW-IDX = 1; /* Initialize index*/
  ;
  while (FM0JW00.FM0JW-IDX <= FM0JW00.FM0JW-NBR-MAP-ROWS) /* For each line*/
    ;
    set FM0JM120.FM0JM-LINE-DESC[FM0JW-IDX] initialAttributes; /* Line desc*/
    set FM0JM120.FM0JM-DT[FM0JW-IDX] initialAttributes; /* Date*/
    set FM0JM120.FM0JM-COMNT[FM0JW-IDX] initialAttributes; /* Comment*/
    ;
    FM0JW00.FM0JW-IDX = FM0JW00.FM0JW-IDX + 1;
  end
  ;
  set FM0JM120.CATOAP initialAttributes; /* To application*/
  set FM0JM120.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end FM0J-4000R

// Verify entered fields
Function FM0J-5000L()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0JM110.CAITEM > " "         /* Application data was entered*/
   && converseVar.eventKey not pf12 /* POMNT*/
   && converseVar.eventKey not pf14 /* POSHP*/
   && converseVar.eventKey not pf16 /* POLST*/
   && converseVar.eventKey not pf17) /* POMLT*/
    ;
    set FM0JM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "5000L"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify NXTPO request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    if (FM0JW00.FM0JW-NXTPO-IDX >= FM0JW00.FM0JW-NBR-PASSED-PO)
      ;
      converseLib.validationFailed(130); /* No more PO's to display*/
      FKWREC.XXX-MOD-ID = "5000L"; /* Module identification*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7  /* Pf7 pressed*/
   || converseVar.eventKey is pf8  /* Pf8 pressed*/
   || converseVar.eventKey is pf10 /* Pf10 pressed*/
   || converseVar.eventKey is pf11) /* Pf11 pressed*/
    ;
    FM0J-5100L(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify select field for any application transfer.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* POMNT*/
   || converseVar.eventKey is pf14 /* POSHP*/
   || converseVar.eventKey is pf15 /* POLST*/
   || converseVar.eventKey is pf17) /* POMLT*/
    ;
    if (FM0JM110.FM0JM-SELECT == "S" /* If selected*/
     || FM0JM110.FM0JM-SELECT == " ") /* Or blank*/
      ;
    else
      ;
      set FM0JM110.FM0JM-SELECT cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5000L"; /* Module identification*/
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0JM110.FK-VEND-CD == FM0JW01.FK-VEND-CD
   && FM0JM110.FK-FCTY-PO-DT == FM0JW01.FK-FCTY-PO-DT
   && FM0JM110.FM0JM-FK-NIKE-PO-YY == FM0JW01.FM0JM-FK-NIKE-PO-YY
   && FM0JM110.FM0JM-FK-NIKE-PO-PP == FM0JW01.FM0JM-FK-NIKE-PO-PP
   && FM0JM110.FM0JM-FK-NIKE-PO-DD == FM0JW01.FM0JM-FK-NIKE-PO-DD
   && FM0JM110.FY1FCTYC == FM0JW01.FY1FCTYC)
    ;
    FM0J-5200L(); /* Verify detail*/
  else
    ;
    FM0J-5300L(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0J-5000L

// Verify entered fields
Function FM0J-5000R()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0JM120.CAITEM > " ") /* Application data was entered*/
    ;
    set FM0JM120.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "5000R"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify NXTPO request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf6 pressed*/
    ;
    if (FM0JW00.FM0JW-NXTPO-IDX >= FM0JW00.FM0JW-NBR-PASSED-PO)
      ;
      converseLib.validationFailed(130); /* No more PO's to display*/
      FKWREC.XXX-MOD-ID = "5000R"; /* Module identification*/
    end
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7  /* Pf7 pressed*/
   || converseVar.eventKey is pf8  /* Pf8 pressed*/
   || converseVar.eventKey is pf10 /* Pf10 pressed*/
   || converseVar.eventKey is pf11) /* Pf11 pressed*/
    ;
    FM0J-5100R(); /* Verify scroll request*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0JM120.FK-VEND-CD == FM0JW01.FK-VEND-CD
   && FM0JM120.FK-FCTY-PO-DT == FM0JW01.FK-FCTY-PO-DT
   && FM0JM120.FM0JM-FK-NIKE-PO-YY == FM0JW01.FM0JM-FK-NIKE-PO-YY
   && FM0JM120.FM0JM-FK-NIKE-PO-PP == FM0JW01.FM0JM-FK-NIKE-PO-PP
   && FM0JM120.FM0JM-FK-NIKE-PO-DD == FM0JW01.FM0JM-FK-NIKE-PO-DD
   && FM0JM120.FY1FCTYC == FM0JW01.FY1FCTYC)
    ;
   /* PERFORM FM0J-5200r;/* Verify detail (no detail to edit)*/
  else
    ;
    FM0J-5300R(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0J-5000R

// Verify scroll request
Function FM0J-5100L()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0JW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100L"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0JW00.XXXTSPAG >= FM0JW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100L"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify scroll left was not requested.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf10) /* Scroll left request*/
    ;
    FKWREC.XXX-MOD-ID = "5100L"; /* Module identification*/
    converseLib.validationFailed(74); /* No more pages to left to display*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify scroll right will have data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf11         /* Scroll right requested*/
   && FM0JW00.FM0JW-PO-HDR-FOUND-SW != "Y" /* And no header found*/
   && FM0JW00.FM0JW-PO-DTL-FOUND-SW != "Y") /* And no dtl found*/
    ;
    FKWREC.XXX-MOD-ID = "5100L"; /* Module identification*/
    converseLib.validationFailed(75); /* No more pages to right to display*/
    ;
  end


  ;
  ;
end // end FM0J-5100L

// Verify scroll request
Function FM0J-5100R()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0JW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100R"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0JW00.XXXTSPAG >= FM0JW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100R"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify scroll right was not requested*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf11) /* Scroll right request*/
    ;
    FKWREC.XXX-MOD-ID = "5100R"; /* Module identification*/
    converseLib.validationFailed(75); /* No more pages to right to display*/
    ;
  end
  ;
  ;
end // end FM0J-5100R

// Verify detail data
Function FM0J-5200L()
   /* ---------------------------------------------------------------*/
   /* Verify the select field.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0JM110.FM0JM-SELECT == "S" /* If selected*/
   || FM0JM110.FM0JM-SELECT == " ") /* Or blank*/
    ;
  else
    ;
    set FM0JM110.FM0JM-SELECT cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "5200L"; /* Module identification*/
    converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
  end
  ;
  ;
end // end FM0J-5200L

// Verify key data
Function FM0J-5300L()
   /* ------------------------------------------------------------*/
   /* Verify the factory code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JM110.FY1FCTYC == " ") /* If factory blank*/
    ;
    converseLib.validationFailed(121); /* Factory code missing or invalid*/
    FKWREC.XXX-MOD-ID = "5300L"; /* Module identification*/
    set FM0JM110.FY1FCTYC cursor, bold; /* Highlight*/
  else
    ;
    FM0J-5310L(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the PO date.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JM110.FM0JM-FK-NIKE-PO-DD >= 1
   && FM0JM110.FM0JM-FK-NIKE-PO-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "5300L"; /* Module identification*/
    set FM0JM110.FM0JM-FK-NIKE-PO-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0JM110.FM0JM-FK-NIKE-PO-PP >= 1
   && FM0JM110.FM0JM-FK-NIKE-PO-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "5300L"; /* Module identification*/
    set FM0JM110.FM0JM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Call TA0040 to verify the order date.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FM0JM110.FK-FCTY-PO-DT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(84); /* Date missing or invalid*/
      FKWREC.XXX-MOD-ID = "5300L"; /* Module identification*/
      set FM0JM110.FK-FCTY-PO-DT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor code.*/
   /* ------------------------------------------------------------*/
  ;
  FM0J-5320L(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0J-5300L

// Verify key data
Function FM0J-5300R()
   /* ------------------------------------------------------------*/
   /* Verify the factory code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JM120.FY1FCTYC == " ") /* If factory blank*/
    ;
    converseLib.validationFailed(121); /* Factory code missing or invalid*/
    FKWREC.XXX-MOD-ID = "5300R"; /* Module identification*/
    set FM0JM120.FY1FCTYC cursor, bold; /* Highlight*/
  else
    ;
    FM0J-5310R(); /* Select DFCTY.VFCTY001*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the PO date.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JM120.FM0JM-FK-NIKE-PO-DD >= 1
   && FM0JM120.FM0JM-FK-NIKE-PO-DD <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "5300R"; /* Module identification*/
    set FM0JM120.FM0JM-FK-NIKE-PO-DD cursor, bold; /* Highlight*/
  end
  ;
  ;
  if (FM0JM120.FM0JM-FK-NIKE-PO-PP >= 1
   && FM0JM120.FM0JM-FK-NIKE-PO-PP <= 12)
    ;
     /* Next sentence*/
  else
    ;
    converseLib.validationFailed(129); /* PO date missing or invalid*/
    FKWREC.XXX-MOD-ID = "5300R"; /* Module identification*/
    set FM0JM120.FM0JM-FK-NIKE-PO-PP cursor, bold; /* Highlight*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Call TA0040 to verify the order date.*/
   /* ------------------------------------------------------------*/
  ;
  set TA2REC empty; /* Initialize ta2rec*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG"; /* Date option*/
  TA2REC.TA2GRTYP = "E"; /* Date format*/
  TA2REC.TA2GRGEN = FM0JM120.FK-FCTY-PO-DT;
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation routine*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(84); /* Date missing or invalid*/
      FKWREC.XXX-MOD-ID = "5300R"; /* Module identification*/
      set FM0JM120.FK-FCTY-PO-DT cursor, bold; /* Highlight*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor code.*/
   /* ------------------------------------------------------------*/
  ;
  FM0J-5320R(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0J-5300R

// Verify factory code
Function FM0J-5310L()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0JM110.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0JM110.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5310L"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5310L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY"; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0J-5310L

// Verify factory code
Function FM0J-5310R()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0JM120.FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0JM120.FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5310R"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5310R"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY"; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0J-5310R

// Verify vendor code
Function FM0J-5320L()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0JM110.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0JM110.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5320L"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5320L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0J-5320L

// Verify vendor code
Function FM0J-5320R()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0JM120.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0JM120.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5320R"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5320R"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0J-5320R

// Process valid request
Function FM0J-6000L()
   /* ------------------------------------------------------------*/
   /* If PF6 pressed, obtain the next vendor header and exit to*/
   /* re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf7 pressed*/
    ;
    FM0JW00.FM0JW-NXTPO-IDX = FM0JW00.FM0JW-NXTPO-IDX + 1;
    ;
    FM0J-6100L(); /* Select VFVHDR01*/
    ;
     /* Format map header with PO header data*/
    ;
    FM0JM110.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0JM110.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0JW00.FM0JW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0JM110.FM0JM-FK-NIKE-PO-YY = FM0JW00.FM0JW-FMAT-PO-YY;
    FM0JM110.FM0JM-FK-NIKE-PO-PP = FM0JW00.FM0JW-FMAT-PO-PP;
    FM0JM110.FM0JM-FK-NIKE-PO-DD = FM0JW00.FM0JW-FMAT-PO-DD;
    FM0JM110.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0JW00.FM0JW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0JW00.XXXTSPAG = FM0JW00.XXXTSPAG - 1; /* Decrement page*/
    FM0JW00.FM0JW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0JW00.XXXTSPAG = FM0JW00.XXXTSPAG + 1; /* Increment page*/
    FM0JW00.FM0JW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf11 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf11) /* Pf11 pressed*/
    ;
    FM0JW00.FM0JW-FMAT-MAP-SW = "Y";
    FM0JW00.FM0JW-SIDE-TO-DISP-SW = "R"; /* Display m120*/
    exit stack;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process application transfer request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* PF12 was pressed*/
   || converseVar.eventKey is pf14 /* PF14 was pressed*/
   || converseVar.eventKey is pf16 /* PF16 was pressed*/
   || converseVar.eventKey is pf17) /* PF17 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    FKWREC.FK-VEND-CD[1] = FM0JM110.FK-VEND-CD; /* Vendor*/
    FKWREC.FY1FCTYC = FM0JM110.FY1FCTYC; /* Factory*/
    ;
    if (FM0JM110.FM0JM-FK-NIKE-PO-PP == 0
     && FM0JM110.FM0JM-FK-NIKE-PO-DD == 0)
      ;
      FKWREC.PC3POIDT = 0;
    else
      ;
      FM0JW00.FM0JW-FMAT-PO-YY = FM0JM110.FM0JM-FK-NIKE-PO-YY;
      FM0JW00.FM0JW-FMAT-PO-PP = FM0JM110.FM0JM-FK-NIKE-PO-PP;
      FM0JW00.FM0JW-FMAT-PO-DD = FM0JM110.FM0JM-FK-NIKE-PO-DD;
      if (FM0JW00.FM0JW-FMAT-PO-YY < 80)
        FM0JW00.FM0JW-FMAT-PO-CC = 20; /* Move 20 to century*/
      else
        FM0JW00.FM0JW-FMAT-PO-CC = 19; /* Move 19 to century*/
      end
      FKWREC.PC3POIDT = FM0JW00.FM0JW-FMAT-PO-DT;
    end
    ;
    if (FM0JM110.FK-FCTY-PO-DT == 0)
      ;
      FKWREC.FK-FCTY-PO-DT = 0;
    else
      ;
      FM0JW00.FM0JW-FMAT-MAP-DT = FM0JM110.FK-FCTY-PO-DT;
      FM0JW00.FM0JW-FMAT-ORDER-YY = FM0JW00.FM0JW-FMAT-MAP-YY;
      FM0JW00.FM0JW-FMAT-ORDER-MM = FM0JW00.FM0JW-FMAT-MAP-MM;
      FM0JW00.FM0JW-FMAT-ORDER-DD = FM0JW00.FM0JW-FMAT-MAP-DD;
      if (FM0JW00.FM0JW-FMAT-MAP-YY < 80)
        FM0JW00.FM0JW-FMAT-ORDER-CC = 20; /* Move 20 to century*/
      else
        FM0JW00.FM0JW-FMAT-ORDER-CC = 19; /* Move 20 to century*/
      end
      FKWREC.FK-FCTY-PO-DT = FM0JW00.FM0JW-FMAT-ORDER-DT;
    end
    ;
    ;
    if (FM0JM110.FM0JM-SELECT == "S") /* If line selected*/
      ;
      FKWREC.FK-MAT-NBR[1] = FM0JM110.FK-MAT-NBR[1];
      FKWREC.XCLCD[1] = FM0JM110.XCLCD[1];
    end
    ;
    ;
    if (converseVar.eventKey is pf12) /* PF12 pressed*/
      COMMAREA.CATOAP = "FM0B"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0JM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 pressed*/
      COMMAREA.CATOAP = "FM0D"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0JM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 pressed*/
      COMMAREA.CATOAP = "FM0K"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0JM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf17) /* PF17 pressed*/
      COMMAREA.CATOAP = "FM0L"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0JM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0JM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JM110.FK-VEND-CD != FM0JW01.FK-VEND-CD
   || FM0JM110.FK-FCTY-PO-DT != FM0JW01.FK-FCTY-PO-DT
   || FM0JM110.FM0JM-FK-NIKE-PO-YY != FM0JW01.FM0JM-FK-NIKE-PO-YY
   || FM0JM110.FM0JM-FK-NIKE-PO-PP != FM0JW01.FM0JM-FK-NIKE-PO-PP
   || FM0JM110.FM0JM-FK-NIKE-PO-DD != FM0JW01.FM0JM-FK-NIKE-PO-DD
   || FM0JM110.FY1FCTYC != FM0JW01.FY1FCTYC
  )
    FM0JW00.FM0JW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0J-6000L

// Process valid request
Function FM0J-6000R()
   /* ------------------------------------------------------------*/
   /* If PF6 pressed, obtain the next vendor header and exit to*/
   /* re-obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf6) /* Pf7 pressed*/
    ;
    FM0JW00.FM0JW-NXTPO-IDX = FM0JW00.FM0JW-NXTPO-IDX + 1;
    ;
    FM0J-6100R(); /* Select VFVHDR01*/
    ;
     /* Format map header with PO header data*/
    ;
    FM0JM120.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0JM120.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0JW00.FM0JW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0JM120.FM0JM-FK-NIKE-PO-YY = FM0JW00.FM0JW-FMAT-PO-YY;
    FM0JM120.FM0JM-FK-NIKE-PO-PP = FM0JW00.FM0JW-FMAT-PO-PP;
    FM0JM120.FM0JM-FK-NIKE-PO-DD = FM0JW00.FM0JW-FMAT-PO-DD;
    FM0JM120.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0JM110.FK-VEND-CD = VFVHDR01.FK-VEND-CD;
    FM0JM110.FK-FCTY-PO-DT = VFVHDR01.FK-FCTY-PO-DT;
    FM0JW00.FM0JW-FMAT-PO-DT = VFVHDR01.PC3POIDT;
    FM0JM110.FM0JM-FK-NIKE-PO-YY = FM0JW00.FM0JW-FMAT-PO-YY;
    FM0JM110.FM0JM-FK-NIKE-PO-PP = FM0JW00.FM0JW-FMAT-PO-PP;
    FM0JM110.FM0JM-FK-NIKE-PO-DD = FM0JW00.FM0JW-FMAT-PO-DD;
    FM0JM110.FY1FCTYC = VFVHDR01.FY1FCTYC;
    ;
    FM0JW00.FM0JW-SIDE-TO-DISP-SW = "L"; /* Display m110*/
    FM0JW00.FM0JW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0JW00.XXXTSPAG = FM0JW00.XXXTSPAG - 1; /* Decrement page*/
    FM0JW00.FM0JW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0JW00.XXXTSPAG = FM0JW00.XXXTSPAG + 1; /* Increment page*/
    FM0JW00.FM0JW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If pf10 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf10) /* Pf10 pressed*/
    ;
    FM0JW00.FM0JW-FMAT-MAP-SW = "Y";
    FM0JW00.FM0JW-SIDE-TO-DISP-SW = "L"; /* Display m120*/
    exit stack;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0JM120.FK-VEND-CD != FM0JW01.FK-VEND-CD
   || FM0JM120.FK-FCTY-PO-DT != FM0JW01.FK-FCTY-PO-DT
   || FM0JM120.FM0JM-FK-NIKE-PO-YY != FM0JW01.FM0JM-FK-NIKE-PO-YY
   || FM0JM120.FM0JM-FK-NIKE-PO-PP != FM0JW01.FM0JM-FK-NIKE-PO-PP
   || FM0JM120.FM0JM-FK-NIKE-PO-DD != FM0JW01.FM0JM-FK-NIKE-PO-DD
   || FM0JM120.FY1FCTYC != FM0JW01.FY1FCTYC
  )
     /* Move new key to other map*/
    ;
    FM0JM110.FK-VEND-CD = FM0JM120.FK-VEND-CD;
    FM0JM110.FK-FCTY-PO-DT = FM0JM120.FK-FCTY-PO-DT;
    FM0JM110.FM0JM-FK-NIKE-PO-YY = FM0JM120.FM0JM-FK-NIKE-PO-YY;
    FM0JM110.FM0JM-FK-NIKE-PO-PP = FM0JM120.FM0JM-FK-NIKE-PO-PP;
    FM0JM110.FM0JM-FK-NIKE-PO-DD = FM0JM120.FM0JM-FK-NIKE-PO-DD;
    FM0JM110.FY1FCTYC = FM0JM120.FY1FCTYC;
    ;
    FM0JW00.FM0JW-SIDE-TO-DISP-SW = "L"; /* Display m110*/
    FM0JW00.FM0JW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0J-6000R

// Select DCMPNT.VFVHDR01 ('S ')
Function FM0J-6100L()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0JW00.FK-INTRN-PO-ID[FM0JW-NXTPO-IDX]; /* Internal PO id*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      set VFVHDR01 empty;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "6100L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S  )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-6100L

// Select DCMPNT.VFVHDR01 ('S ')
Function FM0J-6100R()
   /* ------------------------------------------------------------*/
   /* Select a record from the requested database.*/
   /* ------------------------------------------------------------*/
  ;
  set VFVHDR01 empty; /* Clear storage record*/
  set FKFREC empty; /* Clear IO6820 function record*/
  ;
  VFVHDR01.FK-INTRN-PO-ID = FM0JW00.FK-INTRN-PO-ID[FM0JW-NXTPO-IDX]; /* Internal PO id*/
  ;
  ;
  FKFREC.FKF-FUNCTION = "S "; /* Select unique*/
  ;
  ;
  try
    call "IO6820" (FKFREC, SQLCA, VFVHDR01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      set VFVHDR01 empty;
      return; /* Return to previous process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FKWREC.XXX-MOD-ID = "6100L"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DCMPNT.VFVHDR01 (S  )";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFVHDR01.VFVHDR01-GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
end // end FM0J-6100R

//*** RECORD=FM0JW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0JW00 type basicRecord
  10 FM0JW-REQUEST-DATA-SW FM0JW-REQUEST-DATA-SW ; 
  10 FM0JW-FMAT-MAP-SW FM0JW-FMAT-MAP-SW ; 
  10 FM0JW-END-VFVITM01-CSR-SW FM0JW-END-VFVITM01-CSR-SW ; 
  10 FM0JW-END-VFVADJ01-CSR-SW FM0JW-END-VFVADJ01-CSR-SW ; 
  10 FM0JW-END-VFVSHP01-CSR-SW FM0JW-END-VFVSHP01-CSR-SW ; 
  10 FM0JW-PO-HDR-FOUND-SW FM0JW-PO-HDR-FOUND-SW ; 
  10 FM0JW-PO-DTL-FOUND-SW FM0JW-PO-DTL-FOUND-SW ; 
  10 FM0JW-SIDE-TO-DISP-SW FM0JW-SIDE-TO-DISP-SW ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FM0JW-SAVED-PAGE-NBR FM0JW-SAVED-PAGE-NBR ; 
  10 FM0JW-IDX FM0JW-IDX ; 
  10 FM0JW-NXTPO-IDX FM0JW-NXTPO-IDX ; 
  10 FM0JW-NBR-MAP-ROWS FM0JW-NBR-MAP-ROWS ; 
  10 FM0JM-BAL-TO-SHIP-QTY FM0JM-BAL-TO-SHIP-QTY ; 
  10 FM0JM-BAL-TO-SHIP-UOM FM0JM-BAL-TO-SHIP-UOM ; 
  10 FM0JW-FMAT-PO-DT FM0JW-FMAT-PO-DT ; 
    15 FM0JW-FMAT-PO-CC FM0JW-FMAT-PO-CC ; 
    15 FM0JW-FMAT-PO-YY FM0JW-FMAT-PO-YY ; 
    15 FM0JW-FMAT-PO-PP FM0JW-FMAT-PO-PP ; 
    15 FM0JW-FMAT-PO-DD FM0JW-FMAT-PO-DD ; 
  10 FM0JW-FMAT-MAP-DT FM0JW-FMAT-MAP-DT ; 
    15 FM0JW-FMAT-MAP-YY FM0JW-FMAT-MAP-YY ; 
    15 FM0JW-FMAT-MAP-MM FM0JW-FMAT-MAP-MM ; 
    15 FM0JW-FMAT-MAP-DD FM0JW-FMAT-MAP-DD ; 
  10 FM0JW-FMAT-ORDER-DT FM0JW-FMAT-ORDER-DT ; 
    15 FM0JW-FMAT-ORDER-CC FM0JW-FMAT-ORDER-CC ; 
    15 FM0JW-FMAT-ORDER-YY FM0JW-FMAT-ORDER-YY ; 
    15 FM0JW-FMAT-ORDER-MM FM0JW-FMAT-ORDER-MM ; 
    15 FM0JW-FMAT-ORDER-DD FM0JW-FMAT-ORDER-DD ; 
  10 FK-INTRN-PO-ID FK-INTRN-PO-ID [15] ; 
  10 FM0JW-NBR-PASSED-PO FM0JW-NBR-PASSED-PO ; 
  10 FK-VEND-SNM FK-VEND-SNM ; 
  10 XCLDESC XCLDESC ; 
  10 FM0JW-SAVED-FK-MAT-NBR FM0JW-SAVED-FK-MAT-NBR ; 
  10 FM0JW-SAVED-XCLCD FM0JW-SAVED-XCLCD ; 
end // end FM0JW00

//*** RECORD=FM0JW01 ****
// ------------------------------------------------------------
// Application display storage.
// ------------------------------------------------------------
// 
// ***********************
Record FM0JW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(1475) ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-VEND-SNM FK-VEND-SNM ; 
    10 FM0JM-FK-NIKE-PO-YY FM0JM-FK-NIKE-PO-YY ; 
    10 FM0JM-FK-NIKE-PO-PP FM0JM-FK-NIKE-PO-PP ; 
    10 FM0JM-FK-NIKE-PO-DD FM0JM-FK-NIKE-PO-DD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FK-FCTY-PO-DT FK-FCTY-PO-DT ; 
    10 FK-FCTY-PO-ID FK-FCTY-PO-ID ; 
    10 FK-EST-SHP-DT1 FK-EST-SHP-DT1 ; 
    10 FK-EST-SHP-DT2 FK-EST-SHP-DT2 ; 
    10 FK-EST-SHP-DT3 FK-EST-SHP-DT3 ; 
    10 FK-FCTY-PO-COMNT FK-FCTY-PO-COMNT ; 
    10 FK-MAT-NBR FK-MAT-NBR [10] ; 
    10 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC [10] ; 
    10 XCLCD XCLCD [10] ; 
    10 XCLDESC XCLDESC [10] ; 
    10 FM0JM-LINE-DESC FM0JM-LINE-DESC [10] ; 
    10 FM0JM-QTY FM0JM-QTY [10] ; 
    10 XMU-MAT-UOM-CD XMU-MAT-UOM-CD [10] ; 
    10 FM0JM-DT FM0JM-DT [10] ; 
    10 FM0JM-COMNT FM0JM-COMNT [10] ; 
end // end FM0JW01

// Balance to ship qty
DataItem FM0JM-BAL-TO-SHIP-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Material unit of measure
DataItem FM0JM-BAL-TO-SHIP-UOM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Comment
DataItem FM0JM-COMNT char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Transaction date
DataItem FM0JM-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO ID delivery month
DataItem FM0JM-FK-NIKE-PO-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO ID prod month
DataItem FM0JM-FK-NIKE-PO-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO ID year
DataItem FM0JM-FK-NIKE-PO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Line description
DataItem FM0JM-LINE-DESC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Transaction qty
DataItem FM0JM-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VFVADJ01 csr switch
DataItem FM0JW-END-VFVADJ01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VFVITM01 csr switch
DataItem FM0JW-END-VFVITM01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VFVSHP01 csr switch
DataItem FM0JW-END-VFVSHP01-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format day from map
DataItem FM0JW-FMAT-MAP-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format date from map
DataItem FM0JW-FMAT-MAP-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format month from map
DataItem FM0JW-FMAT-MAP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FM0JW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format year from map
DataItem FM0JW-FMAT-MAP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order century
DataItem FM0JW-FMAT-ORDER-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order date
DataItem FM0JW-FMAT-ORDER-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order date
DataItem FM0JW-FMAT-ORDER-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order month
DataItem FM0JW-FMAT-ORDER-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format order year
DataItem FM0JW-FMAT-ORDER-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. century
DataItem FM0JW-FMAT-PO-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. delivery month
DataItem FM0JW-FMAT-PO-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. date
DataItem FM0JW-FMAT-PO-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. production month
DataItem FM0JW-FMAT-PO-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. year
DataItem FM0JW-FMAT-PO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic index
DataItem FM0JW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of rows on map
DataItem FM0JW-NBR-MAP-ROWS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of Passed POs in FKWREC
DataItem FM0JW-NBR-PASSED-PO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Next PO index
DataItem FM0JW-NXTPO-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PO detail was found switch
DataItem FM0JW-PO-DTL-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DCMPNT.VFVHDR01 rec found sw
DataItem FM0JW-PO-HDR-FOUND-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FM0JW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Saved material nbr
DataItem FM0JW-SAVED-FK-MAT-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Saved page number
DataItem FM0JW-SAVED-PAGE-NBR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Saved color code
DataItem FM0JW-SAVED-XCLCD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Side to display switch
DataItem FM0JW-SIDE-TO-DISP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

