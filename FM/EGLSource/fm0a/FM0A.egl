package fm0a;

import corpcom3.XPFK001;
import corpcom4.XSFKS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import fk.common.*;
import ta.common.TA1REC;
import ta.common.TAEREC;
//*** PROGRAM=FM0A ****
// FM0A displays a list of related applications/processes
// which may be accessed via an entered selection or
// specified pfkeys.
// 
// 
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          05/01/93  JALLE1  New application.
//          11/29/93  JALLE1  Opened PO/Capacity screens.
// *********************
Program FM0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FKWREC FKWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FM0AM.FM0AM110 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set FM0AM110 initial; /* map input/output*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/

     /* ------------------------------------------------------------*/
     /* Clear fkwrec.*/
     /* ------------------------------------------------------------*/

    set FKWREC empty; /* FK parameters passed between apps*/


    FM0AM110.FM0AM-OPTION = "I"; /* default to inquiry*/


     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FM0A-0010; /* Converse the main process*/


    FM0A-0010: FM0A-0010();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FM0A-0010; /* Converse the main process*/


  end // end main
end // end FM0A

// Main process to display a map
Function FM0A-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

   /* PERFORM fm0a-1000;                /* Obtain the data to display*/

  FM0A-2000(); /* Format and display the map*/

  FM0A-3000(); /* Check attention identifier*/

  FM0A-4000(); /* Reset fields to normal intensity*/

  FM0A-5000(); /* Verify the entered data*/

  FM0A-6000(); /* Process valid input request*/


end // end FM0A-0010

// Format and converse map
Function FM0A-2000()

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FM0AM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FM0AM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0AM110.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FKWREC.XXXMSGNO != 0) /* Message to display*/

      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0AM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

  end


  if (converseVar.validationMsgNum != 0) /* if message to display*/
    set FM0AM110 alarm; /* indicate sound alarm*/
    FM0AM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module identification*/
  end


   /* ------------------------------------------------------------*/
   /* Establish cursor position*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* if no errors*/
    set FM0AM110.FM0AM-SELECTION cursor; /* establish cursor position*/
  end



  converse FM0AM110 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = FM0AM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0AM110.CAITEM; /* Application data*/


end // end FM0A-2000

// Check attention identifier
Function FM0A-3000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    COMMAREA.CATOAP = "FM0A"; /* to applicaiton*/
    COMMAREA.CAITEM = "    "; /* item*/

    XSFKS01(); /* Exit to another application*/

    set FM0AM110.CATOAP cursor, bold; /* Highlight*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (FM0AM110.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      COMMAREA.CATOAP = FM0AM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0AM110.CAITEM; /* item*/

      XSFKS01(); /* Exit to another application*/

      set FM0AM110.CATOAP cursor, bold; /* Highlight*/

    else

      FKWREC.XXX-MOD-ID = "300"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, transfer to application GD01.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1  /* HELP requested*/
   || converseVar.eventKey is pf3  /* EXIT requested*/
   || converseVar.eventKey is pf4  /* MSTR MN requested*/
   || converseVar.eventKey is pf12 /* POMNT requested*/
   || converseVar.eventKey is pf14 /* POSHP requested*/
   || converseVar.eventKey is pf15 /* POSUM requested*/
   || converseVar.eventKey is pf16 /* POLST requested*/
   || converseVar.eventKey is pf17 /* POMLT requested*/
   || converseVar.eventKey is pf19) /* RPTS requested*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0AM110"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FK0A"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf12) /* PF12 was pressed*/
      COMMAREA.CATOAP = "FM0B"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "FM0D"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "FM0J"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "FM0K"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "FM0L"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.CAITEM; /* item*/
    end

    if (converseVar.eventKey is pf19) /* PF19 was pressed*/
      COMMAREA.CATOAP = "FM0H"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.CAITEM; /* item*/
    end

    XSFKS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    FKWREC.XXX-MOD-ID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    exit stack; /* Exit to display map*/

  end


end // end FM0A-3000

// Reset highlighted fields
Function FM0A-4000()

   /* ----------------------------------------------------*/
   /* Set all modifiable fields defined*/
   /* ----------------------------------------------------*/

  set FM0AM110.FM0AM-SELECTION initialAttributes; /* selection*/
  set FM0AM110.FM0AM-OPTION initialAttributes; /* option*/

  set FM0AM110.CATOAP initialAttributes;
  set FM0AM110.CAITEM initialAttributes;


end // end FM0A-4000

// Verify entered data
Function FM0A-5000()
   /* ----------------------------------------------------*/
   /* Display error if invalid option code*/
   /* ----------------------------------------------------*/

  if (FM0AM110.FM0AM-OPTION == "A" /* add requested*/
   || FM0AM110.FM0AM-OPTION == "C" /* change requested*/
   || FM0AM110.FM0AM-OPTION == "D" /* delete requested*/
   || FM0AM110.FM0AM-OPTION == "I") /* inquire requested*/

     /* next sentence*/

  else
    converseLib.validationFailed(8); /* field invalid or missing*/
    FKWREC.XXX-MOD-ID = "500"; /* module identification*/
    set FM0AM110.FM0AM-OPTION bold, cursor; /* highlight*/
    exit stack;
  end

   /* ----------------------------------------------------*/
   /* Display error if invalid selection*/
   /* ----------------------------------------------------*/

  if (FM0AM110.FM0AM-SELECTION == 1
   || FM0AM110.FM0AM-SELECTION == 2
   || FM0AM110.FM0AM-SELECTION == 3
   || FM0AM110.FM0AM-SELECTION == 4
   || FM0AM110.FM0AM-SELECTION == 5
   || FM0AM110.FM0AM-SELECTION == 11
   || FM0AM110.FM0AM-SELECTION == 12
   || FM0AM110.FM0AM-SELECTION == 21
   || FM0AM110.FM0AM-SELECTION == 22
   || FM0AM110.FM0AM-SELECTION == 23
   || FM0AM110.FM0AM-SELECTION == 31)

     /* Next sentence*/

  else
    converseLib.validationFailed(8); /* field invalid or missing*/
    FKWREC.XXX-MOD-ID = "500"; /* module identification*/
    set FM0AM110.FM0AM-SELECTION bold, cursor; /* highlight*/
    exit stack;
  end


   /* ----------------------------------------------------*/
   /* If any errors found, return to display map.*/
   /* ----------------------------------------------------*/

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end



end // end FM0A-5000

// Process valid request
Function FM0A-6000()
   /* ------------------------------------------------------------*/
   /* Process valid request - transfer to requested application.*/
   /* ------------------------------------------------------------*/


  if (FM0AM110.FM0AM-SELECTION == 1
   || FM0AM110.FM0AM-SELECTION == 2
   || FM0AM110.FM0AM-SELECTION == 3
   || FM0AM110.FM0AM-SELECTION == 4
   || FM0AM110.FM0AM-SELECTION == 5
   || FM0AM110.FM0AM-SELECTION == 11
   || FM0AM110.FM0AM-SELECTION == 12
   || FM0AM110.FM0AM-SELECTION == 21
   || FM0AM110.FM0AM-SELECTION == 22
   || FM0AM110.FM0AM-SELECTION == 23
   || FM0AM110.FM0AM-SELECTION == 31)

    if (FM0AM110.FM0AM-SELECTION == 1) /* FM0K requested*/
      COMMAREA.CATOAP = "FM0K"; /* TO application*/
      COMMAREA.CAITEM = "I"; /* map option*/
    end

    if (FM0AM110.FM0AM-SELECTION == 2) /* FM0L requested*/
      COMMAREA.CATOAP = "FM0L"; /* TO application*/
      COMMAREA.CAITEM = "I"; /* map option*/
    end

    if (FM0AM110.FM0AM-SELECTION == 3) /* FM0J requested*/
      COMMAREA.CATOAP = "FM0J"; /* TO application*/
      COMMAREA.CAITEM = "I"; /* map option*/
    end

    if (FM0AM110.FM0AM-SELECTION == 4) /* FM0B requested*/
      COMMAREA.CATOAP = "FM0B"; /* TO application*/
      if (FM0AM110.FM0AM-OPTION == "A" /* If add*/
       || FM0AM110.FM0AM-OPTION == "C") /* or change*/
        COMMAREA.CAITEM = FM0AM110.FM0AM-OPTION; /* map option*/
      else
        COMMAREA.CAITEM = "I"; /* map option*/
      end
    end

    if (FM0AM110.FM0AM-SELECTION == 5) /* FM0D requested*/
      COMMAREA.CATOAP = "FM0D"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.FM0AM-OPTION; /* map option*/
    end

    if (FM0AM110.FM0AM-SELECTION == 11) /* FM0E requested*/
      COMMAREA.CATOAP = "FM0E"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.FM0AM-OPTION; /* map option*/
    end

    if (FM0AM110.FM0AM-SELECTION == 12) /* FM0I requested*/
      COMMAREA.CATOAP = "FM0I"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.FM0AM-OPTION; /* map option*/
    end

    if (FM0AM110.FM0AM-SELECTION == 21) /* FM0M requested*/
      COMMAREA.CATOAP = "FM0M"; /* TO application*/
      COMMAREA.CAITEM = "I"; /* map option*/
    end

    if (FM0AM110.FM0AM-SELECTION == 22) /* FM0F requested*/
      COMMAREA.CATOAP = "FM0F"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.FM0AM-OPTION; /* map option*/
    end

    if (FM0AM110.FM0AM-SELECTION == 23) /* FM0G requested*/
      COMMAREA.CATOAP = "FM0G"; /* TO application*/
      COMMAREA.CAITEM = FM0AM110.FM0AM-OPTION; /* map option*/
    end

    if (FM0AM110.FM0AM-SELECTION == 31) /* FM0N requested*/
      COMMAREA.CATOAP = "FM0N"; /* TO application*/
      if (FM0AM110.FM0AM-OPTION == "A" /* If add*/
       || FM0AM110.FM0AM-OPTION == "C") /* or change*/
        COMMAREA.CAITEM = FM0AM110.FM0AM-OPTION; /* map option*/
      else
        COMMAREA.CAITEM = "I"; /* map option*/
      end
    end


    XSFKS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end


end // end FM0A-6000

