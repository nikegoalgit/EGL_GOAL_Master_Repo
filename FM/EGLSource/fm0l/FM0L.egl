package fm0l;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFK001;
import corpcom3.XPXCL01;
import corpcom3.XPXMG01;
import corpcom3.XPXX001;
import corpcom4.XSFKS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XCLCD;
import corpx1.XCLDESC;
import corpx1.XCLTBL;
import corpx1.XMGTBL;
import corpx1.XTMTBL;
import corpx2.XMG-COLR-GRP-CD;
import corpx2.XTM-MAT-THCK-DESC;
import fb.common.FB9REC;
import fk.common.FK-DEPT-MAT-DESC;
import fk.common.FK-FCTY-PO-COMNT;
import fk.common.FK-FCTY-PO-DT;
import fk.common.FK-FCTY-PO-ID;
import fk.common.FK-INTRN-PO-ID;
import fk.common.FK-MAT-NBR;
import fk.common.FK-VEND-CD;
import fk.common.FK-VEND-SNM;
import fk.common.FKFREC;
import fk.common.FKWREC;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import pc.common.PC3POIDT;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VFVHDR01;
import vv.common.VMATRL01;
import vv.common.VMCOLR01;
import vv.common.VVNDR001;
//*** PROGRAM=FM0L ****
// THIS APPLICATION IS PART OF THE FOOTWEAR MATERIALS SYSTEM.
// 
// THIS APPLICATION WILL ALLOW USERS TO LIST FACTORY P.O.'S
// ACCORDING TO ENTERED SELECTION CRITERIA.  USERS WILL BE
// ALLOWED TO SELECT SPECIFIC P.O.'S OFF A PAGE OF DATA (UP
// TO A MAXIMUM OF 12 P.O.'S), AND TRANSFER TO OTHER
// APPLICATIONS, CARRYING THE P.O. HEADER INFORMATION WITH
// THE TRANSFER.
// 
// USERS WILL BE ALLOWED TO EXIT THIS APPLICATION VIA PFKEYS
// OR FASTPATH, WITH THE 'OPTION' FIELD AVAILABLE FOR USE WITH
// ANY APPLICATION TRANSFER.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          10/19/93  JALLE1  New application.
// Y2KFIX   11-03-97  ORICHA  Y2K MODIFICATIONS MADE TO:
//                            FM0LW00 - ADDED 2 ELEMENTS FOR
//                            CCYY LEVELS; FM0L-0005 DATE CALC
//                            NOW INVOLVES CENTURY.
// *********************
Program FM0L type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FB9REC FB9REC; // record
  FKFREC FKFREC; // record
  FKWREC FKWREC; // record
  FM0LW00 FM0LW00; // record
  FM0LW01 FM0LW01; // record
  FMCREC FMCREC; // record
  FY1REC FY1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VFVHDR01 VFVHDR01; // record
  VMATRL01 VMATRL01; // record
  VMCOLR01 VMCOLR01; // record
  VVNDR001 VVNDR001; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCLTBL {deleteAfterUse = yes}; // table
  use XMGTBL {deleteAfterUse = yes}; // table
  use XTMTBL {deleteAfterUse = yes}; // table
  use FM0LM.FM0LM110, // form
      FM0LM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFK001: XPFK001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the application special initialization.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0L-0005; /* Application special initialization*/
    ;
    ;
    FM0L-0005: FM0L-0005();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FM0L-0010; /* Converse the main process*/
    ;
    ;
    FM0L-0010: FM0L-0010();
     /* -----------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* -----------------------------------------------------------------*/
    ;
    goto FM0L-0010; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FM0L

// Special application init
Function FM0L-0005()
   /* ------------------------------------------------------------*/
   /* Initialize working storage and display storage areas.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0LM110 initial; /* M110 inquiry map input/output*/
  set FM0LW00 empty; /* Application working storage*/
  set FM0LW01 empty; /* Application display storage*/
  set SQLCA empty; /* SQL communication area*/
  set TAEREC empty; /* Error diagnosis information*/
  set TA1REC empty; /* Error diagnosis parameters*/
  set TA5REC empty; /* Error diagnosis parameters*/
  set XX0XW01 empty; /* Date/time subroutine parameters*/
  ;
  FM0LW00.FM0LW-NBR-MAP-ROWS = 12; /* 12 rows on the map*/
  ;
   /* ------------------------------------------------------------*/
   /* Set up default values for map variables.*/
   /* ------------------------------------------------------------*/
  ;
  FM0LM110.FK-MAT-NBR = "*"; /* Material nbr*/
  FM0LM110.XMG-COLR-GRP-CD = "*"; /* Color group*/
  FM0LM110.XCLCD = "*"; /* Color code*/
  ;
  FM0L-0006(); /* Select buy date from DFBUY.VFMCTL01*/
  ;
   /* --------------  Y2K OUT BEGIN -----------------*/
   /* Format the buy date into NIKE PO ID format*/
  ;
   /* MOVE FB9REC.FB8BUYDT TO FM0LW00.FM0LW-FMAT-BUY-DT;*/
   /* MOVE FM0LW00.FM0LW-FMAT-BUY-YY TO FM0LW00.FM0LW-FMAT-PO-YY;*/
   /* MOVE FM0LW00.FM0LW-FMAT-BUY-MM TO FM0LW00.FM0LW-FMAT-PO-DD;*/
   /* ;*/
   /* IF FM0LW00.FM0LW-FMAT-PO-DD EQ 1;*/
    /* MOVE 11 TO FM0LW00.FM0LW-FMAT-PO-PP;*/
    /* FM0LW00.FM0LW-FMAT-PO-YY = FM0LW00.FM0LW-FMAT-PO-YY - 1;*/
   /* ELSE;*/
    /* IF FM0LW00.FM0LW-FMAT-PO-DD EQ 2;*/
      /* MOVE 12 TO FM0LW00.FM0LW-FMAT-PO-PP;*/
      /* FM0LW00.FM0LW-FMAT-PO-YY = FM0LW00.FM0LW-FMAT-PO-YY - 1;*/
    /* ELSE;*/
      /* FM0LW00.FM0LW-FMAT-PO-PP = FM0LW00.FM0LW-FMAT-PO-DD - 2;*/
    /* END;*/
   /* END;*/
   /* -------------- Y2K OUT END -----------------------*/
  ;
   /* --------------  Y2K IN  BEGIN -----------------*/
   /* Format the buy date into NIKE PO ID format*/
  ;
  FM0LW00.FM0LW-FMAT-BUY-DT = FB9REC.FB8BUYDT;
  FM0LW00.FM0LW-FMAT-PO-CCYY = FM0LW00.FM0LW-FMAT-BUY-CCYY;
  FM0LW00.FM0LW-FMAT-PO-DD = FM0LW00.FM0LW-FMAT-BUY-MM;
  ;
  if (FM0LW00.FM0LW-FMAT-PO-DD == 1)
    FM0LW00.FM0LW-FMAT-PO-PP = 11;
    FM0LW00.FM0LW-FMAT-PO-CCYY = FM0LW00.FM0LW-FMAT-PO-CCYY - 1;
  else
    if (FM0LW00.FM0LW-FMAT-PO-DD == 2)
      FM0LW00.FM0LW-FMAT-PO-PP = 12;
      FM0LW00.FM0LW-FMAT-PO-CCYY = FM0LW00.FM0LW-FMAT-PO-CCYY - 1;
    else
      FM0LW00.FM0LW-FMAT-PO-PP = FM0LW00.FM0LW-FMAT-PO-DD - 2;
    end
  end
   /* -------------- Y2K IN  END -----------------------*/
  ;
  FM0LM110.FM0LM-HDR-NIKE-PO-YY = FM0LW00.FM0LW-FMAT-PO-YY;
  FM0LM110.FM0LM-HDR-NIKE-PO-PP = FM0LW00.FM0LW-FMAT-PO-PP;
  FM0LM110.FM0LM-HDR-NIKE-PO-DD = FM0LW00.FM0LW-FMAT-PO-DD;
  FM0LM110.FM0LM-HDR-FY1FCTYC = "*"; /* Factory*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Initialize working storage variables.*/
   /* ------------------------------------------------------------*/
  ;
  FM0LW00.FM0LW-REQUEST-DATA-SW = "N"; /* Don't request data*/
  FM0LW00.FM0LW-FMAT-MAP-SW = "N"; /* Format the map switch*/
  ;
  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";
  ;
  ;
end // end FM0L-0005

// Select DFBUY.VFMCTL01
Function FM0L-0006()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FB9REC empty;
  ;
  ;
  try
    call "IO3650" ("S ", SQLCA, FB9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "0006"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    
    // VAGen Info - map = FM0LM110
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DFBUY.VFMCTL01    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFMCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB9REC.FB9GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-0006

// Main process to display a map
Function FM0L-0010()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FM0L-1000(); /* Obtain the data to display*/
  FM0L-2000(); /* Format and display the map*/
  FM0L-3000(); /* Check attention identifier*/
  FM0L-4000(); /* Reset fields to normal intensity*/
  FM0L-5000(); /* Verify the entered data*/
  FM0L-6000(); /* Process valid input request*/
  ;
  ;
end // end FM0L-0010

// Obtain data to display
Function FM0L-1000()
   /* --------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0LW00.FM0LW-REQUEST-DATA-SW != "Y" /* Data not requested*/
   || converseVar.validationMsgNum != 0)   /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Establish the temporary storage queue page length.*/
   /* --------------------------------------------------------------*/
  ;
  FM0LW00.XXXTSLEN = 1802; /* Temporary storage page length*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* --------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO == 0) /* No message to display*/
    FM0LW00.XXXTSPAG = 1; /* Page number to display*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* --------------------------------------------------------------*/
  ;
  FM0L-1100(); /* Purge temp storage*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the material description/thickness.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0LM110.FK-MAT-NBR == "*") /* If wildcard*/
    ;
    FM0LW00.FK-DEPT-MAT-DESC = " "; /* Material desc*/
    FM0LW00.XTM-MAT-THCK-DESC = " "; /* Thickness desc*/
  else
    ;
    FM0L-1200(); /* Select DCMPNT.VMATRL01*/
    ;
    if (VMATRL01.XTM-MAT-THCK-CD in XTMTBL.XTM-MAT-THCK-CD /* If in table*/
     && XTMTBL.XXXSTAT[sysVar.arrayIndex] == "A")          /* And active status*/
      ;
      FM0LW00.XTM-MAT-THCK-DESC = XTMTBL.XTM-MAT-THCK-DESC[sysVar.arrayIndex];
    else
      ;
      FM0LW00.XTM-MAT-THCK-DESC = "**********";
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Obtain the color description.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0LM110.XCLCD == "*") /* If wildcard*/
    ;
    FM0LW00.XCLDESC = " ";
  else
    ;
    if (FM0LM110.XCLCD in XCLTBL.XCLCD /* If in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
      FM0LW00.XCLDESC = XCLTBL.XCLDESC;
    else
      ;
      FM0LW00.XCLDESC = "**********";
    end
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare a cursor to join DMCPNT.VFVHDR01 and DCMPNT.VFVITM01.*/
   /* --------------------------------------------------------------*/
  ;
  FM0L-1300(); /* Declare VFVHDR01/VFVITM01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Fetch a record from the factory/vendor P.O. header cursor.*/
   /* --------------------------------------------------------------*/
  ;
  FM0LW00.FM0LW-END-CSR-SW = "N";
  FM0LW00.FM0LW-IDX = 1; /* Init index*/
  ;
  FM0L-1400(); /* Fetch VFVHDR01/VFVITM01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Load the fetched records into display storage until end of cursor*/
   /* is found.*/
   /* When necessary, add the temporary storage page to the temporary*/
   /* storage page queue.*/
   /* --------------------------------------------------------------*/
  ;
  while (FM0LW00.FM0LW-END-CSR-SW != "Y")
    ;
    FM0L-1500(); /* Save data to display storage*/
    ;
    if (FM0LW00.FM0LW-IDX > FM0LW00.FM0LW-NBR-MAP-ROWS
    )
      FM0L-1600(); /* Add page to temp storage page queue*/
      FM0LW00.FM0LW-IDX = 1; /* Init index*/
    end
    ;
    FM0L-1400(); /* Fetch VFVHDR01/VFVITM01 cursor*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Declare a cursor on the factory/vendor P.O. header table.*/
   /* --------------------------------------------------------------*/
  ;
  FM0L-1700(); /* Close VFVHDR01/VFVITM01 cursor*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Save any parially formatted page to temporary storage page queue.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0LW00.FM0LW-IDX > 1) /* Data was formatted*/
    ;
    FM0L-1600(); /* Add page to temp storage page queue*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* If no data was formatted, set 'no data found error message'.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0LW00.TA5TSQIX <= 0) /* No pages formatted to temp storage*/
    ;
    FKWREC.XXX-MOD-ID = "1000"; /* Module identification*/
    converseLib.validationFailed(18); /* Request processed - no data*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Indicate request for data is complete.*/
   /* --------------------------------------------------------------*/
  ;
  FM0LW00.FM0LW-REQUEST-DATA-SW = "N";
  FM0LW00.FM0LW-FMAT-MAP-SW = "Y";
  ;
  ;
end // end FM0L-1000

// Purge any temporary storage
Function FM0L-1100()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FM0LW01 empty; /* m110 display storage*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FM0LW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FM0LW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1100"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-1100

// Select DCMPNT.VMATRL01
Function FM0L-1200()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0LM110.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      FM0LW00.FK-DEPT-MAT-DESC = VMATRL01.FK-DEPT-MAT-DESC;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0LW00.FK-DEPT-MAT-DESC = "***************";
      VMATRL01.XTM-MAT-THCK-CD = "**";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1200"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    
    // VAGen Info - map = FM0LM110
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "1200 SELECT DCMPNT.VMATRL01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-1200

// Declare VFVHDR01/VFVITM01 csr
Function FM0L-1300()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FMCREC empty;
  ;
  FMCREC.FK-VEND-CD = FM0LM110.FK-VEND-CD; /* Vendor*/
  FMCREC.FK-MAT-NBR = FM0LM110.FK-MAT-NBR; /* Material*/
  FMCREC.XMG-COLR-GRP-CD = FM0LM110.XMG-COLR-GRP-CD; /* Clr grp*/
  FMCREC.XCLCD = FM0LM110.XCLCD; /* Clr grp*/
  FMCREC.FY1FCTYC = FM0LM110.FM0LM-HDR-FY1FCTYC; /* Factory*/
  ;
  if (FM0LM110.FM0LM-HDR-NIKE-PO-YY == "*") /* If wildcarded*/
    ;
    FMCREC.PC3POIDT = -1; /* Wildcard po id date*/
  else
    ;
    FM0LW00.FM0LW-FMAT-PO-YY = FM0LM110.FM0LM-HDR-NIKE-PO-YY;
    FM0LW00.FM0LW-FMAT-PO-PP = FM0LM110.FM0LM-HDR-NIKE-PO-PP;
    FM0LW00.FM0LW-FMAT-PO-DD = FM0LM110.FM0LM-HDR-NIKE-PO-DD;
    if (FM0LW00.FM0LW-FMAT-PO-YY < 80)
      FM0LW00.FM0LW-FMAT-PO-CC = 20;
    else
      FM0LW00.FM0LW-FMAT-PO-CC = 19;
    end
    FMCREC.PC3POIDT = FM0LW00.FM0LW-FMAT-PO-DT; /* PO id date*/
  end
  ;
  ;
  try
    call "FM1400" ("S1", SQLCA, FMCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Decl csr*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1300"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    
    // VAGen Info - map = FM0LM110
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DECLARE VFVHDR01/VFVITM01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMCREC.FMCREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-1300

// Fetch VFVHDR01/VFVITM01 csr
Function FM0L-1400()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "FM1400" ("N1", SQLCA, FMCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      FM0LW00.FM0LW-END-CSR-SW = "Y";
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1400"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    
    // VAGen Info - map = FM0LM110
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH VFVHDR01/VFVITM01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMCREC.FMCREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-1400

// Save data in display storage
Function FM0L-1500()
   /* --------------------------------------------------------------*/
   /* Format header data to display storage.*/
   /* --------------------------------------------------------------*/
  ;
  if (FM0LW00.FM0LW-IDX == 1) /* If first line on page*/
    ;
    FM0LW01.FK-VEND-CD = FM0LM110.FK-VEND-CD; /* Vendor*/
    FM0LW01.FK-MAT-NBR = FM0LM110.FK-MAT-NBR; /* Material*/
    FM0LW01.FK-DEPT-MAT-DESC = FM0LW00.FK-DEPT-MAT-DESC; /* Mtl description*/
    FM0LW01.XTM-MAT-THCK-DESC = FM0LW00.XTM-MAT-THCK-DESC; /* Thickness description*/
    FM0LW01.XMG-COLR-GRP-CD = FM0LM110.XMG-COLR-GRP-CD; /* Color group*/
    FM0LW01.XCLCD = FM0LM110.XCLCD; /* Color*/
    FM0LW01.XCLDESC = FM0LW00.XCLDESC; /* Color desc*/
    FM0LW01.FM0LM-HDR-NIKE-PO-YY = FM0LM110.FM0LM-HDR-NIKE-PO-YY; /* Nike PO year*/
    FM0LW01.FM0LM-HDR-NIKE-PO-PP = FM0LM110.FM0LM-HDR-NIKE-PO-PP; /* Nike PO prod month*/
    FM0LW01.FM0LM-HDR-NIKE-PO-DD = FM0LM110.FM0LM-HDR-NIKE-PO-DD; /* Nike PO delivery month*/
    FM0LW01.FM0LM-HDR-FY1FCTYC = FM0LM110.FM0LM-HDR-FY1FCTYC; /* Factory*/
  end
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Format the detail line.*/
   /* --------------------------------------------------------------*/
  ;
  FM0LW01.FK-INTRN-PO-ID[FM0LW-IDX] = FMCREC.FK-INTRN-PO-ID; /* Internal PO id*/
  FM0LW01.FK-FCTY-PO-DT[FM0LW-IDX] = FMCREC.FK-FCTY-PO-DT; /* Factory PO date*/
  ;
  FM0LW00.FM0LW-FMAT-PO-DT = FMCREC.PC3POIDT; /* Full PO date*/
  FM0LW01.FM0LM-FK-NIKE-PO-YY[FM0LW-IDX] = FM0LW00.FM0LW-FMAT-PO-YY; /* Nike PO year*/
  FM0LW01.FM0LM-FK-NIKE-PO-PP[FM0LW-IDX] = FM0LW00.FM0LW-FMAT-PO-PP; /* Nike PO prod month*/
  FM0LW01.FM0LM-FK-NIKE-PO-DD[FM0LW-IDX] = FM0LW00.FM0LW-FMAT-PO-DD; /* Nike PO delivery month*/
  ;
  FM0LW01.FY1FCTYC[FM0LW-IDX] = FMCREC.FY1FCTYC; /* Factory*/
  FM0LW01.FK-FCTY-PO-ID[FM0LW-IDX] = FMCREC.FK-FCTY-PO-ID; /* Factory PO id*/
  FM0LW01.FK-FCTY-PO-COMNT[FM0LW-IDX] = FMCREC.FK-FCTY-PO-COMNT; /* Factory PO comment*/
  ;
  ;
   /* --------------------------------------------------------------*/
   /* Increment the index for the display storage page.*/
   /* --------------------------------------------------------------*/
  ;
  FM0LW00.FM0LW-IDX = FM0LW00.FM0LW-IDX + 1; /* Increment line index*/
  ;
  ;
end // end FM0L-1500

// Add page to temporary storage
Function FM0L-1600()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FM0LW01.XXXTSLEN = FM0LW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (FM0LW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FM0LW01 empty; /* m110 display storage*/
    ;
    FM0LW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "1600"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-1600

// Close VFVHDR01/VFVITM01 csr
Function FM0L-1700()
   /* ------------------------------------------------------------*/
   /* Close the table cursor.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "FM1400" ("C1", SQLCA, FMCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "1700"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    
    // VAGen Info - map = FM0LM110
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE VFVHDR01/VFVITM01 CSR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFVHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = FMCREC.FMCREC-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-1700

// Format and converse the map
Function FM0L-2000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* If error found*/
    FKWREC.XXXMSGNO = converseVar.validationMsgNum; /* Save message number*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If requested, and no error, format data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0LW00.FM0LW-FMAT-MAP-SW == "Y" /* Format requested*/
   && converseVar.validationMsgNum == 0) /* and no error to display*/
    ;
    FM0L-2100(); /* Format the map*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FM0LM110.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FM0LM110.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FM0LM110.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FKWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    set FM0LM110 alarm; /* Indicate sound alarm*/
    ;
    if (FKWREC.XXXMSGNO != 0) /* Message to display*/
      ;
      if (FKWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FKWREC.XXXMSGNO);
      end /* Message number*/
    else
      FM0LM110.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    FM0LM110.XXX-MOD-ID = FKWREC.XXX-MOD-ID; /* Module id*/
    ;
  end
  ;
  FM0LM110.FK-DEPT-MAT-DESC = FM0LW00.FK-DEPT-MAT-DESC;
  FM0LM110.XTM-MAT-THCK-DESC = FM0LW00.XTM-MAT-THCK-DESC;
  FM0LM110.XCLDESC = FM0LW00.XCLDESC;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set detail lines dark where there is no data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0LW00.TA5TSQIX <= 0) /* No data formatted*/
    ;
    FM0LW00.FM0LW-IDX = 1; /* Init index*/
    while (FM0LW00.FM0LW-IDX <= FM0LW00.FM0LW-NBR-MAP-ROWS)
      ;
      set FM0LM110.FM0LM-SELECT[FM0LW-IDX] invisible, skip;
      set FM0LM110.FK-FCTY-PO-DT[FM0LW-IDX] invisible, skip;
      set FM0LM110.FM0LM-FK-NIKE-PO-YY[FM0LW-IDX] invisible, skip;
      set FM0LM110.FM0LM-FK-NIKE-PO-PP[FM0LW-IDX] invisible, skip;
      set FM0LM110.FM0LM-FK-NIKE-PO-DD[FM0LW-IDX] invisible, skip;
      set FM0LM110.FY1FCTYC[FM0LW-IDX] invisible, skip;
      set FM0LM110.FK-FCTY-PO-ID[FM0LW-IDX] invisible, skip;
      set FM0LM110.FK-FCTY-PO-COMNT[FM0LW-IDX] invisible, skip;
      ;
      FM0LW00.FM0LW-IDX = FM0LW00.FM0LW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Set detail lines dark where there is no data to display*/
   /* (But at least some data exists).*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0LW00.TA5TSQIX > 0)
    ;
    FM0LW00.FM0LW-IDX = 1; /* Init index*/
    while (FM0LW00.FM0LW-IDX <= FM0LW00.FM0LW-NBR-MAP-ROWS)
      ;
      if (FM0LM110.FK-FCTY-PO-DT[FM0LW-IDX] <= 0) /* No data on line*/
        ;
        set FM0LM110.FM0LM-SELECT[FM0LW-IDX] invisible, skip;
        set FM0LM110.FK-FCTY-PO-DT[FM0LW-IDX] invisible, skip;
        set FM0LM110.FM0LM-FK-NIKE-PO-YY[FM0LW-IDX] invisible, skip;
        set FM0LM110.FM0LM-FK-NIKE-PO-PP[FM0LW-IDX] invisible, skip;
        set FM0LM110.FM0LM-FK-NIKE-PO-DD[FM0LW-IDX] invisible, skip;
        set FM0LM110.FY1FCTYC[FM0LW-IDX] invisible, skip;
        set FM0LM110.FK-FCTY-PO-ID[FM0LW-IDX] invisible, skip;
        set FM0LM110.FK-FCTY-PO-COMNT[FM0LW-IDX] invisible, skip;
      end
      ;
      FM0LW00.FM0LW-IDX = FM0LW00.FM0LW-IDX + 1; /* Increment*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Establish cursor position.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* If no message to display*/
    set FM0LM110.FK-VEND-CD cursor;
  end
  ;
  ;
  converse FM0LM110 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FKWREC.XXX-MOD-ID = " "; /* Module identification*/
  FKWREC.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = FM0LM110.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FM0LM110.CAITEM; /* Application data*/
  ;
  ;
end // end FM0L-2000

// Format the data to display
Function FM0L-2100()
   /* --------------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0LM110 initial; /* Initialize map*/
  ;
  FM0LW-FMAT-MAP-SW = "N"; /* Format map switch*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed, obtain*/
   /* the desired page from temporary storage.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0LW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FM0LW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      if (FM0LW00.XXXTSPAG > FM0LW00.TA5TSQIX) /* Desired page > highest*/
        FM0LW00.XXXTSPAG = FM0LW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FM0L-2110(); /* Obtain temp storage page*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format header data to the map.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0LM110.XXXTSPAG = FM0LW00.XXXTSPAG; /* Current page*/
  FM0LM110.TA5TSQIX = FM0LW00.TA5TSQIX; /* Max page*/
  ;
  FM0LM110.FK-VEND-CD = FM0LW01.FK-VEND-CD;
  FM0LM110.FK-MAT-NBR = FM0LW01.FK-MAT-NBR;
  FM0LM110.XMG-COLR-GRP-CD = FM0LW01.XMG-COLR-GRP-CD;
  FM0LM110.XCLCD = FM0LW01.XCLCD;
  FM0LM110.FM0LM-HDR-NIKE-PO-YY = FM0LW01.FM0LM-HDR-NIKE-PO-YY;
  FM0LM110.FM0LM-HDR-NIKE-PO-PP = FM0LW01.FM0LM-HDR-NIKE-PO-PP;
  FM0LM110.FM0LM-HDR-NIKE-PO-DD = FM0LW01.FM0LM-HDR-NIKE-PO-DD;
  FM0LM110.FM0LM-HDR-FY1FCTYC = FM0LW01.FM0LM-HDR-FY1FCTYC;
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Format the detail data.*/
   /* --------------------------------------------------------------------*/
  ;
  FM0LW00.FM0LW-IDX = 1; /* Initialize idx*/
  while (FM0LW00.FM0LW-IDX <= FM0LW00.FM0LW-NBR-MAP-ROWS)
    ;
    FM0LM110.FK-FCTY-PO-DT[FM0LW-IDX] = FM0LW01.FK-FCTY-PO-DT[FM0LW-IDX];
    FM0LM110.FM0LM-FK-NIKE-PO-YY[FM0LW-IDX] = FM0LW01.FM0LM-FK-NIKE-PO-YY[FM0LW-IDX];
    FM0LM110.FM0LM-FK-NIKE-PO-PP[FM0LW-IDX] = FM0LW01.FM0LM-FK-NIKE-PO-PP[FM0LW-IDX];
    FM0LM110.FM0LM-FK-NIKE-PO-DD[FM0LW-IDX] = FM0LW01.FM0LM-FK-NIKE-PO-DD[FM0LW-IDX];
    FM0LM110.FY1FCTYC[FM0LW-IDX] = FM0LW01.FY1FCTYC[FM0LW-IDX];
    FM0LM110.FK-FCTY-PO-ID[FM0LW-IDX] = FM0LW01.FK-FCTY-PO-ID[FM0LW-IDX];
    FM0LM110.FK-FCTY-PO-COMNT[FM0LW-IDX] = FM0LW01.FK-FCTY-PO-COMNT[FM0LW-IDX];
    ;
    FM0LW00.FM0LW-IDX = FM0LW00.FM0LW-IDX + 1;
  end
  ;
  ;
end // end FM0L-2100

// Read page from temp storage
Function FM0L-2110()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FM0LW01.XXXTSLEN = FM0LW00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FM0LW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FM0LW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FKWREC.XXX-MOD-ID = "2110"; /* Module identification*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M110"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-2110

// Check attention identifier
Function FM0L-3000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, fastpath to current application*/
   /* and map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    ;
    COMMAREA.CATOAP = "FM0L"; /* to applicaiton*/
    COMMAREA.CAITEM = " "; /* item*/
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0LM110.CATOAP cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0LM110.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      set FKWREC empty; /* Initialize fkwrec*/
      ;
      COMMAREA.CATOAP = FM0LM110.CATOAP; /* to applicaiton*/
      COMMAREA.CAITEM = FM0LM110.CAITEM; /* item*/
      ;
      XSFKS01(); /* Exit to another application*/
      ;
      set FM0LM110.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FKWREC.XXX-MOD-ID = "3000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, process PF key.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* HELP requested*/
   || converseVar.eventKey is pf3 /* FK0B requested*/
   || converseVar.eventKey is pf4) /* MSTR MN requested*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* TO application*/
      COMMAREA.CAITEM = "FM0LM110"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FM0A"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
      COMMAREA.CAITEM = "    "; /* Application find code*/
    end
    ;
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* BACK requested*/
   && converseVar.eventKey not pf8   /* FWRD requested*/
   && converseVar.eventKey not pf12  /* POMNT requested*/
   && converseVar.eventKey not pf14  /* POSHP requested*/
   && converseVar.eventKey not pf15  /* POSUM requested*/
   && converseVar.eventKey not pf16) /* POLST requested*/
    ;
    FKWREC.XXX-MOD-ID = "3000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FM0L-3000

// Reset Highlighted fields
Function FM0L-4000()
   /* --------------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* --------------------------------------------------------------------*/
  ;
  set FM0LM110.XXXTSPAG initialAttributes; /* Page nbr*/
  set FM0LM110.TA5TSQIX initialAttributes; /* Max page*/
  ;
  set FM0LM110.FK-VEND-CD initialAttributes;
  set FM0LM110.FK-MAT-NBR initialAttributes;
  set FM0LM110.FK-DEPT-MAT-DESC initialAttributes;
  set FM0LM110.XTM-MAT-THCK-DESC initialAttributes;
  set FM0LM110.XMG-COLR-GRP-CD initialAttributes;
  set FM0LM110.XCLCD initialAttributes;
  set FM0LM110.XCLDESC initialAttributes;
  set FM0LM110.FM0LM-HDR-NIKE-PO-YY initialAttributes;
  set FM0LM110.FM0LM-HDR-NIKE-PO-PP initialAttributes;
  set FM0LM110.FM0LM-HDR-NIKE-PO-DD initialAttributes;
  set FM0LM110.FM0LM-HDR-FY1FCTYC initialAttributes;
  ;
  ;
  FM0LW00.FM0LW-IDX = 1; /* Initialize index*/
  while (FM0LW00.FM0LW-IDX <= FM0LW00.FM0LW-NBR-MAP-ROWS) /* For each line*/
    ;
    set FM0LM110.FM0LM-SELECT[FM0LW-IDX] initialAttributes;
    set FM0LM110.FK-FCTY-PO-DT[FM0LW-IDX] initialAttributes;
    set FM0LM110.FM0LM-FK-NIKE-PO-YY[FM0LW-IDX] initialAttributes;
    set FM0LM110.FM0LM-FK-NIKE-PO-PP[FM0LW-IDX] initialAttributes;
    set FM0LM110.FM0LM-FK-NIKE-PO-DD[FM0LW-IDX] initialAttributes;
    set FM0LM110.FY1FCTYC[FM0LW-IDX] initialAttributes;
    set FM0LM110.FK-FCTY-PO-ID[FM0LW-IDX] initialAttributes;
    set FM0LM110.FK-FCTY-PO-COMNT[FM0LW-IDX] initialAttributes;
    ;
    FM0LW00.FM0LW-IDX = FM0LW00.FM0LW-IDX + 1;
  end
  ;
  set FM0LM110.CATOAP initialAttributes; /* To application*/
  set FM0LM110.CAITEM initialAttributes; /* Application data*/
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0LM110.XCLCD != "?" /* XCL list not requested*/
   && FM0LM110.XMG-COLR-GRP-CD != "?") /* XMG list not requested*/
    return;
  end
  ;
  if (FM0LM110.XCLCD == "?" /* XCL list requested*/
   || FM0LM110.XMG-COLR-GRP-CD == "?") /* XMG list requested*/
    ;
    if (converseVar.eventKey not enter) /* Enter not pressed*/
      ;
      FKWREC.XXX-MOD-ID = "4000"; /* Module identification*/
      converseLib.validationFailed(19); /* Pa/pf key may not be used*/
      exit stack; /* Exit to display the map*/
    end
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XMG codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0LM110.XMG-COLR-GRP-CD == "?") /* XMG list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COLOR GROUP"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXMG01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0LM110.XMG-COLR-GRP-CD = FM0LW01.XMG-COLR-GRP-CD;
    else
      FM0LM110.XMG-COLR-GRP-CD = XMGTBL.XMG-COLR-GRP-CD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0LM110.XMG-COLR-GRP-CD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* If requested, display the list of XCL codes.*/
   /* --------------------------------------------------------------------*/
  ;
  if (FM0LM110.XCLCD == "?") /* XCL list requested*/
    ;
    XPXX001(); /* Window initialization*/
    XX0XW02.XX0XWHDR = "COLOR"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      FM0LM110.XCLCD = FM0LW01.XCLCD; /* Restore prior code*/
    else
      FM0LM110.XCLCD = XCLTBL.XCLCD[XX0XWPIX]; /* Selected code*/
    end
    ;
    set FM0LM110.XCLCD cursor; /* Establish cursor position*/
  end
  ;
  ;
   /* --------------------------------------------------------------------*/
   /* Indicate the requested list has been displayed and that ENTER*/
   /* must be pressed to process any changes.*/
   /* --------------------------------------------------------------------*/
  ;
  
  // VAGen Info - map = FM0LM110
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FKWREC.XXX-MOD-ID = "4000"; /* Module identification*/
  converseLib.validationFailed(20); /* Corporate list displayed*/
  ;
  exit stack;
  ;
  ;
end // end FM0L-4000

// Verify entered fields
Function FM0L-5000()
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0LM110.CAITEM > " "         /* Application data was entered*/
   && converseVar.eventKey not pf12 /* POMNT*/
   && converseVar.eventKey not pf14 /* POSHP*/
   && converseVar.eventKey not pf15 /* POSUM*/
   && converseVar.eventKey not pf16) /* POLST*/
    ;
    set FM0LM110.CAITEM cursor, bold; /* Highlight*/
    FKWREC.XXX-MOD-ID = "5000"; /* Module identification*/
    converseLib.validationFailed(7); /* Only use this with fastpath*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Verify scroll request.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Pf7 pressed*/
   || converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0L-5100(); /* Verify scroll request*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* POMNT*/
   || converseVar.eventKey is pf14 /* POSHP*/
   || converseVar.eventKey is pf15 /* POSUM*/
   || converseVar.eventKey is pf16) /* POLST*/
    ;
    FM0L-5200(); /* Verify detail*/
    ;
    if (converseVar.validationMsgNum == 0)
      return;
    else
      exit stack;
    end
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If key changed, verify it.  Otherwise verify the detail.*/
   /* ---------------------------------------------------------------*/
  ;
  if (FM0LM110.FK-VEND-CD == FM0LW01.FK-VEND-CD
   && FM0LM110.FK-MAT-NBR == FM0LW01.FK-MAT-NBR
   && FM0LM110.XMG-COLR-GRP-CD == FM0LW01.XMG-COLR-GRP-CD
   && FM0LM110.XCLCD == FM0LW01.XCLCD
   && FM0LM110.FM0LM-HDR-NIKE-PO-YY == FM0LW01.FM0LM-HDR-NIKE-PO-YY
   && FM0LM110.FM0LM-HDR-NIKE-PO-PP == FM0LW01.FM0LM-HDR-NIKE-PO-PP
   && FM0LM110.FM0LM-HDR-NIKE-PO-DD == FM0LW01.FM0LM-HDR-NIKE-PO-DD
   && FM0LM110.FM0LM-HDR-FY1FCTYC == FM0LW01.FM0LM-HDR-FY1FCTYC)
    ;
    FM0L-5200(); /* Verify detail*/
  else
    ;
    FM0L-5300(); /* Verify key*/
  end
  ;
  ;
   /* ---------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ---------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack;
  end
  ;
  ;
end // end FM0L-5000

// Verify scroll request
Function FM0L-5100()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FM0LW00.XXXTSPAG < 2)       /* and no previous pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FM0LW00.XXXTSPAG >= FM0LW00.TA5TSQIX) /* and no more pages*/
    ;
    FKWREC.XXX-MOD-ID = "5100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/
    ;
  end
  ;
  ;
end // end FM0L-5100

// Verify non-key data
Function FM0L-5200()
   /* ------------------------------------------------------------*/
   /* Verify the select fields.*/
   /* ------------------------------------------------------------*/
  ;
  FM0LW00.FM0LW-IDX = FM0LW00.FM0LW-NBR-MAP-ROWS; /* Initialize idx*/
  while (FM0LW00.FM0LW-IDX > 0)
    ;
    if (FM0LM110.FM0LM-SELECT[FM0LW-IDX] == " " /* If blank*/
     || FM0LM110.FM0LM-SELECT[FM0LW-IDX] == "S") /* or selected*/
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(13); /* Only 's' may be used to select a line*/
      FKWREC.XXX-MOD-ID = "5200"; /* Module identification*/
      set FM0LM110.FM0LM-SELECT[FM0LW-IDX] cursor, bold; /* Hightlight*/
    end
    ;
    FM0LW00.FM0LW-IDX = FM0LW00.FM0LW-IDX - 1;
  end
  ;
  ;
end // end FM0L-5200


// Verify key data
Function FM0L-5300()
   /* ------------------------------------------------------------*/
   /* Verify the NIKE PO ID.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0LM110.FM0LM-HDR-FY1FCTYC == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    if (FM0LM110.FM0LM-HDR-FY1FCTYC == " ") /* If blank*/
      ;
      converseLib.validationFailed(121); /* Factory code is missing or invalid*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0LM110.FM0LM-HDR-FY1FCTYC cursor, bold;
    else
      ;
      FM0L-5310(); /* Select DFCTY.VFCTY001*/
    end
  end
  ;
  ;
  if (FM0LM110.FM0LM-HDR-NIKE-PO-YY == "*") /* If wildcarded*/
    ;
    if ((FM0LM110.FM0LM-HDR-NIKE-PO-PP == " " /* If pp blank*/
     || FM0LM110.FM0LM-HDR-NIKE-PO-PP == "*") /* or wildcarded*/
     && (FM0LM110.FM0LM-HDR-NIKE-PO-DD == " " /* and dd blank*/
     || FM0LM110.FM0LM-HDR-NIKE-PO-DD == "*")) /* or wildcarded*/
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(150); /* NIKE PO date missing or invalid*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0LM110.FM0LM-HDR-NIKE-PO-YY cursor, bold;
      set FM0LM110.FM0LM-HDR-NIKE-PO-PP bold;
      set FM0LM110.FM0LM-HDR-NIKE-PO-DD bold;
    end
  else
    ;
     /* PO year entered, verify entire PO date*/
    ;
    if (FM0LM110.FM0LM-HDR-NIKE-PO-DD is numeric)
      ;
      if (FM0LM110.FM0LM-HDR-NIKE-PO-DD <= 0 /* If date not valid*/
       || FM0LM110.FM0LM-HDR-NIKE-PO-DD > 12)
        ;
        converseLib.validationFailed(150); /* NIKE PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
        set FM0LM110.FM0LM-HDR-NIKE-PO-DD cursor, bold;
      end
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0LM110.FM0LM-HDR-NIKE-PO-DD cursor, bold;
    end
    ;
    if (FM0LM110.FM0LM-HDR-NIKE-PO-PP is numeric)
      ;
      if (FM0LM110.FM0LM-HDR-NIKE-PO-PP <= 0 /* If date not valid*/
       || FM0LM110.FM0LM-HDR-NIKE-PO-PP > 12)
        ;
        converseLib.validationFailed(150); /* NIKE PO date missing or invalid*/
        FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
        set FM0LM110.FM0LM-HDR-NIKE-PO-PP cursor, bold;
      end
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0LM110.FM0LM-HDR-NIKE-PO-PP cursor, bold;
    end
    ;
    if (FM0LM110.FM0LM-HDR-NIKE-PO-YY is numeric)
      ;
       /* Next sentence*/
    else
      ;
      converseLib.validationFailed(148); /* Entered value must be numeric*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0LM110.FM0LM-HDR-NIKE-PO-YY cursor, bold;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the color code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0LM110.XCLCD == "*") /* If wildcarded*/
    ;
    /* Next sentence*/
  else
    if (FM0LM110.XCLCD in XCLTBL.XCLCD /* If in table*/
     && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
      /* Next sentence*/
    else
      ;
      converseLib.validationFailed(32); /* Material color code is missing or invalid*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0LM110.XCLCD cursor, bold;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the color group code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0LM110.XMG-COLR-GRP-CD == "*") /* If wildcarded*/
    ;
    /* Next sentence*/
  else
    if (FM0LM110.XMG-COLR-GRP-CD in XMGTBL.XMG-COLR-GRP-CD /* If in table*/
     && XMGTBL.XXXSTAT[sysVar.arrayIndex] == "A")          /* and active status*/
      ;
      /* Next sentence*/
    else
      ;
      converseLib.validationFailed(31); /* Color group code is missing or invalid*/
      FKWREC.XXX-MOD-ID = "5300"; /* Module identification*/
      set FM0LM110.XMG-COLR-GRP-CD cursor, bold;
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the material nbr.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  if (FM0LM110.FK-MAT-NBR == "*") /* If wildcarded*/
    ;
     /* Next sentence*/
  else
    ;
    FM0L-5320(); /* Select DCMPNT.VMATRL01*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify material/color group/color combination.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors yet*/
    ;
    if (FM0LM110.FK-MAT-NBR != "*"      /* If material entered*/
     && FM0LM110.XMG-COLR-GRP-CD != "*" /* and color group entered*/
     && FM0LM110.XCLCD != "*")          /* and color entered*/
      ;
      FM0L-5340(); /* Select DCMPNT.VMCOLR01*/
    end
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Verify the vendor.*/
   /* ------------------------------------------------------------*/
  ;
  FM0L-5330(); /* Select DCMPNT.VVNDR001*/
  ;
  ;
end // end FM0L-5300

// Verify factory code
Function FM0L-5310()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FY1REC empty;
  ;
  FY1REC.XGPCD = "02";
  FY1REC.FY1FCTYC = FM0LM110.FM0LM-HDR-FY1FCTYC;
  ;
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0LM110.FM0LM-HDR-FY1FCTYC cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5310"; /* Module identification*/
      converseLib.validationFailed(121); /* Factory code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5310"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    
    // VAGen Info - map = FM0LM110
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY FACTORY CODE ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-5310

// Verify material nbr
Function FM0L-5320()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMATRL01 empty;
  ;
  VMATRL01.FK-MAT-NBR = FM0LM110.FK-MAT-NBR;
  ;
  ;
  try
    call "IO6190" ("S ", SQLCA, VMATRL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FM0LM110.FK-VEND-CD != "*" /* If vendor entered*/
       && FM0LM110.FK-VEND-CD != " ")
        ;
        if (VMATRL01.FK-VEND-CD != FM0LM110.FK-VEND-CD)
          ;
          set FM0LM110.FK-VEND-CD cursor, bold; /* Highlight*/
          set FM0LM110.FK-MAT-NBR bold; /* Highlight*/
          FKWREC.XXX-MOD-ID = "5320"; /* Module identification*/
          converseLib.validationFailed(76); /* Material/vendor combination invalid*/
        end
      end
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0LM110.FK-MAT-NBR cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5320"; /* Module identification*/
      converseLib.validationFailed(26); /* Material nbr is missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5320"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    
    // VAGen Info - map = FM0LM110
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMATRL01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMATRL01.VMATRL01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-5320

// Verify vendor code
Function FM0L-5330()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VVNDR001 empty;
  ;
  VVNDR001.FK-VEND-CD = FM0LM110.FK-VEND-CD;
  ;
  ;
  try
    call "IO6180" ("S ", SQLCA, VVNDR001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0LM110.FK-VEND-CD cursor, bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5330"; /* Module identification*/
      converseLib.validationFailed(21); /* Vendor code missing or invalid*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5330"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    
    // VAGen Info - map = FM0LM110
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VVNDR001"; /* Table view name*/
  TA1REC.TA1TBLKE = VVNDR001.VVNDR001-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-5330

// Select DCMPNT.VMCOLR01
Function FM0L-5340()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set VMCOLR01 empty;
  ;
  VMCOLR01.FK-MAT-NBR = FM0LM110.FK-MAT-NBR;
  VMCOLR01.XMG-COLR-GRP-CD = FM0LM110.XMG-COLR-GRP-CD;
  VMCOLR01.XCLCD = FM0LM110.XCLCD;
  ;
  ;
  try
    call "IO6210" ("S ", SQLCA, VMCOLR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == +100) /* No row found*/
      ;
      set FM0LM110.FK-MAT-NBR cursor, bold; /* Highlight*/
      set FM0LM110.XMG-COLR-GRP-CD bold; /* Highlight*/
      set FM0LM110.XCLCD bold; /* Highlight*/
      FKWREC.XXX-MOD-ID = "5340"; /* Module identification*/
      converseLib.validationFailed(66); /* Material/color group/color not defined*/
      return;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FKWREC.XXX-MOD-ID = "5340"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    
    // VAGen Info - map = FM0LM110
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "VERIFY VENDOR CODE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = FKWREC.XXX-MOD-ID; /* Program name*/
  TA1REC.TA1DBASE = "DCMPNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VMCOLR01.VMCOLR01-GROUP; /* Key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FM0L-5340

// Process valid request
Function FM0L-6000()
   /* ------------------------------------------------------------*/
   /* If pf7 or pf8 pressed, process scroll request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf7) /* Pf7 pressed*/
    ;
    FM0LW00.XXXTSPAG = FM0LW00.XXXTSPAG - 1; /* Decrement page*/
    FM0LW00.FM0LW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* Pf8 pressed*/
    ;
    FM0LW00.XXXTSPAG = FM0LW00.XXXTSPAG + 1; /* Increment page*/
    FM0LW00.FM0LW-FMAT-MAP-SW = "Y";
    return;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Process application transfer request.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12 /* PF12 was pressed*/
   || converseVar.eventKey is pf14 /* PF14 was pressed*/
   || converseVar.eventKey is pf15 /* PF15 was pressed*/
   || converseVar.eventKey is pf16) /* PF16 was pressed*/
    ;
    set FKWREC empty; /* Initialize fkwrec*/
    ;
    FM0LW00.FM0LW-IDX = 1; /* Initialize index*/
    FM0LW00.FM0LW-IDX2 = 1; /* Initialize index2*/
    while (FM0LW00.FM0LW-IDX <= FM0LW00.FM0LW-NBR-MAP-ROWS)
      ;
      if (FM0LM110.FM0LM-SELECT[FM0LW-IDX] == "S") /* If line selected*/
        ;
        FKWREC.FK-INTRN-PO-ID[FM0LW-IDX2] = FM0LW01.FK-INTRN-PO-ID[FM0LW-IDX]; /* Save the PO id*/
        ;
        FM0LW00.FM0LW-IDX2 = FM0LW00.FM0LW-IDX2 + 1; /* Increment idx2*/
      end
      ;
      FM0LW00.FM0LW-IDX = FM0LW00.FM0LW-IDX + 1; /* Increment idx*/
    end
    ;
    ;
    if (converseVar.eventKey is pf12) /* PF12 pressed*/
      COMMAREA.CATOAP = "FM0B"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0LM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf14) /* PF14 pressed*/
      COMMAREA.CATOAP = "FM0D"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0LM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf15) /* PF15 pressed*/
      COMMAREA.CATOAP = "FM0J"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0LM110.CAITEM; /* item*/
    end
    ;
    if (converseVar.eventKey is pf16) /* PF16 pressed*/
      COMMAREA.CATOAP = "FM0K"; /* to applicaiton*/
      COMMAREA.CAITEM = FM0LM110.CAITEM; /* item*/
    end
    ;
    XSFKS01(); /* Exit to another application*/
    ;
    set FM0LM110.CATOAP cursor, bold; /* Highlight*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If key changed, exit to obtain the data.*/
   /* ------------------------------------------------------------*/
  ;
  if (FM0LM110.FK-VEND-CD != FM0LW01.FK-VEND-CD
   || FM0LM110.FK-MAT-NBR != FM0LW01.FK-MAT-NBR
   || FM0LM110.XMG-COLR-GRP-CD != FM0LW01.XMG-COLR-GRP-CD
   || FM0LM110.XCLCD != FM0LW01.XCLCD
   || FM0LM110.FM0LM-HDR-NIKE-PO-YY != FM0LW01.FM0LM-HDR-NIKE-PO-YY
   || FM0LM110.FM0LM-HDR-NIKE-PO-PP != FM0LW01.FM0LM-HDR-NIKE-PO-PP
   || FM0LM110.FM0LM-HDR-NIKE-PO-DD != FM0LW01.FM0LM-HDR-NIKE-PO-DD
   || FM0LM110.FM0LM-HDR-FY1FCTYC != FM0LW01.FM0LM-HDR-FY1FCTYC)
    ;
    FM0LW00.FM0LW-REQUEST-DATA-SW = "Y";
    return;
  end
  ;
  ;
end // end FM0L-6000

//*** RECORD=FM0LW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FM0LW00 type basicRecord
  10 FM0LW-REQUEST-DATA-SW FM0LW-REQUEST-DATA-SW ; 
  10 FM0LW-FMAT-MAP-SW FM0LW-FMAT-MAP-SW ; 
  10 FM0LW-END-CSR-SW FM0LW-END-CSR-SW ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FM0LW-IDX FM0LW-IDX ; 
  10 FM0LW-IDX2 FM0LW-IDX2 ; 
  10 FM0LW-NBR-MAP-ROWS FM0LW-NBR-MAP-ROWS ; 
  10 FM0LW-FMAT-PO-DT FM0LW-FMAT-PO-DT ; 
    15 FM0LW-FMAT-PO-CCYY FM0LW-FMAT-PO-CCYY ; 
      20 FM0LW-FMAT-PO-CC FM0LW-FMAT-PO-CC ; 
      20 FM0LW-FMAT-PO-YY FM0LW-FMAT-PO-YY ; 
    15 FM0LW-FMAT-PO-PP FM0LW-FMAT-PO-PP ; 
    15 FM0LW-FMAT-PO-DD FM0LW-FMAT-PO-DD ; 
  10 FM0LW-FMAT-BUY-DT FM0LW-FMAT-BUY-DT ; 
    15 FM0LW-FMAT-BUY-CCYY FM0LW-FMAT-BUY-CCYY ; 
      20 FM0LW-FMAT-BUY-CC FM0LW-FMAT-BUY-CC ; 
      20 FM0LW-FMAT-BUY-YY FM0LW-FMAT-BUY-YY ; 
    15 FM0LW-FMAT-BUY-MM FM0LW-FMAT-BUY-MM ; 
    15 FM0LW-FMAT-BUY-DD FM0LW-FMAT-BUY-DD ; 
  10 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC ; 
  10 XTM-MAT-THCK-DESC XTM-MAT-THCK-DESC ; 
  10 XCLDESC XCLDESC ; 
end // end FM0LW00

//*** RECORD=FM0LW01 ****
// ------------------------------------------------------------
// Application display storage.
// ------------------------------------------------------------
// 
// ***********************
Record FM0LW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(1802) ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-VEND-SNM FK-VEND-SNM ; 
    10 FK-MAT-NBR FK-MAT-NBR ; 
    10 FK-DEPT-MAT-DESC FK-DEPT-MAT-DESC ; 
    10 XTM-MAT-THCK-DESC XTM-MAT-THCK-DESC ; 
    10 XMG-COLR-GRP-CD XMG-COLR-GRP-CD ; 
    10 XCLCD XCLCD ; 
    10 XCLDESC XCLDESC ; 
    10 FM0LM-HDR-NIKE-PO-YY FM0LM-HDR-NIKE-PO-YY ; 
    10 FM0LM-HDR-NIKE-PO-PP FM0LM-HDR-NIKE-PO-PP ; 
    10 FM0LM-HDR-NIKE-PO-DD FM0LM-HDR-NIKE-PO-DD ; 
    10 FM0LM-HDR-FY1FCTYC FM0LM-HDR-FY1FCTYC ; 
    10 FK-INTRN-PO-ID FK-INTRN-PO-ID [12] ; 
    10 FK-FCTY-PO-DT FK-FCTY-PO-DT [12] ; 
    10 FM0LM-FK-NIKE-PO-YY FM0LM-FK-NIKE-PO-YY [12] ; 
    10 FM0LM-FK-NIKE-PO-PP FM0LM-FK-NIKE-PO-PP [12] ; 
    10 FM0LM-FK-NIKE-PO-DD FM0LM-FK-NIKE-PO-DD [12] ; 
    10 FY1FCTYC FY1FCTYC [12] ; 
    10 FK-FCTY-PO-ID FK-FCTY-PO-ID [12] ; 
    10 FK-FCTY-PO-COMNT FK-FCTY-PO-COMNT [12] ; 
end // end FM0LW01

//*** RECORD=FMCREC ****
// DB2 TABLE VIEW:      DCMPNT.VFVHDR01
//                  AND DCMPNT.VFVITM01
// 
// COPYLIB MEMBER:      DCL01156
//                  AND DCL01157
// 
// I/O MODULE:          FM1400
// 
// KEY TO DB2 TABLE:    (NONE)
// 
// 
// MAINTENANCE LOG:
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          10/21/93  JALLE1  New record definition.
// **********************
Record FMCREC type basicRecord
  5 FMCREC-GROUP FMCREC-GROUP ; 
    10 FK-INTRN-PO-ID FK-INTRN-PO-ID ; 
    10 FK-VEND-CD FK-VEND-CD ; 
    10 FK-FCTY-PO-DT FK-FCTY-PO-DT ; 
    10 PC3POIDT PC3POIDT ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FK-FCTY-PO-ID FK-FCTY-PO-ID ; 
    10 FK-FCTY-PO-COMNT FK-FCTY-PO-COMNT ; 
    10 FK-MAT-NBR FK-MAT-NBR ; 
    10 XMG-COLR-GRP-CD XMG-COLR-GRP-CD ; 
    10 XCLCD XCLCD ; 
end // end FMCREC

// Nike PO delivery month
DataItem FM0LM-FK-NIKE-PO-DD char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO prod month
DataItem FM0LM-FK-NIKE-PO-PP char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Nike PO year
DataItem FM0LM-FK-NIKE-PO-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header factory
DataItem FM0LM-HDR-FY1FCTYC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header Nike PO delivery month
DataItem FM0LM-HDR-NIKE-PO-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header Nike PO prod month
DataItem FM0LM-HDR-NIKE-PO-PP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Header Nike PO year
DataItem FM0LM-HDR-NIKE-PO-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End DCMPNT.VFVHDR01 csr switch
DataItem FM0LW-END-CSR-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format buy century
DataItem FM0LW-FMAT-BUY-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FORMAT CENTURY/YEAR
DataItem FM0LW-FMAT-BUY-CCYY num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format buy day
DataItem FM0LW-FMAT-BUY-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format buy date
DataItem FM0LW-FMAT-BUY-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format buy month
DataItem FM0LW-FMAT-BUY-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format buy year
DataItem FM0LW-FMAT-BUY-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FM0LW-FMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format P.O. century
DataItem FM0LW-FMAT-PO-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FORMAT CENTURY/YEAR
DataItem FM0LW-FMAT-PO-CCYY num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. delivery month
DataItem FM0LW-FMAT-PO-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. date
DataItem FM0LW-FMAT-PO-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. production month
DataItem FM0LW-FMAT-PO-PP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format P.O. year
DataItem FM0LW-FMAT-PO-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem FM0LW-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Generic index2
DataItem FM0LW-IDX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of rows on map
DataItem FM0LW-NBR-MAP-ROWS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Request for data switch
DataItem FM0LW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Group level
DataItem FMCREC-GROUP char(104)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

