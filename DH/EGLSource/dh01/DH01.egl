package dh01;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import da.common.*;
import ku.common.*;
import ta.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=DH01 ****
// NIKE TABLE HANDLER - TABLE MAINTENANCE - STOCK TRANSFER
//                                          ACCOUNT NUMBERS
// OVERVIEW: This application is used to maintain the stock
//           transfer numbers table
// 
// DB2 TABLE: DCORP.VXIA0001
// CSP TABLE: XIATBL
// 
// DATE CREATED: 10/24/97
//       AUTHOR: Eric Chan
// 
// MAINTENANCE HISTORY:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   04-29-99  ECHAN       ADD NOHILITE IN DH01P25-SET-ATTR-1
//                         CHG TRAMSACTION TO TRANSACTION IN
//                         DH01P70-PROC-MAP-1
//                         CHECK DUPLICATE AND DEADLOCK IN
//                         DH01P70-PROC-MAP-2
//                         DISPLAY STATUS IN DH01M001
// *********************
Program DH01 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "DA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  DAWREC DAWREC; // record
  DH01W01 DH01W01; // record
  DH01W02 DH01W02; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VDATRN01 VDATRN01; // record
  WDA1140 WDA1140; // record
  XSDAW01 XSDAW01; // record
  XSDAW02 XSDAW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XIATBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XNXTBL {deleteAfterUse = yes}; // table
  use DH01M.DH01M001,  // forms
      DH01M.DH01M002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    DH01P00-DRIVER: DH01P00-DRIVER();
    exit program;
  end // end main
end // end DH01

// DRIVER FOR APPLICATION
Function DH01P00-DRIVER()
  /* **************************************************************/
  /* DRIVER FOR APPLICATION*/
  /* **************************************************************/

  DH01P10-INITIALIZE(); /* Initialize application*/

  if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
    DH01P20-BUILD-MAP2(); /* Build the second map*/
  else
    DH01P20-BUILD-MAP1(); /* Build the first map*/
  end

  if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
    while (DAWREC.DAW-DONE-WITH-ROW-FL == "N")
      DH01P30-MAIN-MAP-2(); /* Process map until ready to exit*/
    end
  else
    while (DAWREC.DAW-TERM-APPL-FL == "N")
      DH01P30-MAIN-MAP-1(); /* Process map until ready to exit*/
    end
  end

  DH01P99-TERMINATE(); /* Terminate the application*/

  /* **************/
  /* ****************** END DH01P00 *******************************/
  /* **************/
end // end DH01P00-DRIVER

// INITIALIZE THE APPLICATION
Function DH01P10-INITIALIZE()
  /* **********************************************************/
  /* This process initializes the program work area and map.*/
  /* **********************************************************/

  XSENTRY(); /* Check entry security*/

  XSSEGTR(); /* Set segmented transaction id*/

  /* Initialize records*/

  DAWREC.DAWGROUP = COMMAREA.CAUSERA; /* restore system record*/
  set DH01W01 empty; /* Working storage record*/
  set DH01W02 empty; /* Temp storage record*/

  DAWREC.DAW-TERM-APPL-FL = "N";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  /* Initialize and move standard information to the map*/

  set DH01M001 initial;
  XSDAS-FMT-DB2-MDCY();
  DH01M001.DAW-MAP-DATE = DAWREC.DAW-DATE-MDCY;
  DH01M001.DAW-MAP-TIME = VGVar.currentFormattedTime;

  set DH01M002 initial;
  XSDAS-FMT-DB2-MDCY();
  DH01M002.DAW-MAP-DATE = DAWREC.DAW-DATE-MDCY;
  DH01M002.DAW-MAP-TIME = VGVar.currentFormattedTime;

  if (COMMAREA.CAMSG != " "
   && COMMAREA.CAFRMSYS == "DA")
    DH01M001.DAW-INFO-MESSAGE = COMMAREA.CAMSG; /* commarea message*/
  end

  /* **************/
  /* ****************** END DH01P10 ******************************/
  /* **************/
end // end DH01P10-INITIALIZE

// BUILD MAP 2 - LIST TABLE ROWS
Function DH01P20-BUILD-MAP1()
  /* ****************************************************************/
  /* Build temp storage and move first page to MAP 001*/
  /* ****************************************************************/

  DH01P22-BUILD-TSQ(); /* build temp storage file*/

  if (DAWREC.DAW-CURR-PAGE != DH01M001.DAW-CURR-PAGE)
    DH01S-TS-READ-PAGE(); /* read temp storage page*/
    DH01P71-TSQ-TO-MAP(); /* move page to the map*/
  end

  DH01P25-SET-ATTR-1(); /* Set field attributes*/

  /* **************/
  /* ***************** END DH01P20 **********************************/
  /* **************/
end // end DH01P20-BUILD-MAP1

// BUILD MAP 2 - TBLE ROW DETAILS
Function DH01P20-BUILD-MAP2()
  /* ****************************************************************/
  /* Build MAP 002*/
  /* ****************************************************************/

  DH01M002.DA-CHNG-USER-ID = sysVar.userID;
  DH01M002.DAW-UPDATE-DATE = VGVar.currentShortGregorianDate;

  set DH01W01 empty;
  set VDATRN01 empty;

  /* *****************************************************************/
  /* Add a row*/
  /* *****************************************************************/

  DH01M002.XNXABRV = " ";
  DH01M002.XGPABRV = " ";

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD")
    DH01M002.DA-PLOG-TXT1 = " ";
    DH01M002.DA-PLOG-TXT2 = " ";
    DH01M002.XIAFWHCD = " ";
    DH01M002.XIATWHCD = " ";
    DH01M002.KUCCOID = " "; /* account id*/
    DH01M002.KUMSTRID = " "; /* store id*/
    DH01M002.XNXCD = " ";
    DH01M002.XGPCD = " ";
    DH01M002.XXXSTAT = " ";
  end

  /* *****************************************************************/
  /* Update or copy a row*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD"
   || DAWREC.DAW-CURR-FUNCTION-CD == "CPY"
   || DAWREC.DAW-CURR-FUNCTION-CD == "DEL")

    if (DAWREC.DAW-RECORD-TYPE == "TRAN") /* update, copy or delete*/
                                   /* a transaction*/

      VDATRN01.DAW-VDATRN01-KEY = DH01W02.DAW-VDATRN01-KEY[DAW-ROW-NBR];
      XSDAS-DA1140-SEL(); /* select the transaction*/

      DH01W01.XIAGROUP = VDATRN01.DA-ROW-DATA-TXT-TEXT; /* save data*/
      DH01W01.DA-PLOG-TXT1 = VDATRN01.DA-PLOG-TXT1; /* for a later*/
      DH01W01.DA-PLOG-TXT2 = VDATRN01.DA-PLOG-TXT2; /* compare*/

      DH01M002.XIAFWHCD = DH01W01.XIAFWHCD; /* move to the map*/
      DH01M002.XIATWHCD = DH01W01.XIATWHCD; /* move to the map*/
      DH01M002.KUCCOID = DH01W01.KUCCOID;
      DH01M002.KUMSTRID = DH01W01.KUMSTRID;
      DH01M002.XNXCD = DH01W01.XNXCD;
      DH01M002.XGPCD = DH01W01.XGPCD;
      DH01M002.XXXSTAT = DH01W01.XXXSTAT;
      DH01M002.DA-PLOG-TXT1 = VDATRN01.DA-PLOG-TXT1;
      DH01M002.DA-PLOG-TXT2 = VDATRN01.DA-PLOG-TXT2;

    else
      if (DAWREC.DAW-RECORD-TYPE == "TBL ") /* update or copy a table row*/

        DH01M002.XIAFWHCD = DH01W02.XIAFWHCD[DAW-ROW-NBR];
        DH01M002.XIATWHCD = DH01W02.XIATWHCD[DAW-ROW-NBR];
                                   /* get the tbl row*/
        DH01W01.DH01W-FND-FL = "N";
        sysVar.arrayIndex = 1;
        while (DH01W01.DH01W-FND-FL != "Y"
         && XIATBL.XIAWHCDS[sysVar.arrayIndex] != "9999")
          if (XIATBL.XIAFWHCD[sysVar.arrayIndex] == DH01M002.XIAFWHCD
           && XIATBL.XIATWHCD[sysVar.arrayIndex] == DH01M002.XIATWHCD)
            DH01W01.DH01W-FND-FL = "Y";
          else
            sysVar.arrayIndex = sysVar.arrayIndex + 1;
          end
        end
        if (DH01W01.DH01W-FND-FL == "Y")
          DH01W01.XIAWHCDS = XIATBL.XIAWHCDS[sysVar.arrayIndex]; /* save for*/
          DH01W01.KUCCOID = XIATBL.KUCCOID[sysVar.arrayIndex]; /* later*/
          DH01W01.KUMSTRID = XIATBL.KUMSTRID[sysVar.arrayIndex]; /* compare*/
          DH01W01.XNXCD = XIATBL.XNXCD[sysVar.arrayIndex];
          DH01W01.XGPCD = XIATBL.XGPCD[sysVar.arrayIndex];
          DH01W01.XXXSTAT = XIATBL.XXXSTAT[sysVar.arrayIndex];
          DH01W01.ZZZSDT = XIATBL.ZZZSDT[sysVar.arrayIndex];
          DH01W01.ZZZCHGDT = XIATBL.ZZZCHGDT[sysVar.arrayIndex];
          DH01W01.ZZZCHGTM = XIATBL.ZZZCHGTM[sysVar.arrayIndex];
          DH01W01.ZZZCHGCT = XIATBL.ZZZCHGCT[sysVar.arrayIndex];

          DH01M002.KUCCOID = XIATBL.KUCCOID[sysVar.arrayIndex]; /* move to map*/
          DH01M002.KUMSTRID = XIATBL.KUMSTRID[sysVar.arrayIndex];
          DH01M002.XNXCD = XIATBL.XNXCD[sysVar.arrayIndex];
          DH01M002.XGPCD = XIATBL.XGPCD[sysVar.arrayIndex];
          DH01M002.XXXSTAT = XIATBL.XXXSTAT[sysVar.arrayIndex];
        end
      end
    end
  end

  /* *****************************************************************/
  /* inquire on a row selected in DA01*/
  /* *****************************************************************/

  if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
    DAWREC.DAW-DONE-WITH-ROW-FL = "N";
    DAWREC.DAW-CURR-FUNCTION-CD = "UPD";
    DAWREC.DAW-RECORD-TYPE = "TRAN";

    VDATRN01.DAW-VDATRN01-KEY = DAWREC.DAW-VDATRN01-KEY;
    XSDAS-DA1140-SEL(); /* select the transaction*/

    DH01W01.XIAGROUP = VDATRN01.DA-ROW-DATA-TXT-TEXT; /* save data*/
    DH01W01.DA-PLOG-TXT1 = VDATRN01.DA-PLOG-TXT1; /* for a later*/
    DH01W01.DA-PLOG-TXT2 = VDATRN01.DA-PLOG-TXT2; /* compare*/

    DH01M002.XIAFWHCD = DH01W01.XIAFWHCD; /* move to the map*/
    DH01M002.XIATWHCD = DH01W01.XIATWHCD;
    DH01M002.KUCCOID = DH01W01.KUCCOID;
    DH01M002.KUMSTRID = DH01W01.KUMSTRID;
    DH01M002.XNXCD = DH01W01.XNXCD;
    DH01M002.XGPCD = DH01W01.XGPCD;
    DH01M002.XXXSTAT = DH01W01.XXXSTAT;
    DH01M002.DA-PLOG-TXT1 = VDATRN01.DA-PLOG-TXT1;
    DH01M002.DA-PLOG-TXT2 = VDATRN01.DA-PLOG-TXT2;

  end

  if (DH01M002.XXXSTAT == "A")
    DH01M002.DAW-TBL-STATUS-DESC = "ACTIVE  ";
  end
  if (DH01M002.XXXSTAT == "I")
    DH01M002.DAW-TBL-STATUS-DESC = "INACTIVE";
  end
  if (DH01M002.XXXSTAT == " ")
    DH01M002.DAW-TBL-STATUS-DESC = " ";
  end

  DH01P25-SET-ATTR-2(); /* Set field attributes*/

  /* **************/
  /* ***************** END DH01P20 **********************************/
  /* **************/
end // end DH01P20-BUILD-MAP2

// BUILD TEMP STORAGE FILE
Function DH01P22-BUILD-TSQ()
  /* ****************************************************************/
  /* Build temp storage from menu table to allow scrolling*/
  /* ****************************************************************/

  set DH01W02 empty; /* temp storage record*/
  DAWREC.DAW-ROW-NBR = 0; /* temp storage row subscript*/
  DAWREC.DAW-CURR-PAGE = 0; /* temp storage page(record) number*/
  DAWREC.DAW-MAX-PAGE = 0; /* temp storage max page number*/

  /* Move the Maintenance records to temp storage*/

  XSDAS-DA1140-OPEN(); /* open cursor*/
  XSDAS-DA1140-FETCH(); /* fetch first row*/

  while (SQLCA.VAGen_SQLCODE == 0) /* until last row*/
    DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;
    DH01P23-DB2-TO-TSQ(); /* move tbl row to temp storage row*/
    if (DAWREC.DAW-ROW-NBR == 14) /* maximum tsq rows per map*/
      DH01S-TS-ADD-PAGE(); /* write temp storage record when full*/
    end
    XSDAS-DA1140-FETCH(); /* fetch next row*/
  end

  XSDAS-DA1140-CLOSE(); /* close cursor*/


  /* Move the CSP table to temp storage*/

  sysVar.arrayIndex = 1;
  while (XIATBL.XIAWHCDS[sysVar.arrayIndex] != "9999") /* until last row*/
    DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;
    DH01P24-CSP-TO-TSQ(); /* move tbl row to temp storage row*/
    if (DAWREC.DAW-ROW-NBR == 14) /* maximum tsq rows per map*/
      DH01S-TS-ADD-PAGE(); /* write temp storage record when full*/
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  if (DAWREC.DAW-ROW-NBR > 0 /* rows were moved*/
   || DAWREC.DAW-MAX-PAGE > 0) /* or tsq pages were written*/

    if (DAWREC.DAW-ROW-NBR < 14 /* last page not full*/
     && DAWREC.DAW-ROW-NBR != 0) /* rows exist*/
      DH01S-TS-ADD-PAGE();
    end

    DH01M001.DAW-CURR-PAGE = 1; /* page number to read*/
    DAWREC.DAW-CURR-PAGE = 0; /* last page read*/
    DH01M001.DAW-LAST-PAGE = DAWREC.DAW-MAX-PAGE;

  end

  /* **************/
  /* ***************** END DH01P22 **********************************/
  /* **************/
end // end DH01P22-BUILD-TSQ

// MOVE TO TEMP STORAGE PAGE
Function DH01P23-DB2-TO-TSQ()
  /* **************************************************************/
  /* Move db2 table row to temp storage*/
  /* The key to the view is saved in temp storage to make it*/
  /* easier to retrieve and update/delete the row if necessary.*/
  /* **************************************************************/

  DH01W02.DAW-RECORD-TYPE[DAW-ROW-NBR] = "TRAN ";
  DH01W02.DAW-SELECT-CD[DAW-ROW-NBR] = " ";
  DH01W01.XIAGROUP = VDATRN01.DA-ROW-DATA-TXT-TEXT;

  DH01W02.XIAWHCDS[DAW-ROW-NBR] = DH01W01.XIAWHCDS;
  DH01W02.KUCCOID[DAW-ROW-NBR] = DH01W01.KUCCOID;
  DH01W02.KUMSTRID[DAW-ROW-NBR] = DH01W01.KUMSTRID;
  DH01W02.XNXCD[DAW-ROW-NBR] = DH01W01.XNXCD;
  DH01W02.XGPCD[DAW-ROW-NBR] = DH01W01.XGPCD;
  DH01W02.XXXSTAT[DAW-ROW-NBR] = DH01W01.XXXSTAT;

  if (VDATRN01.DA-CHNG-STAT-IND == "E")
    DH01W02.DAW-STATUS-DESC[DAW-ROW-NBR] = "EDIT    ";
  end
  if (VDATRN01.DA-CHNG-STAT-IND == "P")
    DH01W02.DAW-STATUS-DESC[DAW-ROW-NBR] = "PENDING ";
  end
  if (VDATRN01.DA-CHNG-STAT-IND == "A")
    DH01W02.DAW-STATUS-DESC[DAW-ROW-NBR] = "APPROVED";
    DH01W02.DAW-SELECT-CD[DAW-ROW-NBR] = "*"; /* select not allowed*/
  end
  if (VDATRN01.DA-CHNG-STAT-IND == "R")
    DH01W02.DAW-STATUS-DESC[DAW-ROW-NBR] = "REJECTED";
  end
  if (VDATRN01.DA-CHNG-STAT-IND == "I")
    DH01W02.DAW-STATUS-DESC[DAW-ROW-NBR] = "PROCESS ";
    DH01W02.DAW-SELECT-CD[DAW-ROW-NBR] = "*"; /* select not allowed*/
  end

  DH01W02.DA-CHNG-USER-ID[DAW-ROW-NBR] = VDATRN01.DA-CHNG-USER-ID;

  DAWREC.DAW-DATE-COMP = VDATRN01.ZZ-CHNG-DT;
  XSDAS-FMT-DB2-MDCY();
  DH01W02.DAW-CHNG-DT-MDY[DAW-ROW-NBR] = DAWREC.DAW-DATE-MDCY;

  DH01W02.DAW-VDATRN01-KEY[DAW-ROW-NBR] = VDATRN01.DAW-VDATRN01-KEY;


  /* ***************/
  /* ****************** END DH01P221 ******************************/
  /* ***************/
end // end DH01P23-DB2-TO-TSQ

// MOVE TO TEMP STORAGE PAGE
Function DH01P24-CSP-TO-TSQ()
  /* **************************************************************/
  /* Move table row to temp storage*/
  /* **************************************************************/

  DH01W02.DAW-RECORD-TYPE[DAW-ROW-NBR] = "TBL ";
  DH01W02.DAW-SELECT-CD[DAW-ROW-NBR] = " ";

  DH01W02.XIAWHCDS[DAW-ROW-NBR] = XIATBL.XIAWHCDS[sysVar.arrayIndex];
  DH01W02.KUCCOID[DAW-ROW-NBR] = XIATBL.KUCCOID[sysVar.arrayIndex];
  DH01W02.KUMSTRID[DAW-ROW-NBR] = XIATBL.KUMSTRID[sysVar.arrayIndex];
  DH01W02.XNXCD[DAW-ROW-NBR] = XIATBL.XNXCD[sysVar.arrayIndex];
  DH01W02.XGPCD[DAW-ROW-NBR] = XIATBL.XGPCD[sysVar.arrayIndex];
  DH01W02.XXXSTAT[DAW-ROW-NBR] = XIATBL.XXXSTAT[sysVar.arrayIndex];

  DH01W02.DAW-STATUS-DESC[DAW-ROW-NBR] = " ";
  DH01W02.DA-CHNG-USER-ID[DAW-ROW-NBR] = " ";
  DH01W02.DAW-CHNG-DT-MDY[DAW-ROW-NBR] = " ";

  /* ***************/
  /* ****************** END DH01P221 ******************************/
  /* ***************/
end // end DH01P24-CSP-TO-TSQ

// SET MAP 1 FIELD ATTRIBUTES
Function DH01P25-SET-ATTR-1()
  /* *********************************************************/
  /* Set MAP 001 field attributes - only show page numbers when*/
  /* there is more than 1 page. Autoskip,dark any rows with*/
  /* an '*' in the select. They can look at the data (for the*/
  /* status) but they can't select it.*/
  /* *********************************************************/

  if (DAW-LAST-PAGE > 1)
    DH01M001.DAW-PAGE-LIT = "PAGE";
    set DH01M001.DAW-CURR-PAGE initialAttributes;
    DH01M001.DAW-OF-LIT = "OF";
    set DH01M001.DAW-LAST-PAGE initialAttributes;
    DH01M001.DAW-PF7-LIT = "PF7 = SCROLL BACK";
    DH01M001.DAW-PF8-LIT = "PF8 = SCROLL FRWD";
  else
    DH01M001.DAW-PAGE-LIT = " ";
    set DH01M001.DAW-CURR-PAGE skip, noHighLight, invisible;
    DH01M001.DAW-OF-LIT = " ";
    set DH01M001.DAW-LAST-PAGE skip, invisible;
    DH01M001.DAW-PF7-LIT = " ";
    DH01M001.DAW-PF8-LIT = " ";
  end

  sysVar.arrayIndex = 14;
  while (sysVar.arrayIndex > 0)
    if (DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] == "*")
      set DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] skip, invisible;
    else
      if (DH01M001.XIAFWHCD[sysVar.arrayIndex] == " "
       || DH01M001.XIATWHCD[sysVar.arrayIndex] == " ")
        set DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] skip, invisible;
        set DH01M001.KUCCOID[sysVar.arrayIndex] skip, invisible;
        set DH01M001.KUMSTRID[sysVar.arrayIndex] skip, invisible;
        set DH01M001.XNXCD[sysVar.arrayIndex] skip, invisible;
      else
        set DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] cursor, initialAttributes;
        set DH01M001.KUCCOID[sysVar.arrayIndex] initialAttributes;
        set DH01M001.KUMSTRID[sysVar.arrayIndex] initialAttributes;
        set DH01M001.XNXCD[sysVar.arrayIndex] initialAttributes;
      end
    end
    sysVar.arrayIndex = sysVar.arrayIndex - 1;
  end

  /* **************/
  /* ****************** END DH01P25 **************************/
  /* **************/
end // end DH01P25-SET-ATTR-1

// SET FIELD ATTRIBUTES FOR MAP 2
Function DH01P25-SET-ATTR-2()
  /* *********************************************************/
  /* Set MAP 002 field attributes - autoskip the DA-CODE when*/
  /* the function is 'upd'.*/
  /* *********************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD"
   || DAWREC.DAW-CURR-FUNCTION-CD == "CPY")
    set DH01M002.XIAFWHCD initialAttributes;
    set DH01M002.XIATWHCD initialAttributes;
    set DH01M002.KUCCOID initialAttributes;
    set DH01M002.KUMSTRID initialAttributes;
    set DH01M002.XNXCD initialAttributes;
    set DH01M002.XGPCD initialAttributes;
    set DH01M002.XXXSTAT initialAttributes;
  end

  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL")
    set DH01M002.XIAFWHCD skip;
    set DH01M002.XIATWHCD skip;
    set DH01M002.KUCCOID skip;
    set DH01M002.KUMSTRID skip;
    set DH01M002.XNXCD skip;
    set DH01M002.XGPCD skip;
    set DH01M002.XXXSTAT skip;
  end

  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD")
    set DH01M002.XIAFWHCD skip;
    set DH01M002.XIATWHCD skip;
    set DH01M002.KUCCOID initialAttributes;
    set DH01M002.KUMSTRID initialAttributes;
    set DH01M002.XNXCD initialAttributes;
    set DH01M002.XGPCD initialAttributes;
    set DH01M002.XXXSTAT initialAttributes;
  end

  set DH01M002.DA-PLOG-TXT1 cursor, initialAttributes;
  set DH01M002.DA-PLOG-TXT2 initialAttributes;

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD")
    DH01M002.DAW-CURR-FUNCTION-DESC = "ADD ROW ";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "CPY")
    DH01M002.DAW-CURR-FUNCTION-DESC = "COPY ROW";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD")
    DH01M002.DAW-CURR-FUNCTION-DESC = "UPDATE ROW";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL")
    DH01M002.DAW-CURR-FUNCTION-DESC = "DELETE ROW";
  end

  if (DAWREC.DAW-RECORD-TYPE == "TRAN")
    DH01M002.DAW-RECORD-TYPE-DESC = "TRANSACTION";
  end

  if (DAWREC.DAW-RECORD-TYPE == "TBL ")
    DH01M002.DAW-RECORD-TYPE-DESC = "TABLE ROW  ";
  end


  /* **************/
  /* ****************** END DH01P25 **************************/
  /* **************/
end // end DH01P25-SET-ATTR-2

// MAIN PROCESS LOOP FOR MAP 1
Function DH01P30-MAIN-MAP-1()
  /* **********************************************************/
  /* MAIN PROCESS - Program loops through this process until*/
  /* the user exits with a PF key or transfers to another*/
  /* application. Exit occurs when DA-TERM-APPL = 'Y'*/
  /* **********************************************************/

  DH01P40-CONVERSE-1(); /* Display the map*/

  converseLib.validationFailed(0);
  DH01M001.VAGen_EZEMSG = " ";
  DH01M001.DAW-INFO-MESSAGE = " ";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  DH01P25-SET-ATTR-1(); /* Reset field attributes to defined*/

  DH01P50-PF-KEYS-1(); /* Edit pf keys*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "N"
   && DAWREC.DAW-TERM-APPL-FL == "N") /* No errors and not ready to exit*/

    DH01P60-EDIT-MAP-1(); /* Do all edits for map 1*/

    if (DAWREC.DAW-EDIT-ERROR-FL == "N")
      DH01P70-PROC-MAP-1(); /* Do any processing needed for map 1*/
    end

  end


  /* **************/
  /* ****************** END DH01P30 *****************************/
  /* **************/
end // end DH01P30-MAIN-MAP-1

// MAIN PROCESSING LOOP FOR MAP 2
Function DH01P30-MAIN-MAP-2()
  /* **********************************************************/
  /* MAIN PROCESS - Program loops through this process until*/
  /* the user exits with a PF key or transfers to another*/
  /* application. Exit occurs when DA-TERM-APPL = 'Y' or*/
  /* DA-DONE-WITH-ROW-FL = 'Y'*/
  /* **********************************************************/

  DH01P40-CONVERSE-2(); /* Display the map*/

  converseLib.validationFailed(0);
  DH01M002.VAGen_EZEMSG = " ";
  DH01M002.DAW-INFO-MESSAGE = " ";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  DH01P25-SET-ATTR-2(); /* Reset field attributes to defined*/

  DH01P50-PF-KEYS-2(); /* Edit pf keys*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "N" /* No errors*/
   && DAWREC.DAW-TERM-APPL-FL == "N"  /* and not ready to exit to MENU*/
   && DAWREC.DAW-DONE-WITH-ROW-FL == "N") /* and not ready to exit to MAP1*/

    DH01P60-EDIT-MAP-2(); /* Do all edits for MAP 2*/

    if (DAWREC.DAW-EDIT-ERROR-FL == "N")
      DH01P70-PROC-MAP-2(); /* Do any processing needed for MAP 2*/
    end

  end

  /* **************/
  /* ****************** END DH01P30 *****************************/
  /* **************/
end // end DH01P30-MAIN-MAP-2

// CONVERSE MAP 001
Function DH01P40-CONVERSE-1()
  /* **********************************************************/
  /* CONVERSE MAP 001 - LIST TABLE*/
  /* **********************************************************/
  converse DH01M001 ;

  /* **************/
  /* ****************** END DH01P40 *****************************/
  /* **************/
end // end DH01P40-CONVERSE-1

// CONVERSE MAP 002
Function DH01P40-CONVERSE-2()
  /* **********************************************************/
  /* CONVERSE MAP 002 - TABLE ROW DETAILS*/
  /* **********************************************************/
  converse DH01M002 ;

  /* **************/
  /* ****************** END DH01P40 *****************************/
  /* **************/
end // end DH01P40-CONVERSE-2

// EDIT PF KEYS FOR MAP 1
Function DH01P50-PF-KEYS-1()
  /* **************************************************************/
  /* Edit the PF keys for MAP 001*/
  /* **************************************************************/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf11)
    /* valid pf keys for this application*/
  else
    converseLib.validationFailed(001); /* Invalid PF Key*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (converseVar.eventKey is pf7)
    if (DH01M001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
      converseLib.validationFailed(002); /* Can't change page number and use*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* PF7 at the same time*/
    end
    if (DH01M001.DAW-LAST-PAGE <= 1)
      converseLib.validationFailed(001); /* Invalid PF Key*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
    end
    if (DH01M001.DAW-CURR-PAGE <= 1)
      converseLib.validationFailed(003); /* Can't use PF7 - already at the*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* first page*/
    end
  end

  if (converseVar.eventKey is pf8)
    if (DH01M001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
      converseLib.validationFailed(004); /* Can't change page number and use*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* PF8 at the same time*/
    end
    if (DH01M001.DAW-LAST-PAGE <= 1)
      converseLib.validationFailed(001); /* Invalid PF Key*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
    end
    if (DH01M001.DAW-CURR-PAGE >= DAWREC.DAW-MAX-PAGE)
      converseLib.validationFailed(005); /* Can't use PF8 - already at the*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* last page*/
    end
  end

  if (DAWREC.DAW-EDIT-ERROR-FL == "N")
    DH01P55-HNDL-PFK-1();
  end

  /* **************/
  /* ****************** END DH01P50 *******************************/
  /* **************/
end // end DH01P50-PF-KEYS-1

// EDIT PF KEYS FOR MAP 2
Function DH01P50-PF-KEYS-2()
  /* **************************************************************/
  /* Edit the PF keys for MAP 002*/
  /* **************************************************************/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf6
   || converseVar.eventKey is pf10)
    /* valid pf keys for this application*/
  else
    converseLib.validationFailed(001); /* Invalid PF Key*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (DAWREC.DAW-EDIT-ERROR-FL == "N")
    DH01P55-HNDL-PFK-2();
  end

  /* **************/
  /* ****************** END DH01P50 *******************************/
  /* **************/
end // end DH01P50-PF-KEYS-2

// HANDLE MAP 1 PF KEYS
Function DH01P55-HNDL-PFK-1()
  /* ************************************************************/
  /* MAP 001 Process PF Keys - do whatever is needed to handle the*/
  /* pf key and set the exit flag to 'y' when the pfkey does not*/
  /* require any furthur edits. If the pf key does require editting*/
  /* of anything entered on the map (like fastpath option) the exit*/
  /* flag will be set to 'Y' in the map edit process when there are*/
  /* no errors and there is something in the DA-EXIT-OPTION*/
  /* ************************************************************/

  if (converseVar.eventKey is pf3)
    DAWREC.DAW-EXIT-OPTION = "RETN";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  if (converseVar.eventKey is pf4)
    DAWREC.DAW-EXIT-OPTION = "MENU";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  if (converseVar.eventKey is pf7) /* subtract 1 from the map page number*/
    DH01M001.DAW-CURR-PAGE = DH01M001.DAW-CURR-PAGE - 1;
  end

  if (converseVar.eventKey is pf8) /* add 1 to the map page number*/
    DH01M001.DAW-CURR-PAGE = DH01M001.DAW-CURR-PAGE + 1;
  end

  if (converseVar.eventKey is pf9) /* print the tables*/
    set XSDAW01 empty;
    XSDAW01.XXX-TBL-PFX = DAWREC.XXX-TBL-PFX;
    XSDAS-PRINT-TABLE();
    DH01M001.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
  end

  if (converseVar.eventKey is pf10) /* set in process status to pending*/
    DAWREC.DAW-SET-PENDING-ALL-FL = "Y";
  else
    DAWREC.DAW-SET-PENDING-ALL-FL = "N";
  end

  if (converseVar.eventKey is pf11) /* add a new code*/
    DAWREC.DAW-ADD-ROW-FL = "Y";
  else
    DAWREC.DAW-ADD-ROW-FL = "N";
  end

  /* **************/
  /* ****************** END DH01P55 *****************************/
  /* **************/
end // end DH01P55-HNDL-PFK-1

// HANDLE PF KEYS FOR MAP 2
Function DH01P55-HNDL-PFK-2()
  /* ************************************************************/
  /* MAP 002 Process PF Keys - do whatever is needed to handle the*/
  /* pf key and set the DA-DONE-WITH-ROW-FL to 'y' when the pfkey*/
  /* doesn't require any furthur edits or processing.*/
  /* For PF6 and PF10 the DA-DONE-WITH-ROW-FL will be set to 'Y'*/
  /* in DH01P70-PROC-MAP-2.*/
  /* ************************************************************/

  if (converseVar.eventKey is pf3)
    DAWREC.DAW-DONE-WITH-ROW-FL = "Y";
    DH01M002.XNXABRV = " ";
    DH01M002.XGPABRV = " ";
  end

  if (converseVar.eventKey is pf4)
    DAWREC.DAW-EXIT-OPTION = "MENU";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end


  if (converseVar.eventKey is pf10) /* set in process status to pending*/
    DAWREC.DAW-SET-PENDING-FL = "Y";
  else
    DAWREC.DAW-SET-PENDING-FL = "N";
  end

  if (converseVar.eventKey is pf6) /* apply the update or add*/
    DAWREC.DAW-APPLY-FL = "Y";
  else
    DAWREC.DAW-APPLY-FL = "N";
  end

  /* **************/
  /* ****************** END DH01P55 *****************************/
  /* **************/
end // end DH01P55-HNDL-PFK-2

// EDIT ALL MAP FIELDS ON MAP 1
Function DH01P60-EDIT-MAP-1()
  /* ***********************************************************/
  /* Edit MAP 001 fields in reverse order*/
  /* ***********************************************************/

  DAWREC.DAW-SELECT-ROW-FL = "N";
  DAWREC.DAW-DELETE-ROW-FL = "N";
  DAWREC.DAW-COPY-ROW-FL = "N";

  DH01P61-EDIT-SEL(); /* edit select*/

  DH01P61-EDIT-PAGE(); /* edit current page number*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "Y" /* any errors*/
   && DAWREC.DAW-EXIT-OPTION != " ")  /* don't allow exit from appl*/
    DAWREC.DAW-TERM-APPL-FL = "N";
    DAWREC.DAW-EXIT-OPTION = " ";
  end

  /* **************/
  /* ****************** END DH01P60 ****************************/
  /* **************/
end // end DH01P60-EDIT-MAP-1

// EDIT ALL FIELDS FOR MAP 2
Function DH01P60-EDIT-MAP-2()
  /* ***********************************************************/
  /* Edit MAP 001 fields in reverse order*/
  /* ***********************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL")
    if (DAWREC.DAW-RECORD-TYPE == "TBL ")
      DH01P62-EDIT-STAT(); /* Edit status*/
      DH01P68-EDIT-PLOG(); /* Edit prologs*/
    end
    return;
  end

  DH01P62-EDIT-STAT(); /* Edit status*/

  DH01P62-EDIT-GPC(); /* Edit GPC code*/

  DH01P62-EDIT-XNX(); /* Edit dept id xref*/

  DH01P62-EDIT-STOR(); /* Edit store id*/

  DH01P62-EDIT-CMPY(); /* Edit company*/

  DH01P68-EDIT-PLOG(); /* Edit prologs*/

  DH01P69-EDIT-KEY(); /* Edit the table code and/or key*/

  /* **************/
  /* ****************** END DH01P60 ****************************/
  /* **************/
end // end DH01P60-EDIT-MAP-2

// EDIT MAP PAGE NUMBER
Function DH01P61-EDIT-PAGE()
  /* ***********************************************************/
  /* Edit map current page number*/
  /* ***********************************************************/

  if (DH01M001.DAW-CURR-PAGE == DAWREC.DAW-CURR-PAGE)
    return;
  end

  /* if select codes entered and page number changed*/
  /* then reset page number*/

  if (DAWREC.DAW-ADD-ROW-FL == "Y"
   || DAWREC.DAW-DELETE-ROW-FL == "Y"
   || DAWREC.DAW-SELECT-ROW-FL == "Y"
   || DAWREC.DAW-COPY-ROW-FL == "Y")
    set DH01M001.DAW-CURR-PAGE bold;
    DH01M001.VAGen_EZEMSG = "CANNOT MAINTAIN OR ADD A ROW AND CHANGE PAGE AT THE SAME TIME";
    DH01M001.DAW-CURR-PAGE = DAWREC.DAW-CURR-PAGE;
    DH01M001.DAW-INFO-MESSAGE = "PAGE NUMBER HAS BEEN RESET - HIT ENTER OR PF11 TO CONTINUE";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (DH01M001.DAW-CURR-PAGE > DH01M001.DAW-LAST-PAGE)
    set DH01M001.DAW-CURR-PAGE cursor, bold;
    converseLib.validationFailed(006); /* page number entered is greater than*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* last page available*/
  end

  if (DH01M001.DAW-CURR-PAGE == 0)
    set DH01M001.DAW-CURR-PAGE cursor, bold;
    converseLib.validationFailed(007); /* page number entered is zero - page*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* does not exist*/
  end

  /* **************/
  /* ****************** END DH01P62 ****************************/
  /* **************/
end // end DH01P61-EDIT-PAGE

// EDIT MAP PREFIX OPTION
Function DH01P61-EDIT-SEL()
  /* ***********************************************************/
  /* Edit map select codes - user may enter multiple selects*/
  /* on a single page. Each will be processed as long as there*/
  /* are no errors.*/
  /* ***********************************************************/

  sysVar.arrayIndex = 14;

  while (sysVar.arrayIndex != 0)

    if (DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] == " "
     || DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] == "*"
    ) /* CONTINUE*/
    else
      if (DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] == "S")
        DAWREC.DAW-SELECT-ROW-FL = "Y";
      else
        if (DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] == "C")
          DAWREC.DAW-COPY-ROW-FL = "Y";
        else
          if (DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] == "D")
            if (DH01M001.DAW-STATUS-DESC[sysVar.arrayIndex] == "EDIT    "
             || DH01M001.DAW-STATUS-DESC[sysVar.arrayIndex] == "PENDING "
             || DH01M001.DAW-STATUS-DESC[sysVar.arrayIndex] == "REJECTED")
              DAWREC.DAW-DELETE-ROW-FL = "Y";
            else
              converseLib.validationFailed(009); /* only edit, wait or rejected*/
              DAWREC.DAW-EDIT-ERROR-FL = "Y";
                                   /* status rows may be deleted*/
              set DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] cursor, bold;
            end
          else
            if (DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] == "A")
              converseLib.validationFailed(010); /* invalid select - use PF11 to add a*/
              DAWREC.DAW-EDIT-ERROR-FL = "Y";
                                   /* new code instead of 'A'*/
              set DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] cursor, bold;
            else
              converseLib.validationFailed(011); /* invalid select - use 's' to select*/
              DAWREC.DAW-EDIT-ERROR-FL = "Y";
                                   /* 'd' to delete or 'c' copy*/
              set DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] cursor, bold;
            end
          end
        end
      end
    end
    sysVar.arrayIndex = sysVar.arrayIndex - 1;
  end

  /* **************/
  /* ****************** END DH01P61 ****************************/
  /* **************/
end // end DH01P61-EDIT-SEL

// EDIT TABLE ROW DESCRIPTION
Function DH01P62-EDIT-CMPY()
  /* ****************************************************************/
  /* Edit stock transfer id*/
  /* ****************************************************************/

  if (DH01M002.KUCCOID < 1
   || DH01M002.KUCCOID > 999999)
    converseLib.validationFailed(395); /* stock transfer must be betweeb 1 and 999999*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DH01M002.KUCCOID cursor, bold;
  end

  /* **************/
  /* ***************** END DH01P62 **********************************/
  /* **************/
end // end DH01P62-EDIT-CMPY

// EDIT GPC CODE
Function DH01P62-EDIT-GPC()
  /* ********************************************************************/
  /* edit gpc code*/
  /* ********************************************************************/

  DH01M002.XGPABRV = " ";

  if (DH01M002.XGPCD == " ")
    converseLib.validationFailed(037); /* GPC code is required*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DH01M002.XGPCD cursor, bold;
    return;
  end

  if (DH01M002.XGPCD in XGPTBL.XGPCD /* if gpc is on tbl*/
   && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is a active status*/
    DH01M002.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex]; /* format gpc abrev*/
  else
    converseLib.validationFailed(028); /* GPC code is invalid or inactive*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DH01M002.XGPCD cursor, bold;
  end

  /* **************/
  /* ****************** END DH01P65 **************************************/
  /* **************/
end // end DH01P62-EDIT-GPC

// EDIT TABLE STATUS A/I
Function DH01P62-EDIT-STAT()
  /* ****************************************************************/
  /* Edit status (XXXSTAT) must be 'A' active or 'I' inactive*/
  /* ****************************************************************/

  if (DH01M002.XXXSTAT == "A")
    DH01M002.DAW-TBL-STATUS-DESC = "ACTIVE  ";
  else
    if (DH01M002.XXXSTAT == "I")
      DH01M002.DAW-TBL-STATUS-DESC = "INACTIVE";
    else
      converseLib.validationFailed(012); /* status must be 'A' or 'I'*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
      set DH01M002.XXXSTAT cursor, bold;
    end
  end

  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL"
   && DH01M002.XXXSTAT != "I")
    DH01M002.DAW-INFO-MESSAGE = "CANNOT DELETE TABLE ROW; STATUS IS ACTIVE. PF3 TO RETURN TO LIST";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end


  /* **************/
  /* ***************** END DH01P61 **********************************/
  /* **************/
end // end DH01P62-EDIT-STAT

// EDIT NIL FLAG
Function DH01P62-EDIT-STOR()
  /* ********************************************************************/
  /* Edit store id*/
  /* ********************************************************************/
  /*  */
  /* Nothing to edit*/
  /* **************/
  /* ****************** END DH01P62 **************************************/
  /* **************/
end // end DH01P62-EDIT-STOR

// EDIT COUNTRY CODE
Function DH01P62-EDIT-XNX()
  /* ********************************************************************/
  /* Edit dept id xref*/
  /* ********************************************************************/

  DH01M002.XNXABRV = " ";

  if (DH01M002.XNXCD == " ")
    return;
  end

  if (DH01M002.XNXCD in XNXTBL.XNXCD /* if dept id xref is in the table*/
   && XNXTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is a active status*/
    DH01M002.XNXABRV = XNXTBL.XNXABRV[sysVar.arrayIndex]; /* format abrev*/
  else
    converseLib.validationFailed(396); /* code is invalid or inactive*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DH01M002.XNXCD cursor, bold;
  end

  /* **************/
  /* ****************** END DH01P64 **************************************/
  /* **************/
end // end DH01P62-EDIT-XNX

// EDIT PROLOGS
Function DH01P68-EDIT-PLOG()
  /* ****************************************************************/
  /* Edit prologs - required, something must be in the field*/
  /* ****************************************************************/

  if (DH01M002.DA-PLOG-TXT1 == " "
   && DH01M002.DA-PLOG-TXT2 == " ")
    converseLib.validationFailed(018); /* a least one description of the*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* change is required*/
    set DH01M002.DA-PLOG-TXT1 cursor, bold;
  end


  /* **************/
  /* ***************** END DH01P68 **********************************/
  /* **************/
end // end DH01P68-EDIT-PLOG

// EDIT TABLE ROW KEY
Function DH01P69-EDIT-KEY()
  /* ****************************************************************/
  /* Edit the table key (xiafwhcd and xiatwhcd)*/
  /* a) required - can't be spaces*/
  /* b) can't exist if current function is add or copy*/
  /* field is protected when current function is update*/
  /* c) can't exist in transaction table with todays date*/
  /* in any status except 'c' complete*/
  /* ****************************************************************/

  if (DH01M002.XIATWHCD == " ")
    converseLib.validationFailed(394); /* To whse cd is required*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DH01M002.XIATWHCD cursor, bold;
  end

  if (DH01M002.XIAFWHCD == " ")
    converseLib.validationFailed(393); /* From whse cd is required*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DH01M002.XIAFWHCD cursor, bold;
  end

  /* Can't exist in current table (no matter what the status is)*/

  DH01W01.DH01W-FND-FL = "N";
  sysVar.arrayIndex = 1;
  while (DH01W01.DH01W-FND-FL != "Y"
   && XIATBL.XIAWHCDS[sysVar.arrayIndex] != "9999")
    if (XIATBL.XIAFWHCD[sysVar.arrayIndex] == DH01M002.XIAFWHCD
     && XIATBL.XIATWHCD[sysVar.arrayIndex] == DH01M002.XIATWHCD)
      DH01W01.DH01W-FND-FL = "Y";
    else
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end
  end

  if (DH01W01.DH01W-FND-FL == "Y")
    if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD")
      converseLib.validationFailed(392); /* table key already exists*/
      DH01M002.DAW-INFO-MESSAGE = "REVIEW TABLE LIST AND SELECT ROW TO UPDATE";
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
      set DH01M002.XIAFWHCD cursor, bold;
      set DH01M002.XIATWHCD bold;
    end
    if (DAWREC.DAW-CURR-FUNCTION-CD == "CPY")
      converseLib.validationFailed(392); /* table key already exists*/
      DH01M002.DAW-INFO-MESSAGE = "TABLE KEY MUST BE CHANGED WHEN COPYING A ROW TO BE ADDED";
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
      set DH01M002.XIAFWHCD cursor, bold;
      set DH01M002.XIATWHCD bold;
    end
  end

  /* **  **  **  **  **  **  **  **  **  **  **  **  **  **  ***/
  /* WARNING - Add any new edits for the key prior to this line*/
  /* **  **  **  **  **  **  **  **  **  **  **  **  **  **  ***/

  if (DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-CURR-FUNCTION-CD == "UPD")
    return; /* row is a transaction that is being*/
  end /* updated - skip the next edit*/

  /* Can't exist in transaction table - must be the last edit*/

  VDATRN01.XXX-TBL-PFX = DAWREC.XXX-TBL-PFX;
  DH01W01.DA-CCAT-KEY-TXT = " ";
  DH01W01.DH01W-KEY-XIAFWHCD = DH01M002.XIAFWHCD;
  DH01W01.DH01W-KEY-XIATWHCD = DH01M002.XIATWHCD;
  VDATRN01.DA-CCAT-KEY-TXT = DH01W01.DA-CCAT-KEY-TXT;
  VDATRN01.ZZ-CHNG-DT = DAWREC.ZZ-CHNG-DT;

  XSDAS-DA1140-SEL-2();

  if (SQLCA.VAGen_SQLCODE != 100) /* row found*/
    converseLib.validationFailed(017); /* table key already added or changed*/
    DH01M002.DAW-INFO-MESSAGE = "SELECT TRANSACTION TO UPDATE OR CALL DATA ADMIN IF APPROVED/PROCESSING";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DH01M002.XIAFWHCD cursor, bold;
    set DH01M002.XIATWHCD bold;
  end

  /* **************/
  /* ***************** END DH01P69 **********************************/
  /* **************/
end // end DH01P69-EDIT-KEY

// DO PROCESSING FOR THE MAP 1
Function DH01P70-PROC-MAP-1()
  /* ****************************************************************/
  /* Do any processing for MAP 001*/
  /* ****************************************************************/

  /* *****************************************************************/
  /* Display new page*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-PAGE != DH01M001.DAW-CURR-PAGE)
    DH01S-TS-READ-PAGE();
    DH01P71-TSQ-TO-MAP();
    DH01P25-SET-ATTR-1();
  end

  /* *****************************************************************/
  /* set all in-process rows on the current page to pending*/
  /* *****************************************************************/

  if (DAWREC.DAW-SET-PENDING-ALL-FL == "Y")

    DAWREC.DAW-ROW-NBR = 1;
    while (DAWREC.DAW-ROW-NBR <= 14) /* check each row on the MAP 001*/
      if (DH01M001.DAW-STATUS-DESC[DAW-ROW-NBR] == "EDIT")
        set VDATRN01 empty;
        VDATRN01.DAW-VDATRN01-KEY = DH01W02.DAW-VDATRN01-KEY[DAW-ROW-NBR];
        XSDAS-SET-STATUS(); /* set the status to 'pending'*/
      end
      DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;
    end

  end

  /* *****************************************************************/
  /* Add a row*/
  /* *****************************************************************/

  if (DAWREC.DAW-ADD-ROW-FL == "Y")

    DAWREC.DAW-RECORD-TYPE = " ";
    DAWREC.DAW-CURR-FUNCTION-CD = "ADD";
    DAWREC.DAW-ROW-NBR = 0;

    DH01P20-BUILD-MAP2();

    DAWREC.DAW-DONE-WITH-ROW-FL = "N";
    while (DAWREC.DAW-DONE-WITH-ROW-FL != "Y" /* process row until done*/
     && DAWREC.DAW-TERM-APPL-FL == "N") /* with it or exit from appl*/
      DH01P30-MAIN-MAP-2(); /* main loop for MAP 002*/
    end

    DAWREC.DAW-CURR-FUNCTION-CD = "   ";

  end

  /* *****************************************************************/
  /* Select, copy or delete rows;*/
  /* *****************************************************************/

  if (DAWREC.DAW-SELECT-ROW-FL == "Y"
   || DAWREC.DAW-COPY-ROW-FL == "Y"
   || DAWREC.DAW-DELETE-ROW-FL == "Y")

    DAWREC.DAW-ROW-NBR = 1;
    while (DAWREC.DAW-ROW-NBR <= 14 /* check each row on the MAP 001*/
     && DAWREC.DAW-TERM-APPL-FL == "N") /* until done or exit from appl*/

      DAWREC.DAW-RECORD-TYPE = DH01W02.DAW-RECORD-TYPE[DAW-ROW-NBR];

      if (DH01M001.DAW-SELECT-CD[DAW-ROW-NBR] == "S"
       || DH01M001.DAW-SELECT-CD[DAW-ROW-NBR] == "C"
       || DH01M001.DAW-SELECT-CD[DAW-ROW-NBR] == "D")

        if (DH01M001.DAW-SELECT-CD[DAW-ROW-NBR] == "S")
          DAWREC.DAW-CURR-FUNCTION-CD = "UPD";
        end
        if (DH01M001.DAW-SELECT-CD[DAW-ROW-NBR] == "C")
          DAWREC.DAW-CURR-FUNCTION-CD = "CPY";
        end
        if (DH01M001.DAW-SELECT-CD[DAW-ROW-NBR] == "D")
          DAWREC.DAW-CURR-FUNCTION-CD = "DEL";
          DAWREC.DAW-OK-TO-DELETE-FL = "N";
        end

        DAWREC.DAW-DONE-WITH-ROW-FL = "N";
        DH01P20-BUILD-MAP2();
        while (DAWREC.DAW-DONE-WITH-ROW-FL != "Y" /* process row until done*/
         && DAWREC.DAW-TERM-APPL-FL == "N") /* with it or exit from appl*/
          DH01P30-MAIN-MAP-2(); /* main loop for MAP 002*/
        end

      end

      DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;
      DAWREC.DAW-CURR-FUNCTION-CD = "   ";

    end
  end

  /* *****************************************************************/
  /* Any maintenance selections are now completed so rebuild*/
  /* temp storage*/
  /* *****************************************************************/

  if (DAWREC.DAW-TERM-APPL-FL == "N") /* not ready to exit this application*/
    if (DAWREC.DAW-SELECT-ROW-FL == "Y"
     || DAWREC.DAW-COPY-ROW-FL == "Y"
     || DAWREC.DAW-DELETE-ROW-FL == "Y"
     || DAWREC.DAW-ADD-ROW-FL == "Y"
     || DAWREC.DAW-SET-PENDING-ALL-FL == "Y")
      DH01S-TS-PURGE-FIL(); /* purge temp storage*/
      DH01P20-BUILD-MAP1(); /* and then rebuilt it*/
      if (DAWREC.DAW-SET-PENDING-ALL-FL == "Y")
        DH01M001.DAW-INFO-MESSAGE = "ALL TRANSACTIONS IN EDIT STATUS SET TO PENDING - PLEASE REVIEW LIST";
      else
        DH01M001.DAW-INFO-MESSAGE = "ALL MAINTENANCE SELECTIONS HAVE BEEN COMPLETED - PLEASE REVIEW LIST";
      end
    end
  end

  /* **************/
  /* ***************** END DH01P70 **********************************/
  /* **************/
end // end DH01P70-PROC-MAP-1

// DO PROCESSING NEEDED FOR MAP 2
Function DH01P70-PROC-MAP-2()
  /* ****************************************************************/
  /* Do any processing for MAP 002*/
  /* ****************************************************************/

  /* ****************************************************************/
  /* User hit enter instead of PF6 or PF10, so there's nothing to*/
  /* do except give them a message indicating what to do*/
  /* ****************************************************************/

  if (DAWREC.DAW-APPLY-FL == "N"
   && DAWREC.DAW-SET-PENDING-FL == "N")
    DH01M002.DAW-INFO-MESSAGE = "USE PF6 TO CREATE TRANSACTION OR PF10 TO CREATE AND SET TO PENDING";
    DH01M002.VAGen_EZEMSG = "OR PF3 TO RETURN TO LIST";
    return;
  end


  /* *****************************************************************/
  /* See if anything was changed- Compare map to table record*/
  /* *****************************************************************/

  DH01P71-COMPARE();


  /* *****************************************************************/
  /* Set status to pending if no change to row*/
  /* *****************************************************************/

  if (DAWREC.DAW-SET-PENDING-FL == "Y"
   && DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-DATA-CHANGED-FL == "N") /* no change to row*/
    set VDATRN01 empty;
    if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
      VDATRN01.DAW-VDATRN01-KEY = DAWREC.DAW-VDATRN01-KEY;
    else
      VDATRN01.DAW-VDATRN01-KEY = DH01W02.DAW-VDATRN01-KEY[DAW-ROW-NBR];
    end
    XSDAS-SET-STATUS(); /* set the status to 'pending'*/
    DH01M002.DAW-INFO-MESSAGE = "TRANSACTION STATUS CHANGED TO PENDING: PF3 TO CONTINUE ";
    return;
  end


  /* *****************************************************************/
  /* Create a transaction to add a table row*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD"
   && DAWREC.DAW-RECORD-TYPE == " "
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* row was added or changed*/

    DH01P72-NEW-TRAN(); /* build new transaction row*/
    XSDAS-DA1140-ADD();
    if (SQLCA.VAGen_SQLCODE == -803 /* check duplicate*/
     || SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DH01M002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DH01M002.DAW-INFO-MESSAGE = "NEW TABLE ROW WILL BE ADDED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;

  end


  /* *****************************************************************/
  /* Create a transaction to copy a table row*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "CPY"
   && DAWREC.DAW-RECORD-TYPE == "TBL "
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* row was copied or updated*/

    DH01P72-NEW-TRAN(); /* build new transaction row*/
    XSDAS-DA1140-ADD();
    if (SQLCA.VAGen_SQLCODE == -803 /* check duplicate*/
     || SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DH01M002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DH01M002.DAW-INFO-MESSAGE = "NEW TABLE ROW WILL BE ADDED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;
  end


  /* *****************************************************************/
  /* Create a transaction to update a table row*/
  /* *****************************************************************/


  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD"
   && DAWREC.DAW-RECORD-TYPE == "TBL "
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* row was copied or updated*/

    DH01P72-NEW-TRAN(); /* build new transaction row*/
    XSDAS-DA1140-ADD();
    if (SQLCA.VAGen_SQLCODE == -803 /* check duplicate*/
     || SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DH01M002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DH01M002.DAW-INFO-MESSAGE = "TABLE ROW WILL BE UPDATED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;
  end


  /* *****************************************************************/
  /* Create a transaction to delete a table row*/
  /* *****************************************************************/

  /* This function has not been used*/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL"
   && DAWREC.DAW-RECORD-TYPE == "TBL "
   && DAWREC.DAW-DATA-CHANGED-FL == "Y")

    if (DAWREC.DAW-OK-TO-DELETE-FL == "Y")
      DH01P72-NEW-TRAN(); /* build new transaction row*/
      XSDAS-DA1140-ADD();
      DH01M002.DAW-INFO-MESSAGE = "USE PF6 TO DELETE OR PF3 TO CANCEL THE DELETE AND RETURN TO LIST";
      DAWREC.DAW-OK-TO-DELETE-FL = "Y";
    end
    return;
  end


  /* *****************************************************************/
  /* Update a transaction*/
  /* *****************************************************************/

  if (DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-CURR-FUNCTION-CD == "UPD"
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* something was changed*/

    DH01P73-OLD-TRAN(); /* build old transaction row*/
    XSDAS-DA1140-UPD();
    if (SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DH01M002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DH01M002.DAW-INFO-MESSAGE = "TRANSACTION UPDATED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;

  end


  /* *****************************************************************/
  /* copy a transaction*/
  /* *****************************************************************/

  if (DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-CURR-FUNCTION-CD == "CPY"
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* something was changed*/

    DH01P72-NEW-TRAN(); /* build new transaction row*/
    XSDAS-DA1140-ADD();
    if (SQLCA.VAGen_SQLCODE == -803 /* check duplicate*/
     || SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DH01M002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DH01M002.DAW-INFO-MESSAGE = "NEW TABLE ROW WILL BE ADDED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;

  end


  /* *****************************************************************/
  /* Delete  a transaction*/
  /* *****************************************************************/

  if (DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-CURR-FUNCTION-CD == "DEL")

    if (DAWREC.DAW-OK-TO-DELETE-FL == "Y")
      set VDATRN01 empty;
      VDATRN01.DAW-VDATRN01-KEY = DH01W02.DAW-VDATRN01-KEY[DAW-ROW-NBR];
      XSDAS-DA1140-DEL();
      if (SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
        DH01M002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
      else
        DH01M002.DAW-INFO-MESSAGE = "TRANSACTION DELETED - PF3 TO CONTINUE OR RETURN TO LIST";
        DAWREC.DAW-OK-TO-DELETE-FL = "N";
      end
      return;
    else
      DH01M002.DAW-INFO-MESSAGE = "USE PF6 TO DELETE OR PF3 TO CANCEL THE DELETE AND RETURN TO LIST";
      DAWREC.DAW-OK-TO-DELETE-FL = "Y";
      return;
    end
  end


  /* still here !! Then nothing changed and there's nothing to process*/

  DH01M002.DAW-INFO-MESSAGE = "NOTHING ADDED OR CHANGED..... ARE YOU JUST LOOKING ?? ";
  DH01M002.VAGen_EZEMSG = "USE PF3 TO RETURN TO LIST WHEN YOU ARE READY";

  /* **************/
  /* ***************** END DH01P70 **********************************/
  /* **************/
end // end DH01P70-PROC-MAP-2

// COMPARE TABLE ROW TO RECORD
Function DH01P71-COMPARE()
  /* *****************************************************************/
  /* See if anything changed*/
  /* *****************************************************************/

  if (DH01W01.XIAFWHCD == DH01M002.XIAFWHCD
   && DH01W01.XIATWHCD == DH01M002.XIATWHCD
   && DH01W01.KUCCOID == DH01M002.KUCCOID
   && DH01W01.KUMSTRID == DH01M002.KUMSTRID
   && DH01W01.XNXCD == DH01M002.XNXCD
   && DH01W01.XGPCD == DH01M002.XGPCD
   && DH01W01.XXXSTAT == DH01M002.XXXSTAT
   && DH01W01.DA-PLOG-TXT1 == DH01M002.DA-PLOG-TXT1
   && DH01W01.DA-PLOG-TXT2 == DH01M002.DA-PLOG-TXT2)
    DAWREC.DAW-DATA-CHANGED-FL = "N";
  else
    DAWREC.DAW-DATA-CHANGED-FL = "Y";
  end

  /* **************/
  /* ***************** END DH01P71 **********************************/
  /* **************/
end // end DH01P71-COMPARE

// MOVE TEMP STORAGE PAGE TO MAP
Function DH01P71-TSQ-TO-MAP()
  /* ************************************************************/
  /* Move temp storage page to map*/
  /* ************************************************************/

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 14)
    DH01M001.DAW-SELECT-CD[sysVar.arrayIndex] = DH01W02.DAW-SELECT-CD[sysVar.arrayIndex];
    DH01M001.XIAFWHCD[sysVar.arrayIndex] = DH01W02.XIAFWHCD[sysVar.arrayIndex];
    DH01M001.XIATWHCD[sysVar.arrayIndex] = DH01W02.XIATWHCD[sysVar.arrayIndex];
    DH01M001.KUCCOID[sysVar.arrayIndex] = DH01W02.KUCCOID[sysVar.arrayIndex];
    DH01M001.KUMSTRID[sysVar.arrayIndex] = DH01W02.KUMSTRID[sysVar.arrayIndex];
    DH01M001.XNXCD[sysVar.arrayIndex] = DH01W02.XNXCD[sysVar.arrayIndex];
    DH01M001.XGPCD[sysVar.arrayIndex] = DH01W02.XGPCD[sysVar.arrayIndex];
    DH01M001.XXXSTAT[sysVar.arrayIndex] = DH01W02.XXXSTAT[sysVar.arrayIndex];
    DH01M001.DAW-STATUS-DESC[sysVar.arrayIndex] = DH01W02.DAW-STATUS-DESC[sysVar.arrayIndex];
    DH01M001.DA-CHNG-USER-ID[sysVar.arrayIndex] = DH01W02.DA-CHNG-USER-ID[sysVar.arrayIndex];
    DH01M001.DAW-CHNG-DT-MDY[sysVar.arrayIndex] = DH01W02.DAW-CHNG-DT-MDY[sysVar.arrayIndex];
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  /* **************/
  /* ****************** END DH01P71 *****************************/
  /* **************/
end // end DH01P71-TSQ-TO-MAP

// BUILD NEW VDATRN01 RECORD
Function DH01P72-NEW-TRAN()
  /* *****************************************************************/
  /* Build a new transaction row*/
  /* *****************************************************************/

  set VDATRN01 empty;

  VDATRN01.XXX-TBL-PFX = DAWREC.XXX-TBL-PFX;

  /* Build the prolog information*/

  VDATRN01.ZZ-CHNG-DT = DAWREC.ZZ-CHNG-DT;
  VDATRN01.DA-CHNG-USER-ID = sysVar.userID;
  VDATRN01.DA-APVD-USER-ID = " ";
  VDATRN01.DA-PLOG-TXT1 = DH01M002.DA-PLOG-TXT1;
  VDATRN01.DA-PLOG-TXT2 = DH01M002.DA-PLOG-TXT2;

  /* Determine the transaction type*/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD"
   || DAWREC.DAW-CURR-FUNCTION-CD == "CPY")
    VDATRN01.DA-ROW-EDIT-IND = "A";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD")
    VDATRN01.DA-ROW-EDIT-IND = "C";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL")
    VDATRN01.DA-ROW-EDIT-IND = "D";
  end

  /* Build the table key*/

  DH01W01.DA-CCAT-KEY-TXT = " ";
  DH01W01.DH01W-KEY-XIAFWHCD = DH01M002.XIAFWHCD;
  DH01W01.DH01W-KEY-XIATWHCD = DH01M002.XIATWHCD;
  VDATRN01.DA-CCAT-KEY-TXT = DH01W01.DA-CCAT-KEY-TXT;

  /* Build the table row*/

  DH01W01.XIAFWHCD = DH01M002.XIAFWHCD;
  DH01W01.XIATWHCD = DH01M002.XIATWHCD;
  DH01W01.KUCCOID = DH01M002.KUCCOID;
  DH01W01.KUMSTRID = DH01M002.KUMSTRID;
  DH01W01.XNXCD = DH01M002.XNXCD;
  DH01W01.XGPCD = DH01M002.XGPCD;
  DH01W01.XXXSTAT = DH01M002.XXXSTAT;

  VDATRN01.DA-ROW-DATA-TXT-LEN = 27;
  VDATRN01.DA-ROW-DATA-TXT-TEXT = DH01W01.XIAGROUP;

  /* Determine the status*/

  if (DAWREC.DAW-SET-PENDING-FL == "Y")
    VDATRN01.DA-CHNG-STAT-IND = "P";
  else
    VDATRN01.DA-CHNG-STAT-IND = "E";
  end

  /* **************/
  /* ***************** END DH01P72 **********************************/
  /* **************/
end // end DH01P72-NEW-TRAN

// BUILD UPDATED VDATRN01 RECORD
Function DH01P73-OLD-TRAN()
  /* *****************************************************************/
  /* Build an updated transaction row*/
  /* *****************************************************************/


  /* move the prolog information in case it changed*/
  /* The transaction type stays the same*/

  VDATRN01.DA-CHNG-USER-ID = sysVar.userID;
  VDATRN01.DA-APVD-USER-ID = " ";
  VDATRN01.DA-PLOG-TXT1 = DH01M002.DA-PLOG-TXT1;
  VDATRN01.DA-PLOG-TXT2 = DH01M002.DA-PLOG-TXT2;

  /* Build the table row*/

  DH01W01.XIAFWHCD = DH01M002.XIAFWHCD;
  DH01W01.XIATWHCD = DH01M002.XIATWHCD;
  DH01W01.KUCCOID = DH01M002.KUCCOID;
  DH01W01.KUMSTRID = DH01M002.KUMSTRID;
  DH01W01.XNXCD = DH01M002.XNXCD;
  DH01W01.XGPCD = DH01M002.XGPCD;
  DH01W01.XXXSTAT = DH01M002.XXXSTAT;

  VDATRN01.DA-ROW-DATA-TXT-LEN = 27;
  VDATRN01.DA-ROW-DATA-TXT-TEXT = DH01W01.XIAGROUP;

  /* Determine the status*/

  if (DAWREC.DAW-SET-PENDING-FL == "Y"
   || DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
    VDATRN01.DA-CHNG-STAT-IND = "P";
  else
    VDATRN01.DA-CHNG-STAT-IND = "E";
  end

  /* **************/
  /* ***************** END DH01P73 **********************************/
  /* **************/
end // end DH01P73-OLD-TRAN

// EXIT FROM THE APPLICATION
Function DH01P99-TERMINATE()
  /* ************************************************************/
  /* Transfer out of the application*/
  /* ************************************************************/

  COMMAREA.CAUSERA = DAWREC.DAWGROUP;

  DH01S-TS-PURGE-FIL(); /* purge temp storage*/

  if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y") /* return to DA01 application*/
    COMMAREA.CATOAP = "DA01";
    XSEXIT();
  end

  if (DAW-EXIT-OPTION == "RETN") /* return to prior application*/
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT();
  end

  if (DAW-EXIT-OPTION == "MENU") /* return to main menu*/
    XSPF4();
  end

  if (DAW-EXIT-OPTION == "HELP") /* check for system help*/
    XSPF1(); /* help facility*/
  end

  /* Still here - then XSEXIT didn't allow the transfer so restart*/
  /* the current application and display the error message*/

  if (COMMAREA.CASECRC != 0) /* no message from xsexit*/
    XSDAS-XSEXIT-CAMSG();
  end

  COMMAREA.CAFROMAP = "DH01";
  sysVar.transferName = "DH01";
  transfer to program sysVar.transferName passing COMMAREA;

  /* **************/
  /* ****************** END DH01P99 *****************************/
  /* **************/
end // end DH01P99-TERMINATE

// ADD TEMP STORAGE PAGE(RECORD)
Function DH01S-TS-ADD-PAGE()
  /* ************************************************************/
  /* Write temporary storage*/
  /* ************************************************************/

  TA5REC.TA5APPID = "DH01"; /* appl identification*/
  TA5REC.TA5FNCCD = "A"; /* function code*/
  DH01W02.DAW-TEMP-STORAGE-LENGTH = 1026;

  call "TA0050" (DH01W02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
    DAWREC.DAW-MAX-PAGE = TA5REC.TA5TSQIX;
    set DH01W02 empty; /* Reset for next write*/
    DAWREC.DAW-ROW-NBR = 0;
  else
    TA1REC.TA1LOCAT[1] = "ADD TSQ";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = DAWREC.XXX-TBL-PFX; /* first row*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    DH01M001.DAW-INFO-MESSAGE = "TEMPORARY STORAGE FAILURE - CONTACT HELP DESK";
  end

  /* *************************/
  /* ****************** END DH01S-ADD-TSQ-PAGE ******************/
  /* *************************/
end // end DH01S-TS-ADD-PAGE

// PURGE TEMP STORAGE FILE
Function DH01S-TS-PURGE-FIL()
  /* ************************************************************/
  /* Purge temporary storage*/
  /* ************************************************************/

  TA5REC.TA5APPID = "DH01"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/

  call "TA0050" (DH01W02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  /* **********************/
  /* ****************** END DH01S-PURGE-TSQ *********************/
  /* **********************/
end // end DH01S-TS-PURGE-FIL

// READ TEMP STORAGE PAGE
Function DH01S-TS-READ-PAGE()
  /* ************************************************************/
  /* Read temporary storage*/
  /* ************************************************************/

  DAWREC.DAW-CURR-PAGE = DH01M001.DAW-CURR-PAGE;

  set DH01W02 empty;

  TA5REC.TA5APPID = "DH01"; /* appl identification*/
  TA5REC.TA5FNCCD = "R"; /* function code*/
  TA5REC.TA5TSQIX = DAWREC.DAW-CURR-PAGE; /* current page*/
  DH01W02.DAW-TEMP-STORAGE-LENGTH = 1026;

  call "TA0050" (DH01W02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
     /* NEXT SENTENCE*/
  else
    TA1REC.TA1LOCAT[1] = "READ TSQ";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = DAWREC.XXX-TBL-PFX; /* first row*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    DH01M001.DAW-INFO-MESSAGE = "TEMPORARY STORAGE FAILURE - CONTACT HELP DESK";
  end

  /* *************************/
  /* ****************** END DH01S-READ-TSQ-PAGE ******************/
  /* *************************/
end // end DH01S-TS-READ-PAGE

//*** RECORD=DH01W01 ****
// /*********************************************************
// /*  working storage record used to hold the concatinated
// /*  table key and the table record.
// /*********************************************************
// /* DATE      USERID     DESC. OF CHANGE
// /* --------  ------     ----------------------------------
// /* 05/15/96  LRAINE     CREATED RECORD
// /*
// /*********************************************************
// ***********************
Record DH01W01 type basicRecord
  10 XIAGROUP XIAGROUP ; 
    15 XIAWHCDS XIAWHCDS ; 
      20 XIAFWHCD XIAFWHCD ; 
      20 XIATWHCD XIATWHCD ; 
    15 KUCCOID KUCCOID ; 
    15 KUMSTRID KUMSTRID ; 
    15 XNXCD XNXCD ; 
    15 XGPCD XGPCD ; 
    15 XXXSTAT XXXSTAT ; 
    15 ZZZSDT ZZZSDT ; 
    15 ZZZCHGDT ZZZCHGDT ; 
    15 ZZZCHGTM ZZZCHGTM ; 
    15 ZZZCHGCT ZZZCHGCT ; 
  10 DA-CCAT-KEY-TXT DA-CCAT-KEY-TXT ; 
    15 DH01W-KEY-XIAFWHCD DH01W-KEY-XIAFWHCD ; 
    15 DH01W-KEY-XIATWHCD DH01W-KEY-XIATWHCD ; 
    15 DH01W-FILLER char(16) ; // AND REDUCE SIZE OF FILLER
  10 DA-PLOG-TXT1 DA-PLOG-TXT1 ; 
  10 DA-PLOG-TXT2 DA-PLOG-TXT2 ; 
  10 DH01W-FND-FL DH01W-FND-FL ; 
end // end DH01W01

//*** RECORD=DH01W02 ****
// /*********************************************************
// /* Temp storage record for the application
// /*********************************************************
// /*
// /* DATE      USERID     DESC. OF CHANGE
// /* --------  ------     ----------------------------------
// /* 05/15/96  LRAINE     CREATED RECORD
// /*
// /*********************************************************
// ***********************
Record DH01W02 type basicRecord
  5 DA00W-TEMP-STORAGE-RECORD char(1026) ; // TEMP STORAGE RECORD FOR DA0A
    10 DAW-TEMP-STORAGE-LENGTH DAW-TEMP-STORAGE-LENGTH ; 
    10 DA00W-TEMP-STORAGE-ROW char(73) [14] ; // DA0A TSQ ROW
      15 DAW-RECORD-TYPE DAW-RECORD-TYPE ; 
      15 DAW-SELECT-CD DAW-SELECT-CD ; 
      15 XIAWHCDS XIAWHCDS ; 
        20 XIAFWHCD XIAFWHCD ; 
        20 XIATWHCD XIATWHCD ; 
      15 KUCCOID KUCCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 XNXCD XNXCD ; 
      15 XGPCD XGPCD ; 
      15 XXXSTAT XXXSTAT ; 
      15 DAW-STATUS-DESC DAW-STATUS-DESC ; 
      15 DA-CHNG-USER-ID DA-CHNG-USER-ID ; 
      15 DAW-CHNG-DT-MDY DAW-CHNG-DT-MDY ; 
      15 DAW-VDATRN01-KEY DAW-VDATRN01-KEY ; 
        20 XXX-TBL-PFX XXX-TBL-PFX ; 
        20 DA-CCAT-KEY-TXT DA-CCAT-KEY-TXT ; 
        20 ZZ-CHNG-DT ZZ-CHNG-DT ; 
end // end DH01W02

DataItem DH01W-FND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TABLE KEY - ADD MORE IF NEEDED
DataItem DH01W-KEY-XIAFWHCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TABLE KEY - ADD MORE IF NEEDED
DataItem DH01W-KEY-XIATWHCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XIAGROUP char(27)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

