package sp0m;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
//*** PROGRAM=SP0M ****
// salesp program menu maintenance
// 
// overview: this application is the menu used for selecting
//           the valid options within the sales program system.
//           the application will transfer a user to the
//           requested application based upon their security
//           clearance.
// 
// date created: 05/23/86
//       author: ron lesowski (cloned from mn0n)
// 
// maintenance history:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   08/27/86   s.job      add report option....(sm0a)
//   09/14/87   s.job      add order type date change (sp0k)
//   12/16/88   JWOOD      CHECKED FOR NONCSP USAGE
//   12/16/88   JWOOD      ADDED XSSEGTR LOGIC
// 
// 
// *********************
Program SP0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SP0MT {deleteAfterUse = yes}; // table
  use SP0MM.SP0MM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SP0M001: SP0M001();



        /* always flow to the map converse*/

    goto SP0M005;



    SP0M005: SP0M005();



        /* branch to converse*/

    goto SP0M005; /* branch to converse*/



  end // end main
end // end SP0M

// program init
Function SP0M001()



     /* **********************************************************/
     /* * this process initializes program work area and clears **/
     /* * the map areas.                                        **/
     /* **********************************************************/


      /* check entry security*/

  XSENTRY();


  XSSEGTR(); /* SET SEGMENTED TRANSACTION ID*/


      /* initialize map*/

  SP0MM001.SP0MMDT = VGVar.currentShortGregorianDate;



end // end SP0M001

// converse map to select option
Function SP0M005()



      /* *********************************************************/
      /* * this process converses the map, edits the entered    **/
      /* * fields and if possible, xfer's to the requested      **/
      /* * application                                          **/
      /* *********************************************************/


      /* move caitem to map*/

  SP0MM001.CAITEM = COMMAREA.CAITEM;




  converse SP0MM001 ;



      /* clear message fields*/

  SP0MM001.VAGen_EZEMSG = " "; /* clear err msg*/
  SP0MM001.SP0MMSG = " "; /* clear err msg*/


      /* check and process valid aid key requests*/

      /* enter - continue processing*/
        /* pa2 - abort*/
        /* pf1 - transfer to help application*/
        /* pf3 - transfer to next level up application*/
        /* pf4 - transfer to master menu application*/

  COMMAREA.CAITEM = SP0MM001.CAITEM;

  if (converseVar.eventKey is enter)
     /* ** next sentence ** continue processing ***/
  else
    if (converseVar.eventKey is pa2)
      XSPF4();
      SP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      exit stack;
    else
      if (converseVar.eventKey is pf1) /* check for system help*/
        XSPF1(); /* help facility*/
        SP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
        COMMAREA.CATOAP = " "; /* clear app*/
        exit stack;
      else
        if (converseVar.eventKey is pf3) /* check for master menu level*/
          XSPF4(); /* invoke master menu request*/
          SP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
          COMMAREA.CATOAP = " "; /* clear app*/
          exit stack;
        else
          if (converseVar.eventKey is pf4) /* check for master menu*/
            XSPF4(); /* invoke master menu request*/
            SP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
            COMMAREA.CATOAP = " "; /* clear app*/
            exit stack;
          else
            SP0MM001.VAGen_EZEMSG = "INVALID KEY PRESSED - RETRY";
            exit stack;
          end
        end
      end
    end
  end


      /* reset map attributes*/

  set SP0MM001.SP0MMOPT initialAttributes;
  set SP0MM001.CATOAP initialAttributes;


      /* save next item if entered*/

  if (SP0MM001.CAITEM is modified)
    COMMAREA.CAITEM = SP0MM001.CAITEM; /* save reqstd item*/
  end


      /* process selected application*/

  if (SP0MM001.SP0MMOPT == 0) /* null?*/
      /* ** next sentence ** ignore field ***/
  else
    if (SP0MM001.SP0MMOPT in SP0MT.SP0MMAOP)
      COMMAREA.CATOAP = SP0MT.SP0MMAPP[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0) /* test for not found in table*/
      SP0MM001.VAGen_EZEMSG = "INVALID APPLICATION SELECTED - REENTER";
      set SP0MM001.SP0MMOPT modified, bold; /* field error*/
      exit stack; /* branch to flow*/
    end
  end


      /* if no application was selected and fast path was not*/
      /* entered, then ask user to select an application*/

  if (SP0MM001.SP0MMOPT <= 0 /* if no selection then tell user*/
   && SP0MM001.CATOAP <= " ")
    SP0MM001.VAGen_EZEMSG = "PLEASE SELECT AN APPLICATION";
    exit stack; /* branch to flow*/
  end


      /* if application selected and fast path entered,*/
      /* then ask user to erase one*/

  if (SP0MM001.SP0MMOPT > 0 /* if both selected then tell user*/
   && SP0MM001.CATOAP > " ")
    set SP0MM001.SP0MMOPT modified, bold; /* field error*/
    set SP0MM001.CATOAP modified, bold; /* field error*/
    SP0MM001.VAGen_EZEMSG = "CANNOT SELECT OPTION AND AN APPLICATION";
    SP0MM001.SP0MMSG = "PLEASE ERASE ONE";
    COMMAREA.CATOAP = " "; /* clear appl*/
    exit stack; /* branch to flow*/
  end


      /* all edits are good at this point*/

      /* if an applicaton was not selected and the fast*/
      /* path was entered, then use the fast path*/

  if (COMMAREA.CATOAP <= " ") /* if appl not selected*/
    COMMAREA.CATOAP = SP0MM001.CATOAP; /* set application*/
  end


      /* all is good; check for transfer*/

  if (converseVar.eventKey is enter)
    if (COMMAREA.CATOAP > " ") /* transfer to appl?*/
      COMMAREA.CAFROMAP = "SP0M"; /* set up plan name*/
      XSEXIT(); /* pass control to exit routine*/
      SP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      if (SP0MM001.CATOAP > " ") /* was appl entered*/
        set SP0MM001.CATOAP cursor, modified, bold; /* yes, set option*/
        exit stack;
      else
        set SP0MM001.SP0MMOPT modified, bold; /* set select*/
        exit stack;
      end
    end
  end



end // end SP0M005

