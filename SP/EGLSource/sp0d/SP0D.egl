package sp0d;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=SP0D ****
// the purpose of this application is to allow users to
// inquire on sales programs id's for specific products,
// family codes, or sport activity codes.
// ;
// ;--------------- MAINTENANCE LOG   ------------------------
// ;
// ;
// 12-06-88    jwood    added noncsp option to calls
// 12-06-88    jwood    added xssegtr logic
// 10-03-90    S.JOB    E1:SUBSTITUTE PROD CATEGORY FOR FAMILY
// ;                       CODES.
// ;
// *********************
Program SP0D type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SP0DWREC SP0DWREC; // record
  SP1REC SP1REC; // record
  SP5REC SP5REC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XDMTBL {deleteAfterUse = yes}; // table
  use XPCTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSPTBL {deleteAfterUse = yes}; // table
  use SP0DM.SP0DM010,  // forms
      SP0DM.SP0DM020, 
      SP0DM.SP0DM030, 
      SP0DM.SP0DM040, 
      SP0DM.SP0DM060
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SP0D000: SP0D000();


    goto SP0D010;


    SP0D010: SP0D010();


    if (converseVar.validationMsgNum > 0
     || SP0DM010.SP0DMMSG != " ")
      goto SP0D010;
    end

    if (SP0DM010.SP0DMOP[1] is data)
      goto SP0D020;
    end /* inquire by product*/
    if (SP0DM010.SP0DMOP[2] is data)
      goto SP0D030;
    end /* inquire by family*/
    if (SP0DM010.SP0DMOP[3] is data)
      goto SP0D040;
    end /* inquire by sport activity*/


    SP0D020: SP0D020();


    if (converseVar.eventKey is pf3)
      goto SP0D010;
    else
      if (converseVar.validationMsgNum == +0
       && SP0DM020.SP0DMMSG == " "
       && SP0DWREC.SP0DWFL1 == "Y")
        goto SP0D050;
      else
        goto SP0D020;
      end
    end


    SP0D030: SP0D030();


    if (converseVar.eventKey is pf3)
      SP0DM010.SP0DMOP[1] = " ";
      goto SP0D010;
    else
      if (converseVar.validationMsgNum == +0
       && SP0DM030.SP0DMMSG == " ")
        goto SP0D050;
      else
        goto SP0D030;
      end
    end


    SP0D040: SP0D040();


    if (converseVar.eventKey is pf3)
      goto SP0D010;
    else
      if (converseVar.validationMsgNum == +0
       && SP0DM040.SP0DMMSG == " ")
        goto SP0D050;
      else
        goto SP0D040;
      end
    end


    SP0D050: SP0D050();


    goto SP0D060;


    SP0D060: SP0D060();


    if (converseVar.eventKey is pf3)
      goto SP0D010;
    else
      goto SP0D060;
    end


  end // end main
end // end SP0D

// initialize application
Function SP0D000()


  XSENTRY(); /* check security*/

  XSSEGTR(); /* set segmented transaction id*/

  converseLib.clearScreen();
  set SP0DM010 initial; /* initialize map*/


   /* ************************************************************/
end // end SP0D000

// determine inquiry
Function SP0D010()


  SP0DM010.SP0DMTDT = VGVar.currentShortGregorianDate;


  converse SP0DM010 ;


  SP0DS11(); /* reset screen attributes*/
  SP0DS13(); /* validate attention keys*/
  SP0DS15(); /* validate user input*/

  if (converseVar.validationMsgNum == +0
   && SP0DM010.SP0DMMSG == " ")
    SP0DWREC.SP0DWFL1 = "N"; /* reset search flag*/
    converseLib.clearScreen();
    set SP0DM020 initial; /* clear map*/
    converseLib.clearScreen();
    set SP0DM030 initial; /* clear map*/
    converseLib.clearScreen();
    set SP0DM040 initial; /* clear map*/
    converseLib.clearScreen();
    set SP0DM060 initial; /* clear map*/
    set SP0DWREC empty;
  end


end // end SP0D010

// accept product number
Function SP0D020()


  SP0DM020.SP0DMTDT = VGVar.currentShortGregorianDate;

  SP0DM010.SP0DMOP[1] = " ";


  converse SP0DM020 ;


  SP0DS21(); /* reset screen attributes*/
  SP0DS23(); /* validate attention keys*/

  if (SP0DWREC.SP0DWFL1 != "Y")
    SP0DS25(); /* validate user input*/
  end


end // end SP0D020

// accept family code
Function SP0D030()


  SP0DM030.SP0DMTDT = VGVar.currentShortGregorianDate;

  SP0DM010.SP0DMOP[2] = " ";


  converse SP0DM030 ;


  SP0DS31(); /* reset screen attributes*/
  SP0DS33(); /* validate attention keys*/

  if (SP0DWREC.SP0DWFL1 != "Y")
    SP0DS35(); /* validate user input*/
  end


end // end SP0D030

// accept sport act code
Function SP0D040()


  SP0DM040.SP0DMTDT = VGVar.currentShortGregorianDate;

  SP0DM010.SP0DMOP[3] = " ";


  converse SP0DM040 ;


  SP0DS41(); /* reset screen attributes*/
  SP0DS43(); /* validate attention keys*/

  if (SP0DWREC.SP0DWFL1 != "Y")
    SP0DS45(); /* validate user input*/
  end


end // end SP0D040

// retrieve sales programs
Function SP0D050()


  SP0DS51(); /* select set of all sales programs*/

  SP0DWREC.SP0DWLMT = SP0DWREC.SP0DWSB1 - 1;

  SP0DWREC.SP0DWPOS = 1;
  SP0DWREC.SP0DWSB1 = 1;


end // end SP0D050

// display matching s.p.
Function SP0D060()


  SP0DM060.SP0DMTDT = VGVar.currentShortGregorianDate;

  SP0DS61(); /* move sales programs to map*/


  converse SP0DM060 ;


  SP0DM060.SP0DMMSG = " ";

  set SP0DM060.CATOAP cursor, normal;
  set SP0DM060.CAITEM normal;

  SP0DS63(); /* validate attention keys*/


end // end SP0D060

// reset screen attributes
Function SP0DS11()


  SP0DM010.SP0DMMSG = " ";

  SP0DWREC.SP0DWSB1 = 3;
  while (SP0DWREC.SP0DWSB1 > 0)
    set SP0DM010.SP0DMOP[SP0DWSB1] cursor, normal;
    SP0DWREC.SP0DWSB1 = SP0DWSB1 - 1;
  end

  set SP0DM010.CATOAP normal;
  set SP0DM010.CAITEM normal;


end // end SP0DS11

// validate attention keys
Function SP0DS13()


  if (converseVar.eventKey is pf1) /* transfer to help facitily*/
    XSPF1();
    SP0DM010.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pf4) /* transfer to main menu*/
    XSPF4();
    SP0DM010.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pf3 /* cancel application*/
   || converseVar.eventKey is pa2)
    COMMAREA.CATOAP = "SP0M";
    XSEXIT();
    SP0DM010.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is enter)
    if (SP0DM010.CATOAP != " ") /* check for fast path*/
      COMMAREA.CATOAP = SP0DM010.CATOAP;
      COMMAREA.CAITEM = SP0DM010.CAITEM;
      XSEXIT();
      set SP0DM010.CATOAP cursor, bold;
      SP0DM010.SP0DMMSG = COMMAREA.CAMSG;
      exit stack;
    else
      return;
    end
  else
    converseLib.validationFailed(1); /* invalid pf key*/
    exit stack;
  end


end // end SP0DS13

// validate user input
Function SP0DS15()


  SP0DWREC.SP0DWFL1 = "N";

  SP0DWREC.SP0DWSB1 = 3;
  while (SP0DWREC.SP0DWSB1 > 0)
    if (SP0DMOP[SP0DWSB1] != " ")
      SP0DWREC.SP0DWFL1 = "Y";
    end
    SP0DWREC.SP0DWSB1 = SP0DWREC.SP0DWSB1 - 1;
  end

  if (SP0DWREC.SP0DWFL1 == "N")
    SP0DM010.SP0DMMSG = "SELECT AN INQUIRY OPTION OR EXIT";
  end


end // end SP0DS15

// reset screen attributes
Function SP0DS21()


  SP0DM020.SP0DMMSG = " ";

  set SP0DM020.XGPCD cursor, normal;
  set SP0DM020.SY1STNBR normal;
  set SP0DM020.SY2CLRID normal;
  set SP0DM020.XDMCD normal;

  set SP0DM020.CATOAP normal;
  set SP0DM020.CAITEM normal;


end // end SP0DS21

// validate attention keys
Function SP0DS23()


  if (converseVar.eventKey is pf1) /* transfer to help facitily*/
    XSPF1();
    SP0DM020.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pf3) /* cancel application*/
    exit stack;
  end

  if (converseVar.eventKey is pf4) /* transfer to main menu*/
    XSPF4();
    SP0DM020.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pa2)
    COMMAREA.CATOAP = "SP0M";
    XSEXIT();
    SP0DM020.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is enter)
    if (SP0DM020.CATOAP != " ") /* check for fast path*/
      COMMAREA.CATOAP = SP0DM020.CATOAP;
      COMMAREA.CAITEM = SP0DM020.CAITEM;
      XSEXIT();
      set SP0DM020.CATOAP cursor, bold;
      SP0DM020.SP0DMMSG = COMMAREA.CAMSG;
      exit stack;
    else
      return;
    end
  else
    converseLib.validationFailed(1); /* invalid pf key*/
  end


end // end SP0DS23

// validate user input
Function SP0DS25()


  SP0DS2A(); /* validate dimension*/
  SP0DS2B(); /* validate color id*/
  SP0DS2C(); /* validate prod style id*/
  SP0DS2D(); /* validate gpc*/

   /* ----------- PRODUCT CATEGORY -----------------------*/

  if (SP0DWREC.XPCCD != " ")
    if (SP0DWREC.XPCCD in XPCTBL.XPCCD)
      SP0DM020.XPCDESC = XPCTBL.XPCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      SP0DM020.XPCDESC = " ";
    end
    SP0DM060.XPCDESC = SP0DM020.XPCDESC;
  end

   /* ----------------------------------------------------*/

  if (SP0DWREC.XSPCD != " ")
    if (SP0DWREC.XSPCD in XSPTBL.XSPCD)
      SP0DM020.XSPDESC = XSPTBL.XSPDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      SP0DM020.XSPDESC = " ";
    end
    SP0DM060.XSPDESC = SP0DM020.XSPDESC;
  end

  if (converseVar.validationMsgNum == +0)
    SP0DM020.SP0DMMSG = "PRESS ENTER TO BEGIN SEARCH";
    SP0DWREC.SP0DWFL1 = "Y";
  end


end // end SP0DS25

// validate dimension
Function SP0DS2A()


  if (SP0DM020.XDMCD == " ")
    SP0DM020.XDMDESC = "BLANK";
    return;
  end

  if (SP0DM020.XDMCD in XDMTBL.XDMCD)
    SP0DM020.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end

  if (sysVar.arrayIndex == 0)
    set SP0DM020.XDMCD cursor, bold;
    SP0DM020.SP0DMMSG = "THIS IS NOT A VALID DIMENSION";
    SP0DM020.XDMDESC = "INVALID";
    converseLib.validationFailed(28);
  else
    if (XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SP0DWREC.XDMCD = XDMTBL.XDMCD[sysVar.arrayIndex];
      SP0DM060.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    else
      set SP0DM020.XDMCD cursor, bold;
      SP0DM020.SP0DMMSG = "THIS IS NOT AN ACTIVE DIMENSION";
      converseLib.validationFailed(28);
    end
  end


end // end SP0DS2A

// validate color id
Function SP0DS2B()


  if (SP0DM020.SY2CLRID == " ")
    SP0DM020.SY2CLRDS = "BLANK";
    return;
  end

  set SQLCA empty;
  set SY2REC empty;

  SY2REC.XGPCD = SP0DM020.XGPCD;
  SY2REC.SY1STNBR = SP0DM020.SY1STNBR;
  SY2REC.SY2CLRID = SP0DM020.SY2CLRID;
  SY2REC.XDMCD = SP0DM020.XDMCD;

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0)
    SP0DWREC.SY2CLRID = SY2REC.SY2CLRDS;
    SP0DM020.SY2CLRDS = SY2REC.SY2CLRDS;
    SP0DM060.SY2CLRDS = SY2REC.SY2CLRDS;
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      set SP0DM020.SY2CLRID cursor, bold;
      SP0DM020.SP0DMMSG = "THIS COLOR TYPE DOES NOT EXIST";
      SP0DM020.SY2CLRDS = "INVALID";
      converseLib.validationFailed(28);
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SP0D   ";
      TA1REC.TA1LOCAT[1] = "A       ";
      TA1REC.TA1LOCAT[2] = "SP0DS2B ";
      TA1REC.TA1LOCAT[3] = "IO00130 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SP0DM020";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      SP0DM020.SP0DMMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end


end // end SP0DS2B

// validate prod style id
Function SP0DS2C()


  set SQLCA empty;
  set SY1REC empty;

  SY1REC.XGPCD = SP0DM020.XGPCD;
  SY1REC.SY1STNBR = SP0DM020.SY1STNBR;

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0)
    SP0DWREC.SY1STNBR = SY1REC.SY1STNBR;
    SP0DM020.SY1STYNM = SY1REC.SY1STYNM;
    SP0DM060.SY1STYNM = SY1REC.SY1STYNM;
    SP0DM020.XSPCD = SY1REC.XSPCD;
    SP0DWREC.XSPCD = SY1REC.XSPCD;
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      set SP0DM020.SY1STNBR cursor, bold;
      SP0DM020.SP0DMMSG = "THIS PRODUCT STYLE TYPE DOES NOT EXIST";
      SP0DM020.SY1STYNM = "INVALID";
      converseLib.validationFailed(28);
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SP0D   ";
      TA1REC.TA1LOCAT[1] = "A       ";
      TA1REC.TA1LOCAT[2] = "SP0DS2C ";
      TA1REC.TA1LOCAT[3] = "IO00120 ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SP0DM020";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SP1REC.SP1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      SP0DM020.SP0DMMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end




  SY2REC.XGPCD = SP0DM020.XGPCD;
  SY2REC.SY1STNBR = SP0DM020.SY1STNBR;

  call "IO0120" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +0)
    SP0DWREC.XPCCD = SY2REC.XPCCD;
  end



end // end SP0DS2C

// validate gpc
Function SP0DS2D()


  if (SP0DM020.XGPCD in XGPTBL.XGPCD)
    SP0DM020.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
  end

  if (sysVar.arrayIndex == 0)
    set SP0DM020.XGPCD cursor, bold;
    SP0DM020.XGPDESC = "INVALID";
    SP0DM020.SP0DMMSG = "PLEASE ENTER A VALID GPC";
  else
    SP0DWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] != "A")
      SP0DM020.XGPDESC = "INACTIVE";
    end
    SP0DM060.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
  end


end // end SP0DS2D

// reset screen attributes
Function SP0DS31()


  SP0DM030.SP0DMMSG = " ";

  set SP0DM030.XPCCD cursor, normal;
  set SP0DM030.CATOAP normal;
  set SP0DM030.CAITEM normal;


end // end SP0DS31

// validate attention keys
Function SP0DS33()


  if (converseVar.eventKey is pf1) /* transfer to help facitily*/
    XSPF1();
    SP0DM030.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pf3) /* cancel application*/
    exit stack;
  end

  if (converseVar.eventKey is pf4) /* transfer to main menu*/
    XSPF4();
    SP0DM030.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pa2)
    COMMAREA.CATOAP = "SP0M";
    XSEXIT();
    SP0DM030.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is enter)
    if (SP0DM030.CATOAP != " ") /* check for fast path*/
      COMMAREA.CATOAP = SP0DM030.CATOAP;
      COMMAREA.CAITEM = SP0DM030.CAITEM;
      XSEXIT();
      set SP0DM030.CATOAP cursor, bold;
      SP0DM030.SP0DMMSG = COMMAREA.CAMSG;
      exit stack;
    else
      return;
    end
  end

  converseLib.validationFailed(1); /* invalid pf key*/
  exit stack;


end // end SP0DS33

// validate user input
Function SP0DS35()


  if (SP0DM030.XPCCD == " ")
    set SP0DM030.XPCCD cursor, bold;
    SP0DM030.SP0DMMSG = "ENTER A VALID PRODUCT CATEGORY";
    SP0DM030.XPCDESC = " ";
  else
    if (SP0DM030.XPCCD in XPCTBL.XPCCD)
      SP0DM030.XPCDESC = XPCTBL.XPCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      set SP0DM030.XPCCD cursor, bold;
      SP0DM030.SP0DMMSG = "ENTER A VALID PRODUCT CATEGORY";
      SP0DM030.XPCDESC = "INVALID";
    else
      SP0DWREC.XPCCD = XPCTBL.XPCCD[sysVar.arrayIndex];
      SP0DM060.XPCDESC = XPCTBL.XPCDESC[sysVar.arrayIndex];
      SP0DM030.SP0DMMSG = "PRESS ENTER TO BEGIN SEARCH";
      SP0DWREC.SP0DWFL1 = "Y";
    end
  end



end // end SP0DS35

// reset screen attributes
Function SP0DS41()


  SP0DM040.SP0DMMSG = " ";

  set SP0DM040.XSPCD cursor, normal;
  set SP0DM040.CATOAP normal;
  set SP0DM040.CAITEM normal;


end // end SP0DS41

// validate attention keys
Function SP0DS43()


  if (converseVar.eventKey is pf1) /* transfer to help facitily*/
    XSPF1();
    SP0DM040.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pf3) /* cancel application*/
    exit stack;
  end

  if (converseVar.eventKey is pf4) /* transfer to main menu*/
    XSPF4();
    SP0DM040.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pa2)
    COMMAREA.CATOAP = "SP0M";
    XSEXIT();
    SP0DM040.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is enter)
    if (SP0DM040.CATOAP != " ") /* check for fast path*/
      COMMAREA.CATOAP = SP0DM040.CATOAP;
      COMMAREA.CAITEM = SP0DM040.CAITEM;
      XSEXIT();
      set SP0DM040.CATOAP cursor, bold;
      SP0DM040.SP0DMMSG = COMMAREA.CAMSG;
      exit stack;
    else
      return;
    end
  end

  converseLib.validationFailed(1); /* invalid pf key*/
  exit stack;


end // end SP0DS43

// validate user input
Function SP0DS45()


  if (SP0DM040.XSPCD == " ")
    set SP0DM040.XSPCD cursor, bold;
    SP0DM040.SP0DMMSG = "ENTER A VALID SPORT ACTIVITY CODE";
    SP0DM040.XSPDESC = " ";
  else
    if (SP0DM040.XSPCD in XSPTBL.XSPCD)
      SP0DM040.XSPDESC = XSPTBL.XSPDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      set SP0DM040.XSPCD cursor, bold;
      SP0DM040.SP0DMMSG = "ENTER A VALID SPORT ACTIVITY CODE";
      SP0DM040.XSPDESC = "INVALID";
    else
      SP0DWREC.XSPCD = XSPTBL.XSPCD[sysVar.arrayIndex];
      SP0DM060.XSPDESC = XSPTBL.XSPDESC[sysVar.arrayIndex];
      SP0DM040.SP0DMMSG = "PRESS ENTER TO BEGIN SEARCH";
      SP0DWREC.SP0DWFL1 = "Y";
    end
  end


end // end SP0DS45

// scan sp header records
Function SP0DS51()


  set SP1REC empty;
  set SQLCA empty;

  SP1REC.SP1ID = " ";
  SP0DWREC.SP0DWSB1 = 1;
  call "IO0070" ("SS", SQLCA, SP1REC) {isNoRefresh = yes, isExternal = yes};

  while (SQLCA.VAGen_SQLCODE == +0
   && SP0DWREC.SP0DWSB1 <= 200)
    set SQLCA empty;
    call "IO0070" ("SN", SQLCA, SP1REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      SP0DWREC.SP0DWFL1 = "N";
      SP0DWREC.SP0DWFL2 = "N";
      SP0DS5A(); /* check for sport activity match*/
      SP0DS5B(); /* check for family code match*/
      SP0DS5C(); /* check for product match*/
      if (SP0DWREC.SP0DWFL1 == "Y")
        SP0DWREC.SP1ID[SP0DWSB1] = SP1REC.SP1ID;
        SP0DWREC.SP1STAT[SP0DWSB1] = SP1REC.SP1STAT;
        SP0DWREC.SP1NM[SP0DWSB1] = SP1REC.SP1NM;
        SP0DWREC.SP1ABRV[SP0DWSB1] = SP1REC.SP1ABRV;
        SP0DWREC.XNDCD[SP0DWSB1] = SP1REC.XNDCD;
        if (SP0DWREC.SP0DWFL2 == "Y")
          SP0DWREC.SP0DWIND[SP0DWSB1] = "*";
        end
        SP0DWREC.SP0DWSB1 = SP0DWREC.SP0DWSB1 + 1;
      end
    end
  end

  if (SQLCA.VAGen_SQLCODE != +0
   && SQLCA.VAGen_SQLCODE != +100)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SP0D   ";
    TA1REC.TA1LOCAT[1] = "A       ";
    TA1REC.TA1LOCAT[2] = "SP0DS51 ";
    TA1REC.TA1LOCAT[3] = "IO00070 ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SP0D050 ";
    TA1REC.TA1DBASE = "DSPGM.";
    TA1REC.TA1TBLVU = "VSPGM001";
    TA1TBLKE = SP1REC.SP1KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    XSPF4();
    SP0DM060.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  call "IO0070" ("CS", SQLCA, SP1REC) {isNoRefresh = yes, isExternal = yes};


end // end SP0DS51

// check for sport activity match
Function SP0DS5A()


  if (SP0DWREC.XSPCD == " ")
    return;
  end

  if (SP0DWREC.XSPCD in SP1REC.XSPCD)
    SP0DWREC.SP0DWFL1 = "Y";
  else
    if ("**" in SP1REC.XSPCD)
      SP0DWREC.SP0DWFL1 = "Y";
    end
  end


end // end SP0DS5A

// check for family code match
Function SP0DS5B()


  if (SP0DWREC.XPCCD == " "
   || SP0DWREC.XPCCD == "00")
    return;
  end

  if (SP0DWREC.XPCCD in SP1REC.XPCCD)
    SP0DWREC.SP0DWFL1 = "Y";
  end


end // end SP0DS5B

// scan sp product records
Function SP0DS5C()


  if (SP0DWREC.XGPCD == " ")
    return;
  end

  set SP5REC empty;
  set SQLCA empty;

  SP5REC.SP1ID = SP1REC.SP1ID;

  call "IO0110" ("SS", SQLCA, SP5REC) {isNoRefresh = yes, isExternal = yes};

  while (SQLCA.VAGen_SQLCODE == +0)
    call "IO0110" ("SN", SQLCA, SP5REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == +0)
      SP0DS5D(); /* check for product match*/
    end
  end

  if (SQLCA.VAGen_SQLCODE == +100)
    SQLCA.VAGen_SQLCODE = +0;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SP0D   ";
    TA1REC.TA1LOCAT[1] = "A       ";
    TA1REC.TA1LOCAT[2] = "SP0DS5C ";
    TA1REC.TA1LOCAT[3] = "IO00110 ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SP0D050 ";
    TA1REC.TA1DBASE = "DSPGM.";
    TA1REC.TA1TBLVU = "VPR0D001";
    TA1TBLKE = SP1REC.SP1KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    XSPF4();
    SP0DM060.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  call "IO0110" ("CS", SQLCA, SP5REC) {isNoRefresh = yes, isExternal = yes};


end // end SP0DS5C

// check for product match
Function SP0DS5D()


  if (SP5REC.XGPCD != SP0DWREC.XGPCD)
    return;
  end

  if (SP5REC.SY1STNBR != SP0DWREC.SY1STNBR)
    return;
  end

  if (SP0DWREC.SY2CLRID != " ")
    if (SP5REC.SY2CLRID != SP0DWREC.SY2CLRID)
      return;
    end
  end

  if (SP0DWREC.XDMCD != " ")
    if (SP5REC.XDMCD != SP0DWREC.XDMCD)
      return;
    end
  end

  SP0DWREC.SP0DWFL1 = "Y";
  SP0DWREC.SP0DWFL2 = "Y";


end // end SP0DS5D

// move sales programs to map
Function SP0DS61()


  SP0DWREC.SP0DWSB1 = 1;
  while (SP0DWREC.SP0DWSB1 <= 10)
    SP0DM060.SP0DMIND[SP0DWSB1] = " ";
    SP0DM060.SP1ID[SP0DWSB1] = " ";
    SP0DM060.SP1NM[SP0DWSB1] = " ";
    SP0DM060.XNDCD[SP0DWSB1] = " ";
    SP0DM060.SP1STAT[SP0DWSB1] = " ";
    SP0DM060.SP1ABRV[SP0DWSB1] = " ";
    if (SP0DWREC.SP0DWPOS <= SP0DWREC.SP0DWLMT)
      SP0DM060.SP0DMIND[SP0DWSB1] = SP0DWREC.SP0DWIND[SP0DWPOS];
      SP0DM060.SP1ID[SP0DWSB1] = SP0DWREC.SP1ID[SP0DWPOS];
      SP0DM060.SP1NM[SP0DWSB1] = SP0DWREC.SP1NM[SP0DWPOS];
      SP0DM060.XNDCD[SP0DWSB1] = SP0DWREC.XNDCD[SP0DWPOS];
      SP0DM060.SP1STAT[SP0DWSB1] = SP0DWREC.SP1STAT[SP0DWPOS];
      SP0DM060.SP1ABRV[SP0DWSB1] = SP0DWREC.SP1ABRV[SP0DWPOS];
    end
    SP0DWREC.SP0DWSB1 = SP0DWREC.SP0DWSB1 + 1;
    SP0DWREC.SP0DWPOS = SP0DWREC.SP0DWPOS + 1;
  end

  SP0DWREC.SP0DWPOS = SP0DWREC.SP0DWPOS - 10;

  if (SP0DWREC.SP0DWLMT == +0)
    SP0DM060.SP0DMMSG = "NO SALES PROGRAMS MATCH PRODUCT INFORMATION";
  end


end // end SP0DS61

// validate attention keys
Function SP0DS63()


  if (converseVar.eventKey is pf1) /* transfer to help facitily*/
    XSPF1();
    SP0DM060.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pf3) /* cancel application*/
    exit stack;
  end

  if (converseVar.eventKey is pf4) /* transfer to main menu*/
    XSPF4();
    SP0DM060.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pf7)
    SP0DWREC.SP0DWPOS = SP0DWREC.SP0DWPOS - 10;
    if (SP0DWREC.SP0DWPOS <= 0)
      SP0DM060.SP0DMMSG = "NO MORE BACKWARD SCROLLING IS POSSIBLE";
      SP0DWREC.SP0DWPOS = 1;
    end
    exit stack;
  end

  if (converseVar.eventKey is pf8)
    SP0DWREC.SP0DWPOS = SP0DWREC.SP0DWPOS + 10;
    if (SP0DWREC.SP0DWPOS > SP0DWREC.SP0DWLMT)
      SP0DM060.SP0DMMSG = "NO MORE FORWARD SCROLLING IS POSSIBLE";
      SP0DWREC.SP0DWPOS = SP0DWREC.SP0DWLMT - 10;
    end
    exit stack;
  end

  if (converseVar.eventKey is pa2)
    COMMAREA.CATOAP = "SP0M";
    XSEXIT();
    SP0DM060.SP0DMMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is enter)
    if (SP0DM060.CATOAP != " ") /* check for fast path*/
      COMMAREA.CATOAP = SP0DM060.CATOAP;
      COMMAREA.CAITEM = SP0DM060.CAITEM;
      XSEXIT();
      set SP0DM060.CATOAP cursor, bold;
      SP0DM060.SP0DMMSG = COMMAREA.CAMSG;
      exit stack;
    else
      return;
    end
  else
    converseLib.validationFailed(1);
    exit stack;
  end


end // end SP0DS63

Record SP0DWREC type basicRecord
  10 XGPCD XGPCD ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 XPCCD XPCCD ; 
  10 XSPCD XSPCD ; 
  10 SP0DWFL1 SP0DWFL1 ; 
  10 SP0DWFL2 SP0DWFL2 ; 
  10 SP0DWSB1 SP0DWSB1 ; 
  10 SP0DWPOS SP0DWPOS ; 
  10 SP0DWLMT SP0DWLMT ; 
  10 SP0DWIND SP0DWIND [200] ; 
  10 SP1ID SP1ID [200] ; 
  10 SP1STAT SP1STAT [200] ; 
  10 SP1NM SP1NM [200] ; 
  10 SP1ABRV SP1ABRV [200] ; 
  10 XNDCD XNDCD [200] ; 
end // end SP0DWREC

// w.s. flag 1
DataItem SP0DWFL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w.s. flag 2
DataItem SP0DWFL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w.s. product indicator
DataItem SP0DWIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w.s. array size limit
DataItem SP0DWLMT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. array position
DataItem SP0DWPOS num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. subscript 1
DataItem SP0DWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

