package fg06;

import corpcom1.CAUSERID;
import corpcom2.XPCREC;
import corpcom2.XPLREC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFF001;
import corpcom3.XPTA0P;
import corpcom3.XPXPC01;
import corpcom3.XPXPL01;
import corpcom3.XPXX001;
import corpcom3.XPYPG01;
import corpcom4.XSFFS01;
import corpcom4.XSFFS35;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XDMCD;
import corpx1.XDMTBL;
import corpx1.XPCTBL;
import corpx1.XPLTBL;
import corpx2.XPCCD;
import corpx2.XPLCD;
import corpx2.XWSCD;
import corpy2.YPGCD;
import corpy2.YPGTBL;
import ff.common.FF1FUTDT;
import ff.common.FF1REC;
import ff.common.FF2REC;
import ff.common.FF3REC;
import ff.common.FFABEGMO;
import ff.common.FFQMBYMO;
import ff.common.FFWREC;
import ff.common.FFZBEGMO;
import ff.common.FFZBYYMM;
import ff.common.FFZENDMO;
import ff.common.FFZEYYMM;
import ff.common.FFZREC;
import fg.common.FG3REC;
import fg.common.FG9REC;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRAB;
import sy.common.SY2CLRID;
import sy.common.SYBSTGNB;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA3REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ta.common.TARJCL;
//*** PROGRAM=FG06 ****
// This application allows the user to submit the Production
// Forecast to scheduling via a batch job. This job will be run
// immediately. However, for the forecast to be submitted, the
// "Submit Porduction Forecast" switch must be set to 'y'.
// 
// The user must specify the "range" and either "line" and
// "type" - "line", "type", and "category" - "style group" -
// "style/Color/Dim". If the user doesn't know the code for a
// line, type, or category, he can enter a "?" to ask for help.
// The application fill bring up a pop-up window to show a list
// of lines, types, or categories. so that he can choose from
// there.
// 
// The user may exit to any allowed application, via fast path
// or PF keys.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          11/16/89  CNEWMA  New application.
// FF#14    06/01/90  RHETRI  Changed mod id for error routine
//          08/02/90  RHETRI  Allow buy month in date range
// FF#134   08/21/90  SFORD   Set job completed msg flag = 'y'
// FF2035   11/26/90  RHETRI  Allow NIL forecast submissions.
// Fix      05/30/91  JJUCH   Replace ffsty with pfhst.
// FF2???   06/18/91  LDELUH  Allow "*" in type grp field.
// Fix      07/24/91  JJUCH   Modified the editing to allow
//                            style group occurs in multiple
//                            categories.
// FF2068   01/03/91  KSANFO  Modified JCL to submit LRPS
//                            clean-up job when * in Line &
//                            Type, and LRPS switch = 'Y'.
// FF       09/07/93  mdange  Add logic to submit either test
//                            or prod JCL.
// FF175    12/12/96  DSMITH  Changed date range fill character
//                            to '0'.
// FFmaint  04/10/97  DSMITH  added an edit to check for
//                            existing forecasts before
//                            allowing the clean up job to run.
// FFmaint  05/29/97  DSMITH  removed the edit above
// ff-1054  12/17/97  RKUDPI  Modified screen to work for
//                            Equipment only.
// *********************
Program FG06 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FF1REC FF1REC; // record
  FF2REC FF2REC; // record
  FF3REC FF3REC; // record
  FFWREC FFWREC; // record
  FFZREC FFZREC; // record
  FG06W00 FG06W00; // record
  FG06W01 FG06W01; // record
  FG06W02 FG06W02; // record
  FG3REC FG3REC; // record
  FG9REC FG9REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA3REC TA3REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XPCREC XPCREC; // record
  XPLREC XPLREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XPLTBL; // table
  use XPCTBL; // table
  use YPGTBL; // table
  use XDMTBL; // table
  use FG06T; // table
  use FG06T5O {deleteAfterUse = yes}; // table
  use FG06T2 {deleteAfterUse = yes}; // table
  use FG06T51 {deleteAfterUse = yes}; // table
  use FG06M.FG06M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFF001: XPFF001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set FG06M001 initial; /* M001 input/output*/
    set FG06W00 empty; /* Working storage*/
    set FG06W01 empty; /* M001 display storage*/
    set FG06W02 empty; /* Jcl storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    FG06W00.FG06WSWF = "Y"; /* Format the map switch*/
    FG06W01.FG06WLSW = "N"; /* Init LRPS confirm submit switch*/
    ;
    XPLREC.XGPCD = COMMAREA.XGPCD; /* GPC code*/
    XPCREC.XGPCD = COMMAREA.XGPCD; /* GPC code*/
    ;
     /* ------------------------------------------------------------*/
     /* If style code was not passed, default color and dim if they*/
     /* are missing.*/
     /* ------------------------------------------------------------*/
    ;
    if (FFWREC.SY1STNBR == " ") /* If style code is missing*/
      if (FFWREC.SY2CLRID == " ") /* If color code is missing*/
        FFWREC.SY2CLRID = "00"; /* Default value*/
      end
      ;
      if (FFWREC.XDMCD == " ") /* If color code is missing*/
        FFWREC.XDMCD = "00"; /* Default value*/
      end
    end
    ;
     /* ------------------------------------------------------------*/
     /* If type is misssing, default to '01'.*/
     /* ------------------------------------------------------------*/
    ;
    if (FFWREC.YPGCD == "  ") /* No type group*/
      FFWREC.YPGCD = "01"; /* Default value*/
      if (FFWREC.YPGCD in YPGTBL.YPGCD)
        FFWREC.YPGABRV = YPGTBL.YPGABRV[sysVar.arrayIndex];
      end /* Abbreviation*/
    end
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FG06001; /* Converse the main process*/
    ;
    ;
    FG06001: FG06001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto FG06001; /* Converse the main process*/
    ;
    ;
  end // end main
end // end FG06

// Inquire/maintain a table row
Function FG06001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FG06200(); /* Format and display the map*/
  ;
  FG06300(); /* Check attention identifier*/
  ;
  FG06400(); /* Reset fields to normal intensity*/
  ;
  FG06500(); /* Verify the entered data*/
  ;
  FG06600(); /* Process valid input request*/
  ;
  ;
end // end FG06001

// Format and converse the map
Function FG06200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    ;
    FFWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If no error, format the data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* or no error found*/
    ;
    if (FG06W00.FG06WSWF == "Y") /* Map must be formatted*/
      FG06210(); /* Format the data on the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FG06M001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  FG06M001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FG06M001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FFWREC.XXXMSGNO != 0) /* Message to display*/
    ;
    FG06M001.XXXMODID = FFWREC.XXXMODID; /* Module identification*/
    if (FFWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FFWREC.XXXMSGNO);
    end /* Message number*/
    ;
    set FG06M001 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse FG06M001 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  FFWREC.XXXMODID = " "; /* Module identification*/
  FFWREC.XXXMSGNO = 0; /* Message number*/
  ;
  COMMAREA.CATOAP = FG06M001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FG06M001.CAITEM; /* Application data*/
  ;
  ;
end // end FG06200

// Format the display data
Function FG06210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FG06M001 initial; /* M001 input/output area*/
  ;
  FG06W00.FG06WSWF = "N"; /* Format the map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  FG06M001.FFZBYYMM = FFWREC.FFABEGMO; /* date range beg month*/
  FG06M001.FFZEYYMM = FFWREC.FFAENDMO; /* date range end month*/
  FG06M001.XPLCD = FFWREC.XPLCD; /* Product line code*/
  FG06M001.XPLABRV = FFWREC.XPLABRV; /* Product line abbreviation*/
  FG06M001.YPGCD = FFWREC.YPGCD; /* Type group code*/
  FG06M001.YPGABRV = FFWREC.YPGABRV; /* Type group abbreviation*/
  FG06M001.XPCCD = FFWREC.XPCCD; /* Category code*/
  FG06M001.XPCABRV = FFWREC.XPCABRV; /* Category short description*/
  FG06M001.SYBSTGNB = FFWREC.SYBSTGNB; /* Style Group number*/
  FG06M001.SYBSTGNM = FFWREC.SYBSTGNM; /* Style Group name*/
  FG06M001.SY1STNBR = FFWREC.SY1STNBR; /* Style number*/
  FG06M001.SY1SSTNM = FFWREC.SY1SSTNM; /* Style name*/
  FG06M001.SY2CLRID = FFWREC.SY2CLRID; /* Color identification*/
  FG06M001.SY2CLRAB = FFWREC.SY2CLRAB; /* Color abbreviation*/
  FG06M001.XDMCD = FFWREC.XDMCD; /* Dimension code*/
  ;
  ;
end // end FG06210

// Check attention identifier
Function FG06300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    FG06W00.FG06WSWF = "Y"; /* Format the map switch*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      XSFFS01(); /* Exit to another application*/
      ;
      set FG06M001.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      FFWREC.XXXMODID = "300"; /* Module identification*/
      converseLib.validationFailed(36); /* Indicate PF key not valid*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1  /* PF1 was pressed*/
   || converseVar.eventKey is pf3  /* or PF3 was pressed*/
   || converseVar.eventKey is pf5  /* or PF5 was pressed*/
   || converseVar.eventKey is pf13 /* or PF13 was pressed*/
   || converseVar.eventKey is pf18) /* or PF18 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "FG06M001"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FF03"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "FG04"; /* TO application*/
    end
    ;
    if (converseVar.eventKey is pf18) /* PF18 was pressed*/
      COMMAREA.CATOAP = "FF0X"; /* TO application*/
    end
    ;
    XSFFS01(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    FFWREC.XXXMODID = "300"; /* Module identification*/
    converseLib.validationFailed(3); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end FG06300

// Reset highlighted fields
Function FG06400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FG06M001.FG06MSJS initialAttributes; /* Submit job switch*/
  set FG06M001.FG06MVSW initialAttributes; /* Submit LRPS clean-up job switch*/
  set FG06M001.XPLCD initialAttributes; /* Product line code*/
  set FG06M001.YPGCD initialAttributes; /* Type group code*/
  set FG06M001.XPCCD initialAttributes; /* Category code*/
  set FG06M001.SYBSTGNB initialAttributes; /* Style group*/
  set FG06M001.SY1STNBR initialAttributes; /* Style number*/
  set FG06M001.SY2CLRID initialAttributes; /* Color identification*/
  set FG06M001.XDMCD initialAttributes; /* Dimension code*/
  set FG06M001.FFZBYYMM initialAttributes; /* date range beg month*/
  set FG06M001.FFZEYYMM initialAttributes; /* date range end month*/
  set FG06M001.CATOAP initialAttributes; /* Commarea TO application*/
  set FG06M001.CAITEM initialAttributes; /* Commarea application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.XPLCD == "?" /* Product line list requested*/
   || FG06M001.YPGCD == "?" /* or type group liest requested*/
   || FG06M001.XPCCD == "?") /* or category list requested*/
    ;
    if (converseVar.eventKey not enter) /* ENTER was not pressed*/
      ;
      FFWREC.XXXMODID = "400"; /* Module identification*/
      converseLib.validationFailed(116); /* Indicate PF key not valid*/
      ;
      exit stack; /* Exit to display map*/
      ;
    end
    ;
  else
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, display the list of product line codes.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.XPLCD == "?") /* Product line list requested*/
    ;
    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "  LINE"; /* Heading*/
    XX0XW02.XGPCD = COMMAREA.XGPCD; /* GPC code*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPL01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      ;
      FG06M001.XPLCD = FFWREC.XPLCD; /* Restore prior code*/
      FG06M001.XPLABRV = FFWREC.XPLABRV; /* Abbreviation*/
    else
      FG06M001.XPLCD = XPLTBL.XPLCD[XX0XWPIX]; /* Selected code*/
      FG06M001.XPLABRV = XPLTBL.XPLABRV[XX0XWPIX]; /* Abbreviation*/
      ;
    end
    ;
    set FG06M001.XPLCD cursor; /* Establish cursor position*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, display the list of type group codes.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.YPGCD == "?") /* Type group list requested*/
    ;
    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "  TYPE GROUP"; /* Heading*/
    XX0XW02.YPGFFFL = "Y";
    XX0XW02.XGPCD = COMMAREA.XGPCD; /* GPC code*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYPG01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      ;
      FG06M001.YPGCD = FFWREC.YPGCD; /* Restore prior code*/
      FG06M001.YPGABRV = FFWREC.YPGABRV; /* Abbreviation*/
    else
      FG06M001.YPGCD = YPGTBL.YPGCD[XX0XWPIX]; /* Selected code*/
      FG06M001.YPGABRV = YPGTBL.YPGABRV[XX0XWPIX]; /* Abbreviation*/
      ;
    end
    ;
    set FG06M001.YPGCD cursor; /* Establish cursor position*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, display the list of category codes.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.XPCCD == "?") /* Category list requested*/
    ;
    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "  CATEGORY"; /* Heading*/
    XX0XW02.XGPCD = COMMAREA.XGPCD; /* GPC code*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPC01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      ;
      FG06M001.XPCCD = FFWREC.XPCCD; /* Restore prior code*/
      FG06M001.XPCABRV = FFWREC.XPCABRV; /* Abbreviation*/
    else
      FG06M001.XPCCD = XPCTBL.XPCCD[XX0XWPIX]; /* Selected code*/
      FG06M001.XPCABRV = XPCTBL.XPCABRV[XX0XWPIX]; /* Abbreviation*/
      ;
    end
    ;
    set FG06M001.XPCCD cursor; /* Establish cursor position*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  FFWREC.XXXMODID = "400"; /* Module identification*/
  converseLib.validationFailed(97); /* Indicate press ENTER*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06400

// Verify the entered data
Function FG06500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    ;
    FFWREC.XXXMODID = "500"; /* Module identification*/
    set FG06M001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(40); /* Enter only with FAST PATH*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify that the entered submit switch is Yes or No.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.FG06MSJS != "Y"
   && FG06M001.FG06MSJS != "N")
    ;
    FFWREC.XXXMODID = "500"; /* Module identification*/
    converseLib.validationFailed(153); /* Indicate value must be 'y' or 'n'*/
    set FG06M001.FG06MSJS cursor, bold; /* Highlighted*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify that the LRPS clean-up job switch is Yes or No.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.FG06MVSW != "Y"
   && FG06M001.FG06MVSW != "N")
    ;
    FFWREC.XXXMODID = "500"; /* Module identification*/
    converseLib.validationFailed(153); /* Indicate value must be 'y' or 'n'*/
    set FG06M001.FG06MVSW cursor, bold; /* Highlighted*/
    ;
  end
   /* ------------------------------------------------------------*/
   /* LRPS Clean-Up Job switch, can be 'Y' only when Type and*/
   /* Line are '*'.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.FG06MVSW == "Y")
    if (FG06M001.YPGCD == "*"
     && FG06M001.XPLCD == "11")
      if (FG06M001.XPLCD == "11"
       && FG06M001.XPCCD != " ")
        FFWREC.XXXMODID = "500"; /* Module identification*/
        converseLib.validationFailed(118); /* Indicate Type & Line must be wildcard*/
        set FG06M001.XPCCD cursor, bold; /* Highlighted*/
                                  /* NEXT SENTENCE*/
      end
                                  /* NEXT SENTENCE*/
    else
      FFWREC.XXXMODID = "500"; /* Module identification*/
      converseLib.validationFailed(538); /* Indicate Type & Line must be wildcard*/
      set FG06M001.FG06MVSW cursor, bold; /* Highlighted*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any of the key fields changed, verify fields.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.FFZBYYMM != FG06W01.FFZBYYMM /* beg month changed*/
   || FG06M001.FFZEYYMM != FG06W01.FFZEYYMM /* end month changed*/
   || FG06M001.XPLCD != FFWREC.XPLCD        /* Product line changed*/
   || FG06M001.YPGCD != FFWREC.YPGCD        /* or type group changed*/
   || FG06M001.XPCCD != FFWREC.XPCCD        /* or category changed*/
   || FG06M001.SYBSTGNB != FFWREC.SYBSTGNB  /* or style group changed*/
   || FG06M001.SY1STNBR != FFWREC.SY1STNBR  /* or style changed*/
   || FG06M001.SY2CLRID != FFWREC.SY2CLRID  /* or color changed*/
   || FG06M001.XDMCD != FFWREC.XDMCD        /* or dimension changed*/
   || FG06M001.FFZBYYMM == 0                /* beg month missing*/
   || FG06M001.FFZEYYMM == 0)               /* end month missing*/
    ;
    FG06510(); /* verify key data*/
    ;
    FG06520(); /* verify relationships*/
    if (FG06M001.XPLCD != "  " /* line code entered*/
     && FG06M001.XPLCD != "11") /* line code entered*/
      FG06M001.YPGABRV = " "; /* Abbreviation*/
      ;
      FFWREC.XXXMODID = "500"; /* Module identification*/
      set FG06M001.XPLCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(539); /* Indicate missing or invalid*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end FG06500

// Verify Key Data
Function FG06510()
   /* ------------------------------------------------------------*/
   /* If style/color/dim was entered, verify the entered code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.SY1STNBR != " ") /* Style entered*/
    ;
    if (FG06M001.YPGCD == "*") /* Type group wilcarded*/
      FFWREC.XXXMODID = "510"; /* Module identification*/
      set FG06M001.YPGCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(118); /* Indicate missing or invalid*/
    else
      /* ------------------------------------------------------------*/
       /* Clear copybook.*/
      /* ------------------------------------------------------------*/
      set FG9REC empty; /* clear record*/
      ;
      /* ------------------------------------------------------------*/
       /* Format key.*/
      /* ------------------------------------------------------------*/
      ;
      FG9REC.SY1STNBR = FG06M001.SY1STNBR; /* style nbr*/
      FG9REC.SY2CLRID = FG06M001.SY2CLRID; /* color id*/
      FG9REC.XDMCD = FG06M001.XDMCD; /* dimension*/
      FG9REC.YSMXDV = "10"; /* division group*/
      ;
      /* ------------------------------------------------------------*/
       /* Select FFSTY.*/
      /* ------------------------------------------------------------*/
      ;
      FG06511(); /* Select PFHST*/
      ;
      if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
        ;
        FG06M001.SY1SSTNM = FG9REC.SY1SSTNM; /* style name*/
        FG06M001.SY2CLRAB = FG9REC.SY2CLRAB; /* color name*/
        FG06M001.YPGCD = FG9REC.YPGCD; /* type code*/
        FG06M001.SYBSTGNB = FG9REC.SYBSTGNB; /* style group*/
        FG06M001.XPCCD = FG9REC.XPCCD; /* cat code*/
        FG06M001.XPLCD = FG9REC.XPLCD; /* line code*/
        ;
      else
        ;
        if (SQLCA.VAGen_SQLCODE == 100) /* Row not found try NIL*/
          FG9REC.YSMXDV = "20"; /* division group*/
          FG06511(); /* Select PFHST*/
          ;
          if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
            ;
            FG06M001.SY1SSTNM = FG9REC.SY1SSTNM; /* style name*/
            FG06M001.SY2CLRAB = FG9REC.SY2CLRAB; /* color name*/
            FG06M001.YPGCD = FG9REC.YPGCD; /* type code*/
            FG06M001.SYBSTGNB = FG9REC.SYBSTGNB; /* style group*/
            FG06M001.XPCCD = FG9REC.XPCCD; /* cat code*/
            FG06M001.XPLCD = FG9REC.XPLCD; /* line code*/
            ;
          else
            FFWREC.XXXMODID = "510"; /* Module identification*/
            set FG06M001.XDMCD cursor, bold; /* Highlight*/
            set FG06M001.SY2CLRID cursor, bold; /* Highlight*/
            set FG06M001.SY1STNBR cursor, bold; /* Highlight*/
            converseLib.validationFailed(118); /* Indicate missing or invalid*/
          end
        else
          FFWREC.XXXMODID = "510"; /* Module identification*/
          set FG06M001.XDMCD cursor, bold; /* Highlight*/
          set FG06M001.SY2CLRID cursor, bold; /* Highlight*/
          set FG06M001.SY1STNBR cursor, bold; /* Highlight*/
          converseLib.validationFailed(118); /* Indicate missing or invalid*/
        end
        ;
      end
      ;
    end
    ;
  else
    FG06M001.SY1SSTNM = " "; /* clear style name*/
    FG06M001.SY2CLRID = " "; /* clear color id*/
    FG06M001.SY2CLRAB = " "; /* clear color name*/
    FG06M001.XDMCD = " "; /* clear dimension*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If style group was entered, verify the entered code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.SYBSTGNB != " ") /* Style group entered*/
    ;
    if (FG06M001.YPGCD == "*") /* Type group wilcarded*/
      FFWREC.XXXMODID = "510"; /* Module identification*/
      set FG06M001.YPGCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(118); /* Indicate missing or invalid*/
    else
      set FG9REC empty; /* clear record*/
      FG9REC.SYBSTGNB = FG06M001.SYBSTGNB; /* style grp*/
      FG9REC.YPGCD = FG06M001.YPGCD; /* type code*/
      FG9REC.YSMXDV = "*"; /* div grp*/
      ;
      TA1REC.TA1PGMNM = "FG06510"; /* Calling process*/
      ;
      FG06W00.FG06WFND = "N";
      FG06512(); /* Open pfhst cursor for style group*/
      FG06513(); /* Fetch next row in cursor*/
      while (FG06W00.FG06WFND == "N" /* record found*/
       && SQLCA.VAGen_SQLCODE != +100) /* not end of cursor*/
        if (FG06M001.XPCCD == FG9REC.XPCCD) /* category match*/
          FG06W00.FG06WFND = "Y";
        else
          FG06513(); /* fetch next row*/
        end
      end
      ;
      FG06514(); /* Close the cursor*/
      ;
      if (FG06W00.FG06WFND == "Y") /* Row not found*/
        ;
        FG06M001.SYBSTGNM = FG9REC.SYBSTGNM; /* style grp name*/
        FG06M001.XPCCD = FG9REC.XPCCD; /* cat code*/
        FG06M001.XPLCD = FG9REC.XPLCD; /* line code*/
      else
        FG06M001.SYBSTGNM = " "; /* style grp name*/
        FFWREC.XXXMODID = "510"; /* Module identification*/
        set FG06M001.SYBSTGNB cursor, bold; /* Highlight*/
        converseLib.validationFailed(118); /* Indicate missing or invalid*/
        ;
      end
    end
    ;
  else
    ;
    FG06M001.SYBSTGNM = " "; /* style grp name*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If category was entered, verify the entered code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.XPCCD != " ") /* category entered*/
    ;
    if (FG06M001.XPCCD in XPCTBL.XPCCD /* Code in table*/
     && XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
      ;
      FG06M001.XPCABRV = XPCTBL.XPCABRV[sysVar.arrayIndex]; /* Abbreviation*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* If not found or inactive, indicate missing or invalid.*/
      /* ------------------------------------------------------------*/
      ;
      FG06M001.XPCABRV = " "; /* Abbreviation*/
      ;
      FFWREC.XXXMODID = "510"; /* Module identification*/
      set FG06M001.XPCCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(118); /* Indicate missing or invalid*/
      ;
    end
    ;
  else
    FG06M001.XPCABRV = " "; /* Abbreviation*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If type code was entered, verify the entered code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.YPGCD == " ") /* type missing*/
    FFWREC.YPGCD = "01"; /* default to '01'*/
    FG06M001.YPGCD = "01"; /* default to '01'*/
  end
  ;
  if (FG06M001.YPGCD == "*") /* Wildcard type grp*/
    FG06M001.YPGABRV = "*ALL*"; /* Abbreviation*/
  else
    if (FG06M001.YPGCD in YPGTBL.YPGCD           /* Code in table*/
     && YPGTBL.XXXSTAT[sysVar.arrayIndex] == "A" /* and active status*/
     && YPGTBL.YPGFFFL[sysVar.arrayIndex] == "Y") /* and flag eq yes*/
      ;
      FG06M001.YPGABRV = YPGTBL.YPGABRV[sysVar.arrayIndex]; /* Abbreviation*/
      ;
    else
      ;
        /* ------------------------------------------------------------*/
        /* If not found or inactive, indicate missing or invalid.*/
        /* ------------------------------------------------------------*/
      ;
      FG06M001.YPGABRV = " "; /* Abbreviation*/
      ;
      FFWREC.XXXMODID = "510"; /* Module identification*/
      set FG06M001.YPGCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(118); /* Indicate missing or invalid*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If line code was entered, verify the entered code.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.XPLCD == "*") /* line code entered*/
    ;
    FG06M001.XPLABRV = "*ALL*"; /* Move 'all' to name*/
    ;
  else
    ;
    if (FG06M001.XPLCD != "11" /* line code entered*/
     && FG06M001.XPLCD != "  ")
      FG06M001.XPLABRV = "  "; /* abbreviation*/
      ;
      FFWREC.XXXMODID = "510"; /* Module identification*/
      set FG06M001.XPLCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(539); /* Indicate missing or invalid*/
    else
      if (FG06M001.XPLCD == " ") /* If line missing*/
        ;
        FG06M001.XPLABRV = " "; /* Abbreviation*/
        ;
      else
        if (FG06M001.XPLCD in XPLTBL.XPLCD /* Code in table*/
         && XPLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
          ;
          FG06M001.XPLABRV = XPLTBL.XPLABRV[sysVar.arrayIndex]; /* Abbreviation*/
          ;
        else
          ;
          /* ------------------------------------------------------------*/
          /* If not found or inactive, indicate missing or invalid.*/
          /* ------------------------------------------------------------*/
          ;
          FG06M001.XPLABRV = " "; /* Abbreviation*/
          ;
          FFWREC.XXXMODID = "510"; /* Module identification*/
          set FG06M001.XPLCD cursor, bold; /* Highlight*/
          converseLib.validationFailed(118); /* Indicate missing or invalid*/
          ;
        end
        ;
      end
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify that some level was indicated.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.XPLCD == " "    /* If line missing*/
   && FG06M001.XPCCD == " "    /* and cat missing*/
   && FG06M001.SYBSTGNB == " " /* and sty grp missing*/
   && FG06M001.SY1STNBR == " ") /* and style missing*/
    ;
    FG06M001.XPLABRV = " "; /* Abbreviation*/
    FG06M001.XPCABRV = " "; /* Abbreviation*/
    FG06M001.SYBSTGNM = " "; /* style grp name*/
    FG06M001.SY1SSTNM = " "; /* clear style name*/
    FG06M001.SY2CLRID = " "; /* clear color id*/
    FG06M001.SY2CLRAB = " "; /* clear color name*/
    ;
    FFWREC.XXXMODID = "510"; /* Module identification*/
    set FG06M001.XPLCD cursor, bold; /* Highlight*/
    set FG06M001.XPCCD bold; /* Highlight*/
    set FG06M001.SYBSTGNB bold; /* Highlight*/
    set FG06M001.XDMCD bold; /* Highlight*/
    set FG06M001.SY2CLRID bold; /* Highlight*/
    set FG06M001.SY1STNBR bold; /* Highlight*/
    converseLib.validationFailed(178); /* Indicate please enter one of these*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify Date Range*/
   /* ------------------------------------------------------------*/
  ;
  set FFZREC empty; /* Subroutine parameters*/
  ;
  FFZREC.FFZMONTH = 5; /* Beginning month offset*/
  FFZREC.FFZBYYMM = FG06M001.FFZBYYMM; /* Beginning date*/
  FFZREC.FFZEYYMM = FG06M001.FFZEYYMM; /* Ending date*/
  ;
  XSFFS35(); /* Verify the range*/
  ;
   /* ------------------------------------------------------------*/
   /* If not zero return code, indicate missing or invalid.*/
   /* ------------------------------------------------------------*/
  ;
  if (FFZREC.FFZENDRC != "0") /* Ending date error*/
    ;
    FFWREC.XXXMODID = "510"; /* Module identification*/
    set FG06M001.FFZEYYMM cursor, bold; /* Highlight*/
    ;
    if (FFZREC.FFZENDRC == "1") /* No date entered*/
      converseLib.validationFailed(8); /* Required field missing*/
    else
      ;
      if (FFZREC.FFZENDRC == "2") /* Date is invalid*/
        converseLib.validationFailed(17); /* Invalid date entered*/
      else
        ;
        converseLib.validationFailed(151); /* Date is out of range*/
        ;
      end
      ;
    end
    ;
  end
  ;
  if (FFZREC.FFZBEGRC != "0") /* Beginning date error*/
    ;
    FFWREC.XXXMODID = "510"; /* Module identification*/
    set FG06M001.FFZBYYMM cursor, bold; /* Highlight*/
    ;
    if (FFZREC.FFZBEGRC == "1") /* No date entered*/
      converseLib.validationFailed(8); /* Required field missing*/
    else
      ;
      if (FFZREC.FFZBEGRC == "2") /* Date is invalid*/
        converseLib.validationFailed(17); /* Invalid date entered*/
      else
        ;
        converseLib.validationFailed(151); /* Date is out of range*/
        ;
      end
      ;
    end
    ;
  end
  ;
  ;
end // end FG06510

// Select Row - PFHST
Function FG06511()
   /* ------------------------------------------------------------*/
   /* Get Next Row - Style Table*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO5430" ("S ", SQLCA, FG9REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, Return to previous process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/
      ;
      return; /* Return to previous process*/
      ;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FFWREC.XXXMODID = "511"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPFHST01"; /* Table view name*/
  TA1REC.TA1TBLKE = FG9REC.FG9KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06511

// Open  'S1' PFHST
Function FG06512()
   /* ------------------------------------------------------------*/
   /* Select the set of rows from Footwear Forecast Style Table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO5430" ("S1", SQLCA, FG9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, continue to fetch the first selected row.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
     /* NEXT SENTENCE               ; Next sentence*/
    ;
  else
    ;
    /* ------------------------------------------------------------*/
     /* If data not available, post an error message and return.*/
     /* Otherwise, indicate that a system error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
    ;
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "FG06512 SELECT STYLE GROUP SET";
    TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VPFHST01"; /* Table view name*/
    TA1REC.TA1TBLKE = FG9REC.FG9KEY; /* Table key*/
    ;
    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
      ;
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
      ;
      converseLib.validationFailed(47); /* Data in use by another*/
      ;
    else
      ;
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
      ;
      converseLib.validationFailed(1); /* System error occurred*/
      ;
    end
    ;
    FFWREC.XXXMODID = "512"; /* Module identification*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
end // end FG06512

// Fetch 'N1' PFHST
Function FG06513()
   /* ------------------------------------------------------------*/
   /* Fetch the first row from the Footwear Forecast Style Table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO5430" ("N1", SQLCA, FG9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch table row*/
  ;
   /* ------------------------------------------------------------*/
   /* Save the SQL commarea from the fetch.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Commarea from fetch*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful or row not found, continue to close the set.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
     /* NEXT SENTENCE               ; Next sentence*/
    ;
  else
    ;
    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == 100)    /* and row not found*/
      ;
      FG9REC.SYBSTGNM = "??????"; /* Default style group name*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* If data not available, post an error message and return.*/
       /* Otherwise, indicate that a system error has occurred.*/
      /* ------------------------------------------------------------*/
      ;
      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      ;
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "FG06513 FETCH NEXT ROW IN PFHST";
      TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VPFHST01"; /* Table view name*/
      TA1REC.TA1TBLKE = FG9REC.FG9KEY; /* Table key*/
      ;
      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
        ;
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
                                   /* Error diagnosis routine*/
        ;
        converseLib.validationFailed(47); /* Data in use by another*/
        ;
      else
        ;
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
        ;
        converseLib.validationFailed(1); /* System error occurred*/
        ;
      end
      ;
      FFWREC.XXXMODID = "513"; /* Module identification*/
      ;
      exit stack; /* Exit to display map*/
      ;
    end
    ;
  end
  ;
end // end FG06513

// Close 'C1' PFHST
Function FG06514()
   /* ------------------------------------------------------------*/
   /* Close the set of rows from Production Style/Color Table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO5430" ("C1", SQLCA, FG9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, restore SQLCA and return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    /* ------------------------------------------------------------*/
     /* Restore the SQL commarea from the fetch.*/
    /* ------------------------------------------------------------*/
    ;
    SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* Commarea from fetch*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FG06514 CLOSE STYLE GROUP SET";
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPFHST01"; /* Table view name*/
  TA1REC.TA1TBLKE = FG9REC.FG9KEY; /* Table key*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  FFWREC.XXXMODID = "514"; /* Module identification*/
  converseLib.validationFailed(1); /* System error occurred*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06514

// Verify Relationships
Function FG06520()
   /* ------------------------------------------------------------*/
   /* Verify that key is in FFXRF.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum == 0) /* If there are no errors*/
    ;
    /* ------------------------------------------------------------*/
     /* Clear the row storage area.*/
    /* ------------------------------------------------------------*/
    ;
    set FF2REC empty; /* clear DFCAST.VFFXRF01 record.*/
    ;
    /* ------------------------------------------------------------*/
     /* Format keys for call to DFCAST.VFFXRF01.*/
    /* ------------------------------------------------------------*/
    ;
    if (FG06M001.XPCCD == " ") /* category not entered*/
      FF2REC.XPCCD = "*"; /* category*/
    else
      FF2REC.XPCCD = FG06M001.XPCCD; /* category*/
    end
    ;
    if (FG06M001.XPLCD == " ") /* line not entered*/
      FF2REC.XPLCD = "*"; /* line*/
    else
      FF2REC.XPLCD = FG06M001.XPLCD; /* line*/
    end
    ;
    FF2REC.YSMXDV = "*"; /* division*/
    ;
    if (FG06M001.YPGCD == " ") /* type grp not entered*/
      FF2REC.YPGCD = "*"; /* type grp*/
    else
      FF2REC.YPGCD = FG06M001.YPGCD; /* type grp*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* Select the row to display from the table.*/
    /* ------------------------------------------------------------*/
    ;
    FG06521(); /* Open cursor for DFCAST.VFFXRF01*/
    ;
    FG06522(); /* fetch FFXRF*/
    ;
    /* ------------------------------------------------------------*/
     /* If successful, close FFXRF.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE != 0) /* Row not found code*/
      ;
      /* ------------------------------------------------------------*/
       /* If not found, indicate invalid.*/
      /* ------------------------------------------------------------*/
      ;
      FFWREC.XXXMODID = "520"; /* Module identification*/
      if (FG06M001.XPCCD != " ") /* category entered*/
        set FG06M001.XPCCD bold; /* set cursor*/
      end
      set FG06M001.YPGCD bold; /* Highlight*/
      if (FG06M001.XPLCD != " ") /* line entered*/
        set FG06M001.XPLCD cursor, bold; /* set cursor*/
      end
      converseLib.validationFailed(203); /* Indicate invalid relationship*/
      ;
    else
      ;
      if (FG06M001.XPCCD != " ") /* category entered*/
        FG06M001.XPLCD = FF2REC.XPLCD; /* save line code*/
        if (FF2REC.XPLCD in XPLTBL.XPLCD)
          FG06M001.XPLABRV = XPLTBL.XPLABRV[sysVar.arrayIndex];
        end
        ;
        if (FG06M001.YPGCD != "*") /* If type not wildcard*/
          FG06M001.YPGCD = FF2REC.YPGCD; /* save type code*/
          if (FF2REC.YPGCD in YPGTBL.YPGCD)
            FG06M001.YPGABRV = YPGTBL.YPGABRV[sysVar.arrayIndex];
          end
        end
        ;
      end
    end
    ;
    FG06523(); /* close cursor*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If Style/Color entered, verify that key is in PFHST.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.SY1STNBR != " " /* style nbr entered*/
   && converseVar.validationMsgNum == 0) /* If there are no errors*/
    ;
    /* ------------------------------------------------------------*/
     /* Clear the row storage area.*/
    /* ------------------------------------------------------------*/
    ;
    set FG9REC empty; /* clear DFCAST.VPFHST01 record.*/
    ;
    /* ------------------------------------------------------------*/
     /* Format keys for call to DFCAST.VPFHST01.*/
    /* ------------------------------------------------------------*/
    ;
    FG9REC.SY1STNBR = FG06M001.SY1STNBR; /* style nbr*/
    FG9REC.SY2CLRID = FG06M001.SY2CLRID; /* color id*/
    FG9REC.XDMCD = FG06M001.XDMCD; /* dimension*/
    FG9REC.YSMXDV = "10"; /* division grp*/
    ;
    /* ------------------------------------------------------------*/
     /* Select the row to display from the table.*/
    /* ------------------------------------------------------------*/
    ;
    FG06511(); /* Fetch row - DFCAST.Vpfhst01*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      ;
      if (FG06M001.SYBSTGNB != " " /* style group entered*/
       && FG9REC.SYBSTGNB != FG06M001.SYBSTGNB) /* style grp nbr*/
        FFWREC.XXXMODID = "520"; /* Module identification*/
        set FG06M001.XDMCD bold; /* Highlight*/
        set FG06M001.SY2CLRID bold; /* Highlight*/
        set FG06M001.SY1STNBR bold; /* Highlight*/
        set FG06M001.SYBSTGNB bold; /* Highlight*/
        converseLib.validationFailed(203); /* Indicate invalid relationship*/
      end
      ;
      if (FG06M001.XPCCD != " " /* cat cd entered*/
       && FG9REC.XPCCD != FG06M001.XPCCD) /* category*/
        FFWREC.XXXMODID = "520"; /* Module identification*/
        set FG06M001.XDMCD bold; /* Highlight*/
        set FG06M001.SY2CLRID bold; /* Highlight*/
        set FG06M001.SY1STNBR bold; /* Highlight*/
        set FG06M001.XPCCD cursor, bold; /* Highlight*/
        converseLib.validationFailed(203); /* Indicate invalid relationship*/
      end
      ;
      if (FG06M001.XPLCD != " " /* line cd entered*/
       && FG9REC.XPLCD != FG06M001.XPLCD) /* line*/
        FFWREC.XXXMODID = "520"; /* Module identification*/
        set FG06M001.XDMCD bold; /* Highlight*/
        set FG06M001.SY2CLRID bold; /* Highlight*/
        set FG06M001.SY1STNBR bold; /* Highlight*/
        set FG06M001.XPLCD cursor, bold; /* Highlight*/
        converseLib.validationFailed(203); /* Indicate invalid relationship*/
      end
      ;
      if (FG06M001.YPGCD != " " /* type cd entered*/
       && FG9REC.YPGCD != FG06M001.YPGCD) /* type*/
        FFWREC.XXXMODID = "520"; /* Module identification*/
        set FG06M001.XDMCD bold; /* Highlight*/
        set FG06M001.SY2CLRID bold; /* Highlight*/
        set FG06M001.SY1STNBR bold; /* Highlight*/
        set FG06M001.YPGCD cursor, bold; /* Highlight*/
        converseLib.validationFailed(203); /* Indicate invalid relationship*/
      end
      ;
    else
      ;
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
        ;
        /* ------------------------------------------------------------*/
         /* If not found, try NIL*/
        /* ------------------------------------------------------------*/
        ;
        FG9REC.YSMXDV = "20"; /* division grp*/
        ;
        FG06511(); /* Fetch row - DFCAST.VPFHST01*/
        ;
        if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
          ;
          if (FG06M001.SYBSTGNB != " " /* style group entered*/
           && FG9REC.SYBSTGNB != FG06M001.SYBSTGNB) /* style grp nbr*/
            FFWREC.XXXMODID = "520"; /* Module identification*/
            set FG06M001.XDMCD bold; /* Highlight*/
            set FG06M001.SY2CLRID bold; /* Highlight*/
            set FG06M001.SY1STNBR bold; /* Highlight*/
            set FG06M001.SYBSTGNB bold; /* Highlight*/
            converseLib.validationFailed(203); /* Indicate invalid relationship*/
          end
          ;
          if (FG06M001.XPCCD != " " /* cat cd entered*/
           && FG9REC.XPCCD != FG06M001.XPCCD) /* category*/
            FFWREC.XXXMODID = "520"; /* Module identification*/
            set FG06M001.XDMCD bold; /* Highlight*/
            set FG06M001.SY2CLRID bold; /* Highlight*/
            set FG06M001.SY1STNBR bold; /* Highlight*/
            set FG06M001.XPCCD cursor, bold; /* Highlight*/
            converseLib.validationFailed(203); /* Indicate invalid relationship*/
          end
          ;
          if (FG06M001.XPLCD != " " /* line cd entered*/
           && FG9REC.XPLCD != FG06M001.XPLCD) /* line*/
            FFWREC.XXXMODID = "520"; /* Module identification*/
            set FG06M001.XDMCD bold; /* Highlight*/
            set FG06M001.SY2CLRID bold; /* Highlight*/
            set FG06M001.SY1STNBR bold; /* Highlight*/
            set FG06M001.XPLCD cursor, bold; /* Highlight*/
            converseLib.validationFailed(203); /* Indicate invalid relationship*/
          end
          ;
          if (FG06M001.YPGCD != " " /* type cd entered*/
           && FG9REC.YPGCD != FG06M001.YPGCD) /* type*/
            FFWREC.XXXMODID = "520"; /* Module identification*/
            set FG06M001.XDMCD bold; /* Highlight*/
            set FG06M001.SY2CLRID bold; /* Highlight*/
            set FG06M001.SY1STNBR bold; /* Highlight*/
            set FG06M001.YPGCD cursor, bold; /* Highlight*/
            converseLib.validationFailed(203); /* Indicate invalid relationship*/
          end
        else
          ;
          FFWREC.XXXMODID = "520"; /* Module identification*/
          set FG06M001.XDMCD bold; /* Highlight*/
          set FG06M001.SY2CLRID bold; /* Highlight*/
          set FG06M001.SY1STNBR cursor, bold; /* Highlight*/
          converseLib.validationFailed(203); /* Indicate invalid relationship*/
          ;
        end
      else
        ;
        FFWREC.XXXMODID = "520"; /* Module identification*/
        set FG06M001.XDMCD bold; /* Highlight*/
        set FG06M001.SY2CLRID bold; /* Highlight*/
        set FG06M001.SY1STNBR cursor, bold; /* Highlight*/
        converseLib.validationFailed(203); /* Indicate invalid relationship*/
        ;
      end
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If Style Group entered, verify that key is in PFHST.*/
   /* ------------------------------------------------------------*/
  ;
  if (FG06M001.SYBSTGNB != " " /* style grp entered*/
   && converseVar.validationMsgNum == 0) /* If there are no errors*/
    ;
    /* ------------------------------------------------------------*/
     /* Clear the row storage area.*/
    /* ------------------------------------------------------------*/
    set FG9REC empty; /* clear DFCAST.VPFHST01 record.*/
    ;
    /* ------------------------------------------------------------*/
     /* Format keys for call to DFCAST.VPFHST01.*/
    /* ------------------------------------------------------------*/
    ;
    FG9REC.SYBSTGNB = FG06M001.SYBSTGNB; /* style grp nbr*/
    FG9REC.YPGCD = FG06M001.YPGCD; /* type grp nbr*/
    FG9REC.YSMXDV = "10"; /* div group*/
    ;
    TA1REC.TA1PGMNM = "FG06520"; /* Calling process*/
    ;
    /* ------------------------------------------------------------*/
     /* Select the row to display from the table.*/
    /* ------------------------------------------------------------*/
    ;
    FG06W00.FG06WFND = "N";
    FG06512(); /* Open pfhst cursor for style group*/
    FG06513(); /* Fetch next row in cursor*/
    ;
    FG06W00.FG06WFND = "N";
    while (SQLCA.VAGen_SQLCODE != +100 /* until end of cursor*/
     && FG06W00.FG06WFND == "N") /* or row is found*/
      if (FG06M001.XPCCD == FG9REC.XPCCD)
        FG06W00.FG06WFND = "Y";
      else
        FG06513();
      end
      ;
    end
    ;
    FG06514(); /* Close the cursor*/
    ;
    /* ------------------------------------------------------------*/
     /* If not successful, try NIL.*/
    /* ------------------------------------------------------------*/
    ;
    if (FG06W00.FG06WFND == "N") /* Row not found*/
      ;
      FG9REC.YSMXDV = "20"; /* div group*/
      FG06W00.FG06WFND = "N";
      FG06512(); /* Open pfhst cursor for style group*/
      FG06513(); /* Fetch next row in cursor*/
      ;
      FG06W00.FG06WFND = "N";
      while (SQLCA.VAGen_SQLCODE != +100 /* until end of cursor*/
       && FG06W00.FG06WFND == "N") /* or row is found*/
        if (FG06M001.XPCCD == FG9REC.XPCCD)
          FG06W00.FG06WFND = "Y";
        end
        ;
        FG06513();
        ;
      end
      ;
      FG06514(); /* Close the cursor*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If row found, verify relationship.*/
    /* ------------------------------------------------------------*/
    ;
    if (FG06W00.FG06WFND == "Y") /* Row found*/
      ;
      if (FG06M001.XPCCD != " "
      
       && FG9REC.XPCCD != FG06M001.XPCCD) /* category*/
        FFWREC.XXXMODID = "520"; /* Module identification*/
        set FG06M001.SYBSTGNB bold; /* Highlight*/
        set FG06M001.XPCCD cursor, bold; /* Highlight*/
        converseLib.validationFailed(203); /* Indicate invalid relationship*/
      end
      ;
      if (FG06M001.XPLCD != " "
       && FG9REC.XPLCD != FG06M001.XPLCD) /* line*/
        FFWREC.XXXMODID = "520"; /* Module identification*/
        set FG06M001.SYBSTGNB bold; /* Highlight*/
        set FG06M001.XPLCD cursor, bold; /* Highlight*/
        converseLib.validationFailed(203); /* Indicate invalid relationship*/
      end
      ;
    else
      ;
      FFWREC.XXXMODID = "520"; /* Module identification*/
      set FG06M001.SYBSTGNB bold; /* Highlight*/
      set FG06M001.YPGCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(203); /* Indicate invalid relationship*/
      ;
    end
    ;
  end
  ;
end // end FG06520

// Open FFXRF
Function FG06521()
   /* ------------------------------------------------------------*/
   /* Open FFXRF*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4000" ("S1", SQLCA, FF2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      ;
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FFWREC.XXXMODID = "521"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* 'Resources unavailable'*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(01); /* 'Error - Please nofity programming'*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OPEN CURSOR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFFXRF01"; /* Table view name*/
  TA1REC.TA1TBLKE = FF2REC.FF2KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06521

// Fetch FFXRF
Function FG06522()
   /* ------------------------------------------------------------*/
   /* Fetch Next Row Xref Table*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4000" ("N1", SQLCA, FF2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, Return to previous process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FFWREC.XXXMODID = "522"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFFXRF01"; /* Table view name*/
  TA1REC.TA1TBLKE = FF2REC.FF2KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06522

// Close Cursor - FFXRF
Function FG06523()
   /* ------------------------------------------------------------*/
   /* Close FFXRF*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4000" ("C1", SQLCA, FF2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  FFWREC.XXXMODID = "523"; /* Module identification*/
  converseLib.validationFailed(01); /* 'Error - Please nofity programming'*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE CURSOR";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFFXRF01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06523

// Process valid input request
Function FG06600()
   /* ------------------------------------------------------------*/
   /* Save the fields that were entered by the user.*/
   /* ------------------------------------------------------------*/
  ;
  FG06W00.FG06WSWF = "Y"; /* Format the map switch*/
  ;
  FFWREC.FFABEGMO = FFZREC.FFZBEGMO; /* beg month*/
  FFWREC.FFAENDMO = FFZREC.FFZENDMO; /* end month*/
  FG06W01.FFZBYYMM = FG06M001.FFZBYYMM; /* beg month*/
  FG06W01.FFZEYYMM = FG06M001.FFZEYYMM; /* end month*/
  FFWREC.XPLCD = FG06M001.XPLCD; /* line code*/
  FFWREC.XPLABRV = FG06M001.XPLABRV; /* line abrv*/
  FFWREC.YPGCD = FG06M001.YPGCD; /* type code*/
  FFWREC.YPGABRV = FG06M001.YPGABRV; /* type abrv*/
  FFWREC.XPCCD = FG06M001.XPCCD; /* category code*/
  FFWREC.XPCABRV = FG06M001.XPCABRV; /* category abrv*/
  FFWREC.SYBSTGNB = FG06M001.SYBSTGNB; /* style group nbr*/
  FFWREC.SYBSTGNM = FG06M001.SYBSTGNM; /* style group name*/
  FFWREC.SY1STNBR = FG06M001.SY1STNBR; /* style nbr*/
  FFWREC.SY1SSTNM = FG06M001.SY1SSTNM; /* style name*/
  FFWREC.SY2CLRID = FG06M001.SY2CLRID; /* color id*/
  FFWREC.SY2CLRAB = FG06M001.SY2CLRAB; /* color abrv*/
  FFWREC.XDMCD = FG06M001.XDMCD; /* dimension code*/
  FG06W01.FG06MSJS = FG06M001.FG06MSJS; /* submit job switch*/
  FG06W01.FG06MVSW = FG06M001.FG06MVSW; /* LRPS submit job switch*/
  ;
   /* ------------------------------------------------------------*/
   /* If Submit Job Switch eq 'y' and key has changed, submit*/
   /* the JCL to run the batch job.*/
   /* ------------------------------------------------------------*/
  ;
  if (FFZREC.FFZBEGMO != FG06W02.FFZBEGMO   /* beg month changed*/
   || FFZREC.FFZENDMO != FG06W02.FFZENDMO   /* end month changed*/
   || FG06M001.XPLCD != FG06W02.XPLCD       /* Product line changed*/
   || FG06M001.YPGCD != FG06W02.YPGCD       /* or type group changed*/
   || FG06M001.XPCCD != FG06W02.XPCCD       /* or category changed*/
   || FG06M001.SYBSTGNB != FG06W02.SYBSTGNB /* or style group changed*/
   || FG06M001.SY1STNBR != FG06W02.SY1STNBR /* or style changed*/
   || FG06M001.SY2CLRID != FG06W02.SY2CLRID /* or color changed*/
   || FG06M001.XDMCD != FG06W02.XDMCD)      /* or dimension changed*/
    ;
    if (FG06W01.FG06MSJS == "Y") /* Submit Job*/
      if (FG06W01.FG06MVSW == "N") /* Don't submit LRPS job*/
        if ((FG06M001.YPGCD == "*" /* all lines all types*/
         && FG06M001.XPLCD == "*") 
         || (FG06M001.YPGCD == "*" /* all types / equip*/
         && FG06M001.XPLCD == "11"))
          if (FG06W01.FG06WLSW == "Y") /* dont submit LRPS job confirmed*/
            FG06610(); /* Submit a batch job*/
            FG06W01.FG06MSJS = "N"; /* submit job switch*/
            FG06W01.FG06WLSW = "N"; /* LRPS confirm switch*/
          else
            FFWREC.XXXMODID = "600"; /* Module identification*/
            converseLib.validationFailed(436); /* confirm LRPS will not be submitted*/
            FG06W01.FG06WLSW = "Y"; /* confirm lrps submit flag*/
            set FG06M001.FG06MVSW cursor; /* set cursor*/
          end
        else
          FG06610(); /* Submit a batch job*/
          FG06W01.FG06MSJS = "N"; /* submit job switch*/
          FG06W01.FG06WLSW = "N"; /* LRPS confirm switch*/
        end
      else
        if (FG06W01.FG06MVSW == "Y") /* submit LRPS job*/
  /* FG06S02;                 /* read vpshdr01*/
  /* IF FG06W00.FG06WFLG = 'Y';*/
  /* MOVE '500' TO FFWREC.XXXMODID;/* Module identification*/
  /* MOVE 520 TO EZEMNO;    /* confirm LRPS will  be submitted*/
  /* MOVE 'N' TO FG06W01.FG06WLSW;/* confirm lrps submit flag*/
  /* SET FG06M001.FG06MVSW CURSOR;/* set cursor*/
  /* EZERTN;*/
  /* ELSE;*/
  /* ;*/
  /* END;*/
          if (FG06W01.FG06WLSW == "Y") /* submit LRPS job confirmed*/
            FG06620(); /* Submit a batch job*/
            FG06W01.FG06MSJS = "N"; /* submit job switch*/
            FG06W01.FG06MVSW = "N"; /* submit LRPS job*/
            FG06W01.FG06WLSW = "N"; /* LRPS confirm switch*/
          else
            FFWREC.XXXMODID = "500"; /* Module identification*/
            converseLib.validationFailed(435); /* confirm LRPS will  be submitted*/
            FG06W01.FG06WLSW = "Y"; /* confirm lrps submit flag*/
            set FG06M001.FG06MVSW cursor; /* set cursor*/
          end
        end
      end
    else
      FFWREC.XXXMODID = "600"; /* Module identification*/
      converseLib.validationFailed(302); /* Switch must be 'Y' to prcs*/
      set FG06M001.FG06MSJS cursor; /* set cursor*/
      ;
      exit stack; /* Exit to display map*/
      ;
    end
    ;
  else
    ;
    if (FG06M001.FG06MSJS == "Y") /* Submit Job*/
      ;
      FFWREC.XXXMODID = "600"; /* Module identification*/
      FFWREC.XXXMSGNO = 313; /* Forecast already submitted*/
      ;
    end
    ;
  end
  ;
end // end FG06600

// Submit a batch job
Function FG06610()
  ;
   /* ------------------------------------------------------------*/
   /* Call sub-routine to find which environment*/
   /* the program is executing in, development*/
   /* or production.*/
   /* ------------------------------------------------------------*/
  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN ";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)          /* Good return code*/
    if (TA3REC.TA3RGNID == "03") /* if on production system*/
      FG06611(); /* format production jcl*/
    else
      FG06612(); /* format development jcl*/
    end
  else
    ;
    FFWREC.XXXMODID = "610"; /* module identification*/
    FFWREC.XXXMSGNO = 87; /* Error encountered with print request*/
    exit stack;
  end
  ;
end // end FG06610

// Submit prod JCL FF7201
Function FG06611()
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FG06T.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      FG06W02.YPGCD = FG06M001.YPGCD; /* Type group*/
      FG06W02.XPLCD = FG06M001.XPLCD; /* Product line*/
      FG06W02.XPCCD = FG06M001.XPCCD; /* Category*/
      FG06W02.SYBSTGNB = FG06M001.SYBSTGNB; /* Style group*/
      FG06W02.SY1STNBR = FG06M001.SY1STNBR; /* Style number*/
      FG06W02.SY2CLRID = FG06M001.SY2CLRID; /* Color id*/
      FG06W02.XDMCD = FG06M001.XDMCD; /* Dimension code*/
      FG06W02.FFZBEGMO = FFZREC.FFZBEGMO; /* Actual buy month*/
      FG06W02.FFZENDMO = FFZREC.FFZENDMO; /* Actual buy month*/
      FG06W02.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FG06W02.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FG06T.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FG06T.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FG06T.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  FFWREC.XXXMODID = "611"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FFWREC.XXXMSGNO = 76; /* Indicate job was submitted*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.validationFailed(1); /* Indicate system error*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06611

// Submit test JCL FF7201
Function FG06612()
   /* submit test JCL*/
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FG06T5O.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      FG06W02.YPGCD = FG06M001.YPGCD; /* Type group*/
      FG06W02.XPLCD = FG06M001.XPLCD; /* Product line*/
      FG06W02.XPCCD = FG06M001.XPCCD; /* Category*/
      FG06W02.SYBSTGNB = FG06M001.SYBSTGNB; /* Style group*/
      FG06W02.SY1STNBR = FG06M001.SY1STNBR; /* Style number*/
      FG06W02.SY2CLRID = FG06M001.SY2CLRID; /* Color id*/
      FG06W02.XDMCD = FG06M001.XDMCD; /* Dimension code*/
      FG06W02.FFZBEGMO = FFZREC.FFZBEGMO; /* Actual buy month*/
      FG06W02.FFZENDMO = FFZREC.FFZENDMO; /* Actual buy month*/
      FG06W02.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FG06W02.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FG06T5O.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FG06T5O.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FG06T5O.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  FFWREC.XXXMODID = "612"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FFWREC.XXXMSGNO = 76; /* Indicate job was submitted*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.validationFailed(1); /* Indicate system error*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06612

// Submit LRPS & Prdctn Fcst
Function FG06620()
  ;
   /* ------------------------------------------------------------*/
   /* Call sub-routine to find which environment*/
   /* the program is executing in, development*/
   /* or production.*/
   /* ------------------------------------------------------------*/
  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN ";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)          /* Good return code*/
    if (TA3REC.TA3RGNID == "03") /* if on production system*/
      FG06621(); /* format production jcl*/
    else
      FG06622(); /* format development jcl*/
    end
  else
    ;
    FFWREC.XXXMODID = "620"; /* module identification*/
    FFWREC.XXXMSGNO = 87; /* Error encountered with print request*/
    exit stack;
  end
  ;
end // end FG06620

// Submit prod JCL FF7202
Function FG06621()
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FG06T2.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      FG06W02.YPGCD = FG06M001.YPGCD; /* Type group*/
      FG06W02.XPLCD = FG06M001.XPLCD; /* Product line*/
      FG06W02.XPCCD = FG06M001.XPCCD; /* Category*/
      FG06W02.SYBSTGNB = FG06M001.SYBSTGNB; /* Style group*/
      FG06W02.SY1STNBR = FG06M001.SY1STNBR; /* Style number*/
      FG06W02.SY2CLRID = FG06M001.SY2CLRID; /* Color id*/
      FG06W02.XDMCD = FG06M001.XDMCD; /* Dimension code*/
      FG06W02.FFZBEGMO = FFZREC.FFZBEGMO; /* Actual buy month*/
      FG06W02.FFZENDMO = FFZREC.FFZENDMO; /* Actual buy month*/
      FG06W02.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FG06W02.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FG06T2.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FG06T2.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FG06T2.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  FFWREC.XXXMODID = "621"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FFWREC.XXXMSGNO = 76; /* Indicate job was submitted*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.validationFailed(1); /* Indicate system error*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06621

// Submit test JCL FF7202
Function FG06622()
   /* submit test JCL*/
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (FG06T51.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      FG06W02.YPGCD = FG06M001.YPGCD; /* Type group*/
      FG06W02.XPLCD = FG06M001.XPLCD; /* Product line*/
      FG06W02.XPCCD = FG06M001.XPCCD; /* Category*/
      FG06W02.SYBSTGNB = FG06M001.SYBSTGNB; /* Style group*/
      FG06W02.SY1STNBR = FG06M001.SY1STNBR; /* Style number*/
      FG06W02.SY2CLRID = FG06M001.SY2CLRID; /* Color id*/
      FG06W02.XDMCD = FG06M001.XDMCD; /* Dimension code*/
      FG06W02.FFZBEGMO = FFZREC.FFZBEGMO; /* Actual buy month*/
      FG06W02.FFZENDMO = FFZREC.FFZENDMO; /* Actual buy month*/
      FG06W02.CAUSERID = COMMAREA.CAUSERID; /* User id*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FG06W02.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FG06T51.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FG06T51.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FG06T51.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online msg switch*/
  ;
  XPTA0P(); /* Print Request Subroutine*/
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  FFWREC.XXXMODID = "622"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    FFWREC.XXXMSGNO = 76; /* Indicate job was submitted*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.validationFailed(1); /* Indicate system error*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FG06622

//*** RECORD=FG06W00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FG06W00 type basicRecord
  10 FG06WSWF FG06WSWF ; 
  10 FG06WSWZ FG06WSWZ ; 
  10 FG06WSWT FG06WSWT ; 
  10 FG06WIXM FG06WIXM ; 
  10 FFABEGMO FFABEGMO ; 
  10 FFQMBYMO FFQMBYMO ; 
  10 FF1FUTDT FF1FUTDT ; 
  10 FG06WBYM FG06WBYM ; 
  10 XWSCD XWSCD ; 
  10 FG06WFND FG06WFND ; 
  10 FG06WBEG FG06WBEG ; 
    15 FG06WBCC FG06WBCC ; 
    15 FG06WBDT FG06WBDT ; 
      20 FG06WBYY FG06WBYY ; 
      20 FG06WBMM FG06WBMM ; 
  10 FG06WEND FG06WEND ; 
    15 FG06WECC FG06WECC ; 
    15 FG06WEDT FG06WEDT ; 
      20 FG06WEYY FG06WEYY ; 
      20 FG06WEMM FG06WEMM ; 
  10 FG06WCUR FG06WCUR ; 
    15 FG06WCCC FG06WCCC ; 
    15 FG06WCYY FG06WCYY ; 
    15 FG06WCMM FG06WCMM ; 
  10 FG06WSDT FG06WSDT ; 
    15 FG06WSYY FG06WSYY ; 
    15 FG06WSMM FG06WSMM ; 
    15 FG06WSDD FG06WSDD ; 
  10 FG06WFLG FG06WFLG ; 
end // end FG06W00

//*** RECORD=FG06W01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record FG06W01 type basicRecord
  10 SY1SSTNM SY1SSTNM ; 
  10 SY2CLRAB SY2CLRAB ; 
  10 FFZBYYMM FFZBYYMM ; 
  10 FFZEYYMM FFZEYYMM ; 
  10 FG06MSJS FG06MSJS ; 
  10 FG06WLSW FG06WLSW ; 
  10 FG06MLSW FG06MLSW ; 
  10 FG06MVSW FG06MVSW ; 
end // end FG06W01

//*** RECORD=FG06W02 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FG06W02 type basicRecord
  10 TARJCL TARJCL ; 
    15 YPGCD YPGCD ; 
    15 XPLCD XPLCD ; 
    15 XPCCD XPCCD ; 
    15 SYBSTGNB SYBSTGNB ; 
    15 SY1STNBR SY1STNBR ; 
    15 SY2CLRID SY2CLRID ; 
    15 XDMCD XDMCD ; 
    15 FFZBEGMO FFZBEGMO ; 
    15 FFZENDMO FFZENDMO ; 
    15 CAUSERID CAUSERID ; 
    15 * char(37) ; 
end // end FG06W02

// submit job switch
DataItem FG06MLSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// submit job switch
DataItem FG06MSJS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FG06MVSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Century
DataItem FG06WBCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

DataItem FG06WBDT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WBEG num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WBMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// date range beg month
DataItem FG06WBYM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WBYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Century
DataItem FG06WCCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

DataItem FG06WCMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WCUR num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WCYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Century
DataItem FG06WECC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

DataItem FG06WEDT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WEMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WEND num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WEYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WFLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record found switch
DataItem FG06WFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Season index
DataItem FG06WIXM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// submit job switch
DataItem FG06WLSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FG06WSDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WSDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FG06WSMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FG06WSWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// First time switch
DataItem FG06WSWT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Tentative buy qty zero flag
DataItem FG06WSWZ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FG06WSYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

