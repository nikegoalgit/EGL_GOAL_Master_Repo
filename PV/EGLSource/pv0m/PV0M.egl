package pv0m;

import corpcom2.XSRREC;
import corpcom3.XPPV001;
import corpcom4.XSEXIT;
import corpcom4.XSPVS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import pv.common.PVAREC;
import pv.common.PVBREC;
import pv.common.PVOREC;
import pv.common.PVUREC;
import pv.common.PVXREC;
import pv.common.PVYREC;
import pv.common.PVZREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
//*** PROGRAM=PV0M ****
// ************************************************************
// *
// *   PV0I - Invoice Header and Line Item Inquiry
// *
// *   This application will be used to display on-line
// *   the invoice and its associated line items.
// *
// ************************************************************
// * Maintenance History
// *
// *Rev #    Date    Prgrmr  Remarks
// *-----  --------  ------  ----------------------------------
// *       03-27-91  HVARGA  Initial Construction
// *       10-11-99  GDECKE  ADD MENU OPTION 9 FOR FACTORY
// *                         INVOICE ADD AND MAINTENANCE.
// *       03-01-00  JKUNDU  CHANGED IN XSPVS60 - Transfer
// *                         should go back to PV0B if PF3 IS
// *                         pressed in PV0D.
// ************************************************************
// *********************
Program PV0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PVAREC PVAREC; // record
  PVBREC PVBREC; // record
  PVOREC PVOREC; // record
  PVUREC PVUREC; // record
  PVXREC PVXREC; // record
  PVYREC PVYREC; // record
  PVZREC PVZREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  XSRREC XSRREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PV0MM.PV0MM100 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    PV0M000: PV0M000();
  end // end main
end // end PV0M

// PROCESS  Main Logic
Function PV0M000()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **            PV0M    M a i n    L o g i c                ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  PV0M001(); /* Initialization Logic*/
  ;
  while (PVUREC.PVUENDOA == "N")
    PV0M100(); /* Converse PV0MM100*/
    PV0M110(); /* Check PF Keys*/
    PV0M120(); /* Check OPTIONs*/
    PV0M130(); /* Determine Next Action*/
  end
  ;
  exit program;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0M000  ****/
end // end PV0M000

// INIT     Routine
Function PV0M001()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **            Initialization   L o g i c                  ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  set PVXREC empty;
  set TA2REC empty;
  set XSRREC empty;
  set PV0MM100 initial;
  XSPVS01(); /* PV COMMON Init*/
  ;
    /* Get System Date and Time*/
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  PV0MM100.TA2GRGB = TA2REC.TA2GRGB;
  PV0MM100.TA2TIMED = TA2REC.TA2TIMED;
  ;
  if (COMMAREA.CAITEM == " ") /* Check Passed OPTION*/
     /* next sentence*/
  else
    PV0MM100.PVUCHOIC = COMMAREA.CAITEM;
  end
  ;
  ;
  return; /* Last Statement*/
  ;
   /* ***  End of PV0M001  ****/
end // end PV0M001

// CONVERSE IVC HD Inquiry Screen
Function PV0M100()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **       Converse PV Menu Screen                          ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  PV0MM100.TA2TIMED = VGVar.currentFormattedTime;
  ;
  if (COMMAREA.CASECRC == 0)
     /* next sentence*/
  else
    PV0MM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    COMMAREA.CASECRC = 0;
  end
  ;
  converse PV0MM100 ;
  ;
  PVUREC.PVUCHOIC = PV0MM100.PVUCHOIC;
  COMMAREA.CAUSERA = PVUREC.PVUGROUP;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0M100  ****/
end // end PV0M100

// CHECK    PF Keys and Exits
Function PV0M110()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      This will Check for PF Keys and Exit Requests     ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
    /* PF13 NO LONGER ALLOWED - USE OPTION 9 INSTEAD*/
  if (converseVar.eventKey is pf13)
    /* next sentence*/
  else
    XPPV001(); /* Check PV Standard PF Keys*/
  end
  ;
  if (COMMAREA.CASECRC == 0)
    /* PF13 NO LONGER ALLOWED - USE OPTION 9 INSTEAD*/
    if (converseVar.eventKey is pf12)
      PV0MM100.PVUCHOIC = 1;
    /* MOVE 1 TO EZEMNO;*/
    else
      if (converseVar.eventKey is pf14)
        PV0MM100.PVUCHOIC = 2;
      else
        if (converseVar.eventKey is pf15)
          PV0MM100.PVUCHOIC = 3;
        else
          if (converseVar.eventKey is pf16)
            PV0MM100.PVUCHOIC = 4;
          else
            if (converseVar.eventKey is pf17)
              PV0MM100.PVUCHOIC = 5;
            else
              if (converseVar.eventKey is pf18)
                PV0MM100.PVUCHOIC = 6;
              else
                if (converseVar.eventKey is pf19)
                  PV0MM100.PVUCHOIC = 7;
                else
                  if (converseVar.eventKey is pf20)
                    PV0MM100.PVUCHOIC = 8;
                  else
                    if (converseVar.eventKey is pf21)
                      PV0MM100.PVUCHOIC = 9;
                    else
                      if (converseVar.eventKey is enter) /* Check FASTPATH*/
                        if (PV0MM100.PVUCHOIC == "1")
                          PV0MM100.PVUCHOIC = 1;
                        /* MOVE 77 TO EZEMNO;*/
                        else
                          if (PV0MM100.CATOAP == " ")
                            /* next sentence*/
                          else
                            COMMAREA.CATOAP = PV0MM100.CATOAP;
                            COMMAREA.CAITEM = PV0MM100.CAITEM;
                            XSEXIT();
                            PV0MM100.VAGen_EZEMSG = COMMAREA.CAMSG;
                          end
                        end
                      else
                        converseLib.validationFailed(1);
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0M110  ****/
end // end PV0M110

// CHECK    Option Selected
Function PV0M120()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      This will Check for OPTION selected.              ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
   /* MUST USE OPTION 9 TO GET TO PV0A*/
  if (PV0MM100.PVUCHOIC == 1)
    COMMAREA.CATOAP = "PV0R";
  /* MOVE 77 TO EZEMNO;*/
  end
  ;
  if (PV0MM100.PVUCHOIC == 2)
    COMMAREA.CATOAP = "PV0G";
  end
  ;
  if (PV0MM100.PVUCHOIC == 3)
    COMMAREA.CATOAP = "PV0F";
  end
  ;
  if (PV0MM100.PVUCHOIC == 4)
    COMMAREA.CATOAP = "PV0K";
  end
  ;
  if (PV0MM100.PVUCHOIC == 5)
    COMMAREA.CATOAP = "PV0I";
  end
  ;
  if (PV0MM100.PVUCHOIC == 6)
    COMMAREA.CATOAP = "PV0O";
  end
  ;
  if (PV0MM100.PVUCHOIC == 7)
    COMMAREA.CATOAP = "PV0G";
  end
  ;
  if (PV0MM100.PVUCHOIC == 8)
    COMMAREA.CATOAP = "PV0H";
  end
  ;
  if (PV0MM100.PVUCHOIC == 9)
    COMMAREA.CATOAP = "PV0B";
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0M120  ****/
end // end PV0M120

// DECIDE   What to do next
Function PV0M130()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Determine Next Action.                            ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
   /* PF13 NO LONGER ALLOWED - USE OPTION 9*/
   /* OR EZEAID IS PF13*/
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf5
   || converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf17
   || converseVar.eventKey is pf19
   || converseVar.eventKey is pf20
   || converseVar.eventKey is pf21)
    if (PV0MM100.PVUCHOIC >= 1
     && PV0MM100.PVUCHOIC <= 9)
      if (COMMAREA.CATOAP == " ")
         /* Invalid Option Selected*/
        converseLib.validationFailed(77);
      else
        COMMAREA.CAITEM = PV0MM100.CAITEM;
        XSEXIT();
        PV0MM100.VAGen_EZEMSG = COMMAREA.CAMSG;
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0M130  ****/
end // end PV0M130

