package pv0n;
import corpcom2.XX0XW02;
import corpcom2.XZCREC;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPVS52;
import corpcom4.XSPVS57;
import corpcom4.XSPVS98;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.ZZ-CHNG-USER-ID;
import fy.common.FY1REC;
import pc.common.PC-PO-NBR;
import pc.common.PC2REC;
import pc.common.PC3REC;
import pv.common.*;
import sy.common.SY1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VPOITM04;
import vv.common.VPVPMT01;
import vv.common.VXIBGL01;
import xx.common.*;
import xx.common.ZZ-CHNG-CNT;
import xx.common.ZZ-CHNG-DT;
import xx.common.ZZ-CHNG-HHMM;
import xx.common.ZZ-SDT;
import xx02.*;
import xx02.XGP-GPC-CD;
import xx03.*;
import xx03.XIB-IBANK-CD;
//*** PROGRAM=PV0N ****
// ************************************************************
// *
// *   PV0B - Invoice ADD AND MAINTENANCE
// *
// *   This application will be used to display and update
// *   the factory invoice and its associated line items.
// *
// ************************************************************
// * Maintenance History
// *
// *Rev #    Date    Prgrmr  Remarks
// *-----  --------  ------  ----------------------------------
// *       10-07-99  GDECKE  CREATE NEW CSP APPLICATOIN
// *       02-04-00  JKUNDU  VALIDATE VENDOR BEFORE IT TRANSFER
// *                         TO PV0B
// *       02-23-00  JKUNDU  Allow to change the status to FP
// *                         when all the payment records are
// *                         in 'UN' status.
// *       03-20-00  JKUNDU  Change in PV0B-CLEARING-GL and
// *                         PV0B-reversing-GL to populate
// *                         correct GL period.
// *       04-04-00  JKUNDU  Change in PV0B-GET-LC-CODE to
// *                         correct the SELECT options while
// *                         calling the IO mod VPOITM04.
// *       04-17-00  JKUNDU  Change in PV0B-FORCE-PAY AND
// *                         PV0B-VPVPMT01-MAP4 to correct the
// *                         FP logic, added PV0BW05 record.
// *       04-27-00  JKUNDU  Change in PV0B-REVERSING-GL and
// *                         PV0B-CLEARING-GL to reverse the
// *                         sign of amount inserted in GL
// *                         while cancellation.
// ************************************************************
// *********************
Program PV0N type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  PC2REC PC2REC; // record
  PC3REC PC3REC; // record
  PV0BW01 PV0BW01; // record
  PV0BW02 PV0BW02; // record
  PV0BW03 PV0BW03; // record
  PV0BW04 PV0BW04; // record
  PV0BW05 PV0BW05; // record
  PV0NW01 PV0NW01; // record
  PV0NW02 PV0NW02; // record
  PVAREC PVAREC; // record
  PVBREC PVBREC; // record
  PVDREC PVDREC; // record
  PVEREC PVEREC; // record
  PVLREC PVLREC; // record
  PVOREC PVOREC; // record
  PVUREC PVUREC; // record
  PVWREC PVWREC; // record
  PVYREC PVYREC; // record
  PVZREC PVZREC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VCIBNK01 VCIBNK01; // record
  VPOITM04 VPOITM04; // record
  VPVPMT01 VPVPMT01; // record
  VXIBGL01 VXIBGL01; // record
  XX0XW02 XX0XW02; // record
  XZCREC XZCREC; // record
  PV-DIFF-AMT PV-DIFF-AMT;

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PV0BT01 {deleteAfterUse = yes}; // table
  use XFATBL {deleteAfterUse = yes}; // table
  use XIBTBL {deleteAfterUse = yes}; // table
  use PV0NM.PV0NM001,  // forms
      PV0NM.PV0NM005
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    PV0N000: PV0N000();
  end // end main
end // end PV0N

// CHECK    PV Standard PF Keys
Function PV0N-PFKEY-ACTION()

   /* *************************************************************/
   /* ***                                                      ****/
   /* **      CHECK PV PF Keys and Exit Requests                ***/
   /* ***                                                      ****/
   /* *************************************************************/

  if (converseVar.eventKey is pf1)
    XSPF1();
  else
    if (converseVar.eventKey is pf3)
      PV0NW01-END-OF-APPL = "Y";
      PVWREC.PVWERRF = "Y";
  /* MOVE PV0NW01.PV-PMT-VEND-NBR TO PVUREC.PV-PMT-VEND-NBR;*/
  /* MOVE PV0NW01.PV-PMT-VEND-IVC-ID TO PVUREC.PV-PMT-VEND-IVC-ID;*/

  /* MOVE PV0NW01.PV-PMT-VEND-GRP TO PVUREC.PV-PMT-VEND-GRP;*/
      COMMAREA.CATOAP = "PV0B";
      COMMAREA.CAUSERA = PVUREC.PVUGROUP;
      XSEXIT();

    else
      if (converseVar.eventKey is pf5)
        if (COMMAREA.CACLVL[3] == "N")
          converseLib.validationFailed(129);
          PVWREC.PVWERRF = "Y";
          return;
        end
        if (PV0NM001.PV-IVC-ADJ-DESC == " ")
          converseLib.validationFailed(243);
          PVWREC.PVWERRF = "Y";
          set PV0NM001.PV-IVC-ADJ-DESC cursor;
          return;
        end
        if (PV0NM001.PV-BANK-FOB-AMT != PV0NW01.PV-BANK-FOB-AMT
         && PV0NM001.PV-IVC-ADJ-DESC != " ")
          set PV0NM001.PV-BANK-FOB-AMT bold, skip;
  /* PV0NW01.PV-ADJ-FOB-AMT = PV0NW01.PV-BANK-FOB-AMT -*/
  /* PV0NM001.PV-BANK-FOB-AMT;*/
          PV0NW01.PV0NW01-FIRST-TIME-FL = "Y";
          converseLib.validationFailed(238);
          return;
        else
          set PV0NM001.PV-BANK-FOB-AMT initialAttributes;
  /* PV0NW01.PV-ADJ-FOB-AMT = PV0NW01.PV-BANK-FOB-AMT -*/
  /* PV0NM001.PV-BANK-FOB-AMT;*/
          converseLib.validationFailed(53);
          return;
        end
        return;
      end
    end
    if (converseVar.eventKey is pf12
     && PV0NW01.PV0NW01-FIRST-TIME-FL == "Y")
      PV0NW01.PV-ADJ-FOB-AMT = PV0NM001.PV-BANK-FOB-AMT -       PV0NW01.PV-BANK-FOB-AMT;
      PV0NS110();
      PVYREC.PVYFNC = "U ";
      PV0NS-VCIBNK01();
      return;
    else
      if (converseVar.eventKey is pf1
       || converseVar.eventKey is pf3
       || converseVar.eventKey is pf5
       || converseVar.eventKey is pf12
       || (converseVar.eventKey is enter
       && PV0NM001.PV-PC-PO-NBR == "?"))
      else
        /* Invalid PF Key*/
        PVUREC.PVUERNBR = 1;
      end
      if ((converseVar.eventKey is enter
       && PV0NM001.PV-PC-PO-NBR == "?"))
        /* Please proceed*/
      else
        if (PV0NM001.PV-IVC-ADJ-FL == "Y")
          converseLib.validationFailed(242);
        else
          converseLib.validationFailed(239);
        end
      end
      return;
    end

  /* EXZZRTN;*/

    return; /* Last Statement*/

  end


   /* ***  End of PV0N-PFKEY-ACTION *********/
end // end PV0N-PFKEY-ACTION

// PROCESS  Main Logic
Function PV0N000()

   /* *************************************************************/
   /* ***                                                      ****/
   /* **            PV0N    M a i n    L o g i c                ***/
   /* ***                                                      ****/
   /* *************************************************************/

  PV0N001(); /* Initialization Logic*/

  PV0N010(); /* BUILD MAP*/

  while (PV0NW01-END-OF-APPL != "Y")
    PV0N100(); /* Converse PV0nM100*/
  end

  exit program;

  return; /* Last Statement*/


   /* ***  End of PV0N000  ****/
end // end PV0N000

Function PV0N001()
  /* XSENTRY;                         /*check security*/
  /* XSSEGTR;                         /*set tran id*/
   /* INITIALIZE WORKING STORAGE*/
  set VCIBNK01 empty;
  set TA2REC empty;
  set PV0NW01 empty;
  set PV0NW02 empty;
  PV0NW01-END-OF-APPL = "Y";
  PV0NW01.PV0NW01-FIRST-TIME-FL = "N";

   /* if control passed from pv0B,*/
  if (COMMAREA.CAFROMAP == "PV0B")
    PVUREC.PVUGROUP = COMMAREA.CAUSERA;
  end
  if (PVUREC.PV-MSA-VEND-NBR != " ")
    PV0BW01.PV-MSA-VEND-NBR = PVUREC.PV-MSA-VEND-NBR;
  end
  if (PVUREC.PV-MSA-VEND-GRP != " ")
    PV0BW01.PV-MSA-VEND-GRP = PVUREC.PV-MSA-VEND-GRP;
  end
  if (PVUREC.PV-IVC-ID != " ")
    PV0BW01.PV-IVC-ID = PVUREC.PV-IVC-ID;
  end
  if (PVUREC.PV-PMT-VEND-NBR != " ")
    PV0BW01.PV-PMT-VEND-NBR = PVUREC.PV-PMT-VEND-NBR;
  end
  if (PVUREC.PV-PMT-VEND-IVC-ID != " ")
    PV0BW01.PV-PMT-VEND-IVC-ID = PVUREC.PV-PMT-VEND-IVC-ID;
  end
  if (PVUREC.PV-PMT-VEND-GRP != " ")
    PV0BW01.PV-PMT-VEND-GRP = PVUREC.PV-PMT-VEND-GRP;
  end
  PV0NS005();
  PV0NW01-END-OF-APPL = "N";
  PV0NW01-FIRST-TIME-FL = "Y";
  VCIBNK01.PV-MSA-VEND-NBR = PV0BW01.PV-MSA-VEND-NBR;
  VCIBNK01.PV-MSA-VEND-GRP = PV0BW01.PV-MSA-VEND-GRP;
  VCIBNK01.PV-IVC-ID = PV0BW01.PV-IVC-ID;
  VCIBNK01.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
  VCIBNK01.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
  VCIBNK01.PV-PMT-VEND-GRP = PV0BW01.PV-PMT-VEND-GRP;
  VCIBNK01.PC-PO-NBR = -1;
end // end PV0N001

Function PV0N010()
  PVYREC.PVYFNC = "S "; /* CALL TO SELECT FROM VCIBNK TABLE*/
  PV0NS-VCIBNK01(); /* IOMOD vcibnk01*/
  PV0NW01.PV-IVC-ID = VCIBNK01.PV-IVC-ID;
  PV0NW01.PV-MSA-VEND-NBR = VCIBNK01.PV-MSA-VEND-NBR;
  PV0NW01.PV-MSA-VEND-GRP = VCIBNK01.PV-MSA-VEND-GRP;
  PV0NW01.PV-IVC-FOB-AMT = VCIBNK01.PV-IVC-FOB-AMT;
  PV0NW01.PV0N-IVC-RCV-DT = VCIBNK01.PV-IVC-RCV-DT;
  PV0NW01.PV-BANK-FOB-AMT = VCIBNK01.PV-BANK-FOB-AMT;
  PV0NW01.PV0N-BANK-RCV-DT = VCIBNK01.PV-BANK-RCV-DT;
  PV0NW01.PV-IVC-ADJ-FL = VCIBNK01.PV-IVC-ADJ-FL;
  PV0NW01.PV-IVC-ADJ-DESC = VCIBNK01.PV-IVC-ADJ-DESC;
  PV0NW01.PV-IVC-RCV-FL = VCIBNK01.PV-IVC-RCV-FL;
   /* Tcs addition begins - 12/27/2000*/
  PV0NW01.PV0N-PC-PO-NBR-NUM = VCIBNK01.PC-PO-NBR;
   /* Tcs addition ends - 12/27/2000*/

end // end PV0N010

// Converse map1
Function PV0N100()
  XSPVS57(); /* Deliver a message*/
  PV0NM001.PV-IVC-ID = PV0NW01.PV-IVC-ID;
  PV0NM001.PV-MSA-VEND-NBR = PV0NW01.PV-MSA-VEND-NBR;
  PV0NM001.PV-MSA-VEND-GRP = PV0NW01.PV-MSA-VEND-GRP;
  PV0NM001.PV-IVC-FOB-AMT = PV0NW01.PV-IVC-FOB-AMT;
  PV0NM001.PV-IVC-DT = PV0NW01.PV0N-IVC-RCV-DT;
  PV0NM001.PV-BANK-RCV-DT = PV0NW01.PV0N-BANK-RCV-DT;

  if (PV0NW02.PV0NW02-CONF-FLAG == "Y")
    PV0NM001.PV-BANK-FOB-AMT = PV0NW02.PV-BANK-FOB-AMT;
    PV0NM001.PV-IVC-ADJ-DESC = PV0NW02.PV-IVC-ADJ-DESC;
  /* MOVE 'Y' TO PV0NM001.PV-IVC-ADJ-FL;*/
  else
    PV0NM001.PV-BANK-FOB-AMT = PV0NW01.PV-BANK-FOB-AMT;
    PV0NM001.PV-IVC-ADJ-DESC = PV0NW01.PV-IVC-ADJ-DESC;
    PV0NM001.PV-IVC-ADJ-FL = PV0NW01.PV-IVC-ADJ-FL;
  end
   /* check included when fob amount is zero  /*****/
  if (PV0NW01.PV-IVC-RCV-FL == "N"
   || PV0NM001.PV-IVC-FOB-AMT == 0)
  /* IF PV0NM001.PV-IVC-FOB-AMT EQ 0;*/

    set PV0NM001.PV-BANK-FOB-AMT skip;
    set PV0NM001.PV-IVC-ADJ-DESC skip;
    set PV0NM001.PV-IVC-ADJ-FL skip;
    set PV0NM001.CATOAP cursor;
    converseLib.validationFailed(245);
    /* EZERTN;*/
    /*  */
  else

  /* IF PV0NM001.PV-IVC-ADJ-FL = 'Y'*/
    if (VCIBNK01.PV-IVC-ADJ-FL == "Y"
     || PV0NW02.PV0NW02-CONF-FLAG == "Y"
     || PV0NM001.PV-IVC-FOB-AMT == PV0NM001.PV-BANK-FOB-AMT)
  /* IF PV0NM001.PV-BANK-FOB-AMT IS MODIFIED;*/
      if (PV0NW01.PV0NW01-FIRST-TIME-FL == "Y"
       || PV0NM001.PV-IVC-ADJ-FL == "Y")
        PV0NM001.PV-IVC-ADJ-FL = "Y";
        if (PV0NM001.PV-IVC-ADJ-DESC != " ")
          set PV0NM001.PV-BANK-FOB-AMT skip, bold;
          set PV0NM001.PV-IVC-ADJ-DESC skip, bold;
          set PV0NM001.CATOAP cursor;
        else
          set PV0NM001.PV-IVC-ADJ-DESC cursor;
        end
      else
        if (PV0NM001.PV-IVC-FOB-AMT == PV0NM001.PV-BANK-FOB-AMT
         && PV0NW02.PV0NW02-CONF-FLAG != "Y")
          set PV0NM001.PV-BANK-FOB-AMT skip;
          set PV0NM001.PV-IVC-ADJ-DESC skip;
          set PV0NM001.CATOAP cursor;
        end

      end
  /* IF PV0NM001.PV-IVC-ADJ-DESC IS AUTOSKIP;*/
  /* ELSE;*/
  /* END;*/
      set PV0NM001.PV-IVC-ADJ-FL skip;
    else
      set PV0NM001.PV-BANK-FOB-AMT initialAttributes;
      set PV0NM001.PV-IVC-ADJ-FL initialAttributes;
      set PV0NM001.PV-IVC-ADJ-DESC initialAttributes;
    end
  end

   /* Tcs addition begins - 12/27/2000*/
  if (converseVar.validationMsgNum == 248)
    /* MOVE ' ' TO PV0NM001.PV-PC-PO-NBR;*/
    set PV0NM001.PV-PC-PO-NBR cursor;
    set PV0NM001.PV-BANK-FOB-AMT skip;
    set PV0NM001.PV-IVC-ADJ-DESC skip;
    set PV0NM001.PV-IVC-ADJ-FL skip;
  else
    PV0NM001.PV-PC-PO-NBR = PV0NW01.PV0N-PC-PO-NBR;
  end

  if (PV0NW02.PV0NW-POP-YES == "Y")
    PV0NS-GET-UNIQUE();
  end
  PVYREC.PVYFNC = "S2";
  PV0NS-GET-TOTAMT();
   /* Tcs addition ends - 12/27/2000*/

  PV-DIFF-AMT = PV0NM001.PV-IVC-FOB-AMT - PV0NM001.PV-BANK-FOB-AMT;
  PV0NM001.PV-ADJ-FOB-AMT = PV-DIFF-AMT;
  converse PV0NM001 ;
  if (PV0NM001.PV-BANK-FOB-AMT != PV0NW01.PV-BANK-FOB-AMT
   || PV0NM001.PV-IVC-ADJ-DESC != PV0NW01.PV-IVC-ADJ-DESC)
    PV0NW02.PV0NW02-CONF-FLAG = "Y";
    PV0NW02.PV-BANK-FOB-AMT = PV0NM001.PV-BANK-FOB-AMT;
    PV0NW02.PV-IVC-ADJ-DESC = PV0NM001.PV-IVC-ADJ-DESC;
  else
    PV0NW02.PV0NW02-CONF-FLAG = "N";
  end
  if (converseVar.eventKey is enter && 
  PV0NM001.PV-PC-PO-NBR == " ")
    converseLib.validationFailed(248);
    return;
  end
  PV0N-PFKEY-ACTION();
   /* Tcs addition begins - 12/27/2000*/
  if (converseVar.eventKey is enter && 
  PV0NM001.PV-PC-PO-NBR == "?")
    PVYREC.PVYFNC = "S ";
    set VCIBNK01 empty;
    VCIBNK01.PV-MSA-VEND-NBR = PV0BW01.PV-MSA-VEND-NBR;
    VCIBNK01.PV-MSA-VEND-GRP = PV0BW01.PV-MSA-VEND-GRP;
    VCIBNK01.PV-IVC-ID = PV0BW01.PV-IVC-ID;
    VCIBNK01.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
    VCIBNK01.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
    VCIBNK01.PV-PMT-VEND-GRP = PV0BW01.PV-PMT-VEND-GRP;
    VCIBNK01.PC-PO-NBR = -1;
    PV0NS-VCIBNK01();
  end
   /* Tcs addition ends - 12/27/2000*/
  return;


  /* END OF PV0N100*/
end // end PV0N100

// Calling VBNKCI01 IOmod
Function PV0NS-GET-TOTAMT()

   /* *************************************************************/
   /* ***                                                      ****/
   /* **               IO Module for Vendor                     ***/
   /* ***                                                      ****/
   /* *************************************************************/

  set SQLCA empty;
  /* ALL VBNKCI01 'S2',SQLCA,VCIBNK01 (NOMAPS,NONCSP;*/
  call "VBNKCI01" (PVYREC, SQLCA, VCIBNK01) {isNoRefresh = yes, isExternal = yes};
  PV0NW02.PV0NWEND = "N";
  PV0NW02.PV0NW-TOT-DIFF-AMT = 0;
  PV0NW02.PV0NW-DIFF-AMT = 0;
  if (SQLCA.VAGen_SQLCODE == 0)
    while (PV0NW02.PV0NWEND == "N")
      PVYREC.PVYFNC = "N2";
      call "VBNKCI01" (PVYREC, SQLCA, VCIBNK01) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 0)
        if (VCIBNK01.PV-IVC-RCV-FL == "Y"
         && VCIBNK01.PV-IVC-RCN-FL == "N")
          PV0NW02.PV0NW-DIFF-AMT = VCIBNK01.PV-IVC-FOB-AMT -           VCIBNK01.PV-BANK-FOB-AMT;
          PV0NW02.PV0NW-TOT-DIFF-AMT = PV0NW02.PV0NW-TOT-DIFF-AMT +           PV0NW02.PV0NW-DIFF-AMT;
        end
      else
        if (SQLCA.VAGen_SQLCODE == 100)
          PV0NW02.PV0NWEND = "Y";
          PV0NM001.PV-TOT-ADJ-FOB-AMT = PV0NW02.PV0NW-TOT-DIFF-AMT;
          PVYREC.PVYFNC = "C2";
          call "VBNKCI01" (PVYREC, SQLCA, VCIBNK01) {isNoRefresh = yes, isExternal = yes};
        else
          if (SQLCA.VAGen_SQLCODE == -911)
            /* Data Base Busy; Retry in a few minutes*/
            PVUREC.PVUERNBR = 44;
          else
            TA1REC.TA1LOC = "PV0NS-GET";
            TA1REC.TA1DBASE = "DPINVC";
            TA1REC.TA1TBLVU = "VBNKCI01";
            TA1REC.TA1TBLKE = PVUREC.PVOVENDR;
            XSPVS52(); /* Invoke DB2 Error Handler*/
          end
        end
      end
    end
  end
   /* ***  End of XPPV980  ****/
end // end PV0NS-GET-TOTAMT

// To get unique PCPO
Function PV0NS-GET-UNIQUE()
  PVYREC.PVYFNC = "S ";
  set VCIBNK01 empty;
  VCIBNK01.PV-MSA-VEND-NBR = PV0BW01.PV-MSA-VEND-NBR;
  VCIBNK01.PV-MSA-VEND-GRP = PV0BW01.PV-MSA-VEND-GRP;
  VCIBNK01.PV-IVC-ID = PV0BW01.PV-IVC-ID;
  VCIBNK01.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
  VCIBNK01.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
  VCIBNK01.PV-PMT-VEND-GRP = PV0BW01.PV-PMT-VEND-GRP;
  PV0NW01.PV0N-PC-PO-NBR = PV0NM001.PV-PC-PO-NBR;
  VCIBNK01.PC-PO-NBR = PV0NW01.PV0N-PC-PO-NBR-NUM;
  PV0NS-VCIBNK01();
  PV0NW01.PV-IVC-ID = VCIBNK01.PV-IVC-ID;
  PV0NW01.PV-MSA-VEND-NBR = VCIBNK01.PV-MSA-VEND-NBR;
  PV0NW01.PV-MSA-VEND-GRP = VCIBNK01.PV-MSA-VEND-GRP;
  PV0NW01.PV-IVC-FOB-AMT = VCIBNK01.PV-IVC-FOB-AMT;
  PV0NW01.PV0N-IVC-RCV-DT = VCIBNK01.PV-IVC-RCV-DT;
  PV0NW01.PV-BANK-FOB-AMT = VCIBNK01.PV-BANK-FOB-AMT;
  PV0NW01.PV0N-BANK-RCV-DT = VCIBNK01.PV-BANK-RCV-DT;
  PV0NW01.PV-IVC-ADJ-FL = VCIBNK01.PV-IVC-ADJ-FL;
  PV0NW01.PV-IVC-ADJ-DESC = VCIBNK01.PV-IVC-ADJ-DESC;
  PV0NW01.PV-IVC-RCV-FL = VCIBNK01.PV-IVC-RCV-FL;
  PV0NW01.PV0N-PC-PO-NBR-NUM = VCIBNK01.PC-PO-NBR;
  PV0NM001.PV-IVC-ID = PV0NW01.PV-IVC-ID;
  PV0NM001.PV-MSA-VEND-NBR = PV0NW01.PV-MSA-VEND-NBR;
  PV0NM001.PV-MSA-VEND-GRP = PV0NW01.PV-MSA-VEND-GRP;
  PV0NM001.PV-IVC-FOB-AMT = PV0NW01.PV-IVC-FOB-AMT;
  PV0NM001.PV-IVC-DT = PV0NW01.PV0N-IVC-RCV-DT;
  PV0NM001.PV-BANK-RCV-DT = PV0NW01.PV0N-BANK-RCV-DT;
  PV0NM001.PV-PC-PO-NBR = PV0NW01.PV0N-PC-PO-NBR;
  PV0NM001.PV-BANK-FOB-AMT = PV0NW01.PV-BANK-FOB-AMT;
  PV0NM001.PV-IVC-ADJ-DESC = PV0NW01.PV-IVC-ADJ-DESC;
  if (VCIBNK01.PV-IVC-ADJ-FL == "Y")
    PV0NM001.PV-IVC-ADJ-FL = "Y";
    converseLib.validationFailed(242);
    set PV0NM001.PV-BANK-FOB-AMT protect, bold;
    set PV0NM001.PV-IVC-ADJ-DESC protect, bold;
    set PV0NM001.CATOAP cursor;
  else
    PV0NM001.PV-IVC-ADJ-FL = "N";
    converseLib.validationFailed(247);
    set PV0NM001.PV-BANK-FOB-AMT normal;
    set PV0NM001.PV-IVC-ADJ-DESC normal;
    set PV0NM001.PV-BANK-FOB-AMT cursor;
  end
end // end PV0NS-GET-UNIQUE

// Calling VBNKCI01 IOmod
Function PV0NS-VCIBNK01()

   /* *************************************************************/
   /* ***                                                      ****/
   /* **               IO Module for Vendor                     ***/
   /* ***                                                      ****/
   /* *************************************************************/

  set SQLCA empty;
  /* ALL VBNKCI01 'S ',SQLCA,VCIBNK01 (NOMAPS,NONCSP;*/
  call "VBNKCI01" (PVYREC, SQLCA, VCIBNK01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0
   && PVYREC.PVYFNC == "S ")
    if (VCIBNK01.PV-BANK-FOB-AMT == VCIBNK01.PV-IVC-FOB-AMT
     || VCIBNK01.PV-IVC-ADJ-FL == "Y")
      PVUREC.PVUERNBR = 242;
    else
        /* Requested Record Found*/
      PVUREC.PVUERNBR = 97;
    end
    PV-CONTROL-OPTION = "N";
    XSPVS98(); /* Save keys in COMMAREA*/
  else
    if (SQLCA.VAGen_SQLCODE == 0
     && PVYREC.PVYFNC == "U ")
        /* Requested Record Found*/
      PVUREC.PVUERNBR = 231;
      XSPVS98(); /* Save keys in COMMAREA*/
    else
      if (SQLCA.VAGen_SQLCODE == 100
       && PVYREC.PVYFNC == "S ")
          /* Requested Record Not Found*/
        PVUREC.PVUERNBR = 98;
        PV0NW01-END-OF-APPL = "Y";
        PVWREC.PVWERRF = "Y";
        PV-CONTROL-OPTION = "Y";
        COMMAREA.CATOAP = "PV0B";
        COMMAREA.CAUSERA = PVUREC.PVUGROUP;
        XSEXIT();
      else
        if (SQLCA.VAGen_SQLCODE == 100
         && PVYREC.PVYFNC == "U ")
            /* Requested Record Not Found*/
          PVUREC.PVUERNBR = 98;
        else
          if (SQLCA.VAGen_SQLCODE == -811)
              /* Multiple Rows Found, Enter Additional Qualifiers*/
            /* Tcs change begins - 12/27/2000*/
            /* MOVE 84 TO PVUREC.PVUERNBR;*/
            PVUREC.PVUERNBR = 248;
            PVYREC.PVYFNC = "S2"; /* CALL TO SELECT FROM VCIBNK*/
            set VCIBNK01 empty;
            VCIBNK01.PV-MSA-VEND-NBR = PV0BW01.PV-MSA-VEND-NBR;
            VCIBNK01.PV-MSA-VEND-GRP = PV0BW01.PV-MSA-VEND-GRP;
            VCIBNK01.PV-IVC-ID = PV0BW01.PV-IVC-ID;
            VCIBNK01.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
            VCIBNK01.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
            VCIBNK01.PV-PMT-VEND-GRP = PV0BW01.PV-PMT-VEND-GRP;
            VCIBNK01.PC-PO-NBR = -1;
            PV0NS-GET-TOTAMT();
            /* Tcs change ends - 12/27/2000*/
          else
            if (SQLCA.VAGen_SQLCODE == -911)
                /* Data Base Busy; Retry in a few minutes*/
              PVUREC.PVUERNBR = 44;
            else
              TA1REC.TA1LOC = "XPPV980";
              TA1REC.TA1DBASE = "DPINVC";
              TA1REC.TA1TBLVU = "VBNKCI01";
              TA1REC.TA1TBLKE = PVUREC.PVOVENDR;
              XSPVS52(); /* Invoke DB2 Error Handler*/
            end
          end
        end
      end
    end
  end

   /* Tcs addition begins - 12/27/2000.*/
  PV0NW02.PV0NW-POP-YES = "N";
  if (PVUREC.PVUERNBR == 248
   && PV0NM001.PV-PC-PO-NBR == "?")
    PVYREC.PVYFNC = "S2"; /* CALL TO SELECT FROM VCIBNK*/
    set VCIBNK01 empty;
    VCIBNK01.PV-MSA-VEND-NBR = PV0BW01.PV-MSA-VEND-NBR;
    VCIBNK01.PV-MSA-VEND-GRP = PV0BW01.PV-MSA-VEND-GRP;
    VCIBNK01.PV-IVC-ID = PV0BW01.PV-IVC-ID;
    VCIBNK01.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
    VCIBNK01.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
    VCIBNK01.PV-PMT-VEND-GRP = PV0BW01.PV-PMT-VEND-GRP;
    VCIBNK01.PC-PO-NBR = -1;
    call "VBNKCI01" (PVYREC, SQLCA, VCIBNK01) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      PV0NW02.PV0NWIDX = 1;
      PVYREC.PVYFNC = "N2"; /* CALL TO FETCH FROM VCIBNK*/
      while (PV0NW02.PV0NWIDX <= 99)
        call "VBNKCI01" (PVYREC, SQLCA, VCIBNK01) {isNoRefresh = yes, isExternal = yes};
        if (SQLCA.VAGen_SQLCODE == 0)
          PV0NW-VBNKCI-GRP[PV0NWIDX] = VBNKCIREC;
          PV0NW02.PV0NWIDX = PV0NW02.PV0NWIDX + 1;
        else
          if (SQLCA.VAGen_SQLCODE == 100)
            PV0NW02.PV0NWIDX = 100;
            PV0NW02.PV0NW-POP-YES = "Y";
            PVYREC.PVYFNC = "C2"; /* CALL TO CLOSE FROM VCIBNK*/
            call "VBNKCI01" (PVYREC, SQLCA, VCIBNK01) {isNoRefresh = yes, isExternal = yes};
            if (SQLCA.VAGen_SQLCODE != 0)
              TA1REC.TA1LOC = "XPPV980-CLO";
              TA1REC.TA1DBASE = "DPINVC";
              TA1REC.TA1TBLVU = "VBNKCI01";
              TA1REC.TA1TBLKE = PVUREC.PVOVENDR;
              XSPVS52(); /* Invoke DB2 Error Handler*/
            end
          else
            TA1REC.TA1LOC = "XPPV980-FET";
            TA1REC.TA1DBASE = "DPINVC";
            TA1REC.TA1TBLVU = "VBNKCI01";
            TA1REC.TA1TBLKE = PVUREC.PVOVENDR;
            XSPVS52(); /* Invoke DB2 Error Handler*/
          end
        end
      end
    else
      TA1REC.TA1LOC = "XPPV980-SEL";
      TA1REC.TA1DBASE = "DPINVC";
      TA1REC.TA1TBLVU = "VBNKCI01";
      TA1REC.TA1TBLKE = PVUREC.PVOVENDR;
      XSPVS52(); /* Invoke DB2 Error Handler*/
    end
  end

  if (PV0NW02.PV0NW-POP-YES == "Y")
    XPXNI01();
    XPXNO01();
    if (XX0XW02.XX0XWPIX > 0) /* if the user selected a code*/
      PV0NW01.PV0N-PC-PO-NBR-NUM = PV0NW02.PV0NW-PC-PO-NBR[XX0XWPIX];
      PV0NM001.PV-PC-PO-NBR = PV0NW01.PV0N-PC-PO-NBR-NUM;
      set PV0NM001.PV-PC-PO-NBR cursor;
    end
    converseLib.clearScreen();
    
  end
   /* Tcs addition ends - 12/27/2000.*/

  return; /* Last Statement*/


   /* ***  End of XPPV980  ****/
end // end PV0NS-VCIBNK01

Function PV0NS005()
  /* Get System Date And Time*/
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  PV0NM001.TA2GRGB = TA2REC.TA2GRGB;
  PV0NM001.TA2TIMED = TA2REC.TA2TIMED;
end // end PV0NS005

// MOVE VALUES FROM MAP TO CSPREC
Function PV0NS110()
  /* MOVING MAP VARIABLE TO W/S VARIABLE*/
  PV0NW01.PV-IVC-ID = PV0NM001.PV-IVC-ID;
  PV0NW01.PV-MSA-VEND-NBR = PV0NM001.PV-MSA-VEND-NBR;
  PV0NW01.PV-MSA-VEND-GRP = PV0NM001.PV-MSA-VEND-GRP;
  PV0NW01.PV-IVC-FOB-AMT = PV0NM001.PV-IVC-FOB-AMT;
  PV0NW01.PV0N-IVC-RCV-DT = PV0NM001.PV-IVC-DT;
  PV0NW01.PV-BANK-FOB-AMT = PV0NM001.PV-BANK-FOB-AMT;
  PV0NW01.PV0N-BANK-RCV-DT = PV0NM001.PV-BANK-RCV-DT;
  PV0NW01.PV-IVC-ADJ-FL = PV0NM001.PV-IVC-ADJ-FL;
  PV0NW01.PV-IVC-ADJ-DESC = PV0NM001.PV-IVC-ADJ-DESC;
  PV0NW01.PV0N-PC-PO-NBR = PV0NM001.PV-PC-PO-NBR;
  /* MOVING W/S VARIABLE TO CSP REC*/
  VCIBNK01.PV-IVC-ID = PV0NW01.PV-IVC-ID;
  VCIBNK01.PV-MSA-VEND-NBR = PV0NW01.PV-MSA-VEND-NBR;
  VCIBNK01.PV-MSA-VEND-GRP = PV0NW01.PV-MSA-VEND-GRP;
  VCIBNK01.PV-IVC-FOB-AMT = PV0NW01.PV-IVC-FOB-AMT;
  VCIBNK01.PV-IVC-RCV-DT = PV0NW01.PV0N-IVC-RCV-DT;
  VCIBNK01.PV-BANK-FOB-AMT = PV0NW01.PV-BANK-FOB-AMT;
  VCIBNK01.PV-BANK-RCV-DT = PV0NW01.PV0N-BANK-RCV-DT;
  VCIBNK01.PV-IVC-ADJ-FL = PV0NW01.PV-IVC-ADJ-FL;
  VCIBNK01.PV-IVC-ADJ-DESC = PV0NW01.PV-IVC-ADJ-DESC;
  VCIBNK01.PV-ADJ-FOB-AMT = PV0NW01.PV-ADJ-FOB-AMT;
  VCIBNK01.PC-PO-NBR = PV0NW01.PV0N-PC-PO-NBR-NUM;
  VCIBNK01.ZZ-CHNG-USER-ID = COMMAREA.CAUSERID;
  VCIBNK01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
  VCIBNK01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
  VCIBNK01.ZZ-SDT = TA2REC.TA2GRGGN;
end // end PV0NS110

// initialization - pop up window
Function XPXNI01()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  set PV0NM005 initial; /* Clear the map area*/
  set XX0XW02 empty; /* clear working storage*/
  XX0XW02.XX0XWCT1 = 1; /* Table index*/
  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  XX0XW02.XX0XWSIX = 0; /* End of first page save index*/
  XX0XW02.XX0XWPIX = 0; /* Initialize pass index to zero*/
  XX0XW02.XX0XWFFL = "Y"; /* first time thru flag*/
  XX0XW02.XX0XWERR = "N"; /* Scroll error flag to no*/
  XX0XW02.XX0XWEND = "N"; /* End of pop up window session flag*/

end // end XPXNI01

// CONVERSE PCPO Pop-up Window
Function XPXNO01()
   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set PV0NM005 initial; /* Clear map output area*/
    PV0NM005.PV0NMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    PV0NM005.PV0NMTR1 = "        SELECT & ENTER        ";
    PV0NM005.PV0NMTR2 = "   PF7:BACK        PF8:FRWD   ";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && PV0NW02.PV0NW-PMT-VEND-IVC-ID[XX0XWCT1] != " ")
        PV0NW01.PV0N-PC-PO-NBR-NUM = PV0NW02.PV0NW-PC-PO-NBR[XX0XWCT1];
        PV0NM005.PV0NMPCPO[XX0XWCT2] = PV0NW01.PV0N-PC-PO-NBR;
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
        if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
          XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
        end
        set PV0NM005.PV0NMSEL[XX0XWCT2] normal; /* Set selects to normal*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        PV0NW01.PV0N-PC-PO-NBR-NUM = PV0NW02.PV0NW-PC-PO-NBR[XX0XWCT1];
        PV0NM005.PV0NMPCPO[XX0XWCT2] = PV0NW01.PV0N-PC-PO-NBR;
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
        set PV0NM005.PV0NMSEL[XX0XWCT2] normal; /* Set select visible*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end
  XX0XW02.XX0XWCT2 = 10; /* Screen index*/
  while (XX0XW02.XX0XWCT2 >= 1 /* Set all fields without data to nor*/
   && PV0NM005.PV0NMPCPO[XX0XWCT2] == " ")
    set PV0NM005.PV0NMSEL[XX0XWCT2] protect, bold;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
  end


  converse PV0NM005 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  if (PV0NM005.PV0NMSEL[1] is modified)
    /* NEXT SENTENCE*/
  end
  if (PV0NM005.PV0NMSEL[2] is modified)
    /* NEXT SENTENCE*/
  end
  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && PV0NM005.PV0NMPCPO[XX0XWCT2] != " ")
    set PV0NM005.PV0NMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && PV0NW02.PV0NW-PMT-VEND-IVC-ID[XX0XWCT1] != " ")
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (PV0NM005.PV0NMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end
end // end XPXNO01

Record PV0NW01 type basicRecord
  10 PV0NW01GRP PV0NW01GRP ; 
    15 PV0NW01-FIRST-TIME-FL PV0NW01-FIRST-TIME-FL ; 
    15 PV0NW01-END-OF-APPL PV0NW01-END-OF-APPL ; 
    15 PV-PMT-VEND-IVC-ID PV-PMT-VEND-IVC-ID ; 
    15 PV-PMT-VEND-NBR PV-PMT-VEND-NBR ; 
    15 PV-PMT-VEND-GRP PV-PMT-VEND-GRP ; 
    15 PV-IVC-ID PV-IVC-ID ; 
    15 PV-MSA-VEND-NBR PV-MSA-VEND-NBR ; 
    15 PV-MSA-VEND-GRP PV-MSA-VEND-GRP ; 
    15 PV0N-PC-PO-NBR PV0N-PC-PO-NBR ; 
      20 PV0N-PC-PO-NBR-NUM PV0N-PC-PO-NBR-NUM ; 
    15 XGP-GPC-CD XGP-GPC-CD ; 
    15 XIB-IBANK-CD XIB-IBANK-CD ; 
    15 PV0N-BANK-RCV-DT PV0N-BANK-RCV-DT ; 
    15 PV0N-IVC-RCV-DT PV0N-IVC-RCV-DT ; 
    15 PV-BANK-RCV-FL PV-BANK-RCV-FL ; 
    15 PV-IVC-RCV-FL PV-IVC-RCV-FL ; 
    15 PV-BANK-FOB-AMT PV-BANK-FOB-AMT ; 
    15 PV-IVC-FOB-AMT PV-IVC-FOB-AMT ; 
    15 PV-ADJ-FOB-AMT PV-ADJ-FOB-AMT ; 
    15 PV-IVC-RCN-FL PV-IVC-RCN-FL ; 
    15 PV-IVC-ADJ-FL PV-IVC-ADJ-FL ; 
    15 PV-IVC-ADJ-DESC PV-IVC-ADJ-DESC ; 
    15 ZZ-SDT ZZ-SDT ; 
    15 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    15 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    15 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
    15 ZZ-CHNG-USER-ID ZZ-CHNG-USER-ID ; 
end // end PV0NW01

Record PV0NW02 type basicRecord
  10 PV0NW02GRP PV0NW02GRP ; 
    15 PV0NW02-CONF-FLAG PV0NW02-CONF-FLAG ; 
    15 PV-BANK-FOB-AMT PV-BANK-FOB-AMT ; 
    15 PV-IVC-ADJ-DESC PV-IVC-ADJ-DESC ; 
  10 PV0NWEND PV0NWEND ; 
  10 PV0NW-TOT-DIFF-AMT PV0NW-TOT-DIFF-AMT ; 
  10 PV0NW-DIFF-AMT PV0NW-DIFF-AMT ; 
  10 PV0NW-VBNKCI-GRP PV0NW-VBNKCI-GRP [99] ; 
    15 PV0NW-PMT-VEND-IVC-ID PV0NW-PMT-VEND-IVC-ID ; 
    15 PV0NW-PMT-VEND-NBR PV0NW-PMT-VEND-NBR ; 
    15 PV0NW-PMT-VEND-GRP PV0NW-PMT-VEND-GRP ; 
    15 PV0NW-IVC-ID PV0NW-IVC-ID ; 
    15 PV0NW-MSA-VEND-NBR PV0NW-MSA-VEND-NBR ; 
    15 PV0NW-MSA-VEND-GRP PV0NW-MSA-VEND-GRP ; 
    15 PV0NW-PC-PO-NBR PV0NW-PC-PO-NBR ; 
    15 PV0NW-XGP-GPC-CD PV0NW-XGP-GPC-CD ; 
    15 PV0NW-XIB-IBANK-CD PV0NW-XIB-IBANK-CD ; 
    15 PV0NW-BANK-RCV-DT PV0NW-BANK-RCV-DT ; 
    15 PV0NW-IVC-RCV-DT PV0NW-IVC-RCV-DT ; 
    15 PV0NW-BANK-RCV-FL PV0NW-BANK-RCV-FL ; 
    15 PV0NW-IVC-RCV-FL PV0NW-IVC-RCV-FL ; 
    15 PV0NW-BANK-FOB-AMT PV0NW-BANK-FOB-AMT ; 
    15 PV0NW-IVC-FOB-AMT PV0NW-IVC-FOB-AMT ; 
    15 PV0NW-ADJ-FOB-AMT PV0NW-ADJ-FOB-AMT ; 
    15 PV0NW-IVC-RCN-FL PV0NW-IVC-RCN-FL ; 
    15 PV0NW-IVC-ADJ-FL PV0NW-IVC-ADJ-FL ; 
    15 PV0NW-IVC-ADJ-DESC PV0NW-IVC-ADJ-DESC ; 
    15 PV0NW-ZZ-SDT PV0NW-ZZ-SDT ; 
    15 PV0NW-ZZ-CHNG-DT PV0NW-ZZ-CHNG-DT ; 
    15 PV0NW-ZZ-CHNG-HHMM PV0NW-ZZ-CHNG-HHMM ; 
    15 PV0NW-ZZ-CHNG-CNT PV0NW-ZZ-CHNG-CNT ; 
    15 PV0NW-ZZ-CHNG-USER-ID PV0NW-ZZ-CHNG-USER-ID ; 
  10 PV0NWIDX PV0NWIDX ; 
  10 PV0NW-POP-YES PV0NW-POP-YES ; 
end // end PV0NW02

Record VCIBNK01 type basicRecord
  10 VBNKCIREC VBNKCIREC ; 
    15 PV-PMT-VEND-IVC-ID PV-PMT-VEND-IVC-ID ; 
    15 PV-PMT-VEND-NBR PV-PMT-VEND-NBR ; 
    15 PV-PMT-VEND-GRP PV-PMT-VEND-GRP ; 
    15 PV-IVC-ID PV-IVC-ID ; 
    15 PV-MSA-VEND-NBR PV-MSA-VEND-NBR ; 
    15 PV-MSA-VEND-GRP PV-MSA-VEND-GRP ; 
    15 PC-PO-NBR PC-PO-NBR ; 
    15 XGP-GPC-CD XGP-GPC-CD ; 
    15 XIB-IBANK-CD XIB-IBANK-CD ; 
    15 PV-BANK-RCV-DT PV-BANK-RCV-DT ; 
    15 PV-IVC-RCV-DT PV-IVC-RCV-DT ; 
    15 PV-BANK-RCV-FL PV-BANK-RCV-FL ; 
    15 PV-IVC-RCV-FL PV-IVC-RCV-FL ; 
    15 PV-BANK-FOB-AMT PV-BANK-FOB-AMT ; 
    15 PV-IVC-FOB-AMT PV-IVC-FOB-AMT ; 
    15 PV-ADJ-FOB-AMT PV-ADJ-FOB-AMT ; 
    15 PV-IVC-RCN-FL PV-IVC-RCN-FL ; 
    15 PV-IVC-ADJ-FL PV-IVC-ADJ-FL ; 
    15 PV-IVC-ADJ-DESC PV-IVC-ADJ-DESC ; 
    15 ZZ-SDT ZZ-SDT ; 
    15 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    15 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    15 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
    15 ZZ-CHNG-USER-ID ZZ-CHNG-USER-ID ; 
end // end VCIBNK01

DataItem PV-ADJ-FOB-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-BANK-FOB-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV-BANK-RCV-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV-BANK-RCV-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-DIFF-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end
DataItem PV-IVC-ADJ-DESC char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-IVC-ADJ-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-IVC-FOB-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV-IVC-RCN-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-IVC-RCV-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV-IVC-RCV-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0N-BANK-RCV-DT num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0N-IVC-RCV-DT num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PC_PO_NBR
DataItem PV0N-PC-PO-NBR char(6)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// PC_PO_NBR
DataItem PV0N-PC-PO-NBR-NUM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-ADJ-FOB-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-BANK-FOB-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-BANK-RCV-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-BANK-RCV-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-DIFF-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-IVC-ADJ-DESC char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-IVC-ADJ-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-IVC-FOB-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-IVC-ID char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-IVC-RCN-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-IVC-RCV-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-IVC-RCV-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-MSA-VEND-GRP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-MSA-VEND-NBR char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-PC-PO-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-PMT-VEND-GRP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-PMT-VEND-IVC-ID char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-PMT-VEND-NBR char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-POP-YES char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-TOT-DIFF-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-VBNKCI-GRP char(181)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-XGP-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-XIB-IBANK-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-ZZ-CHNG-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-ZZ-CHNG-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-ZZ-CHNG-HHMM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW-ZZ-CHNG-USER-ID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW-ZZ-SDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0NW01-END-OF-APPL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW01-FIRST-TIME-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW01GRP char(197)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW02-CONF-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NW02GRP char(69)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0NWIDX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem VBNKCIREC char(181)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

