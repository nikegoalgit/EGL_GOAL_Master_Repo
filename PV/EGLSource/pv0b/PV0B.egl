package pv0b;
import corpcom2.XZCREC;
import corpcom3.XPPV-VPVPMT01;
import corpcom3.XPPV980;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSPVS01;
import corpcom4.XSPVS52;
import corpcom4.XSPVS53;
import corpcom4.XSPVS55;
import corpcom4.XSPVS57;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import fy.common.FY1REC;
import pc.common.PC2REC;
import pc.common.PC3REC;
import pv.common.*;
import sy.common.SY1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VPOITM04;
import vv.common.VPVPMT01;
import vv.common.VXIBGL01;
import xx.common.*;
import xx02.*;
import xx02.XFATBL;
import xx03.*;
//*** PROGRAM=PV0B ****
// ************************************************************
// *
// *   PV0B - Invoice ADD AND MAINTENANCE
// *
// *   This application will be used to display and update
// *   the factory invoice and its associated line items.
// *
// ************************************************************
// * Maintenance History
// *
// *Rev #    Date    Prgrmr  Remarks
// *-----  --------  ------  ----------------------------------
// *       10-07-99  GDECKE  CREATE NEW CSP APPLICATOIN
// *       02-04-00  JKUNDU  VALIDATE VENDOR BEFORE IT TRANSFER
// *                         TO PV0B
// *       02-23-00  JKUNDU  Allow to change the status to FP
// *                         when all the payment records are
// *                         in 'UN' status.
// *       03-20-00  JKUNDU  Change in PV0B-CLEARING-GL and
// *                         PV0B-reversing-GL to populate
// *                         correct GL period.
// *       04-04-00  JKUNDU  Change in PV0B-GET-LC-CODE to
// *                         correct the SELECT options while
// *                         calling the IO mod VPOITM04.
// *       04-17-00  JKUNDU  Change in PV0B-FORCE-PAY AND
// *                         PV0B-VPVPMT01-MAP4 to correct the
// *                         FP logic, added PV0BW05 record.
// *       04-27-00  JKUNDU  Change in PV0B-REVERSING-GL and
// *                         PV0B-CLEARING-GL to reverse the
// *                         sign of amount inserted in GL
// *                         while cancellation.
// *       01-16-01  BPARAN  Changes made to PV0B-VPVPMT01-MAP2
// *                         PV0B210 & PV0B310 for selecting
// *                         unique record for a given CE#
// *                         and CI#.
// *       02-14-01  rgomat  Included the PF7 key function in
// *                         map 1 and new stmt grp named
// *                         pv0bs-pf7-inquire
// ************************************************************
// *********************
Program PV0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  PC2REC PC2REC; // record
  PC3REC PC3REC; // record
  PV0BW01 PV0BW01; // record
  PV0BW02 PV0BW02; // record
  PV0BW03 PV0BW03; // record
  PV0BW04 PV0BW04; // record
  PV0BW05 PV0BW05; // record
  PVAREC PVAREC; // record
  PVBREC PVBREC; // record
  PVDREC PVDREC; // record
  PVEREC PVEREC; // record
  PVLREC PVLREC; // record
  PVOREC PVOREC; // record
  PVUREC PVUREC; // record
  PVWREC PVWREC; // record
  PVYREC PVYREC; // record
  PVZREC PVZREC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VPOITM04 VPOITM04; // record
  VPVPMT01 VPVPMT01; // record
  VXIBGL01 VXIBGL01; // record
  XZCREC XZCREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PV0BT01 {deleteAfterUse = yes}; // table
  use XFATBL {deleteAfterUse = yes}; // table
  use XIBTBL {deleteAfterUse = yes}; // table
  use PV0BM.PV0BM001,  // forms
      PV0BM.PV0BM002, 
      PV0BM.PV0BM003
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    PV0B000: PV0B000();
  end // end main
end // end PV0B

// CANCEL PROCESS - ADD GL RECS
Function PV0B-ADD-CNCL-GLS()
   /* STMT GRP = PV0B-ADD-CNCL-GLS*/
   /* *************************************************************/
   /* ***  M A I N T E N A N C E     H I S T O R Y    L O G    ****/
   /* ***------------------------------------------------------****/
   /* ***  12-15-99  GDECKE  PROCESS CANCEL REQUEST - WRITE    ****/
   /* ***                    REVERSING AND CLEARING GL'S.      ****/
   /* ***  03-21-00  JKUNDU  COMMENTED THE HDR STATUS CHECK    ****/
   /* ***                    IN CASE OF DETERMINING WHETHER    ****/
   /* ***                    AMOUNT SHOULD BE ON REVERSING GL. ****/
   /* ***  04-27-00  JKUNDU  Changed to handle the reversing   ****/
   /* ***                    process for Circle for FR, DUTY   ****/
   /* ***                    and BF amounts.                   ****/
   /* *************************************************************/
   /* ***  CANCEL VENDOR INVOICE - PF17                        ****/
   /* ***  Read PAYMENT TABLE - CHANGES STATUS OF ALL PAYMENT  ****/
   /* ***  RECORDS FOR A VENDOR INVOICE TO 'CX'.               ****/
   /* ***                                                      ****/
   /* ***  CREATE REVERSING GL RECORDS FOR 'LC' DATA.          ****/
   /* ***  CREATE CLEARING GL RECORD FOR 'LC' DATA.            ****/
   /* *************************************************************/
  ;
   /* use SAVED VALUE OF CURRENT VENDOR NUMBER AND VENDOR GROUP*/
  ;
  PV0BW01.PV-IVC-ID = PV0BW02.PV-IVC-ID[PV0BWIX2];
  PV0BW01.PV-MSA-VEND-NBR = PV0BW02.PV-MSA-VEND-NBR[PV0BWIX2];
  PV0BW01.PV-MSA-VEND-GRP = PV0BW02.PV-MSA-VEND-GRP[PV0BWIX2];
  ;
  PV0BW01.PV0BW-SUM-FCTY-DSCT = 0;
  ;
   /* MOVE ' ' TO PV0BW01.PV-PMT-VEND-IVC-ID;/*Commented*/
   /* MOVE ' ' TO PV0BW01.PV-PMT-VEND-NBR;   /*on*/
   /* MOVE ' ' TO PV0BW01.PV-PMT-VEND-GRP;   /*03/21/00*/
  ;
  PV0BW01.PV0BW-FOB-PMT-STAT = "N";
  PV0BW01.PV0BW-FRGT-PMT-STAT = "N";
  PV0BW01.PV0BW-DUTY-PMT-STAT = "N";
  ;
  set VPVPMT01 empty;
  ;
  VPVPMT01.PV-IVC-ID = PV0BW01.PV-IVC-ID;
  VPVPMT01.PV-MSA-VEND-NBR = PV0BW01.PV-MSA-VEND-NBR;
  VPVPMT01.PV-MSA-VEND-GRP = PV0BW01.PV-MSA-VEND-GRP;
  VPVPMT01.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
  VPVPMT01.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
  VPVPMT01.PV-PMT-VEND-GRP = PV0BW01.PV-PMT-VEND-GRP;
  ;
   /* OPEN CURSOR FOR SCREEN 2 LIST OF DISTINCT PAYMENTS*/
   /* MOVE 'S1' TO PVYREC.PVYFNC;/* Commented on 03/21/00*/
  PVYREC.PVYFNC = "S4";
  XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
  ;
  PV0BW01.PV0BW-UPDATE-HEADER-FL = "N";
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    /* FETCH LINES FROM VPVPMT01*/
    /* MOVE 'N1' TO PVYREC.PVYFNC;*/
    PVYREC.PVYFNC = "N4"; /* Commented on 03/21/00*/
    XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && (VPVPMT01.XIP-IVC-STAT-CD != "CX"))
                                  /* Commented on 03/21/00*/
      /* AND VPVPMT01.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP*/
      ;
       /* FETCH HEADER RECORD - THE HEADER FIELD CORRESPONDING TO THE*/
       /* SELECTED PAYMENT WILL BE REDUCED BY THE AMOUNT OF THE PAYMENT.*/
       /* THE INVOICE TOTAL AMOUNT WILL BE REDUCED BY THE SAME AMOUNT.*/
      ;
      /* JKUNDU CHANGE BEGINS - 04/27/00*/
      PV0BW01.PV0BW-FRGT-DBT-STAT = "N";
      PV0BW01.PV0BW-DUTY-DBT-STAT = "N";
      PV0BW01.PV0BW-BROK-DBT-STAT = "N";
      PV0BW01.PV0BW-LCRED-DBT-STAT = "N";
      /* JKUNDU CHANGE ends   - 04/27/00*/
      if (VPVPMT01.XPV-IVC-TYP-CD == "FB")
        /* PAYMENT STATUS AND HDR STATUS PLUS 'LC' STATUS WILL DETERMINE*/
        /* WHETHER THE AMOUNT SHOULD BE ON A REVERSING GL.*/
        /* JKUNDU CHANGE BEGINS - 04/27/00*/
        /* IF VPVPMT01.XIP-IVC-STAT-CD = 'SN';*/
        if (VPVPMT01.XIP-IVC-STAT-CD == "SN"
         && VPVPMT01.PV-PMT-VEND-NBR != "1050")
          /* JKUNDU CHANGE ENDS   - 04/27/00*/
          /* JKUNDU CHNAGES BEGIN - 03/21/00*/
          /* AND (PVAREC.XIPCD = 'IC'*/
          /* OR PVAREC.XIPCD = 'CP'*/
          /* OR PVAREC.XIPCD = 'EX');*/
          /* JKUNDU CHNAGES END  - 03/21/00*/
          PV0BW01.PV0BW-FOB-PMT-STAT = "Y";
        else
          PV0BW01.PV0BW-FOB-PMT-STAT = "N";
        end
        PV0BW01.PV-NISSHO-FOB-AMT = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVATFOB = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "DT")
        /* PAYMENT STATUS AND HDR STATUS PLUS 'LC' STATUS WILL DETERMINE*/
        /* WHETHER THE AMOUNT SHOULD BE ON A REVERSING GL.*/
        if (VPVPMT01.XIP-IVC-STAT-CD == "SN")
          /* JKUNDU CHANGE BEGINS - 04/27/00*/
          if (VPVPMT01.PV-PMT-VEND-NBR == "1050")
            /* JKUNDU CHNAGES BEGIN - 03/21/00*/
            /* AND (PVAREC.XIPCD = 'IC'*/
            /* OR PVAREC.XIPCD = 'CP'*/
            /* OR PVAREC.XIPCD = 'EX');*/
            /* JKUNDU CHNAGES END   - 03/21/00*/
            PV0BW01.PV0BW-DUTY-DBT-STAT = "Y";
            PV0BW01.PV0BW-DUTY-PMT-STAT = "N";
            PV0B-DEBIT-GL();
            PV0B-DEBIT-CEARING();
          else
            PV0BW01.PV0BW-DUTY-DBT-STAT = "N";
            PV0BW01.PV0BW-DUTY-PMT-STAT = "Y";
          end
          /* JKUNDU CHANGE ENDS  - 04/27/00*/
        else
          PV0BW01.PV0BW-DUTY-PMT-STAT = "N";
          PV0BW01.PV0BW-DUTY-DBT-STAT = "N";
        end
        PV0BW01.PV-NISSHO-TOT-DTY = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVATDUTY = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "FR")
        if (VPVPMT01.XIP-IVC-STAT-CD == "SN")
          /* JKUNDU CHANGE BEGINS - 04/27/00*/
          if (VPVPMT01.PV-PMT-VEND-NBR == "1050")
            /* JKUNDU CHNAGES BEGIN - 03/21/00*/
            /* AND (PVAREC.XIPCD = 'IC'*/
            /* OR PVAREC.XIPCD = 'CP'*/
            /* OR PVAREC.XIPCD = 'EX');*/
            /* JKUNDU CHNAGES END   - 03/21/00*/
            PV0BW01.PV0BW-FRGT-DBT-STAT = "Y";
            PV0BW01.PV0BW-FRGT-PMT-STAT = "N";
            PV0B-DEBIT-GL();
            PV0B-DEBIT-CEARING();
          else
            PV0BW01.PV0BW-FRGT-DBT-STAT = "N";
            PV0BW01.PV0BW-FRGT-PMT-STAT = "Y";
          end
          /* JKUNDU CHANGE ENDS  - 04/27/00*/
        else
          PV0BW01.PV0BW-FRGT-DBT-STAT = "N";
          PV0BW01.PV0BW-FRGT-PMT-STAT = "N";
        end
        PV0BW01.PV-IVC-TOT-FRGT = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVATFRGT = PVAREC.PVATFRGT         - VPVPMT01.PV-PMT-IVC-AMT;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "BC")
        PV0BW01.PV-NISSHO-BANK-CHG = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVABANKC = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "BF")
        /* JKUNDU CHANGE BEGINS - 04/27/00*/
        if (VPVPMT01.XIP-IVC-STAT-CD == "SN"
         && VPVPMT01.PV-PMT-VEND-NBR == "1050")
          PV0BW01.PV0BW-BROK-DBT-STAT = "Y";
          PV0B-DEBIT-GL();
          PV0B-DEBIT-CEARING();
        else
          PV0BW01.PV0BW-BROK-DBT-STAT = "N";
        end
        /* JKUNDU CHANGE BEGINS - 04/27/00*/
        PV0BW01.PV-NISSHO-BRKR-CHG = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVABRKRY = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "CM")
        ;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVATCOMM = 0;
        PV0BW01.PV-NISSHO-COMM-AMT = VPVPMT01.PV-PMT-IVC-AMT;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "I1")
        PV0BW01.PV-NISSHO-INT-CHG1 = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAINT1 = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "I2")
        PV0BW01.PV-NISSHO-INT-CHG2 = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAINT2 = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "I3")
        PV0BW01.PV-NISSHO-INT-CHG3 = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAINT3 = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "DA")
        PV0BW01.PV-IVC-DSCT-AMT = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         + VPVPMT01.PV-PMT-IVC-AMT;
        /* ADD DISCOUNT AMOUNT TO IVC TOTAL WHEN DISCOUNT CANCELLED*/
        PVAREC.PVADSCT = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "C1")
        PV0BW01.PV-NISSHO-OTH-CHG1 = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAOCHG1 = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "C2")
        PV0BW01.PV-NISSHO-OTH-CHG2 = VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAIVAMT = PVAREC.PVAIVAMT         - VPVPMT01.PV-PMT-IVC-AMT;
        PVAREC.PVAOCHG2 = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "C3")
        PV0BW01.PV-NISSHO-SUB-CHG1 = VPVPMT01.PV-PMT-IVC-AMT;
        ;
        /* do not adjust invoice total by the sub-charge1 amount*/
        /* PVAREC.PVAIVAMT = PVAREC.PVAIVAMT*/
         /* - VPVPMT01.PV-PMT-IVC-AMT;*/
        PVAREC.PVASCHG1 = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      if (VPVPMT01.XPV-IVC-TYP-CD == "C4")
        /* JKUNDU CHANGE BEGINS - 04/27/00*/
        if (VPVPMT01.XIP-IVC-STAT-CD == "SN"
         && VPVPMT01.PV-PMT-VEND-NBR == "1050")
          PV0BW01.PV0BW-LCRED-DBT-STAT = "Y";
          PV0B-DEBIT-GL();
          PV0B-DEBIT-CEARING();
        else
          PV0BW01.PV0BW-LCRED-DBT-STAT = "N";
        end
        /* JKUNDU CHANGE BEGINS - 04/27/00*/
        PV0BW01.PV-NISSHO-SUB-CHG2 = VPVPMT01.PV-PMT-IVC-AMT;
        ;
          /* do not adjust invoice total by the sub-charge2 amount*/
          /* PVAREC.PVAIVAMT = PVAREC.PVAIVAMT*/
          /* - VPVPMT01.PV-PMT-IVC-AMT;*/
        PVAREC.PVASCHG2 = 0;
        ;
        VPVPMT01.XIP-IVC-STAT-CD = "CX";
        VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
        VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
        PVYREC.PVYFNC = "U ";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      end
      PV0BW01.PV0BW-UPDATE-HEADER-FL = "Y";
      ;
    end
  end
  ;
   /* CLOSE CURSOR FOR VPVPMT01*/
   /* MOVE 'C1' TO PVYREC.PVYFNC; /* Commented on 03/21/00*/
  PVYREC.PVYFNC = "C4";
  XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
  ;
    /* The fields to be updated in the factory invoice header table*/
    /* were modified in the item loop above. The update should only*/
    /* be performed when processing of the line items causes a change*/
    /* in some field of the PV header.*/
  if (PV0BW01.PV0BW-UPDATE-HEADER-FL == "Y")
    ;
      /* UPDATE THE FACTORY INVOICE HEADER RECORD*/
    PVYREC.PVYFNC = "U ";
    if (PVAREC.PVATFOB == 0
     && PVAREC.PVATFRGT == 0
     && PVAREC.PVAIVAMT == 0
     && PVAREC.PVADSCT == 0
     && PVAREC.PVABANKC == 0
     && PVAREC.PVATDUTY == 0
     && PVAREC.PVABRKRY == 0
     && PVAREC.PVAOCHG1 == 0
     && PVAREC.PVAOCHG2 == 0
     && PVAREC.PVASCHG1 == 0
     && PVAREC.PVASCHG2 == 0
     && PVAREC.PVAINT1 == 0
     && PVAREC.PVAINT2 == 0
     && PVAREC.PVAINT3 == 0)
      PVAREC.XIPCD = "CX";
    else
      PVAREC.XIPCD = "IP";
    end
    ;
    PVAREC.ZZZCHGDT = TA2REC.TA2GRGGN;
    PVAREC.ZZZCHGTM = TA2REC.TA2TIMHM;
    XPPV-VPVHDR01();
  end
  ;
      /* SCAN LINE ITEMS ON PV INVOICE ADD TO 'LC' TOTAL IF THE*/
   /* BANK ID IS OK, THE PO ITEM DATA MATCHES, AND THE PAYMENT*/
      /* STATUS AND FACTORY INVOICE STATUS ARE OK. THIS IS DONE FOR*/
      /* FOB, FREIGHT, AND DUTY.*/
  ;
  PV0B-GET-LINE-TOTL();
  ;
  ;
   /* PAYMENT TOTALS AND LINE ITEM LC TOTALS HAVE BEEN ACCUMULATED.*/
   /* NOW, GL REVERSAL AND GL CLEARING RECORDS CAN BE WRITTEN.*/
   /* REVERSALS ARE CREATED FOR EACH FACTORY INVOICE AND BANK CODE.*/
   /* CLEARING GL IS CREATED FOR EACH FACTORY INVOICE. A SPECIAL BANK*/
   /* CODE IS USED.*/
  ;
   /* CHECK EACH LINE IN THE BANK TABLE FOR VALID ROW. IF BANK NUMBER*/
   /* FILLED IN, CREATE THE APPROPRIATE REVERSAL GL'S BASED ON THE*/
   /* SUM OF THE PAYMENTS * APPROPRIATE LC FACTOR. ONE REVERSING GL PER*/
   /* BANK ID*/
  ;
  PV0B-REVERSING-GL();
  ;
   /* USING THE SUM OF THE REVERSING GL'S - BUILD AND WRITE THE CLEARING*/
   /* GL RECORDS*/
  ;
  PV0B-CLEARING-GL();
  ;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-VPVPMT01  ****/
end // end PV0B-ADD-CNCL-GLS

// IOMOD    DPINVC.VGLTRN01
Function PV0B-CALL-VGLTRN01()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **    IO Module for GENERAL LEDGER TRANSACTIONS          ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO5890" (PVYREC, SQLCA, PVDREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    PVUREC.PVUERROR[PVUERVND] = " ";
    PVUREC.PVUERROR[PVUERIVC] = " ";
  else
    PVUREC.PVUERROR[PVUERVND] = "Y";
    PVUREC.PVUERROR[PVUERIVC] = "Y";
    if (SQLCA.VAGen_SQLCODE == -811)
         /* Multiple Rows Found, Enter Additional Qualifiers*/
      PVUREC.PVUERNBR = 84;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
           /* Data Base Busy; Retry in a few minutes*/
        PVUREC.PVUERNBR = 44;
      else
        TA1REC.TA1LOC = "PV0B-CALL-VGLTRN01";
        TA1REC.TA1DBASE = "DPINVC";
        TA1REC.TA1TBLVU = "VGLTRN01";
       /* MOVE PVDREC.PVOVENDR TO TA1REC.TA1TBLKE;*/
        XSPVS52(); /* Invoke DB2 Error Handler*/
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-CALL-VGLTRN01  ****/
end // end PV0B-CALL-VGLTRN01

// IOMOD    DPRODC.VPOITM04
Function PV0B-CALL-VPOITM04()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **       IO Module for PO ITEM RECORDS                   ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  set SQLCA empty;
  ;
  call "VPOITM04" (PVYREC, SQLCA, VPOITM04) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    PVUREC.PVUERROR[PVUERVND] = " ";
    PVUREC.PVUERROR[PVUERIVC] = " ";
       /* NEXT SENTENCE*/
  else
    PVUREC.PVUERROR[PVUERVND] = "Y";
    PVUREC.PVUERROR[PVUERIVC] = "Y";
    if (SQLCA.VAGen_SQLCODE == -811)
         /* Multiple Rows Found, Enter Additional Qualifiers*/
      PVUREC.PVUERNBR = 84;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
           /* Data Base Busy; Retry in a few minutes*/
        PVUREC.PVUERNBR = 44;
      else
        TA1REC.TA1LOC = "PV0B-CALL-VPOITM04";
        TA1REC.TA1DBASE = "DPRODC";
        TA1REC.TA1TBLVU = "VPOITM04";
       /* MOVE VPOITM04.PC3PONBR TO TA1REC.TA1TBLKE;*/
        XSPVS52(); /* Invoke DB2 Error Handler*/
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of XPPV-VPVPMT01  ****/
end // end PV0B-CALL-VPOITM04

// IOMOD    DPINVC.VPVITM01
Function PV0B-CALL-VPVITM01()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **               IO Module for PV ITEM RECORDS            ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO5670" (PVYREC, SQLCA, PVBREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    PVUREC.PVUERROR[PVUERVND] = " ";
    PVUREC.PVUERROR[PVUERIVC] = " ";
  else
    PVUREC.PVUERROR[PVUERVND] = "Y";
    PVUREC.PVUERROR[PVUERIVC] = "Y";
    if (SQLCA.VAGen_SQLCODE == -811)
         /* Multiple Rows Found, Enter Additional Qualifiers*/
      PVUREC.PVUERNBR = 84;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
           /* Data Base Busy; Retry in a few minutes*/
        PVUREC.PVUERNBR = 44;
      else
        TA1REC.TA1LOC = "PV0B-CALL-VPVITM01";
        TA1REC.TA1DBASE = "DPINVC";
        TA1REC.TA1TBLVU = "VPVITM01";
        TA1REC.TA1TBLKE = PVBREC.PVAIVCID;
        XSPVS52(); /* Invoke DB2 Error Handler*/
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-CALL-VPVITM01  ****/
end // end PV0B-CALL-VPVITM01

// IOMOD    DPINVC.VXIBGL01
Function PV0B-CALL-VXIBGL01()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **     IO Module for PV Bank Talbe - VXIBGL01            ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  set SQLCA empty;
  ;
  call "VXIBGL01" (PVYREC, SQLCA, VXIBGL01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* OR SQLCA.SQLCODE EQ 100; /* CHANGD ON 03/21/00 - VALID BANK CODE*/
    PVUREC.PVUERROR[PVUERVND] = " ";
    PVUREC.PVUERROR[PVUERIVC] = " ";
  else
    PVUREC.PVUERROR[PVUERVND] = "Y";
    PVUREC.PVUERROR[PVUERIVC] = "Y";
    if (SQLCA.VAGen_SQLCODE == -811)
         /* Multiple Rows Found, Enter Additional Qualifiers*/
      PVUREC.PVUERNBR = 84;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
           /* Data Base Busy; Retry in a few minutes*/
        PVUREC.PVUERNBR = 44;
      else
        TA1REC.TA1LOC = "PV0B-CALL-VPVITM01";
        TA1REC.TA1DBASE = "DPINVC";
        TA1REC.TA1TBLVU = "VXIBGL01";
        TA1REC.TA1TBLKE = VXIBGL01.XIB-IBANK-CD;
        XSPVS52(); /* Invoke DB2 Error Handler*/
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-CALL-VXIBGL01  ****/
end // end PV0B-CALL-VXIBGL01

// CANCEL PROCESS - ADD GL RECS
Function PV0B-CLEARING-GL()
   /* STMT GRP = PV0B-CLEARING-GL*/
   /* *************************************************************/
   /* ***  M A I N T E N A N C E     H I S T O R Y    L O G    ****/
   /* ***------------------------------------------------------****/
   /* ***  12-15-99  GDECKE  WRITE CLEARING GL RECORD          ****/
   /* *************************************************************/
   /* ***  CANCEL VENDOR INVOICE - PF17                        ****/
   /* ***  CREATE CLEARING GL RECORD FOR 'LC' DATA.           ****/
   /* *************************************************************/
  ;
  ;
    /* ADD LINES TO VGLTRN01*/
    /* SUM OF PAYMENT AMOUNT * PAYMENT FACTOR*/
  ;
  ;
    /* BUILD GL RECORD*/
  ;
  PVDREC.PVAIVCID = PVAREC.PVAIVCID;
  PVDREC.PVOVENDR = PVAREC.PVOVENDR;
  PVDREC.PVOVENDG = PVAREC.PVOVENDG;
  PVDREC.PVCAETYP = "7";
  if (PVAREC.XGPCD == "02")
    PVDREC.GLAENT = "200";
  else
    PVDREC.GLAENT = "300";
  end
  PVDREC.GLARCID = "0001";
  PVDREC.GLANTAC = "211";
  PVDREC.GLASUB = "540";
  PVDREC.GLAPRJ = " ";
  PVDREC.PVCOVRFL = "N";
  PVDREC.XAOCD = " ";
  PVDREC.XXXUSRID = " ";
   /* JKUNDU CHANGES BEGIN - 03/20/00*/
   /* MOVE 'APPO6' TO PVDREC.PVDJENBR;*/
   /* MOVE 5 TO PVDREC.PVDPRIOD;*/
  PVDREC.PVDJENBR = "APPORV";
  PV0B-GL-PERIOD();
  PVDREC.PVDRFNBR = 9322;
   /* JKUNDU CHANGES END   - 03/20/00*/
   /* JKUNDU CHANGES BEGIN - 04/27/00*/
   /* MOVE PV0BW01.PV0BW-SUM-FCTY-DSCT TO PVDREC.PVCACAMT;*/
  PVDREC.PVCACAMT = PV0BW01.PV0BW-SUM-FCTY-DSCT * -1;
  ;
  PVDREC.ZZZSDT = TA2REC.TA2GRGGN;
  PVDREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  PVDREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  PVDREC.ZZZCHGCT = 0;
  ;
  PVYREC.PVYFNC = "A ";
  ;
  if (PVDREC.PVCACAMT != 0)
    PV0B-CALL-VGLTRN01();
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-CLEARING-GL  ****/
end // end PV0B-CLEARING-GL

// CANCEL FACTORY INVOICE PROCESS
Function PV0B-CNCL-FCTY-IVC()
   /* PV0B-CNCL-FCTY-IVC*/
   /* *************************************************************/
   /* ***  CANCEL FACTORY INVOICE - PF17                       ****/
   /* ***  FOR EACH VENDOR INVOICE, SEVERAL FACTORY INVOICES   ****/
   /* ***  COULD BE AFFECTED. EACH ONE OF THE AFFECTED FACTORY ****/
   /* ***  INVOICES NEEDS TO BE TOUCHED BY THE 'PF17-CANCEL'   ****/
   /* ***  PROCESS.                                            ****/
   /* ***  THE STATEMENT GROUPS PERFORMED HERE WERE COPIED WITH ***/
   /* ***  FEW CHANGES FROM PV0A.                              ****/
   /* *************************************************************/
  ;
  PV0B-PREV-CNCL-TST();
  ;
  if (PV0BW01.PV0BW-PREV-CANCEL-FL == "N"
   && PVWREC.PVWERRF != "Y")

    if (PVAREC.XIPCD == "CP"
     || PVAREC.XIPCD == "IC"
     || PVAREC.XIPCD == "MT"
     || PVAREC.XIPCD == "EX"
     || PVAREC.XIPCD == "UM"
     || PVAREC.XIPCD == "IP")
      PV0B680(); /* reverse pcmrec*/
      if (PVWREC.PVWERRF != "Y")
        PV0B685(); /* delete pverec*/
      end
    end
  end
  ;
   /* updating factory invoice header status will be done in*/
   /* PV0B-ADD-CNCL-GLS AFTER PAYMENT RECORDS ARE PROCESSED.*/
   /* IF PV0BW01.PV0BW-PREV-CANCEL-FL = 'N'*/
    /* AND PVWREC.PVWERRF NE 'Y';*/
    /* PERFORM PV0B690;               /* update invoice hd*/
   /* END;*/
  ;
  if (PV0BW01.PV0BW-PREV-CANCEL-FL == "N"
   && PVWREC.PVWERRF != "Y")
    PV0B695(); /* load force table*/
  end
  ;
   /* *** END OF PV0B-CNCL-FCTY-IVC  ****/
end // end PV0B-CNCL-FCTY-IVC

// READ     VENDOR NAME IO5680
Function PV0B-CNCL-VEND-IVC()
   /* JKUNDU  02-05-00  CHANGED TO DIPLAY ERROR MESSAGE 98*/
   /* IF RECORD NOT FOUND DURING CANCELLATION*/
   /*  */
   /* *************************************************************/
   /* ***  CANCEL VENDOR INVOICE - PF17                        ****/
   /* ***  GET LIST OF FACORY INVOICES - DO CANCEL CANCEL PROCESS**/
   /* ***  ON EACH FACTORY INVOICE ON LIST.                    ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  PV0B-VPVPMT01-MAP2(); /* BUILDS FACTORY IVC LIST*/
  ;
   /* PERFORM FACTORY INVOICE CANCEL LOGIC FOR EACH NON BLANK LINE*/
   /* ON THE FACTORY INVOICE LIST.*/
   /* JKUNDU CHANGE BEGINS - 02/05/00*/
  if (PV0BW01.PV0BWIX2 == 0)
                /* NEXT SENTENCE*/
  else
   /* JKUNDU CHANGE ENDS  - 02/05/00*/
    PV0BW01.PV0BWIX2 = 1;
    while (PV0BW02.PV-IVC-ID[PV0BWIX2] != " ")
      ;
       /* GET FACTORY INVOICE HEADER FOR USE BY THE CANCEL ROUTINES*/
      PVAREC.PVAIVCID = PV0BW02.PV-IVC-ID[PV0BWIX2];
      PVAREC.PVOVENDR = PV0BW02.PV-MSA-VEND-NBR[PV0BWIX2];
      PVAREC.PVOVENDG = PV0BW02.PV-MSA-VEND-GRP[PV0BWIX2];
      ;
      PVYREC.PVYFNC = "S ";
      XPPV-VPVHDR01();
      ;
      PV0BW01.PV-IVC-AMT = PVAREC.PVAIVAMT;
      PV0BW01.PV-IVC-TOT-FRGT = PVAREC.PVATFRGT;
      PV0BW01.PV-IVC-DSCT-AMT = PVAREC.PVADSCT;
      PV0BW01.PV-NISSHO-BANK-CHG = PVAREC.PVABANKC;
      PV0BW01.PV-NISSHO-FOB-AMT = PVAREC.PVATFOB;
      PV0BW01.PV-NISSHO-TOT-DTY = PVAREC.PVATDUTY;
      PV0BW01.PV-NISSHO-BRKR-CHG = PVAREC.PVABRKRY;
      PV0BW01.PV-NISSHO-OTH-CHG1 = PVAREC.PVAOCHG1;
      PV0BW01.PV-NISSHO-OTH-CHG2 = PVAREC.PVAOCHG2;
      PV0BW01.PV-NISSHO-SUB-CHG1 = PVAREC.PVASCHG1;
      PV0BW01.PV-NISSHO-SUB-CHG2 = PVAREC.PVASCHG2;
      PV0BW01.PV-NISSHO-INT-CHG1 = PVAREC.PVAINT1;
      PV0BW01.PV-NISSHO-INT-CHG2 = PVAREC.PVAINT2;
      PV0BW01.PV-NISSHO-INT-CHG3 = PVAREC.PVAINT3;
      PV0BW01.PV-NISSHO-COMM-AMT = PVAREC.PVATCOMM;
      ;
      PV0B-CNCL-FCTY-IVC();
      ;
      /* DO GL PROCESSING FOR FACTORY INVOICE CANCEL*/
      PV0B-ADD-CNCL-GLS();
      ;
      PV0BW01.PV0BWIX2 = PV0BW01.PV0BWIX2 + 1;
      ;
    end
    ;
    /* show 'factory invoice cancelled' message*/
    PVUREC.PVUERNBR = 187;
    ;
  end /* /JKUNDU CHANGES -02/05/00*/
  return; /* Last Statement*/
  ;
   /* ***  End of PV0B-CNCL-VEND-IVC  ****/
end // end PV0B-CNCL-VEND-IVC

Function PV0B-DEBIT-CEARING()
   /* STMT GRP = PV0B-DEBIT-CEARING*/
   /* *************************************************************/
   /* ***  M A I N T E N A N C E     H I S T O R Y    L O G    ****/
   /* ***------------------------------------------------------****/
   /* ***  04-28-00  JKUNDU  Initial Construction              ****/
   /* *************************************************************/
  PVDREC.PVAIVCID = PVAREC.PVAIVCID;
  PVDREC.PVOVENDR = PVAREC.PVOVENDR;
  PVDREC.PVOVENDG = PVAREC.PVOVENDG;
  PVDREC.PVCAETYP = "7";
  if (PV0BW01.PV0BW-DUTY-DBT-STAT == "Y")
    PVDREC.GLAENT = "001";
    PVDREC.GLARCID = "ENTR";
    PVDREC.GLANTAC = "782";
    PVDREC.GLASUB = "124";
  else
    if (PV0BW01.PV0BW-FRGT-DBT-STAT == "Y")
      PVDREC.GLAENT = "001";
      PVDREC.GLARCID = "ENTR";
      PVDREC.GLANTAC = "782";
      PVDREC.GLASUB = "123";
    else
      if (PV0BW01.PV0BW-BROK-DBT-STAT == "Y")
        PVDREC.GLAENT = "001";
        PVDREC.GLARCID = "ENTR";
        PVDREC.GLANTAC = "781";
        PVDREC.GLASUB = "922";
      else
        if (PV0BW01.PV0BW-LCRED-DBT-STAT == "Y")
          PVDREC.GLAENT = "200";
          PVDREC.GLARCID = "9999";
          PVDREC.GLANTAC = "901";
          PVDREC.GLASUB = "002";
        end
      end
    end
  end
  PVDREC.GLAPRJ = " ";
  PVDREC.PVCOVRFL = "N";
  PVDREC.XAOCD = " ";
  PVDREC.XXXUSRID = " ";
  PVDREC.PVDJENBR = "APPORV";
  PV0B-GL-PERIOD();
  PVDREC.PVDRFNBR = 9322;
   /* PV0BW01.PV0BW-SUM-FCTY-DSCT;*/
   /* psarka*/
  PVDREC.PVCACAMT = VPVPMT01.PV-PMT-IVC-AMT;
  ;
  PVDREC.ZZZSDT = TA2REC.TA2GRGGN;
  PVDREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  PVDREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  PVDREC.ZZZCHGCT = 0;
  ;
  PVYREC.PVYFNC = "A ";
  ;
  if (PVDREC.PVCACAMT != 0)
    PV0B-CALL-VGLTRN01();
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-DEBIT-CEARING ****/
end // end PV0B-DEBIT-CEARING

Function PV0B-DEBIT-GL()
   /* STMT GRP = PV0B-DEBIT-GL*/
   /* *************************************************************/
   /* ***  M A I N T E N A N C E     H I S T O R Y    L O G    ****/
   /* ***------------------------------------------------------****/
   /* ***  04-28-00  JKUNDU  Initial Construction              ****/
   /* *************************************************************/
  PVDREC.PVAIVCID = PVAREC.PVAIVCID;
  PVDREC.PVOVENDR = PVAREC.PVOVENDR;
  PVDREC.PVOVENDG = PVAREC.PVOVENDG;
  PVDREC.PVCAETYP = "7";
  if (PV0BW01.PV0BW-LCRED-DBT-STAT == "Y")
    PVDREC.GLAENT = "200";
    PVDREC.GLARCID = "0001";
    PVDREC.GLANTAC = "112";
    PVDREC.GLASUB = "200";
    PVDREC.GLAPRJ = " ";
  else
    if (PVAREC.XGPCD == "02")
      PVDREC.GLAENT = "200";
    else
      PVDREC.GLAENT = "300";
    end
    PVDREC.GLARCID = "0001";
    PVDREC.GLANTAC = "211";
    PVDREC.GLASUB = "540";
    PVDREC.GLAPRJ = " ";
  end
  PVDREC.PVCOVRFL = "N";
  PVDREC.XAOCD = " ";
  PVDREC.XXXUSRID = " ";
  PVDREC.PVDJENBR = "APPORV";
  PV0B-GL-PERIOD();
  PVDREC.PVDRFNBR = 9322;
   /* PV0BW01.PV0BW-SUM-FCTY-DSCT * -1;   /**/
   /* psarka*/
  PVDREC.PVCACAMT = VPVPMT01.PV-PMT-IVC-AMT * -1;
  ;
  PVDREC.ZZZSDT = TA2REC.TA2GRGGN;
  PVDREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  PVDREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  PVDREC.ZZZCHGCT = 0;
  ;
  PVYREC.PVYFNC = "A ";
  ;
  if (PVDREC.PVCACAMT != 0)
    PV0B-CALL-VGLTRN01();
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-DEBIT-GL ****/
end // end PV0B-DEBIT-GL

Function PV0B-FORCE-PAY()
   /* PV0B-FORCE-PAY*/
   /* JKUNDU  02-24-00  Initial Construction - NISSHO CONTINGENCY*/
   /* Project.*/
   /*  */
   /* *************************************************************/
   /* ***  FORCE PAY THE VENDOR INVOICE - PF10                 ****/
   /* ***  FOR EACH VENDOR INVOICE, SEVERAL FACTORY INVOICES   ****/
   /* ***  COULD BE AFFECTED. EACH ONE OF THE AFFECTED FACTORY ****/
   /* ***  INVOICES NEEDS TO BE TOUCHED BY THE 'PF10-FORCE'    ****/
   /* ***  PROCESS.SET THE STATUS EQUAL TO  'FP'               ****/
   /* ***                                                      ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  VPVPMT01.XIP-IVC-STAT-CD = "FP";
   /* JKUNDU CHANGE BEGINS - 04/17/00*/
  VPVPMT01.PV-IVC-ID = PV0BW02.PV-IVC-ID[PV0BWIX2];
  VPVPMT01.PV-MSA-VEND-NBR = PV0BW02.PV-MSA-VEND-NBR[PV0BWIX2];
  VPVPMT01.PV-MSA-VEND-GRP = PV0BW02.PV-MSA-VEND-GRP[PV0BWIX2];
  VPVPMT01.XPV-IVC-TYP-CD = PV0BW05.XPV-IVC-TYP-CD[PV0BWIX2];
  VPVPMT01.PV-PMT-IVC-AMT = PV0BW05.PV-PMT-IVC-AMT[PV0BWIX2];
  VPVPMT01.PV-IVC-TO-AP-DT = PV0BW05.PV-IVC-TO-AP-DT[PV0BWIX2];
  VPVPMT01.PV-PMT-IVC-DT = PV0BW05.PV-PMT-IVC-DT[PV0BWIX2];
  VPVPMT01.PV-PMT-IVC-DUE-DT = PV0BW05.PV-PMT-IVC-DUE-DT[PV0BWIX2];
  VPVPMT01.ZZ-SDT = PV0BW05.ZZ-SDT[PV0BWIX2];
  VPVPMT01.ZZ-CHNG-CNT = PV0BW05.ZZ-CHNG-CNT[PV0BWIX2];
   /* JKUNDU CHANGE ENDS  - 04/17/00*/
  VPVPMT01.ZZ-CHNG-DT = TA2REC.TA2GRGGN;
  VPVPMT01.ZZ-CHNG-HHMM = TA2REC.TA2TIMHM;
  PVYREC.PVYFNC = "U ";
  XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
  return; /* LAST STATEMENT*/
end // end PV0B-FORCE-PAY

Function PV0B-FORCE-PAY-IVC()
   /* PV0B-FORCE-PAY-IVC*/
   /* JKUNDU  02-24-00  Initial Construction - NISSHO CONTINGENCY*/
   /* Project.*/
   /*  */
   /* *************************************************************/
   /* ***  FORCE PAY THE VENDOR INVOICE - PF10                 ****/
   /* ***  FOR EACH VENDOR INVOICE, SEVERAL FACTORY INVOICES   ****/
   /* ***  COULD BE AFFECTED. EACH ONE OF THE AFFECTED FACTORY ****/
   /* ***  INVOICES NEEDS TO BE TOUCHED BY THE 'PF10-FORCE'    ****/
   /* ***  PROCESS.                                            ****/
   /* ***                                                      ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  PV0B-VPVPMT01-MAP4(); /* BUILDS FACTORY IVC LIST*/
  if (PV0BW01.PV0BWIX2 == 0
   || PV0BW01.PV0BW-FORCE-PAY-FL == "Y")
                /* NEXT SENTENCE*/
  else
    PV0BW01.PV0BWIX2 = 1;
    while (PV0BW02.PV-IVC-ID[PV0BWIX2] != " ")
      PV0B-FORCE-PAY();
      PV0BW01.PV0BWIX2 = PV0BW01.PV0BWIX2 + 1;
    end
   /* show 'vendor invoice has been forcepaid'*/
    PVUREC.PVUERNBR = 228;
  end
  return; /* LAST STATEMENT*/
end // end PV0B-FORCE-PAY-IVC

// READ     VENDOR NAME IO5680
Function PV0B-GET-LC-CODE()
   /* STMT GRP = PV0B-GET-LC-CODE*/
   /* *************************************************************/
   /* ***  M A I N T E N A N C E     H I S T O R Y    L O G    ****/
   /* ***------------------------------------------------------****/
   /* ***  03-23-00  JKUNDU  CHNAGED THE BANK CODE FROM OAN TO ****/
   /* ***                    OAM. CHANGED THE DUTY CALCULATION ****/
   /* ***                    (i,e Line ITM Duty should not be  ****/
   /* ***                     equal to  line itm duty * LN qty ****/
   /* ***  04-04-00  JKUNDU  Corrected the SELECT options while****/
   /* ***                    calling IO mode VPOITM04 for WHSE ****/
   /* ***                    ,XREF and XCT CODE.               ****/
   /* *************************************************************/
   /* ***  CANCEL VENDOR INVOICE - PF17                        ****/
   /* ***  For each line item record read in PV0B-ADD-CNCL-GLS ****/
   /* ***  ACCUMULATE THE 'LC' TOTAL AND INVOICE TOTAL FOR UNITS **/
   /* ***  FOB, DUTY AND COMMISSOINS. THIS WILL BE USED LATER  ****/
   /* ***  TO COMPUTE AN ADJUSTMENT FACTOR AND GL ADJUSTMENT   ****/
   /* ***  AMOUNTS TO BE INSERTED IN DPINVC.VGLTRN01.          ****/
   /* *************************************************************/
  ;
  set VPOITM04 empty;
  set SQLCA empty;
  ;
  PV0BW01.PV0BW-CURR-IBANK-CD = " ";
  ;
    /* GET XID-IBANK-CD FROM VPVHDR01 IF PC-DSCT-XCT-CD NOT BLANK*/
  ;
  if (PVAREC.PC6XCTCD != " ")
    ;
    VPOITM04.PC3PONBR = PVBREC.PC3PONBR;
    VPOITM04.PC6XCTCD = PVAREC.PC6XCTCD;
    ;
    ;
    /* OPEN CURSOR FOR SCREEN 2 LIST OF DISTINCT PAYMENTS*/
    PVYREC.PVYFNC = "SG";
    PV0B-CALL-VPOITM04(); /* IOMOD VPVPMT01*/
    ;
    ;
    while (SQLCA.VAGen_SQLCODE == 0
     && PV0BW01.PV0BW-CURR-IBANK-CD == "   ")
      /* FETCH LINES FROM VPVPMT01*/
      PVYREC.PVYFNC = "NG";
      PV0B-CALL-VPOITM04(); /* IOMOD VPVPMT01*/
      ;
      if (SQLCA.VAGen_SQLCODE == 0)
        if (VPOITM04.XIB-IBANK-CD != "  ")
          PV0BW01.PV0BW-CURR-IBANK-CD = VPOITM04.XIB-IBANK-CD;
          ;
        end
      end
    end
    ;
    /* CLOSE CURSOR FOR VPVPMT01*/
    PVYREC.PVYFNC = "CG";
    PV0B-CALL-VPOITM04(); /* IOMOD VPVPMT01*/
  end
  ;
  ;
    /* GET XID-IBANK-CD FROM VPVHDR01 IF XWH-WHSE-CD NOT BLANK*/
  ;
  if (PV0BW01.PV0BW-CURR-IBANK-CD == "   "
   && PVBREC.XWHCD != " ")
    ;
    set SQLCA empty;
    VPOITM04.PC3PONBR = PVBREC.PC3PONBR;
    VPOITM04.XWHCD = PVBREC.XWHCD;
    ;
    PVYREC.PVYFNC = "SZ";
    PV0B-CALL-VPOITM04(); /* IOMOD VPVPMT01*/
    ;
    while (SQLCA.VAGen_SQLCODE == 0
     && PV0BW01.PV0BW-CURR-IBANK-CD == "   ")
      /* FETCH LINES FROM VPVPMT01*/
      PVYREC.PVYFNC = "NZ";
      PV0B-CALL-VPOITM04(); /* IOMOD VPVPMT01*/
      ;
      if (SQLCA.VAGen_SQLCODE == 0)
        if (VPOITM04.XIB-IBANK-CD != "  ")
          PV0BW01.PV0BW-CURR-IBANK-CD = VPOITM04.XIB-IBANK-CD;
          ;
        end
      end
    end
    ;
    /* CLOSE CURSOR FOR VPVPMT01*/
    PVYREC.PVYFNC = "CZ";
    PV0B-CALL-VPOITM04(); /* IOMOD VPVPMT01*/
  end
  ;
  ;
    /* GET XID-IBANK-CD FROM VPVHDR01 IF PC-PRDCU-ID NOT BLANK*/
  ;
  if (PV0BW01.PV0BW-CURR-IBANK-CD == "   "
   && PVBREC.PC2CUXID != " ")
    ;
    set SQLCA empty;
    VPOITM04.PC3PONBR = PVBREC.PC3PONBR;
    VPOITM04.PC2CUXID = PVBREC.PC2CUXID;
    ;
    PVYREC.PVYFNC = "SY";
    PV0B-CALL-VPOITM04(); /* IOMOD VPVPMT01*/
    ;
    while (SQLCA.VAGen_SQLCODE == 0
     && PV0BW01.PV0BW-CURR-IBANK-CD == "   ")
      /* FETCH LINES FROM VPVPMT01*/
      PVYREC.PVYFNC = "NY";
      PV0B-CALL-VPOITM04(); /* IOMOD VPVPMT01*/
      ;
      if (SQLCA.VAGen_SQLCODE == 0)
        if (VPOITM04.XIB-IBANK-CD != "  ")
          PV0BW01.PV0BW-CURR-IBANK-CD = VPOITM04.XIB-IBANK-CD;
          ;
        end
      end
    end
    ;
    /* CLOSE CURSOR FOR VPVPMT01*/
    PVYREC.PVYFNC = "CY";
    PV0B-CALL-VPOITM04(); /* IOMOD VPVPMT01*/
  end
  ;
  if (PV0BW01.PV0BW-CURR-IBANK-CD == "   "
   || PV0BW01.PV0BW-CURR-IBANK-CD == "NOA"
   || PV0BW01.PV0BW-CURR-IBANK-CD == "OAM")
    PV0BW01.PV0BW-LINE-IS-LC-FL = "N";
  else
    PV0BW01.PV0BW-LINE-IS-LC-FL = "Y";
    if (PV0BW01.PV0BW-CURR-IBANK-CD in PV0BW01.XIB-IBANK-CD)
      PV0BW01.PV0BWIX3 = sysVar.arrayIndex;
    else
      /* LOCATES LINE IN BANK TABLE HAVING THE CURRENT BANK CODE, OR ADD*/
      /* A NEW LINE TO THE BANK TABLE IF THE CURRENT BANK CODE IS NOT IN*/
                                  /* THE TABLE (IE IF A BLANK BANK CODE IS*/
                                   /* FOUND BEFORE THE ACTUAL BANK*/
      /* CODE.*/
      PV0BW01.PV0BWIX3 = 1;
      while (PV0BW01.PV0BWIX3 < 31
       && PV0BW01.XIB-IBANK-CD[PV0BWIX3] != "   ")
        PV0BW01.PV0BWIX3 = PV0BW01.PV0BWIX3 + 1;
      end
      if (PV0BW01.PV0BWIX3 < 31)
        if (PV0BW01.XIB-IBANK-CD[PV0BWIX3] == "   ")
          PV0BW01.XIB-IBANK-CD[PV0BWIX3] = PV0BW01.PV0BW-CURR-IBANK-CD;
        end
      else
        ;
                                  /* If number of banks exceeds number of*/
                                   /* lines in working storage table*/
        /* abend the program. Expand table if abend occurs.*/
        TA1REC.TA1LOC = "PVOB-GET-LC-CODE";
        TA1REC.TA1DBASE = "DPINVC";
        TA1REC.TA1TBLVU = "VXIBGL01";
        TA1REC.TA1TBLKE = PV0BW01.PV0BW-CURR-IBANK-CD;
        TA1REC.TA1TYPE = "APPL";
        TA1REC.TA1FUNC = "ABND";
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        ;
        XSPVS53(); /* Fatal Error routine*/
        ;
        return; /* Last Statement*/
        ;
      end
    end

    VXIBGL01.XIB-IBANK-CD = VPOITM04.XIB-IBANK-CD;
    PVYREC.PVYFNC = "S ";
    PV0B-CALL-VXIBGL01();
  end
  ;
   /* ADD LINE ITEM FOB, FRGT, COMMISSION AND UNITS TO THE BANK LC*/
   /* TOTAL FIELD, AND THE GENERAL TOTAL*/
  ;
  PV0BW01.PV-LN-ITM-QTY = PV0BW01.PV-LN-ITM-QTY   + PVBREC.PVBLNQTY;
  ;
  PV0BW01.PV-LN-UNT-FOB-AMT = PV0BW01.PV-LN-UNT-FOB-AMT   + PVBREC.PVBLNFOB * PVBREC.PVBLNQTY;
  ;
  PV0BW01.PV-LN-UNT-COMM-AMT = PV0BW01.PV-LN-UNT-COMM-AMT   + PVBREC.PVBLNCOM * PVBREC.PVBLNQTY;
  ;
   /* JKUNDU CHANGES BEGIN - 03/23/00*/
   /* PV0BW01.PV-NISSHO-LN-DTY = PV0BW01.PV-NISSHO-LN-DTY*/
    /* + PVBREC.PVBLNDTY * PVBREC.PVBLNQTY;*/
  PV0BW01.PV-NISSHO-LN-DTY = PV0BW01.PV-NISSHO-LN-DTY   + PVBREC.PVBLNDTY;
   /* JKUNDU CHANGES END   - 03/23/00*/
  ;
  if (PV0BW01.PV0BW-LINE-IS-LC-FL == "Y"
  
   && PV0BW01.PV0BWIX3 != 0)
    /* ADD TO BANK LC TOTALS*/
    ;
    /* LINE ITEM QUANTITY WILL BE USED TO PRO-RATE THE TOTAL FREIGHT*/
    /* SO ONLY THE AMOUNT ASSOCIATED WITH VALID PMT STATUS AND 'LC'*/
    /* WILL BE ADDED TO THE GL TOTAL BY BANK*/
    ;
    if (PV0BW01.PV0BW-FRGT-PMT-STAT == "Y")
      PV0BW01.PV-LC-ITM-QTY[PV0BWIX3] = PV0BW01.PV-LC-ITM-QTY[PV0BWIX3]       + PVBREC.PVBLNQTY;
    end
    ;
    if (PV0BW01.PV0BW-FOB-PMT-STAT == "Y")
      PV0BW01.PV-LC-UNT-FOB-AMT[PV0BWIX3] = PV0BW01.PV-LC-UNT-FOB-AMT[PV0BWIX3]       + PVBREC.PVBLNFOB * PVBREC.PVBLNQTY;
    end
    ;
    /* COMMISSION AMOUNTS WILL NOT BE WRITTEN TO GL RECORDS*/
    /* NO NEED TO COMPUTE THIS TOTAL*/
    /* PV0BW01.PV-LC-UNT-COMM-AMT(PV0BWIX3) =*/
     /* PV0BW01.PV-LC-UNT-COMM-AMT(PV0BWIX3)*/
     /* + PVBREC.PVBLNCOM;*/
    ;
    if (PV0BW01.PV0BW-DUTY-PMT-STAT == "Y")
      /* JKUNDU CHANGES BEGIN - 03/23/00*/
      /* PV0BW01.PV-NISSHO-LC-DTY(PV0BWIX3) =*/
       /* PV0BW01.PV-NISSHO-LC-DTY(PV0BWIX3)*/
       /* + PVBREC.PVBLNDTY * PVBREC.PVBLNQTY;*/
      PV0BW01.PV-NISSHO-LC-DTY[PV0BWIX3] = PV0BW01.PV-NISSHO-LC-DTY[PV0BWIX3]       + PVBREC.PVBLNDTY;
      /* JKUNDU CHANGES END   - 03/23/00*/
    end
    ;
  end
  ;
  return; /* Last Statement*/
  ;
   /* ***  End of PV0B-GET-LC-CODE  ****/
end // end PV0B-GET-LC-CODE

// READ     VENDOR NAME IO5680
Function PV0B-GET-LINE-TOTL()
  ;
   /* *************************************************************/
   /* ***  CANCEL VENDOR INVOICE - PF17                        ****/
   /* ***  Read LINE ITEMS ON FACTORY INVOICE. ACCUMULATE TOTAL****/
   /* ***  OF LINE ITEM FOB, DUTY, QUANTITY, AND COMMISSION.   ****/
   /* ***  DETERMINE WHETHER ITEM IS 'LC', GET BANK ID         ****/
   /* ***  STORE RESULT BY BANK IN PV0BW01 TABLE.              ****/
   /* *************************************************************/
  ;
   /* use SAVED VALUE OF CURRENT VENDOR NUMBER AND VENDOR GROUP*/
  ;
  PVBREC.PVAIVCID = PV0BW02.PV-IVC-ID[PV0BWIX2];
  PVBREC.PVOVENDR = PV0BW02.PV-MSA-VEND-NBR[PV0BWIX2];
  PVBREC.PVOVENDG = PV0BW02.PV-MSA-VEND-GRP[PV0BWIX2];
  ;
   /* OPEN CURSOR FOR SCREEN 2 LIST OF DISTINCT PAYMENTS*/
  PVYREC.PVYFNC = "S2";
  PV0B-CALL-VPVITM01(); /* IOMOD VPVPMT01*/
  ;
  PV0BW01.PV-LN-ITM-QTY = 0;
  PV0BW01.PV-LN-UNT-FOB-AMT = 0;
  PV0BW01.PV-LN-UNT-COMM-AMT = 0;
  PV0BW01.PV-NISSHO-LN-DTY = 0;
  ;
  PV0BW01.PV0BWIX3 = 1;
  while (PV0BW01.PV0BWIX3 < 31)
    PV0BW01.XIB-IBANK-CD[PV0BWIX3] = "   ";
    PV0BW01.PV0BW-SUM-BANK-DSCT[PV0BWIX3] = 0;
    PV0BW01.PV-LC-ITM-QTY[PV0BWIX3] = 0;
    PV0BW01.PV-LC-UNT-FOB-AMT[PV0BWIX3] = 0;
    PV0BW01.PV-LC-UNT-COMM-AMT[PV0BWIX3] = 0;
    PV0BW01.PV-NISSHO-LC-DTY[PV0BWIX3] = 0;
    PV0BW01.PV0BWIX3 = PV0BW01.PV0BWIX3 + 1;
  end
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    /* FETCH LINES FROM VPVPMT01*/
    PVYREC.PVYFNC = "N2";
    PV0B-CALL-VPVITM01(); /* IOMOD VPVPMT01*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && VPVPMT01.PV-PMT-VEND-GRP == PV0BM001.PV-PMT-VEND-GRP
    ) /* GET LC CODE & BANK CODE*/
                                  /* ADD TO LINE TOTALS*/
      PV0B-GET-LC-CODE();
      ;
    end
  end
  ;
   /* CLOSE CURSOR FOR VPVPMT01*/
  PVYREC.PVYFNC = "C2";
  PV0B-CALL-VPVITM01(); /* IOMOD VPVPMT01*/
  ;
  ;
   /* show 'factory invoice cancelled' message*/
  PVUREC.PVUERNBR = 187;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-VPVPMT01  ****/
end // end PV0B-GET-LINE-TOTL

// Get Current GL Period
Function PV0B-GL-PERIOD()
   /* STMT GRP = PV-GL-PERIOD*/
   /* *************************************************************/
   /* ***  M A I N T E N A N C E     H I S T O R Y    L O G    ****/
   /* ***------------------------------------------------------****/
   /* ***  03-21-00  JKUNDU  Initial Creation                  ****/
   /* *************************************************************/
   /* Populate GL period while LC cancelling using current date  **/
   /* *************************************************************/
  ;
  XZCREC.XZCCLNDT = TA2REC.TA2GRGGN;
  set SQLCA empty;
  call "IO0900" ("S ", SQLCA, XZCREC) {isNoRefresh = yes, isExternal = yes}; /* select fiscal month*/
  if (SQLCA.VAGen_SQLCODE == 0)
    PV0BW-FISCAL-MONTH = XZCREC.XZCFISMO;
    PVDREC.PVDPRIOD = PV0BW01.PV0BW-FISCAL-YYMM;
    PVUREC.PVUERROR[PVUERVND] = " ";
    PVUREC.PVUERROR[PVUERIVC] = " ";
  else
    PVUREC.PVUERROR[PVUERVND] = "Y";
    PVUREC.PVUERROR[PVUERIVC] = "Y";
    if (SQLCA.VAGen_SQLCODE == -811)
         /* Multiple Rows Found, Enter Additional Qualifiers*/
      PVUREC.PVUERNBR = 84;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
           /* Data Base Busy; Retry in a few minutes*/
        PVUREC.PVUERNBR = 44;
      else
        TA1REC.TA1LOC = "PV-GL-PERIOD";
        TA1REC.TA1DBASE = "DCORP";
        TA1REC.TA1TBLVU = "VDAYS001";
        XSPVS52(); /* Invoke DB2 Error Handler*/
      end
    end
  end
  return;
end // end PV0B-GL-PERIOD

// CHECK    PV Standard PF Keys
Function PV0B-PFKEY-ACTION()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      CHECK PV PF Keys and Exit Requests                ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (converseVar.eventKey is pf1)
    XSPF1();
  else
    if (converseVar.eventKey is pf4)
      if (PV0BW01.PV0BWMAP == "1")

        PV0BS-XFER-TO-PV();
        if (PVUREC.PVUERROR[PVUERGEN] == "Y")
          return;
        end
          /* GO TO PV0A;*/
      else
        XSPF4();
      end
    else
      if (converseVar.eventKey is pf5)
        if (PV0BW01.PV0BWMAP == "1")
                                  /* don't do anything yet, pv0b980 will*/
                                   /* take care of setting map flag*/
          /* MOVE '2' TO PV0BW01.PV0BWMAP;*/
        end
        if (PV0BW01.PV0BWMAP == "2")
          /* count number of lines selected for detail view if the total*/
                                  /* is zero then stay on map 2 and show a*/
                                   /* 'no lines selected' msg.*/
          PV0BW01.PV0BW-SELECT-LINE-COUNT = 0;
          ;
          PV0BW01.PV0BWIX4 = 0;
          while (PV0BW01.PV0BWIX4 < 10)
            PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
            if (PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] == "S")
              PV0BW01.PV0BW-SELECT-LINE-COUNT = PV0BW01.PV0BW-SELECT-LINE-COUNT + 1;
              PVUREC.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
              PVUREC.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
              PVUREC.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
              PVUREC.PV-IVC-ID = PV0BM002.PV-IVC-ID[PV0BWIX4];
              PVUREC.PV-MSA-VEND-NBR = PV0BM002.PV-MSA-VEND-NBR[PV0BWIX4];
              PVUREC.PV-MSA-VEND-GRP = PV0BM002.PV-MSA-VEND-GRP[PV0BWIX4];
            end
          end
          ;
          ;
          PV0BS-XFER-TO-PV();
          if (PVUREC.PVUERROR[PVUERGEN] == "Y")
            return;
          end
          /* GO TO PV0A;*/
        end
        /* IF COMMAREA.CACURRAP EQ 'PV0G';*/
         /* ; /* next sentence*/
        /* ELSE;*/
         /* XSPVS51;*/
        /* END;*/
      else
        if (converseVar.eventKey is pf6)
          if (PV0BW01.PV0BWMAP == "2")
            PV0BW01.PV0BWMAP = "3";
          end
        else
          if (converseVar.eventKey is pf9)
            if (COMMAREA.CACURRAP == "PV0I"
             || COMMAREA.CACURRAP == "PV0B"
             && PV0BW01.PV0BWMAP == "2")
              /* next sentence*/
            else
              XSPVS55();
            end
          else
            if (converseVar.eventKey is pf2
             || converseVar.eventKey is pf3
             || converseVar.eventKey is pf13
             || converseVar.eventKey is pf14)
              PV0BS-XFER-TO-PV();
            end
          end
        end
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of XPPV001  ****/
end // end PV0B-PFKEY-ACTION

// Load Force Reason Table
Function PV0B-PREV-CNCL-TST()
  ;
   /* *******************/
   /* CHECK FORCE TABLE TO SEE IF INVOICE ALREADY CANCELLED*/
   /* IF THE FORCE LINE IS FOUND THEN NO NEED TO REPEAT THE*/
   /* PROCESS - SET PV0BW-PREV-CANCEL-FL = 'Y', ELSE SET TO 'N'.*/
   /* *******************/
  ;
  PV0BW01.PV0BW-PREV-CANCEL-FL = "N";
  PVWREC.PVWERRF = "N";
  ;
   /* PVAREC HAS NOT BEEN READ YET*/
   /* MOVE PVAREC.PVAIVCID TO PVLREC.PVAIVCID;*/
   /* MOVE PVAREC.PVOVENDR TO PVLREC.PVOVENDR;*/
   /* MOVE PVAREC.PVOVENDG TO PVLREC.PVOVENDG;*/
  ;
  PVLREC.PVAIVCID = PV0BW02.PV-IVC-ID[PV0BWIX2];
  PVLREC.PVOVENDR = PV0BW02.PV-MSA-VEND-NBR[PV0BWIX2];
  PVLREC.PVOVENDG = PV0BW02.PV-MSA-VEND-GRP[PV0BWIX2];
  ;
   /* UNLIKE PV0A, WE WILL JUST HARD CODE A CANCEL REASON OF '60'*/
   /* SO THERE WILL BE NO FIELD ON THE MAP TO GET THE VALUE*/
  PVLREC.XFACD = "60";
  PVLREC.PVBLNINB = 0;
  ;
  set SQLCA empty;
  call "IO5440" ("S ", SQLCA, PVLREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    PV0BW01.PV0BW-PREV-CANCEL-FL = "Y";
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* FORCE (CANCEL) ROW NOT FOUND*/
      PV0BW01.PV0BW-PREV-CANCEL-FL = "N";
    else
      PVWREC.PVWERRF = "Y";
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(44);
        return;
      else
        TA1REC.TA1LOCAT[1] = "PV0B-PREV-CNCL-TST";
        TA1REC.TA1LOCAT[2] = "READING DB2 VFORCE01";
        TA1REC.TA1TBLVU = "VPVFORCE1";
        TA1REC.TA1TBLKE = PVAREC.PVAIVCID;
        PV0BS97();
        return;
      end
    end
  end
  ;
end // end PV0B-PREV-CNCL-TST

// CANCEL PROCESS - ADD GL RECS
Function PV0B-REVERSING-GL()
   /* STMT GRP = PV0B-REVERSING-GL*/
   /* *************************************************************/
   /* ***  M A I N T E N A N C E     H I S T O R Y    L O G    ****/
   /* ***------------------------------------------------------****/
   /* ***  12-15-99  GDECKE  WRITE CLEARING GL RECORD          ****/
   /* ***  03-21-00  JKUNDU  USE IOMOD VXIBGL01 INSTEAD OF     ****/
   /* ***                    WORKING STORAGE TABLE PV0BT01 TO  ****/
   /* ***                    GET THE BANK CODE.                ****/
   /* *************************************************************/
   /* ***  CANCEL VENDOR INVOICE - PF17                        ****/
   /* ***  CREATE REVERSING GL RECORD FOR 'LC' DATA.           ****/
   /* *************************************************************/
  ;
  ;
  PV0BW01.PV0BWIX5 = 1;
  while (PV0BW01.PV0BWIX5 < 30
   && PV0BW01.XIB-IBANK-CD[PV0BWIX5] != "   ")
    /* ADD LINES TO VGLTRN01*/
    /* SUM OF PAYMENT AMOUNT * PAYMENT FACTOR*/
    ;
    ;
    /* BUILD GL RECORD*/
    ;
    PVDREC.PVAIVCID = PVAREC.PVAIVCID;
    PVDREC.PVOVENDR = PVAREC.PVOVENDR;
    PVDREC.PVOVENDG = PVAREC.PVOVENDG;
    PVDREC.PVCAETYP = "7";
    /* -------- JKUNDU CHANGES BEGIN - 03/21/00 ----------*/
    ;
    /* SET IX3 BY SEARCHING FOR BANK CODE IN PV0BT01*/
    /* IF PV0BW01.XIB-IBANK-CD(PV0BWIX5) IN PV0BT01.XIB-IBANK-CD;*/
      /* MOVE EZETST TO PV0BW01.PV0BWIX3;*/
    /* ELSE;*/
      /* MOVE 1 TO PV0BW01.PV0BWIX3;*/
    /* END;*/
    ;
    /* MOVE PV0BT01.GL-ENTITY-ID(PV0BWIX3) TO PVDREC.GLAENT;*/
    /* MOVE PV0BT01.GL-RSP-CTR-ID(PV0BWIX3) TO PVDREC.GLARCID;*/
    /* MOVE PV0BT01.GL-NATRL-ACCT-ID(PV0BWIX3) TO PVDREC.GLANTAC;*/
    /* MOVE PV0BT01.GL-SUB-ACCT-ID(PV0BWIX3) TO PVDREC.GLASUB;*/
    /* MOVE PV0BT01.GL-PROJ-ID(PV0BWIX3) TO PVDREC.GLAPRJ;*/
    VXIBGL01.XIB-IBANK-CD = PV0BW01.XIB-IBANK-CD[PV0BWIX5];
    PVYREC.PVYFNC = "S ";
    PV0B-CALL-VXIBGL01();
    if (SQLCA.VAGen_SQLCODE == 0)
      PVDREC.GLAENT = VXIBGL01.GL-ENTITY-ID;
      PVDREC.GLARCID = VXIBGL01.GL-RSP-CTR-ID;
      PVDREC.GLANTAC = VXIBGL01.GL-NATRL-ACCT-ID;
      PVDREC.GLASUB = VXIBGL01.GL-SUB-ACCT-ID;
      PVDREC.GLAPRJ = VXIBGL01.GL-PROJ-ID;
      /* -------- JKUNDU CHANGES END - 03/21/00 ----------*/
      PVDREC.PVCOVRFL = "N";
      PVDREC.XAOCD = " ";
      PVDREC.XXXUSRID = " ";
      /* JKUNDU CHANGES BEGIN - 03/20/00*/
      /* MOVE 'APPO6' TO PVDREC.PVDJENBR;*/
      /* MOVE 5 TO PVDREC.PVDPRIOD;*/
      PVDREC.PVDJENBR = "APPORV";
      PV0B-GL-PERIOD();
      PVDREC.PVDRFNBR = 9322;
      /* JKUNDU CHANGES END   - 03/20/00*/
      PV0BW01.PV0BW-SUM-BANK-DSCT[PV0BWIX5] = PV0BW01.PV-LC-UNT-FOB-AMT[PV0BWIX5] +       PV0BW01.PV-NISSHO-LC-DTY[PV0BWIX5] +       (PV0BW01.PV-IVC-TOT-FRGT * (PV0BW01.PV-LC-ITM-QTY[PV0BWIX5] /       PV0BW01.PV-LN-ITM-QTY));
      ;
      /* do not include the following in the reversing gl entry*/
      /* PV0BW01.PV-LC-UNT-COMM-AMT(PV0BWIX5)*/
      /* PV0BW01.PV-NISSHO-BANK-CHG*/
      /* PV0BW01.PV-NISSHO-BRKR-CHG*/
      /* PV0BW01.PV-NISSHO-OTH-CHG1*/
      /* PV0BW01.PV-NISSHO-OTH-CHG2*/
      /* PV0BW01.PV-NISSHO-INT-CHG1*/
      /* PV0BW01.PV-NISSHO-INT-CHG2*/
      /* PV0BW01.PV-NISSHO-INT-CHG3*/
      ;
      /* JKUNDU CHANGE BEGINS - 04/27/00*/
      PVDREC.PVCACAMT = PV0BW01.PV0BW-SUM-BANK-DSCT[PV0BWIX5];
      /* PV0BW01.PV0BW-SUM-BANK-DSCT(PV0BWIX5) * -1;*/
      /* JKUNDU CHANGE ENDS - 04/27/00*/
      ;
      PV0BW01.PV0BW-SUM-FCTY-DSCT = PV0BW01.PV0BW-SUM-FCTY-DSCT +       PV0BW01.PV0BW-SUM-BANK-DSCT[PV0BWIX5];
      ;
      PVDREC.ZZZSDT = TA2REC.TA2GRGGN;
      PVDREC.ZZZCHGDT = TA2REC.TA2GRGGN;
      PVDREC.ZZZCHGTM = TA2REC.TA2TIMHM;
      PVDREC.ZZZCHGCT = 0;
      ;
      PVYREC.PVYFNC = "A ";
      if (PVDREC.PVCACAMT != 0)
        PV0B-CALL-VGLTRN01();
      end
      /* ADD AMOUNT OF THIS REVERSING GL TO THE BANK TOTAL CLEARING BUCKET*/
      ;
    end
    PV0BW01.PV0BWIX5 = PV0BW01.PV0BWIX5 + 1;
    ;
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-CLEARING-GL  ****/
end // end PV0B-REVERSING-GL

// READ     VENDOR NAME IO5680
Function PV0B-VPVPMT01-MAP2()
   /* STMT GROUP - PV0B-VPVPMT01-MAP2*/
   /* GDECKE  12-20-99  NISSHO CONTINGENCY - BUILD LIST OF*/
   /* DISTINCT FACTORY INVOICES.*/
   /* JKUNDU  02-05-00  CHANGED TO DIPLAY ERROR MESSAGE 98*/
   /* IF RECORD NOT FOUND DURING CANCELLATION*/
   /* BPARAN  01-30-01  CHANGED FOR UNIQUE SELECT FOR GIVEN*/
   /* CI# AND CE# COMBINATION*/
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* ***  Read PAYMENT TABLE - GET LIST OF DISTINCT FACTORY   ****/
   /* ***  INVOICE, VENDOR, GROUP FOR A GIVEN VENDOR IVC       ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
   /* use SAVED VALUE OF CURRENT VENDOR NUMBER AND VENDOR GROUP*/
  PV0BW01.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
  PV0BW01.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
  PV0BW01.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
   /*  */
   /* Tcs addition begins - 01/16/2001.*/
  if (PV0BM001.PV-IVC-ID != " " || 
  PV0BM001.PV-MSA-VEND-NBR != " ")
    PV0BW01.PV-IVC-ID = PV0BM001.PV-IVC-ID;
    PV0BW01.PV-MSA-VEND-NBR = PV0BM001.PV-MSA-VEND-NBR;
    PV0BW01.PV-MSA-VEND-GRP = PV0BM001.PV-MSA-VEND-GRP;
  else
    /* Tcs addition ends - 01/16/2001.*/
    PV0BW01.PV-IVC-ID = " ";
    PV0BW01.PV-MSA-VEND-NBR = " ";
    PV0BW01.PV-MSA-VEND-GRP = " ";
  end
  ;
  VPVPMT01.PV-IVC-ID = PV0BW01.PV-IVC-ID;
  VPVPMT01.PV-MSA-VEND-NBR = PV0BW01.PV-MSA-VEND-NBR;
  VPVPMT01.PV-MSA-VEND-GRP = PV0BW01.PV-MSA-VEND-GRP;
  VPVPMT01.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
  VPVPMT01.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
  VPVPMT01.PV-PMT-VEND-GRP = PV0BW01.PV-PMT-VEND-GRP;
  ;
   /* OPEN CURSOR FOR SCREEN 2 LIST OF DISTINCT PAYMENTS*/
  if (PV0BM001.PV-IVC-ID != " " || 
  PV0BM001.PV-MSA-VEND-NBR != " ")
    PVYREC.PVYFNC = "S4";
  else
    PVYREC.PVYFNC = "S3";
  end
  XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
  ;
  PV0BW-PV0BW02-GROUP = " ";
  PV0BW01.PV0BWIX2 = 0;
  PV0BW04.PV0BW-ARR-MOV-FL = "Y";
  while (SQLCA.VAGen_SQLCODE == 0
   && PV0BWIX2 < 1500)
    /* FETCH LINES FROM VPVPMT01*/
    if (PV0BM001.PV-IVC-ID != " " || 
    PV0BM001.PV-MSA-VEND-NBR != " ")
      PVYREC.PVYFNC = "N4";
    else
      PVYREC.PVYFNC = "N3";
    end
    XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && VPVPMT01.PV-IVC-ID != " ")
      PV0BWIX2 = PV0BWIX2 + 1;
      /* Tcs addition begins - 01/16/2001*/
      PV0BWIX6 = PV0BWIX2 - 1;
      if (PV0BWIX2 > 1)
        if (VPVPMT01.PV-IVC-ID == PV0BW02.PV-IVC-ID[PV0BWIX6])
          PV0BW04.PV0BW-ARR-MOV-FL = "N";
        else
          PV0BW04.PV0BW-ARR-MOV-FL = "Y";
        end
      end
      if (PV0BW04.PV0BW-ARR-MOV-FL == "Y")
      /* Tcs addition ends - 01/16/2001*/
        PV0BW02.PV-IVC-ID[PV0BWIX2] = VPVPMT01.PV-IVC-ID;
        PV0BW02.PV-MSA-VEND-NBR[PV0BWIX2] = VPVPMT01.PV-MSA-VEND-NBR;
        PV0BW02.PV-MSA-VEND-GRP[PV0BWIX2] = VPVPMT01.PV-MSA-VEND-GRP;
        PV0BW01.PV0BWBOT = PV0BW01.PV0BWIX2;
      end
      /* JKUNDU CHANGE BEGINS - 02/05/00*/
    else
      if (PV0BW01.PV0BWIX2 == 0)
        /* Requested Record Not Found*/
        PVUREC.PVUERNBR = 98;
      end
      /* JKUNDU CHANGE ENDS - 02/05/00*/
    end
  end
  ;
   /* CLOSE CURSOR FOR VPVPMT01*/
  if (PV0BM001.PV-IVC-ID != " " || 
  PV0BM001.PV-MSA-VEND-NBR != " ")
    PVYREC.PVYFNC = "C4";
  else
    PVYREC.PVYFNC = "C3";
  end
  XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
  ;
  if (PVUREC.PVUERNBR == 199
   && PV0BW04.PVOBW-ERR-MSG-FL == "Y")
    PVUREC.PVUERNBR = 241;
  end
  PV0BW04.PVOBW-ERR-MSG-FL = "N";
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-VPVPMT01  ****/
end // end PV0B-VPVPMT01-MAP2

// READ     VENDOR NAME IO5680
Function PV0B-VPVPMT01-MAP3()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* ***  Read PAYMENT TABLE - GET COMPLETE LIST OF ALL PAYMENT***/
   /* ***  RECORDS FOR THE FACTORY INVOICES SELECTED ON MAP2    ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
   /* use SAVED VALUE OF CURRENT VENDOR NUMBER AND VENDOR GROUP*/
  ;
  ;
  PV0BW01.PV0BWIX2 = 0;
  PV0BW01.PV0BWIX3 = 0;
  set SQLCA empty;
  PV0BW03.PV0BW-PV0BW03-GROUP = " ";
  PV0BW04.PV0BW-PV0BW03-GROUP = " ";
  ;
  while (PV0BW01.PV0BWIX2 < 1000
   && SQLCA.VAGen_SQLCODE == 0)
    PV0BW01.PV0BWIX2 = PV0BW01.PV0BWIX2 + 1;
    if (PV0BW02.PV0BW-SELECT-FLAG[PV0BWIX2] == "S")
      VPVPMT01.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
      VPVPMT01.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
      VPVPMT01.PV-PMT-VEND-GRP = PV0BW01.PV-PMT-VEND-GRP;
      VPVPMT01.PV-IVC-ID = PV0BW02.PV-IVC-ID[PV0BWIX2];
      VPVPMT01.PV-MSA-VEND-NBR = PV0BW02.PV-MSA-VEND-NBR[PV0BWIX2];
      VPVPMT01.PV-MSA-VEND-GRP = PV0BW02.PV-MSA-VEND-GRP[PV0BWIX2];
      PV0BW02.PV0BW-SELECT-FLAG[PV0BWIX2] = "V";
      ;
      /* OPEN CURSOR FOR SCREEN 2 LIST OF DISTINCT PAYMENTS*/
      PVYREC.PVYFNC = "S4";
      XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      ;
      /* CYCLE THROUGH ALL LINES IN TABLE 2 THAT HAVE 'S' FOR SELECT*/
      /* INCREMENT TABLE 2 INDEX TO GET NEXT ROW*/
      /* DO NOT RESET TABLE 3 INDEX WHILE FETCHING ROWS RELATED TO*/
      /* TABLE 2 'S' LINES. CHANGE 'S' TO 'V' AFTER THE DETAIL PAYMENT*/
      /* RECORDS FOR THAT TABLE HAVE BEEN SELECTED.*/
      ;
      while (SQLCA.VAGen_SQLCODE == 0
       && PV0BWIX3 < 1400)
        /* FETCH LINES FROM VPVPMT01*/
        PVYREC.PVYFNC = "N4";
        XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
        ;
        if (SQLCA.VAGen_SQLCODE == 0)
          PV0BWIX3 = PV0BWIX3 + 1;
          PV0BW03.PV-IVC-ID[PV0BWIX3] = VPVPMT01.PV-IVC-ID;
          PV0BW03.PV-MSA-VEND-GRP[PV0BWIX3] = VPVPMT01.PV-MSA-VEND-GRP;
          PV0BW03.XPV-IVC-TYP-CD[PV0BWIX3] = VPVPMT01.XPV-IVC-TYP-CD;
          PV0BW03.XIP-IVC-STAT-CD[PV0BWIX3] = VPVPMT01.XIP-IVC-STAT-CD;
          PV0BW04.PV-MSA-VEND-NBR[PV0BWIX3] = VPVPMT01.PV-MSA-VEND-NBR;
          PV0BW04.PV-PMT-IVC-AMT[PV0BWIX3] = VPVPMT01.PV-PMT-IVC-AMT;
          PV0BW04.PV-IVC-TO-AP-DT[PV0BWIX3] = VPVPMT01.PV-IVC-TO-AP-DT;
          PV0BW01.PV0BWBOT-MAP3 = PV0BWIX3;
        end
      end
      ;
      /* CLOSE CURSOR FOR VPVPMT01*/
      PVYREC.PVYFNC = "C4";
      XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
      ;
    end
    /* force this loop to end when the last line is reached*/
    if (PV0BW02.PV-IVC-ID[PV0BWIX2] == " ")
      PV0BW01.PV0BWIX2 = 1000;
      PV0BW01.PV0BWIX3 = 1400;
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-VPVPMT01  ****/
end // end PV0B-VPVPMT01-MAP3

// READ     VENDOR NAME IO5680
Function PV0B-VPVPMT01-MAP4()
   /* STMT GROUP - PV0B-VPVPMT01-MAP4*/
   /* JKUNDU  02-24-00  Initial Construction - NISSHO CONTINGENCY*/
   /* Project.*/
   /*  */
   /* *************************************************************/
   /* ***                                                      ****/
   /* ***  Read PAYMENT TABLE - GET LIST OF DISTINCT FACTORY   ****/
   /* ***  INVOICE, VENDOR, GROUP FOR A GIVEN VENDOR IVC       ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
   /* use SAVED VALUE OF CURRENT VENDOR NUMBER AND VENDOR GROUP*/
  PV0BW01.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
  PV0BW01.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
  PV0BW01.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
   /*  */
  PV0BW01.PV-IVC-ID = " ";
  PV0BW01.PV-MSA-VEND-NBR = " ";
  PV0BW01.PV-MSA-VEND-GRP = " ";
  ;
  VPVPMT01.PV-IVC-ID = PV0BW01.PV-IVC-ID;
  VPVPMT01.PV-MSA-VEND-NBR = PV0BW01.PV-MSA-VEND-NBR;
  VPVPMT01.PV-MSA-VEND-GRP = PV0BW01.PV-MSA-VEND-GRP;
  VPVPMT01.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
  VPVPMT01.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
  VPVPMT01.PV-PMT-VEND-GRP = PV0BW01.PV-PMT-VEND-GRP;
  ;
   /* OPEN CURSOR FOR SCREEN 2 LIST OF DISTINCT PAYMENTS*/
  PVYREC.PVYFNC = "S2";
  XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
  ;
   /* MOVE ' ' TO PV0BW-PV0BW02-GROUP;*/
  PV0BW01.PV0BW-FORCE-PAY-FL = "N";
  PV0BW01.PV0BWIX2 = 0;
  while (SQLCA.VAGen_SQLCODE == 0
   && PV0BW01.PV0BW-FORCE-PAY-FL == "N"
   && PV0BWIX2 < 1500)
    /* FETCH LINES FROM VPVPMT01*/
    PVYREC.PVYFNC = "N2";
    XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && VPVPMT01.PV-PMT-VEND-GRP == PV0BM001.PV-PMT-VEND-GRP
     && VPVPMT01.PV-IVC-ID != " ")
      PV0BWIX2 = PV0BWIX2 + 1;
      if (VPVPMT01.XIP-IVC-STAT-CD == "ER")
        PVUREC.PVUERNBR = 224;
        PV0BW01.PV0BW-FORCE-PAY-FL = "Y";
      end
      if (VPVPMT01.XIP-IVC-STAT-CD == "SN")
        PVUREC.PVUERNBR = 225;
        PV0BW01.PV0BW-FORCE-PAY-FL = "Y";
      end
      if (VPVPMT01.XIP-IVC-STAT-CD == "CX")
        PVUREC.PVUERNBR = 226;
        PV0BW01.PV0BW-FORCE-PAY-FL = "Y";
      end
      if (VPVPMT01.XIP-IVC-STAT-CD == "FP")
        PVUREC.PVUERNBR = 227;
        PV0BW01.PV0BW-FORCE-PAY-FL = "Y";
      end
      if (VPVPMT01.XIP-IVC-STAT-CD == "UN")
        PV0BW02.PV-IVC-ID[PV0BWIX2] = VPVPMT01.PV-IVC-ID;
        PV0BW02.PV-MSA-VEND-NBR[PV0BWIX2] = VPVPMT01.PV-MSA-VEND-NBR;
        PV0BW02.PV-MSA-VEND-GRP[PV0BWIX2] = VPVPMT01.PV-MSA-VEND-GRP;
        /* JKUNDU CHANGE BEGINS - 04/17/00*/
        PV0BW05.XPV-IVC-TYP-CD[PV0BWIX2] = VPVPMT01.XPV-IVC-TYP-CD;
        PV0BW05.PV-PMT-IVC-AMT[PV0BWIX2] = VPVPMT01.PV-PMT-IVC-AMT;
        PV0BW05.PV-IVC-TO-AP-DT[PV0BWIX2] = VPVPMT01.PV-IVC-TO-AP-DT;
        PV0BW05.PV-PMT-IVC-DT[PV0BWIX2] = VPVPMT01.PV-PMT-IVC-DT;
        PV0BW05.PV-PMT-IVC-DUE-DT[PV0BWIX2] = VPVPMT01.PV-PMT-IVC-DUE-DT;
        PV0BW05.ZZ-SDT[PV0BWIX2] = VPVPMT01.ZZ-SDT;
        PV0BW05.ZZ-CHNG-CNT[PV0BWIX2] = VPVPMT01.ZZ-CHNG-CNT;
        /* JKUNDU CHANGE ENDS  - 04/17/00*/
        PV0BW01.PV0BWBOT = PV0BW01.PV0BWIX2;
      end
    else
      if (PV0BW01.PV0BWIX2 == 0)
        /* Requested Record Not Found*/
        PVUREC.PVUERNBR = 98;
      end
    end
  end
  ;
   /* CLOSE CURSOR FOR VPVPMT01*/
  PVYREC.PVYFNC = "C2";
  XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B-VPVPMT01  ****/
end // end PV0B-VPVPMT01-MAP4

// PROCESS  Main Logic
Function PV0B000()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **            PV0B    M a i n    L o g i c                ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  PV0B001(); /* Initialization Logic*/
  ;
  PV0BS01(); /* Check Who Invoked me*/
  ;
  while (PVUREC.PVUENDOA == "N")
    PVUREC.PVUERROR[PVUERGEN] = " "; /* Reset General Error Flag*/
    if (PV0BW01.PV0BWMAP == "1")
      PV0B100(); /* Converse PV0BM100*/
      PV0B110(); /* Check PF Keys and Exits*/
      PV0B120(); /* Check what to do next*/
    else
      if (PV0BW01.PV0BWMAP == "2")
        if (COMMAREA.CAFROMAP == "PV0N")
          PV0BM001.PV-PMT-VEND-IVC-ID = PVUREC.PV-PMT-VEND-IVC-ID;
          PV0BM001.PV-PMT-VEND-NBR = PVUREC.PV-PMT-VEND-NBR;
          PV0BM001.PV-PMT-VEND-GRP = PVUREC.PV-PMT-VEND-GRP;
          PV0BW04.PVOBW-ERR-MSG-FL = PVUREC.PV-CONTROL-OPTION;
          PV0B120();
        end
        PV0B200(); /* Converse PV0BM200*/
        PV0B210(); /* Check PF Keys and Exits*/
        PV0B220(); /* Check what to do next*/
      else
        PV0B300(); /* Converse PV0BM300*/
        PV0B310(); /* Check PF Keys and Exits*/
        PV0B320(); /* Check what to do next*/
      end
    end
  end
  ;
  exit program;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B000  ****/
end // end PV0B000

// INIT     Routine
Function PV0B001()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **            Initialization   L o g i c                  ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  set PV0BW01 empty;
  set PV0BW02 empty;
  set PV0BW03 empty;
  set PV0BW04 empty;
  set PV0BM001 initial;
  ;
   /* SET FY1REC EMPTY;*/
  set TA2REC empty;
  ;
  XSPVS01(); /* Initialize PV Common Routine Fields*/
  ;
  TA1REC.TA1PGMNM = "PV0B"; /* Initialize DB2 Error Record*/
  TA1REC.TA1MAP = "PV0BM001";
  ;
    /* Get System Date and Time*/
  PV0BS09();
  ;
    /* Set Maximum Scroll Lines*/
  PV0BW01.PV0BWMAX = 10;
  PV0BW01.PV0BWMAX-MAP3 = 10;
  ;
   /* Set Active Screen*/
  PV0BW01.PV0BWMAP = "1";
  PV0BW01.PV0BWPRV = "1";
  PV0BW01.PV0BWLST = "2";
  if (COMMAREA.CAFROMAP == "PV0N")
    PV0BW01.PV0BWMAP = "2";
  end
  ;
   /* if control passed from pv0a, use saved values to fill in pv0bm001*/
  if (COMMAREA.CAFROMAP == "PV0A")
    if (PVUREC.PV-IVC-ID != " ")
      PV0BM001.PV-IVC-ID = PVUREC.PV-IVC-ID;
    end
    if (PVUREC.PV-MSA-VEND-NBR != " ")
      PV0BM001.PV-MSA-VEND-NBR = PVUREC.PV-MSA-VEND-NBR;
    end
    if (PVUREC.PV-MSA-VEND-GRP != " ")
      PV0BM001.PV-MSA-VEND-GRP = PVUREC.PV-MSA-VEND-GRP;
    end
    if (PVUREC.PV-PMT-VEND-IVC-ID != " ")
      PV0BM001.PV-PMT-VEND-IVC-ID = PVUREC.PV-PMT-VEND-IVC-ID;
    end
    if (PVUREC.PV-PMT-VEND-NBR != " ")
      PV0BM001.PV-PMT-VEND-NBR = PVUREC.PV-PMT-VEND-NBR;
    end
    if (PVUREC.PV-PMT-VEND-GRP != " ")
      PV0BM001.PV-PMT-VEND-GRP = PVUREC.PV-PMT-VEND-GRP;
    end
  end
   /* JKUNDU CHANGES BEGIN - 02/11/00*/
  if (COMMAREA.CAFROMAP == "PV0D")
    PVUREC.PVUGROUP = COMMAREA.CA-USER-WORKAREA-2K-B;
    if (PVUREC.PV-IVC-ID != " ")
      PV0BM001.PV-IVC-ID = PVUREC.PV-IVC-ID;
    end
    if (PVUREC.PV-MSA-VEND-NBR != " ")
      PV0BM001.PV-MSA-VEND-NBR = PVUREC.PV-MSA-VEND-NBR;
    end
    if (PVUREC.PV-MSA-VEND-GRP != " ")
      PV0BM001.PV-MSA-VEND-GRP = PVUREC.PV-MSA-VEND-GRP;
    end
    if (PVUREC.PV-PMT-VEND-IVC-ID != " ")
      PV0BM001.PV-PMT-VEND-IVC-ID = PVUREC.PV-PMT-VEND-IVC-ID;
    end
    if (PVUREC.PV-PMT-VEND-NBR != " ")
      PV0BM001.PV-PMT-VEND-NBR = PVUREC.PV-PMT-VEND-NBR;
    end
    if (PVUREC.PV-PMT-VEND-GRP != " ")
      PV0BM001.PV-PMT-VEND-GRP = PVUREC.PV-PMT-VEND-GRP;
    end
  end
   /* JKUNDU CHANGES END   - 02/11/00*/
  ;
  return; /* Last Statement*/
  ;
   /* ***  End of PV0B001  ****/
end // end PV0B001

// CONVERSE PV0BM001 SCREEN
Function PV0B100()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **       Converse Invoice Header Inquiry Screen           ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (COMMAREA.CAFROMAP == "PV0N")
    COMMAREA.CAFROMAP = "PV0B";
  end
  if (PVUREC.PVUERROR[PVUERIVC] == "Y")
    set PV0BM001.PV-PMT-VEND-IVC-ID cursor, bold;
  else
    if (PVUREC.PVUERROR[PVUERVND] == "Y")
      set PV0BM001.PV-PMT-VEND-NBR cursor, bold;
    end
  end
  ;
  XSPVS57(); /* Deliver a message*/
  if (PVUREC.CAMSG == " ")
     /* next sentence*/
  else
    PV0BM001.VAGen_EZEMSG = PVUREC.CAMSG;
  end
  ;
  PV0BM001.TA2GRGB = TA2REC.TA2GRGB;
  PV0BM001.TA2TIMED = VGVar.currentFormattedTime;
  ;
  converse PV0BM001 ;
  ;
  set PV0BM001.PV-MSA-VEND-NBR initialAttributes; /* Reset Attributes*/
  set PV0BM001.PV-MSA-VEND-GRP initialAttributes;
  set PV0BM001.PV-IVC-ID initialAttributes;
  set PV0BM001.PV-PMT-VEND-NBR initialAttributes; /* Reset Attributes*/
  set PV0BM001.PV-PMT-VEND-GRP initialAttributes;
  set PV0BM001.PV-PMT-VEND-IVC-ID initialAttributes;
  set PV0BM001.PV-PMT-VEND-IVC-ID cursor;
  PVUREC.PVUERNBR = 0;
  PVUREC.PVUERROR[PVUERGEN] = " ";
  PVUREC.PVUERROR[PVUERVND] = " ";
  PVUREC.PVUERROR[PVUERIVC] = " ";
  PVUREC.PVUERROR[PVUERKEY] = " ";
  ;
  return; /* Last Statement*/
  ;
   /* ***  End of PV0B001  ****/
end // end PV0B100

// CHECK    PF Keys and Exits
Function PV0B110()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      This will Check for PF Keys and Exit Requests     ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  PV0B-PFKEY-ACTION(); /* Check PV Standard PF Keys*/
  ;
  if (COMMAREA.CASECRC == 0) /* Check for Security Error*/
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf1
     || converseVar.eventKey is pf2
     || converseVar.eventKey is pf3
     || converseVar.eventKey is pf4
     || converseVar.eventKey is pf5
     || converseVar.eventKey is pf6
     || converseVar.eventKey is pf9
     || converseVar.eventKey is pf21)
       /* next sentence*/
    else
       /* Invalid PF Key*/
      PVUREC.PVUERNBR = 1;
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B110  ****/
end // end PV0B110

// CHECK    What to do next
Function PV0B120()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Check what to do next                             ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  ;
  if (PVUREC.PVUERROR[PVUERGEN] == "Y") /* Check General Error Flag*/
     /* next sentence*/
  else
    PV0BS30(); /* Check FASTPATH*/
    if (PVUREC.PVUERROR[PVUERGEN] == "Y") /* Check General Error Flag*/
       /* next sentence*/
    else
      PV0B150(); /* Check if allowed to continue*/
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B120  ****/
end // end PV0B120

// CHECK    if allowed to continu
Function PV0B150()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Check if the user is allowed to continue.         ***/
   /* *** rgomat 02/14/01 code has been modified for PF6 key   ****/
   /* ***                 operation to get the correct CE #    ****/
   /* *************************************************************/
  ;
  if (PVUREC.PVUALLWD == "N") /* Not allowed to continue.*/
    if (converseVar.eventKey is enter) /* Check if ENTER key was pressed.*/
      PV0BS03(); /* Send the user back.*/
    else
      if (converseVar.eventKey is pf5
       || converseVar.eventKey is pf17
       || converseVar.eventKey is pf9
       || converseVar.eventKey is pf10
       || converseVar.eventKey is pf6
       || converseVar.eventKey is pf21)
         /* next sentence*/
      end
    end
  else
    if (converseVar.eventKey is enter
     && PV0BW01.PV0BWMAP == "1")
      PV0BS60(); /* Validate Data Keyed in*/
    else
      if (converseVar.eventKey is pf4)
        if (PV0BM001.PV-IVC-ID == " "
         || PV0BM001.PV-MSA-VEND-NBR == " "
         || PV0BM001.PV-PMT-VEND-IVC-ID == " "
         || PV0BM001.PV-PMT-VEND-NBR == " ")
          PVUREC.PVUERNBR = 185;
          PVUREC.PVUERROR[PVUERGEN] = "Y";
          return;
        end
      else
        if (converseVar.eventKey is pf17)
          PV0B-CNCL-VEND-IVC();
        else
          /* JKUNDU CHANGES BEGINS - 02/04/00*/
          if (converseVar.eventKey is pf6)
            PV0BM001.PV-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
            PV0BM001.PV-MSA-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
            PV0BM001.PV-MSA-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
            return;
            /* TCS CHANGE  BEGINS - 02/14/01*/
          else
            if (converseVar.eventKey is pf7)
              PV0BS-PF7-INQUIRE();
              return;
              /* TCS CHANGE  end    - 02/14/01*/
            else
              /* JKUNDU CHANGES ENDS  - 02/04/00*/
              /* JKUNDU CHANGES BEGINS - 02/23/00*/
              if (converseVar.eventKey is pf10)
                if (COMMAREA.CACLVL[3] == "Y")
                  PV0B-FORCE-PAY-IVC();
                else
                  PVUREC.PVUERNBR = 229;
                end
              else
                /* JKUNDU CHANGES ENDS  - 02/23/00*/
                if (converseVar.eventKey is pf5 || 
                (converseVar.eventKey is enter && 
                COMMAREA.CAFROMAP == "PV0N"))
                  PV0BS60(); /* Validate Data Keyed in*/
                  if (COMMAREA.CAFROMAP == "PV0N")
                    PVUREC.PVUERROR[PVUERIVC] = " ";
                  end
                  if (PVUREC.PVUERROR[PVUERVND] != "Y"
                   && PVUREC.PVUERROR[PVUERIVC] != "Y")
                    PV0BW01.PV0BWMAP = "2";
                    PV0B-VPVPMT01-MAP2(); /* BUILD TABLE FOR MAP2*/
                    if (PV0BW01.PV0BWIX2 == 0)
                      PVUREC.PVUERNBR = 186;
                      PV0BW01.PV0BWMAP = "1";
                      return;
                    end
                    /* SHOW FIRST PAGE OF DATA FROM MAP2 TABLE*/
                    PV0BW01.PV0BWCUR = 2;
                    PV0B270(); /* Go Back One Screen*/
                  end
                else
                  if (converseVar.eventKey is pf9)
                    if (PVUREC.PVUERROR[PVUERIVC] == "Y")
                      /* Enter Invoice Key Fields and Press Enter.*/
                      PVUREC.PVUERNBR = 3;
                      return;
                    else
                      PV0BW01.PV0BWMAP = PV0BW01.PV0BWLST;
                    end
                  else
                    if (converseVar.eventKey is pf21)
                      if (PVUREC.PVUERROR[PVUERIVC] == "Y")
                        /* Enter Invoice Key Fields and Press Enter.*/
                        PVUREC.PVUERNBR = 3;
                        return;
                      else
                        PV0BW01.PV0BWPRV = PV0BW01.PV0BWMAP;
                        PV0BW01.PV0BWMAP = "1";
                      end
                    end
                  end
                end
              end
            end /* JKUNDU CHANGES - 02/04/00*/
          end /* JKUNDU CHANGES - 02/23/00*/
        end
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B150  ****/
end // end PV0B150

// CONVERSE Factory Invoice Selec
Function PV0B200()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **       Converse Invoice Header Inquiry Screen           ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  XSPVS57(); /* Deliver a message*/
  if (COMMAREA.CASECRC == 0)
     /* next sentence*/
  else
    PV0BM002.VAGen_EZEMSG = PVUREC.CAMSG;
  end
  ;
  PV0BM002.TA2TIMED = VGVar.currentFormattedTime;
  ;
  if (COMMAREA.CAFROMAP == "PV0P")
    set PVUREC empty;
  end
  ;
  converse PV0BM002 ;
  ;
  set PV0BM002.PV0BM-SELECT-FLAG[1] cursor;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B200  ****/
end // end PV0B200

// CHECK    PF Keys and Exits
Function PV0B210()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      This will Check for PF Keys and Exit Requests     ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  PV0B-PFKEY-ACTION(); /* Check PV PF Keys*/
  ;
  if (COMMAREA.CASECRC == 0) /* Check Security Error*/
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf3
     || converseVar.eventKey is pf9
     || converseVar.eventKey is pf10
     || converseVar.eventKey is pf11
     || converseVar.eventKey is pf21)
       /* next sentence*/
    else
      if (converseVar.eventKey is pf7)
         /* BACKWARD Performed. Please proceed.*/
        PVUREC.PVUERNBR = 5;
      else
        if (converseVar.eventKey is pf8)
           /* FORWARD Performed. Please proceed.*/
          PVUREC.PVUERNBR = 4;
        else
          if (converseVar.eventKey is pf4
           || converseVar.eventKey is pf5)
            /* next sentence*/
          else
            /* Invalid PF Key*/
            PVUREC.PVUERNBR = 1;
          end
        end
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B210  ****/
end // end PV0B210

// CHECK    What to do next
Function PV0B220()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Check what to do next                             ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  ;
  if (PVUREC.PVUERROR[PVUERGEN] == "Y") /* Check General Error Flag*/
     /* next sentence*/
  else
    PV0BS30(); /* Check FASTPATH*/
    if (PVUREC.PVUERROR[PVUERGEN] == "Y") /* Check General Error Flag*/
       /* next sentence*/
    else
      PV0B250(); /* Check if allowed to continue*/
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B220  ****/
end // end PV0B220

// CHECK    if allowed to continu
Function PV0B250()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Check if the user is allowed to continue.         ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (PVUREC.PVUALLWD == "N") /* Not allowed to continue.*/
    if (converseVar.eventKey is enter) /* Check if ENTER key was pressed.*/
      PV0BW01.PV0BWMAP = "1";
    else
      if (converseVar.eventKey is pf5
       || converseVar.eventKey is pf6
       || converseVar.eventKey is pf7
       || converseVar.eventKey is pf8
      ) /* next sentence*/
      end
    end
  else
    if (converseVar.eventKey is pf6
     || converseVar.eventKey is pf7
     || converseVar.eventKey is pf8)
      PV0BW01.PV0BWIX4 = 0;
      while (PV0BW01.PV0BWIX4 < 10)
        PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
        if (PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] == "S")
          PV0BW01.PV0BWIX5 = PV0BM002.PV0BM-LINE-NBR[PV0BWIX4];
          PV0BW02.PV0BW-SELECT-FLAG[PV0BWIX5] = "S";
        end
      end
    end
    if (converseVar.eventKey is pf5)
      if (PVUREC.PVUERROR[PVUERVND] != "Y"
       && PVUREC.PVUERROR[PVUERIVC] != "Y")
        /* count number of lines selected for detail view if the total*/
        /* is zero then stay on map 2 and show a 'no lines selected' msg.*/
        PV0BW01.PV0BW-SELECT-LINE-COUNT = 0;
        ;
        PV0BW01.PV0BWIX4 = 0;
        while (PV0BW01.PV0BWIX4 < 10)
          PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
          if (PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] == "S")
            PV0BW01.PV0BW-SELECT-LINE-COUNT = PV0BW01.PV0BW-SELECT-LINE-COUNT + 1;
            PVUREC.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
            PVUREC.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
            PVUREC.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
            PVUREC.PV-IVC-ID = PV0BM002.PV-IVC-ID[PV0BWIX4];
            PVUREC.PV-MSA-VEND-NBR = PV0BM002.PV-MSA-VEND-NBR[PV0BWIX4];
            PVUREC.PV-MSA-VEND-GRP = PV0BM002.PV-MSA-VEND-GRP[PV0BWIX4];
          end
        end
      end
    end
    if (converseVar.eventKey is pf6)
      if (PVUREC.PVUERROR[PVUERVND] != "Y"
       && PVUREC.PVUERROR[PVUERIVC] != "Y")
        PV0BW01.PV0BWMAP = "3";
                                  /* SET UP A FLAG TO INDICATE THAT MAP*/
                                   /* TABLE MUST BE REFRESHED*/
        PV0B-VPVPMT01-MAP3(); /* BUILD TABLE FOR MAP3*/
              /* SHOW FIRST PAGE OF DATA FROM MAP3 TABLE*/
        PV0BW01.PV0BWTOP-MAP3 = 1;
        PV0BW01.PV0BWCUR-MAP3 = 2;
        ;
        ;
        /* count number of lines selected for detail view if the total*/
        /* is zero then stay on map 2 and show a 'no lines selected' msg.*/
        PV0BW01.PV0BW-SELECT-LINE-COUNT = 0;
        ;
        PV0BW01.PV0BWIX4 = 0;
        while (PV0BW01.PV0BWIX4 < 10)
          PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
          if (PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] == "S")
            PV0BW01.PV0BW-SELECT-LINE-COUNT = PV0BW01.PV0BW-SELECT-LINE-COUNT + 1;
          end
        end
        ;
        PV0BW01.PV0BWIX4 = 0;
        while (PV0BW01.PV0BWIX4 < 1000)
          PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
          if (PV0BW02.PV0BW-SELECT-FLAG[PV0BWIX4] == "S")
            PV0BW01.PV0BW-SELECT-LINE-COUNT = PV0BW01.PV0BW-SELECT-LINE-COUNT + 1;
          end
          if (PV0BW02.PV-IVC-ID == " ")
            PV0BW01.PV0BWIX4 = 1000;
          end
        end
        ;
        if (PV0BW01.PV0BW-SELECT-LINE-COUNT == 0)
          PV0BW01.PV0BWMAP = "2";
          PVUREC.PVUERNBR = 177;
          return; /* Last Statement*/
        end
        ;
        ;
        PV0BW01.PV0BWIX4 = 0;
        while (PV0BW01.PV0BWIX4 < 10)
          PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
          if (PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] == "S")
            PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] = "V";
          end
        end
        ;
        PV0BW01.PV0BWIX4 = 0;
        while (PV0BW01.PV0BWIX4 < 1000)
          PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
          if (PV0BW02.PV0BW-SELECT-FLAG[PV0BWIX4] == "S")
            PV0BW02.PV0BW-SELECT-FLAG[PV0BWIX4] = "V";
          end
          if (PV0BW02.PV-IVC-ID == " ")
            PV0BW01.PV0BWIX4 = 1000;
          end
        end
        ;
        PV0B370(); /* show first page map 3 data*/
      end
    end
    ;
    if (converseVar.eventKey is enter)
      PV0BW01.PV0BWMAP = "1";
    else
      if (converseVar.eventKey is pf7)
        PV0B270(); /* Go Back One Screen*/
      else
        if (converseVar.eventKey is pf8)
          PV0B280(); /* Go Forward One Screen*/
        else

          if (converseVar.eventKey is pf9)
            PV0BS-XFER-TO-PV();

          end
        end
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B250  ****/
end // end PV0B250

// BACK     One Page Routine
Function PV0B270()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Go Back One Page or at the TOP.                   ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (PV0BW01.PV0BWCUR == 1)
     /* TOP of Screen Displayed.*/
    PVUREC.PVUERNBR = 61;
  else
    if (converseVar.eventKey is pf19)
      PV0BW01.PV0BWTOP = PV0BW01.PV0BWCUR - PV0BW01.PV0BWMAX / 2;
    else
      if (converseVar.eventKey is pf24)
        PV0BW01.PV0BWTOP = 1;
         /* TOP of Screen Displayed.*/
        PVUREC.PVUERNBR = 61;
      else
        PV0BW01.PV0BWTOP = PV0BW01.PV0BWCUR - PV0BW01.PV0BWMAX;
      end
    end
    if (PV0BW01.PV0BWTOP <= 0)
      PV0BW01.PV0BWTOP = 1;
    end
    PV0BS92(); /* Build Scroll Lines*/
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B270  ****/
end // end PV0B270

// FORWARD  One Page Routine
Function PV0B280()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Go Forward One Page or at the BOTTOM.             ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (converseVar.eventKey is pf8)
    PV0BW01.PV0BWTOP = PV0BW01.PV0BWCUR     + PV0BW01.PV0BWMAX;
  else
    if (converseVar.eventKey is pf20)
      PV0BW01.PV0BWTOP = PV0BW01.PV0BWCUR + PV0BW01.PV0BWMAX / 2;
    else
      if (converseVar.eventKey is pf12)
        /* Bottom of Screen Displayed.*/
        PVUREC.PVUERNBR = 62;
        PV0BW01.PV0BWTOP = PV0BW01.PV0BWBOT - PV0BW01.PV0BWMAX;
      end
    end
  end
  ;
  if (PV0BW01.PV0BWTOP >= PV0BW01.PV0BWBOT)
    PV0BW01.PV0BWTOP = PV0BW01.PV0BWBOT - 1;
     /* Bottom of Screen Displayed.*/
    PVUREC.PVUERNBR = 62;
  end
  ;
  if (PV0BW01.PV0BWTOP <= 0)
    PV0BW01.PV0BWTOP = 1;
  end
  ;
  PV0BS92(); /* Build Scroll Lines*/
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B280  ****/
end // end PV0B280

// CONVERSE PV0BM003 PMT DETAILS
Function PV0B300()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **       Converse Invoice Line Item Screen                ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  XSPVS57(); /* Deliver a message*/
  if (PVUREC.CAMSG == " ")
     /* next sentence*/
  else
    PV0BM003.VAGen_EZEMSG = PVUREC.CAMSG;
  end
  ;
  PV0BM003.TA2TIMED = VGVar.currentFormattedTime;
  ;
  converse PV0BM003 ;
  ;
  set PV0BM003.CATOAP cursor;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B300  ****/
end // end PV0B300

// CHECK    PF Keys and Exits
Function PV0B310()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      This will Check for PF Keys and Exit Requests     ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  PV0B-PFKEY-ACTION(); /* Check PV PF Keys*/
  ;
  if (COMMAREA.CASECRC == 0) /* Check Security Error*/
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf3
     || converseVar.eventKey is pf9
     || converseVar.eventKey is pf10
     || converseVar.eventKey is pf11
     || converseVar.eventKey is pf21)
       /* next sentence*/
    else
      if (converseVar.eventKey is pf7)
         /* BACKWARD Performed. Please proceed.*/
        PVUREC.PVUERNBR = 5;
      else
        if (converseVar.eventKey is pf8)
           /* FORWARD Performed. Please proceed.*/
          PVUREC.PVUERNBR = 4;
        else
          if (converseVar.eventKey is pf4
          ) /* next sentence*/
          else
            /* Invalid PF Key*/
            PVUREC.PVUERNBR = 1;
          end
        end
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B310  ****/
end // end PV0B310

// CHECK    What to do next
Function PV0B320()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Check what to do next - MAP PV0BM003              ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  ;
  if (PVUREC.PVUERROR[PVUERGEN] == "Y") /* Check General Error Flag*/
     /* next sentence*/
  else
    PV0BS30(); /* Check FASTPATH*/
    if (PVUREC.PVUERROR[PVUERGEN] == "Y") /* Check General Error Flag*/
       /* next sentence*/
    else
      PV0B350(); /* Check if allowed to continue*/
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B320  ****/
end // end PV0B320

// CHECK    if allowed to continu
Function PV0B350()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Check if the user is allowed to continue.         ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (PVUREC.PVUALLWD == "N") /* Not allowed to continue.*/
    if (converseVar.eventKey is enter) /* Check if ENTER key was pressed.*/
      PV0BW01.PV0BWMAP = "2";
    else
      if (converseVar.eventKey is pf7
       || converseVar.eventKey is pf8
      ) /* next sentence*/
      end
    end
  else
    if (converseVar.eventKey is enter)
      PV0BW01.PV0BWMAP = "2";
    else
      if (converseVar.eventKey is pf7)
        PV0B370(); /* Go Back One Screen*/
      else
        if (converseVar.eventKey is pf8)
          PV0B380(); /* Go Forward One Screen*/
        else
          if (converseVar.eventKey is pf9)
            PV0BW01.PV0BWLST = PV0BW01.PV0BWMAP;
            PV0BW01.PV0BWMAP = "2";
          end
        end
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B350  ****/
end // end PV0B350

// BACK     One Page Routine
Function PV0B370()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **    Go Back One Page or at the TOP - PV0BM003           ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (PV0BW01.PV0BWCUR-MAP3 == 1)
     /* TOP of Screen Displayed.*/
    PVUREC.PVUERNBR = 61;
  else
    if (converseVar.eventKey is pf19)
      PV0BW01.PV0BWTOP = PV0BW01.PV0BWCUR-MAP3                      - PV0BW01.PV0BWMAX-MAP3 / 2;
    else
      if (converseVar.eventKey is pf24)
        PV0BW01.PV0BWTOP-MAP3 = 1;
         /* TOP of Screen Displayed.*/
        PVUREC.PVUERNBR = 61;
      else
        PV0BW01.PV0BWTOP-MAP3 = PV0BW01.PV0BWCUR-MAP3                        - PV0BW01.PV0BWMAX-MAP3;
      end
    end
    if (PV0BW01.PV0BWTOP-MAP3 <= 0)
      PV0BW01.PV0BWTOP-MAP3 = 1;
    end
    PV0BS93(); /* Build Scroll Lines*/
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B370  ****/
end // end PV0B370

// FORWARD  One Page Routine
Function PV0B380()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **  Go Forward One Page or at the BOTTOM - PV0BM003       ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (converseVar.eventKey is pf8)
    PV0BW01.PV0BWTOP-MAP3 = PV0BW01.PV0BWCUR-MAP3     + PV0BW01.PV0BWMAX-MAP3;
  else
    if (converseVar.eventKey is pf20)
      PV0BW01.PV0BWTOP-MAP3 = PV0BW01.PV0BWCUR-MAP3       + PV0BW01.PV0BWMAX-MAP3 / 2;
    else
      if (converseVar.eventKey is pf12)
        /* Bottom of Screen Displayed.*/
        PVUREC.PVUERNBR = 62;
        PV0BW01.PV0BWTOP-MAP3 = PV0BW01.PV0BWBOT-MAP3         - PV0BW01.PV0BWMAX-MAP3;
      end
    end
  end
  ;
  if (PV0BW01.PV0BWTOP-MAP3 >= PV0BW01.PV0BWBOT-MAP3)
    PV0BW01.PV0BWTOP-MAP3 = PV0BW01.PV0BWBOT-MAP3 - 1;
     /* Bottom of Screen Displayed.*/
    PVUREC.PVUERNBR = 62;
  end
  ;
  if (PV0BW01.PV0BWTOP-MAP3 <= 0)
    PV0BW01.PV0BWTOP-MAP3 = 1;
  end
  ;
  PV0BS93(); /* Build Scroll Lines*/
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B380  ****/
end // end PV0B380

// Send Invoice to Cancel
Function PV0B680()
  ;
   /* ******************************/
   /* Pf17: Invoice sent to Cancel*/
   /* ******************************/
  ;
  set SQLCA empty;
  ;
  PVZREC.PVOVENDR = PVAREC.PVOVENDR; /* move key field*/
  PVZREC.PVOVENDG = PVAREC.PVOVENDG;
  PVZREC.PVAIVCID = PVAREC.PVAIVCID;
  PVZREC.XXXUSRID = COMMAREA.CAUSERID;
  ;
  call "PV7000" (PVZREC, SQLCA) {isNoRefresh = yes, isExternal = yes};
  PV0BW01.PV0BWSCP = "Y"; /* scratch pad used*/
  ;
  if (PVZREC.PVZMCHER == "1")
    /* NEXT SENTENCE*/
  else
    PVWREC.PVWERRF = "Y"; /* error*/
    converseLib.validationFailed(149); /* cancel has failed*/
  end
  ;
end // end PV0B680

// Delete Pverec
Function PV0B685()
  ;
   /* ****************/
   /* Delete Pverec*/
   /* ****************/
  ;
  PVEREC.PVOVENDR = PVAREC.PVOVENDR; /* move key*/
  PVEREC.PVOVENDG = PVAREC.PVOVENDG; /* into pverec*/
  PVEREC.PVAIVCID = PVAREC.PVAIVCID;
  set SQLCA empty;
  call "IO0330" ("S1", SQLCA, PVEREC) {isNoRefresh = yes, isExternal = yes}; /* select pverec*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* pverec found*/
   || SQLCA.VAGen_SQLCODE == 100) /* not found*/
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      converseLib.validationFailed(44);
      PVWREC.PVWERRF = "Y";
      return;
    else
      TA1REC.TA1LOCAT[1] = "PV0B685";
      TA1REC.TA1LOCAT[2] = "READING DB2 VRUSED01";
      TA1REC.TA1TBLVU = "VRUSED01";
      TA1REC.TA1TBLKE = PVEREC.PVAIVCID;
      PV0BS97();
      PVWREC.PVWERRF = "Y";
      return;
    end
  end
  ;
  ;
  PV0BW01.PV0BWIDX = 0;
  while (SQLCA.VAGen_SQLCODE == 0)
    PV0BW01.PV0BWIDX = PV0BW01.PV0BWIDX + 1;
    call "IO0330" ("N1", SQLCA, PVEREC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      PV0B686(); /* process*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
        PV0BW01.PV0BWIMX = PV0BW01.PV0BWIDX - 1; /* set max lines of fypo*/
      else
        if (SQLCA.VAGen_SQLCODE == -911) /* row is busy*/
          set PV0BW01 empty; /* clear working storage*/
          set PVAREC empty;
          set PVAREC empty;
          converseLib.validationFailed(44);
          return;
        else
          TA1REC.TA1LOCAT[1] = "PV0B685";
          TA1REC.TA1LOCAT[2] = "FETCH ONE LINE ITEM";
          TA1REC.TA1TBLVU = "VRUSED01";
          TA1REC.TA1TBLKE = PVEREC.PVAIVCID;
          PV0BS97();
          PVWREC.PVWERRF = "Y";
          return;
        end
      end
    end
  end
  ;
  ;
  call "IO0330" ("C1", SQLCA, PVEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100) /* not found*/
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* row is busy*/
      set PV0BW01 empty; /* clear working storage*/
      set PVAREC empty;
      set PVAREC empty;
      converseLib.validationFailed(44);
      return;
    else
      TA1REC.TA1LOCAT[1] = "PV0B685";
      TA1REC.TA1LOCAT[2] = "CLOSE ";
      TA1REC.TA1TBLVU = "VRUSED01";
      TA1REC.TA1TBLKE = PVEREC.PVAIVCID;
      PV0BS97();
      PVWREC.PVWERRF = "Y";
      return;
    end
  end
  ;
  ;
  ;
end // end PV0B685

// Process Nxt Mth Rec
Function PV0B686()
  ;
   /* ******************************************/
   /* Pverec is loaded: Delete each line item*/
   /* ******************************************/
  ;
  ;
  call "IO0330" ("D2", SQLCA, PVEREC) {isNoRefresh = yes, isExternal = yes}; /* delete*/
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* row is busy*/
      set PV0BW01 empty; /* clear working storage*/
      set PVAREC empty;
      set PVAREC empty;
      converseLib.validationFailed(44);
      return;
    else
      TA1REC.TA1LOCAT[1] = "PV0B686";
      TA1REC.TA1LOCAT[2] = "DELETE PVEREC";
      TA1REC.TA1TBLVU = "VRUSED01";
      PV0BS97();
      PVWREC.PVWERRF = "Y";
      return;
    end
  end
  ;
  ;
  ;
  ;
  ;
end // end PV0B686

// Load Force Reason Table
Function PV0B695()
   /* PV0B695 - LOAD FORCE REASON TABLE (TYPE 60 = CANCEL)*/
   /*  */
   /* 12-03-99  GDECKE  NISSHO CONTINGENCY - ADD CANCEL RECORD TO FORCE*/
   /* REASON TABLE.*/
   /* *******************/
   /* Load Force Table*/
   /* *******************/
  ;
  PVLREC.PVAIVCID = PVAREC.PVAIVCID;
  PVLREC.PVOVENDR = PVAREC.PVOVENDR;
  PVLREC.PVOVENDG = PVAREC.PVOVENDG;
   /* UNLIKE PV0A, WE WILL JUST HARD CODE A CANCEL REASON OF '60'*/
   /* SO THERE WILL BE NO FIELD ON THE MAP TO GET THE VALUE*/
  PVLREC.XFACD = "60";
  PVLREC.XXXUSID1 = COMMAREA.CAUSERID;
  if (PVLREC.XFACD in XFATBL.XFACD)
    PVLREC.XFAIND = XFATBL.XFAIND[sysVar.arrayIndex];
  else
    PVLREC.XFAIND = "4";
  end
  PVLREC.PVBLNINB = 0;
  PVLREC.PVLFRAMT = 0;
  PVLREC.ZZZSDT = TA2REC.TA2GRGGN;
  PVLREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  PVLREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  ;
  set SQLCA empty;
  call "IO5440" ("A ", SQLCA, PVLREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* header not found*/
      converseLib.validationFailed(141);
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(44);
      else
        TA1REC.TA1LOCAT[1] = "PV0B690";
        TA1REC.TA1LOCAT[2] = "UPDATING DB2 VFORCE01";
        TA1REC.TA1TBLVU = "VPVFORCE1";
        TA1REC.TA1TBLKE = PVAREC.PVAIVCID;
        PV0BS97();
      end
    end
  end
  ;
  ;
end // end PV0B695

// READ     VENDOR NAME IO5680
Function PV0B980()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **       Read Vendor Name                                 ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
   /* use SAVED VALUE OF CURRENT VENDOR NUMBER AND VENDOR GROUP*/
    /* if current screen = 1 save entered values, else, use old*/
    /* values saved previously*/
  if (PV0BW01.PV0BWMAP == "1"
   || COMMAREA.CAFROMAP == "PV0N")
    PV0BW01.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
    PV0BW01.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
    PV0BW01.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
  end
  ;
  PVOREC.PVOVENDR = PV0BW01.PV-PMT-VEND-NBR;
  PVOREC.PVOVENDG = PV0BW01.PV-PMT-VEND-GRP;
  ;
  PVYREC.PVYFNC = "S ";
  XPPV980(); /* IOMOD VVENDR01*/
  ;
  if (PVOREC.PVOVNDNM == " ")
    PVOREC.PVOVNDNM = "VENDOR NAME NOT FOUND";
    if (PV0BM001.PV-PMT-VEND-IVC-ID == " "
     && PV0BM001.PV-PMT-VEND-NBR == " ")
      PVUREC.PVUERNBR = 122;
      PVUREC.PVUERROR[PVUERVND] = "Y";
    else
      PVUREC.PVUERNBR = 136;
      PVUREC.PVUERROR[PVUERVND] = "Y";
    end
  end
  ;
  PV0BW01.PV-PMT-VEND-NM = PVOREC.PVOVNDNM;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0B980  ****/
end // end PV0B980

// PV PF6 CE # inquiry
Function PV0BS-PF7-INQUIRE()
  ;
   /* *************************************************************/
   /* 02-14-01  rgomat  NISSHO CONTINGENCY - to get the CE #  ****/
   /* ***                                                      ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
   /* Tcs addition begins - 01/16/2001.*/
  if (PV0BM001.PV-IVC-ID != " " || 
  PV0BM001.PV-MSA-VEND-NBR != " ")
    PV0BW01.PV-IVC-ID = PV0BM001.PV-IVC-ID;
    PV0BW01.PV-MSA-VEND-NBR = PV0BM001.PV-MSA-VEND-NBR;
    PV0BW01.PV-MSA-VEND-GRP = PV0BM001.PV-MSA-VEND-GRP;
  else
    /* Tcs addition ends - 01/16/2001.*/
    PV0BW01.PV-IVC-ID = " ";
    PV0BW01.PV-MSA-VEND-NBR = " ";
    PV0BW01.PV-MSA-VEND-GRP = " ";
  end
  ;
  VPVPMT01.PV-IVC-ID = PV0BW01.PV-IVC-ID;
  VPVPMT01.PV-MSA-VEND-NBR = PV0BW01.PV-MSA-VEND-NBR;
  VPVPMT01.PV-MSA-VEND-GRP = PV0BW01.PV-MSA-VEND-GRP;
   /* OPEN CURSOR FOR SCREEN 2 LIST OF DISTINCT PAYMENTS*/
  if (PV0BM001.PV-IVC-ID != " " || 
  PV0BM001.PV-MSA-VEND-NBR != " ")
    PVYREC.PVYFNC = "S1";
  end
  XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
  ;
  while (SQLCA.VAGen_SQLCODE == 0
  ) /* FETCH LINES FROM VPVPMT01*/
    if (PV0BM001.PV-IVC-ID != " " || 
    PV0BM001.PV-MSA-VEND-NBR != " ")
      PVYREC.PVYFNC = "N1";
    end
    XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0
    )
      if (VPVPMT01.PV-MSA-VEND-GRP == PV0BM001.PV-MSA-VEND-GRP)
        if (VPVPMT01.XIP-IVC-STAT-CD != "CX")
          PV0BM001.PV-PMT-VEND-IVC-ID = VPVPMT01.PV-PMT-VEND-IVC-ID;
          PV0BM001.PV-PMT-VEND-NBR = VPVPMT01.PV-PMT-VEND-NBR;
          PV0BM001.PV-PMT-VEND-GRP = VPVPMT01.PV-PMT-VEND-GRP;
          SQLCA.VAGen_SQLCODE = 100;
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        PVUREC.PVUERNBR = 255;
        PVUREC.PVUERROR[PVUERVND] = "Y";
        PVUREC.PVUERROR[PVUERIVC] = "Y";
      end
    end
  end
   /* CLOSE CURSOR FOR VPVPMT01*/
  if (PV0BM001.PV-IVC-ID != " " || 
  PV0BM001.PV-MSA-VEND-NBR != " ")
    PVYREC.PVYFNC = "C1";
  end
  XPPV-VPVPMT01(); /* IOMOD VPVPMT01*/
  ;
end // end PV0BS-PF7-INQUIRE

// PV APPL  Common Exit Routine
Function PV0BS-XFER-TO-PV()
  ;
   /* 10-20-99  GDECKE  NISSHO CONTINGENCY - MODIFY XSPVS60*/
   /* *************************************************************/
   /* ***                                                      ****/
   /* **        Go Back to Calling Application                  ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (converseVar.eventKey is pf3)
    if (PV0BW01.PV0BWMAP == "3")
      PV0BW01.PV0BWMAP = "2";
      return;
    else
      if (PV0BW01.PV0BWMAP == "2")
        PV0BW01.PV0BWMAP = "1";
        return;
      end
    end
    COMMAREA.CATOAP = "PV0M";
  else
    if (converseVar.eventKey is pf4)
      PVUREC.PVURCRD3 = "PV0BM001";
      PVUREC.PV-IVC-ID = PV0BM001.PV-IVC-ID;
      PVUREC.PV-MSA-VEND-NBR = PV0BM001.PV-MSA-VEND-NBR;
      PVUREC.PV-MSA-VEND-GRP = PV0BM001.PV-MSA-VEND-GRP;
      PVUREC.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
      PVUREC.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
      PVUREC.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
        /* show error message if not enough data for PV0A XFER*/
      if (PVUREC.PV-IVC-ID == " "
       || PVUREC.PV-MSA-VEND-NBR == " "
       || PVUREC.PV-PMT-VEND-IVC-ID == " "
       || PVUREC.PV-PMT-VEND-NBR == " ")
        PVUREC.PVUERNBR = 185;
        PVUREC.PVUERROR[PVUERGEN] = "Y";
        return;
        /* JKUNDU CHANGE BEGINS - 02/04/00*/
      else
        PV0BSVEND();
        if (PVUREC.PVUERROR[PVUERGEN] == "Y")
          return;
        end
        /* JKUNDU CHANGE ENDS - 02/04/00*/
      end
      COMMAREA.CATOAP = "PV0A";
      PVUREC.PV-CONTROL-OPTION = "1";
      PVUREC.PVUERROR[PVUERGEN] = " ";
      PVUREC.PVUERROR[PVUERVND] = " ";
      PVUREC.PVUERROR[PVUERIVC] = " ";
      PVUREC.PVUERROR[PVUERKEY] = " ";
      PVUREC.PVUERNBR = 0;
      COMMAREA.CAUSERA = PVUREC.PVUGROUP;
    else
      if (converseVar.eventKey is pf5)
        ;
        /* GET PMT-VEND IVC DATA FROM SELECTED LINE*/
        PV0BW01.PV0BWIX4 = 0;
        while (PV0BW01.PV0BWIX4 < 10)
          PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
          if (PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] == "S")
            PV0BW01.PV0BW-SELECT-LINE-COUNT = PV0BW01.PV0BW-SELECT-LINE-COUNT + 1;

            PVUREC.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
            PVUREC.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
            PVUREC.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
            PVUREC.PV-IVC-ID = PV0BM002.PV-IVC-ID[PV0BWIX4];
            PVUREC.PV-MSA-VEND-NBR = PV0BM002.PV-MSA-VEND-NBR[PV0BWIX4];
            PVUREC.PV-MSA-VEND-GRP = PV0BM002.PV-MSA-VEND-GRP[PV0BWIX4];
          end
        end
        ;
          /* show error message if not enough data for PV0A XFER*/
        if (COMMAREA.CAFROMAP == "PV0N")
          PVUREC.PVUERGEN = 1;
        end
        if (PVUREC.PV-IVC-ID == " "
         || PVUREC.PV-MSA-VEND-NBR == " "
         || PVUREC.PV-PMT-VEND-IVC-ID == " "
         || PVUREC.PV-PMT-VEND-NBR == " ")
          PVUREC.PVUERNBR = 185;
          PVUREC.PVUERROR[PVUERGEN] = "Y";
          return;
          COMMAREA.CATOAP = "PV0P";
          COMMAREA.CAUSERA = PVUREC.PVUGROUP;
        end
        COMMAREA.CATOAP = "PV0A";
        PVUREC.PV-CONTROL-OPTION = "2";
        PVUREC.PVUERROR[PVUERGEN] = " ";
        PVUREC.PVUERROR[PVUERVND] = " ";
        PVUREC.PVUERROR[PVUERIVC] = " ";
        PVUREC.PVUERROR[PVUERKEY] = " ";
        PVUREC.PVUERNBR = 0;
        COMMAREA.CAUSERA = PVUREC.PVUGROUP;
      else
        if (converseVar.eventKey is pf9)
          PV0BW01.PV0BW-SELECT-LINE-COUNT = 0;
          PV0BW01.PV0BWIX4 = 0;
          PV0BW04.PV0BW-SELEC-LIN-FL = "N";
          while (PV0BW01.PV0BWIX4 < 10)
            PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
            if (PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] == "S")
              PV0BW04.PV0BW-SELEC-LIN-FL = "Y";
              PV0BW01.PV0BW-SELECT-LINE-COUNT = PV0BW01.PV0BW-SELECT-LINE-COUNT + 1;
              if (PV0BW01.PV0BW-SELECT-LINE-COUNT > 1)
                PV0BW01.PV0BWIX4 = 10;
                PVUREC.PVUERNBR = 235;
                PVUREC.PVUERROR[PVUERGEN] = "Y";
                return;
              end


              PVUREC.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
              PVUREC.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
              PVUREC.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
              PVUREC.PV-IVC-ID = PV0BM002.PV-IVC-ID[PV0BWIX4];
              PVUREC.PV-MSA-VEND-NBR = PV0BM002.PV-MSA-VEND-NBR[PV0BWIX4];
              PVUREC.PV-MSA-VEND-GRP = PV0BM002.PV-MSA-VEND-GRP[PV0BWIX4];
            end
          end
          /* show error message if not enough data for PV0b XFER*/
          if (PVUREC.PV-IVC-ID == " "
           || PVUREC.PV-MSA-VEND-NBR == " "
           || PVUREC.PV-PMT-VEND-IVC-ID == " "
           || PVUREC.PV-PMT-VEND-NBR == " ")
            PVUREC.PVUERNBR = 233;
            PVUREC.PVUERROR[PVUERGEN] = "Y";
            return;
          end
          if (converseVar.eventKey is pf9
           && PV0BW04.PV0BW-SELEC-LIN-FL == "N")
            PVUREC.PVUERNBR = 233;
            PVUREC.PVUERROR[PVUERGEN] = "Y";
            return;
          end
          COMMAREA.CATOAP = "PV0N";
  /* MOVE '2' TO PVUREC.PV-CONTROL-OPTION;*/
  /* MOVE ' ' TO PVUREC.PVUERROR(PVUERGEN);*/
  /* MOVE ' ' TO PVUREC.PVUERROR(PVUERVND);*/
  /* MOVE ' ' TO PVUREC.PVUERROR(PVUERIVC);*/
  /* MOVE ' ' TO PVUREC.PVUERROR(PVUERKEY);*/
  /* MOVE 0 TO PVUREC.PVUERNBR;*/
          COMMAREA.CAUSERA = PVUREC.PVUGROUP;
        else
          if (converseVar.eventKey is pf14)
            COMMAREA.CATOAP = "PV0G";
            PVUREC.PVUCHOIC = 2;
            COMMAREA.CAUSERA = PVUREC.PVUGROUP;
          else
            COMMAREA.CATOAP = COMMAREA.CAFROMAP;
            COMMAREA.CAFROMAP = "PV0B";
          end
        end
      end
    end
  end
  ;
  if (COMMAREA.CATOAP == " ")
     /* next sentence*/
  else
    XSEXIT();
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0BS-XFER-TO-PV ****/
end // end PV0BS-XFER-TO-PV

// CHECK    Passed Information
Function PV0BS01()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **        Check if Caller passed any Information          ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  XSENTRY();
  XSSEGTR();
  ;
   /* IF PVUREC.PVURCRD1 EQ 'PVAREC '*/
    /* OR PVUREC.PVURCRD1 EQ 'PVCREC '*/
    /* OR PVUREC.PVURCRD1 EQ 'PVDREC ';*/
    /* MOVE PVUREC TO PVAREC;*/
    /* MOVE PVAREC.PVOVENDR TO PV0BM001.PVOVENDR;*/
    /* MOVE PVAREC.PVOVENDG TO PV0BM001.PVOVENDG;*/
    /* MOVE PVAREC.PVAIVCID TO PV0BM001.PVAIVCID;*/
    /* SET PV0BM001.PV-IVC-ID CURSOR;*/
  ;
  if (PV0BW01.PV0BWMAP == "1")
    PV0BW01.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
    PV0BW01.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
    PV0BW01.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
  end
  ;
  PV0B980(); /* Get Vendor Name*/
   /* IF SQLCA.SQLCODE EQ 0;*/
     /* PERFORM PV0B960;             /* Read Invoice Header*/
   /* END;*/
   /* END;*/
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0BS01  ****/
end // end PV0BS01

// GO BACK  to Calling Applicatio
Function PV0BS03()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **        Go Back to Calling Application                  ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  PV0BS-XFER-TO-PV(); /* PV Common Exit*/
  PV0BS50(); /* Exit Routine*/
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0BS03  ****/
end // end PV0BS03

// GET      System Date and Time
Function PV0BS09()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **       Get System Date and Time                         ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  PV0BM001.TA2GRGB = TA2REC.TA2GRGB;
  PV0BM001.TA2TIMED = TA2REC.TA2TIMED;
  PV0BM002.TA2GRGB = TA2REC.TA2GRGB;
  PV0BM002.TA2TIMED = TA2REC.TA2TIMED;
  PV0BM003.TA2GRGB = TA2REC.TA2GRGB;
  PV0BM003.TA2TIMED = TA2REC.TA2TIMED;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0BS09  ****/
end // end PV0BS09

// CHECK    FASTPATH
Function PV0BS30()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      Check FASTPATH option.                            ***/
   /* *** FIGURE OUT WHAT FASTPATH CODE SHOULD LOOK LIKE, MODIFY***/
   /* *** COMMENTED OUT CODE TO MATCH PV0B STRATEGY             ***/
   /* *************************************************************/
  ;
  if (converseVar.eventKey is enter) /* Check if ENTER key was pressed.*/
    if (PV0BW01.PV0BWMAP == "1")
      if (PV0BM001.CATOAP == " ")
             /* next sentence*/
      else
        if (PV0BM001.PV-PMT-VEND-NBR == " "
         && PV0BM001.PV-PMT-VEND-GRP == " "
         && PV0BM001.PV-PMT-VEND-IVC-ID == " ")
          COMMAREA.CATOAP = PV0BM001.CATOAP;
          COMMAREA.CAITEM = PV0BM001.CAITEM;
          PV0BS50(); /* Exit Routine*/
        else
          PVUREC.PVUERROR[PVUERGEN] = "Y"; /* Set*/
                                  /* General Error Flag*/
          /* ; /* Cannot FASTPATH with data keyed in*/
          PVUREC.PVUERNBR = 63;
        end
      end
    else
      if (PV0BW01.PV0BWMAP == "2")
        if (PV0BM002.CATOAP == " ")
              /* next sentence*/
        else
          PVUREC.PVUERROR[PVUERGEN] = "Y";
          COMMAREA.CATOAP = PV0BM002.CATOAP;
          COMMAREA.CAITEM = PV0BM002.CAITEM;
          PV0BS50(); /* Exit Routine*/
        end
      else
        if (PV0BW01.PV0BWMAP == "3")
          if (PV0BM003.CATOAP == " ")
                /* next sentence*/
          else
            PVUREC.PVUERROR[PVUERGEN] = "Y";
            COMMAREA.CATOAP = PV0BM003.CATOAP;
            COMMAREA.CAITEM = PV0BM003.CAITEM;
            PV0BS50(); /* Exit Routine*/
          end
        end
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0BS30  ****/
end // end PV0BS30

// EXIT     Routine (XSEXIT)
Function PV0BS50()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **        EXIT and Check security                         ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  XSEXIT();
  ;
  if (PV0BW01.PV0BWMAP == "1")
    set PV0BM001.CATOAP cursor;
    PV0BM001.VAGen_EZEMSG = COMMAREA.CAMSG;
  else
    if (PV0BW01.PV0BWMAP == "2")
      set PV0BM002.CATOAP cursor;
      PV0BM002.VAGen_EZEMSG = COMMAREA.CAMSG;
    else
      set PV0BM003.CATOAP cursor;
      PV0BM003.VAGen_EZEMSG = COMMAREA.CAMSG;
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0BS50  ****/
end // end PV0BS50

// VALIDATE Data Keyed In (ENTER)
Function PV0BS60()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **        Validate Data Keyed In                          ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  if (PV0BM001.PV-PMT-VEND-IVC-ID == " "
   || PV0BM001.PV-PMT-VEND-NBR == " ")
    PVUREC.PVUERNBR = 122;
    PVUREC.PVUERROR[PVUERIVC] = "Y";
    return;
  else
    PV0BW01.PV0BW-FIELD-CT = 0;
    if (PV0BM001.PV-IVC-ID != " ")
      PV0BW01.PV0BW-FIELD-CT = PV0BW01.PV0BW-FIELD-CT + 1;
    end
    if (PV0BM001.PV-MSA-VEND-NBR != " ")
      PV0BW01.PV0BW-FIELD-CT = PV0BW01.PV0BW-FIELD-CT + 1;
    end
    if (PV0BW01.PV0BW-FIELD-CT == 0
     || PV0BW01.PV0BW-FIELD-CT == 2)
         /* NEXT SENTENCE*/
    else
      PVUREC.PVUERNBR = 176;
    end
  end
  ;
  if (PV0BW01.PV0BWMAP == "1")
    /* AND (PV0BM001.PV-PMT-VEND-NBR IS MODIFIED*/
    /* OR PV0BM001.PV-PMT-VEND-GRP IS MODIFIED*/
    /* OR PV0BM001.PV-PMT-VEND-IVC-ID IS MODIFIED);*/
    PV0BW01.PV-PMT-VEND-IVC-ID = PV0BM001.PV-PMT-VEND-IVC-ID;
    PV0BW01.PV-PMT-VEND-NBR = PV0BM001.PV-PMT-VEND-NBR;
    PV0BW01.PV-PMT-VEND-GRP = PV0BM001.PV-PMT-VEND-GRP;
  end
  ;
  PV0B980(); /* Get Vendor Name*/
  ;
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0BS60  ****/
end // end PV0BS60

// BUILD    Item Scroll Lines
Function PV0BS92()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **        Build Line Item Scroll Lines FOR PV0BM002       ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
   /* MOVE 1 TO PV0BW01.PV0BWBOT;*/
  ;
  PV0BW01.PV0BWCUR = PV0BW01.PV0BWTOP;
  PV0BW01.PV0BWCNT = 0;
  set PV0BM002 empty;
  PV0BM002.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
  PV0BM002.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
  PV0BM002.PV-PMT-VEND-NM = PV0BW01.PV-PMT-VEND-NM;
  ;
  while (PV0BW01.PV0BWCNT < PV0BW01.PV0BWMAX)
    /* MOVE DETAIL PAYMENT DATA TO WORKING STORAGE TABLE*/
    /* INITIALIZE MAP 2 ROWS AS NEEDED*/
    PV0BW01.PV0BWCNT = PV0BW01.PV0BWCNT + 1;
    /* IF PV0BW01.PV0BWTOP EQ PV0BW01.PV0BWBOT;*/
    if (PV0BW02.PV-IVC-ID[PV0BWTOP] == " ")
      PV0BM002.PV0BM-SELECT-FLAG[PV0BWCNT] = " ";
      PV0BM002.PV-IVC-ID[PV0BWCNT] = " ";
      PV0BM002.PV-MSA-VEND-NBR[PV0BWCNT] = " ";
      PV0BM002.PV-MSA-VEND-GRP[PV0BWCNT] = " ";
      PV0BM002.PV0BM-LINE-NBR[PV0BWCNT] = 0;
    else
      PV0BM002.PV0BM-SELECT-FLAG[PV0BWCNT] = PV0BW02.PV0BW-SELECT-FLAG[PV0BWTOP];
      PV0BM002.PV-IVC-ID[PV0BWCNT] = PV0BW02.PV-IVC-ID[PV0BWTOP];
      PV0BM002.PV-MSA-VEND-NBR[PV0BWCNT] = PV0BW02.PV-MSA-VEND-NBR[PV0BWTOP];
      PV0BM002.PV-MSA-VEND-GRP[PV0BWCNT] = PV0BW02.PV-MSA-VEND-GRP[PV0BWTOP];
      PV0BM002.PV0BM-LINE-NBR[PV0BWCNT] = PV0BW01.PV0BWTOP;
      PV0BW01.PV0BWTOP = PV0BW01.PV0BWTOP + 1;
    end

    PV0BW01.PV0BWIX4 = 1;
    while (PV0BW01.PV0BWIX4 <= 10)
      if (PV0BM002.PV-IVC-ID[PV0BWIX4] == " "
       && PV0BM002.PV-MSA-VEND-NBR[PV0BWIX4] == " ")
        set PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] skip, bold;
      else
        set PV0BM002.PV0BM-SELECT-FLAG[PV0BWIX4] initialAttributes;
      end
      PV0BW01.PV0BWIX4 = PV0BW01.PV0BWIX4 + 1;
    end


  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0BS92  ****/
end // end PV0BS92

// BUILD    Item Scroll Lines
Function PV0BS93()
  ;
   /* *************************************************************/
   /* ***                                                      ****/
   /* **        Build Line Item Scroll Lines for PV0BM003       ***/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
   /* MOVE 1 TO PV0BW01.PV0BWBOT-MAP3;*/
  ;
  PV0BW01.PV0BWCUR-MAP3 = PV0BW01.PV0BWTOP-MAP3;
  PV0BW01.PV0BWCNT-MAP3 = 0;
  PV0BM003.PV-PMT-VEND-IVC-ID = PV0BW01.PV-PMT-VEND-IVC-ID;
  PV0BM003.PV-PMT-VEND-NBR = PV0BW01.PV-PMT-VEND-NBR;
  PV0BM003.PV-PMT-VEND-NM = PV0BW01.PV-PMT-VEND-NM;
  ;
  while (PV0BW01.PV0BWCNT-MAP3 < PV0BW01.PV0BWMAX-MAP3)
    /* MOVE DETAIL PAYMENT DATA TO WORKING STORAGE TABLE*/
    /* INITIALIZE MAP 3 ROWS AS NEEDED*/
    PV0BW01.PV0BWCNT-MAP3 = PV0BW01.PV0BWCNT-MAP3 + 1;
    /* IF PV0BW01.PV0BWTOP-MAP3 EQ PV0BW01.PV0BWBOT-MAP3*/
    if (PV0BW03.PV-IVC-ID[PV0BWTOP-MAP3] == " ")
      PV0BM003.PV-IVC-ID[PV0BWCNT-MAP3] = " ";
      PV0BM003.PV-MSA-VEND-NBR[PV0BWCNT-MAP3] = " ";
      PV0BM003.PV-MSA-VEND-GRP[PV0BWCNT-MAP3] = " ";
      PV0BM003.PV-PMT-IVC-AMT[PV0BWCNT-MAP3] = 0;
      PV0BM003.PV-IVC-TO-AP-DT[PV0BWCNT-MAP3] = 0;
      PV0BM003.XPV-IVC-TYP-CD[PV0BWCNT-MAP3] = " ";
      PV0BM003.XIP-IVC-STAT-CD[PV0BWCNT-MAP3] = " ";
    else
      PV0BM003.PV-IVC-ID[PV0BWCNT-MAP3] = PV0BW03.PV-IVC-ID[PV0BWTOP-MAP3];
      PV0BM003.PV-MSA-VEND-NBR[PV0BWCNT-MAP3] = PV0BW04.PV-MSA-VEND-NBR[PV0BWTOP-MAP3];
      PV0BM003.PV-MSA-VEND-GRP[PV0BWCNT-MAP3] = PV0BW03.PV-MSA-VEND-GRP[PV0BWTOP-MAP3];
      PV0BM003.PV-PMT-IVC-AMT[PV0BWCNT-MAP3] = PV0BW04.PV-PMT-IVC-AMT[PV0BWTOP-MAP3];
      PV0BM003.PV-IVC-TO-AP-DT[PV0BWCNT-MAP3] = PV0BW04.PV-IVC-TO-AP-DT[PV0BWTOP-MAP3];
      PV0BM003.XPV-IVC-TYP-CD[PV0BWCNT-MAP3] = PV0BW03.XPV-IVC-TYP-CD[PV0BWTOP-MAP3];
      PV0BM003.XIP-IVC-STAT-CD[PV0BWCNT-MAP3] = PV0BW03.XIP-IVC-STAT-CD[PV0BWTOP-MAP3];
      ;
      PV0BW01.PV0BWTOP-MAP3 = PV0BW01.PV0BWTOP-MAP3 + 1;
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of PV0BS93  ****/
end // end PV0BS93

// Db2 abend routine
Function PV0BS97()
  ;
    /* Db2 Abend Routine*/
    /* Call to Ta0020*/
  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1PGMNM = "PV0B";
  TA1REC.TA1MAP = "PV0BM100";
  move SQLCA to ERRSQLCA withV60Compat;
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  ;
end // end PV0BS97

// VALIDATE VENDOR
Function PV0BSVEND()
  PVOREC.PVOVENDR = PVUREC.PV-PMT-VEND-NBR;
  PVOREC.PVOVENDG = PVUREC.PV-PMT-VEND-GRP;
  ;
  PVYREC.PVYFNC = "S ";
  XPPV980(); /* IOMOD VVENDR01*/
  ;
  if (PVUREC.PVUERROR[PVUERVND] == "Y")
    PVOREC.PVOVNDNM = "VENDOR NAME NOT FOUND";
    PVUREC.PVUERNBR = 136;
    PVUREC.PVUERROR[PVUERGEN] = "Y";
    PVUREC.PVUERROR[PVUERIVC] = "N";
    set PV0BM001.PV-PMT-VEND-NBR cursor, bold;
    return; /* Last Statement*/
  end
  PVOREC.PVOVENDR = PVUREC.PV-MSA-VEND-NBR;
  PVOREC.PVOVENDG = PVUREC.PV-MSA-VEND-GRP;
  ;
  PVYREC.PVYFNC = "S ";
  XPPV980(); /* IOMOD VVENDR01*/
  ;
  if (PVUREC.PVUERROR[PVUERVND] == "Y")
    PVOREC.PVOVNDNM = "VENDOR NAME NOT FOUND";
    PVUREC.PVUERNBR = 136;
    PVUREC.PVUERROR[PVUERGEN] = "Y";
    PVUREC.PVUERROR[PVUERIVC] = "N";
    PVUREC.PVUERROR[PVUERVND] = "N";
    set PV0BM001.PV-MSA-VEND-NBR cursor, bold;
  end
  return; /* Last Statement*/
end // end PV0BSVEND

// IOMOD    DPINVC.VPVHDR01
Function XPPV-VPVHDR01()
  ;
   /* XPPV-VPVHDR01*/
   /* *************************************************************/
   /* ***                                                      ****/
   /* **      IO Module for Payment FACTORY INVOICE HEADER     ****/
   /* ***                                                      ****/
   /* *************************************************************/
  ;
  set SQLCA empty;
   /* iF PVOREC.PVOVENDR EQ ' '*/
    /* AND PVOREC.PVOVENDG EQ ' ';*/
    /* MOVE ' ' TO PVOREC.PVOVNDNM;*/
   /* ELSE;*/
  call "IO5660" (PVYREC, SQLCA, PVAREC) {isNoRefresh = yes, isExternal = yes};
   /* END;*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
     /* Requested Record Found*/
     /* NEXT SENTENCE*/
  else
    PVUREC.PVUERROR[PVUERVND] = "Y";
    PVUREC.PVUERROR[PVUERIVC] = "Y";
    if (SQLCA.VAGen_SQLCODE == 100)
       /* Requested Record Not Found*/
      PVUREC.PVUERNBR = 201;
    else
      if (SQLCA.VAGen_SQLCODE == -811)
         /* Multiple Rows Found, Enter Additional Qualifiers*/
        PVUREC.PVUERNBR = 84;
      else
        if (SQLCA.VAGen_SQLCODE == -911)
           /* Data Base Busy; Retry in a few minutes*/
          PVUREC.PVUERNBR = 44;
        else
          TA1REC.TA1LOC = "XPPV-VPVHDR01";
          TA1REC.TA1DBASE = "DPINVC";
          TA1REC.TA1TBLVU = "VPVHDR01";
          TA1REC.TA1TBLKE = PVAREC.PVAIVCID;
          XSPVS52(); /* Invoke DB2 Error Handler*/
        end
      end
    end
  end
  ;
  return; /* Last Statement*/
  ;
  ;
   /* ***  End of XPPV-VPVHDR01  ****/
end // end XPPV-VPVHDR01

