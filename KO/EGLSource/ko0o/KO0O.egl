package ko0o;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSKO001;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.*;
import corpcom6.SQLCA;
import corpx1.XGPTBL;
import corpx1.XNXTBL;
import corpx1.XOTTBL;
import ko.common.KOHADJID;
import ko.common.KOHREC;
import ko.common.KOYREC;
import ku.common.KUCREC;
import ku.common.KUJREC;
import ku.common.KUMREC;
import sm.common.SM1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VRAGCY02;
//*** PROGRAM=KO0O ****
// this is the commission adjustment inquiry.  the only entry
// necessary to process the request is the commission
// adjustment id.
// jwood    12-20-88    added noncsp option to calls
// jwood    12-20-88    added xssegtr logic
// jbecke   02-12-91    changed cust dept to 4 bytes.
// jbecke   07-11-91    get department description from kujrec
//                      instead of xnxtbl.
// AIVERS   04-09-92    rename sm5stat to xxxstat.
// AIVERS   06-04-92    REGEN FOR DATABASE CHANGES.
// AIVERS   10-04-92    GET REP'S NAME IN KO0OS50 & KO0OS60
//                      FROM VRAGCY02 NOW, INSTEAD OF SM5REC.
// *********************
Program KO0O type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CO00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KO0OW01 KO0OW01; // record
  KOHREC KOHREC; // record
  KOYREC KOYREC; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  SM1REC SM1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VRAGCY02 VRAGCY02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XNXTBL {deleteAfterUse = yes}; // table
  use XOTTBL {deleteAfterUse = yes}; // table
  use KO0OM.KO0OM010 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KO0O000: KO0O000();
    goto KO0O010;
    KO0O010: KO0O010();
    goto KO0O010;
  end // end main
end // end KO0O

// check security; fastpath entry
Function KO0O000()


  XSENTRY(); /* check security*/


  XSSEGTR(); /* set segmented transaction id*/

  converseLib.clearScreen();
  set KO0OM010 initial; /* initialize screen*/

  set SQLCA empty;
  set TA1REC empty;
  set TA2REC empty;
  set KO0OW01 empty;
  set ERRSQLCA empty;

  if (COMMAREA.CAITEM != " ") /* check fast path entry*/
    KO0OM010.KOHADJID = COMMAREA.CAITEM;
    KO0OW01.KOHADJID = KO0OM010.KOHADJID;
    KO0OS20(); /* validate comm adj id*/
    KO0OS22(); /* get adjustment cd desc*/
    KO0OS25(); /* get customer company name*/
    KO0OS30(); /* get customer store name*/
    KO0OS35(); /* get customer dept abrv*/
    KO0OS40(); /* get gpc code abrv*/
    KO0OS42(); /* get order type abrv*/
    KO0OS45(); /* get 'from' agency name*/
    KO0OS50(); /* get 'from' rep name*/
    KO0OS55(); /* get 'to' agency name*/
    KO0OS60(); /* get 'to' rep name*/
  end
end // end KO0O000

// accept key; display inquiry
Function KO0O010()


  KO0OM010.XXXPRCNM = "KO0O010";
  KO0OM010.XXXCURDT = VGVar.currentShortGregorianDate;

  converse KO0OM010 ;


  KO0OS10(); /* validate attention keys*/

  if (KO0OM010.KOHADJID == 0)
    converseLib.clearScreen();
    set KO0OM010 initial;
    set KO0OM010.KOHADJID cursor, bold;
    KO0OW01.KOHADJID = 0;
    converseLib.validationFailed(45); /* comm adj id does not exist*/
    exit stack;
  else
    if (KO0OM010.KOHADJID == KO0OW01.KOHADJID)
      exit stack;
    end
  end

  KO0OS15(); /* reset screen attributes*/
  KO0OS20(); /* validate commission adj id*/
  KO0OS22(); /* get adjustment id description*/
  KO0OS25(); /* get customer company name*/
  KO0OS30(); /* get customer store name*/
  KO0OS35(); /* get customer dept abrv*/
  KO0OS40(); /* get gpc code abrv*/
  KO0OS42(); /* get order type abrv*/
  KO0OS45(); /* get 'from' agency name*/
  KO0OS50(); /* get 'from' rep name*/
  KO0OS55(); /* get 'to' agency name*/
  KO0OS60(); /* get 'to' rep name*/


end // end KO0O010

// validate attention keys
Function KO0OS10()
  COMMAREA.CAITEM = " ";
  COMMAREA.CATOAP = " ";


  if (KO0OM010.CATOAP != " ") /* check fast path*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = KO0OM010.CATOAP;
      COMMAREA.CAITEM = KO0OM010.CAITEM;
      XSEXIT();
      set KO0OM010.CATOAP cursor, bold;
      VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    else
      set KO0OM010.CATOAP cursor, bold;
      converseLib.validationFailed(1);
      exit stack;
    end
  end

  if (converseVar.eventKey is pf1) /* transfer to help routine*/
    XSPF1();
    VAGen_EZEMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pf3 /* exit from application*/
   || converseVar.eventKey is pa2)
    COMMAREA.CATOAP = "KO0A";
    XSEXIT();
    VAGen_EZEMSG = COMMAREA.CAMSG;
    exit stack;
  end

  if (converseVar.eventKey is pf4) /* transfer to main menu*/
    COMMAREA.CATOAP = "KO0A";
    COMMAREA.CAITEM = " ";
    XSPF4();
    VAGen_EZEMSG = COMMAREA.CAMSG;
    exit stack;
  end


  if (converseVar.eventKey is enter) /* valid attention key*/
    return;
  else
    converseLib.validationFailed(2);
    exit stack;
  end


end // end KO0OS10

// reset screen attributes
Function KO0OS15()


  KO0OM010.VAGen_EZEMSG = " ";

  set KO0OM010.KOHADJID cursor, normal;
  set KO0OM010.CATOAP normal;
  set KO0OM010.CAITEM normal;


end // end KO0OS15

// validate commission adj id
Function KO0OS20()


  set KOHREC empty;
  KOHREC.KOHADJID = KO0OM010.KOHADJID;

  call "IO0620" ("S ", SQLCA, KOHREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    KO0OW01.KO0OWDT1 = KOHREC.KOZCSTMO;
    KO0OM010.KO0OWMM1 = KO0OW01.KO0OWMM1;
    KO0OM010.KO0OWYY1 = KO0OW01.KO0OWYY1;
    KO0OW01.KOHADJID = KOHREC.KOHADJID; /* load screen fields*/
    KO0OW01.KO0OWDT2 = KOHREC.KOHADJMO;
    KO0OM010.KO0OWMM2 = KO0OW01.KO0OWMM2;
    KO0OM010.KO0OWYY2 = KO0OW01.KO0OWYY2;
    KO0OM010.KOYADJCD = KOHREC.KOYADJCD;
    KO0OM010.KOHPADID = KOHREC.KOHPADID;
    KO0OM010.KUCCOID = KOHREC.KUCCOID;
    KO0OM010.KUMSTRID = KOHREC.KUMSTRID;
    KO0OM010.XNXCD = KOHREC.XNXCD;
    KO0OM010.IVCID = KOHREC.IVCID;
    KO0OM010.XGPCD = KOHREC.XGPCD;

    if (KOHREC.KOHADTCO == 0 /* to comm adj amount = 0*/
     && KOHREC.KOHADFCO == 0) /* from comm adj amount = 0*/
      KO0OM010.KOHADJSL = KOHREC.KOHADJSL;
    else
      if (KOHREC.KOHADJSL < 0)
        KO0OM010.KOHADJSL = KOHREC.KOHADJSL * -1;
      else
        KO0OM010.KOHADJSL = KOHREC.KOHADJSL;
      end
    end

    KO0OM010.XOTCD = KOHREC.XOTCD;
    KO0OM010.KOHADFAG = KOHREC.KOHADFAG;
    KO0OM010.KOHADFRP = KOHREC.KOHADFRP;
    KO0OM010.KOHADFCO = KOHREC.KOHADFCO;
    KO0OM010.KOHADTAG = KOHREC.KOHADTAG;
    KO0OM010.KOHADTRP = KOHREC.KOHADTRP;
    KO0OM010.KOHADTCO = KOHREC.KOHADTCO;
    KO0OM010.KOHADJD1 = KOHREC.KOHADJD1;
    KO0OM010.KOHADJD2 = KOHREC.KOHADJD2;
    KO0OM010.KOHADJD3 = KOHREC.KOHADJD3;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.clearScreen();
      set KO0OM010 initial; /* clear screen fields*/
      set KO0OM010.KOHADJID cursor, bold;
      KO0OM010.KOHADJID = KOHREC.KOHADJID; /* display invalid entry*/
      KO0OW01.KOHADJID = 0; /* initialize ws compare field*/
      converseLib.validationFailed(45); /* comm adj id does not exist*/
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "KO0O    ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "KO0OS20  ";
      TA1REC.TA1LOCAT[3] = "IO0620   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "KO0OM010";
      TA1REC.TA1DBASE = "DCOMM.";
      TA1REC.TA1TBLVU = "VCOADJ01";
      TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end


end // end KO0OS20

// get adjustment code desc
Function KO0OS22()


  set KOYREC empty;
  KOYREC.KOYADJCD = KOHREC.KOYADJCD;

  call "IO1030" ("S ", SQLCA, KOYREC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0)
    KO0OM010.KOYADJDS = KOYREC.KOYADJDS;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KO0OM010.KOYADJDS = " ";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "KO0O    ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "KO0OS22  ";
      TA1REC.TA1LOCAT[3] = "IO1030   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "KO0OM010";
      TA1REC.TA1DBASE = "DCOMM.";
      TA1REC.TA1TBLVU = "VADJCD01";
      TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end


end // end KO0OS22

// get customer company name
Function KO0OS25()


  set KUCREC empty;
  KUCREC.KUCCOID = KOHREC.KUCCOID;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0)
    KO0OM010.KUCCONM = KUCREC.KUCCONM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KO0OM010.KUCCONM = " ";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "KO0O    ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "KO0OS25  ";
      TA1REC.TA1LOCAT[3] = "IO0240   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "KO0OM010";
      TA1REC.TA1DBASE = "DCUST.";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end


end // end KO0OS25

// get customer store name
Function KO0OS30()


  set KUMREC empty;
  KUMREC.KUCCOID = KOHREC.KUCCOID;
  KUMREC.KUMSTRID = KOHREC.KUMSTRID;

  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0)
    KO0OM010.KUMSTSNM = KUMREC.KUMSTSNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KO0OM010.KUMSTSNM = " ";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "KO0O    ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "KO0OS30  ";
      TA1REC.TA1LOCAT[3] = "IO0340   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "KO0OM010";
      TA1REC.TA1DBASE = "DCUST.";
      TA1REC.TA1TBLVU = "VSTORE01";
      TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end


end // end KO0OS30

// get customer dept abrv
Function KO0OS35()

  set KUJREC empty;

  TA1REC.TA1TYPE = "DB2 "; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend function (return)*/
  TA1REC.TA1PGMNM = "KO0O    "; /* program name*/
  TA1REC.TA1MAP = "KO0OM010"; /* map name*/
  TA1REC.TA1DBASE = "DCUST   "; /* database name*/
  TA1REC.TA1TBLVU = "VDEPT001"; /* table view*/
  TA1REC.TA1LOCAT[3] = "KO0OS35";
  TA1REC.TA1LOCAT[4] = "IO0290";

  KUJREC.KUCCOID = KO0OM010.KUCCOID;
  KUJREC.XNXCD = KO0OM010.XNXCD;
  TA1REC.TA1TBLKE = KUJREC.KUJGRP; /* table key*/

  call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    if (KUJREC.KUJSLFNM > " ")
      KO0OM010.XNXABRV = KUJREC.KUJSLFNM;
    else
      KO0OM010.XNXABRV = "NO DESCRIPTION";
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KO0OM010.XNXABRV = "UNKNOWN";
    else
      XSKO001(); /* abort*/
    end
  end


end // end KO0OS35

// get gpc cd abrv
Function KO0OS40()


  if (KOHREC.XGPCD in XGPTBL.XGPCD)
    KO0OM010.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  else
    KO0OM010.XGPABRV = " ";
  end


end // end KO0OS40

// get order type abrv
Function KO0OS42()


  if (KOHREC.XOTCD in XOTTBL.XOTCD)
    KO0OM010.XOTABRV = XOTTBL.XOTABRV[sysVar.arrayIndex];
  else
    KO0OM010.XOTABRV = " ";
  end


end // end KO0OS42

// get 'from'agency name
Function KO0OS45()


  set SM1REC empty;
  SM1REC.SM1AGYID = KOHREC.KOHADFAG;

  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0)
    KO0OM010.SM1AGYNM[1] = SM1REC.SM1AGYNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KO0OM010.SM1AGYNM[1] = " ";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "KO0O    ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "KO0OS45  ";
      TA1REC.TA1LOCAT[3] = "IO0050   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "KO0OM010";
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VSAGCY01";
      TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end


end // end KO0OS45

// get 'from' rep name
Function KO0OS50()


  set VRAGCY02 empty;
  VRAGCY02.SM1AGYID = KOHREC.KOHADFAG;
  VRAGCY02.SM4REPID = KOHREC.KOHADFRP;
  VRAGCY02.XXXSTAT = "A"; /* check active reps first*/

  call "IO0400" ("S ", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0)
    KO0OM010.XXXFSTNM[1] = VRAGCY02.XXXFSTNM;
    KO0OM010.XXXLSTNM[1] = VRAGCY02.XXXLSTNM;
    KO0OM010.XXXMDINT[1] = VRAGCY02.XXXMDINT;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "KO0O    ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "KO0OS50  ";
      TA1REC.TA1LOCAT[3] = "IO0400   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "KO0OM010";
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VRAGCY02";
      TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end


  if (SQLCA.VAGen_SQLCODE == 100)

    VRAGCY02.XXXSTAT = "I"; /* check inactive reps*/

    call "IO0400" ("S3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};


    if (SQLCA.VAGen_SQLCODE == 0)
      call "IO0400" ("N3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
      KO0OM010.XXXFSTNM[1] = VRAGCY02.XXXFSTNM;
      KO0OM010.XXXLSTNM[1] = VRAGCY02.XXXLSTNM;
      KO0OM010.XXXMDINT[1] = VRAGCY02.XXXMDINT;
      call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        KO0OM010.XXXFSTNM[1] = " ";
        KO0OM010.XXXLSTNM[1] = " ";
        KO0OM010.XXXMDINT[1] = " ";
        call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "KO0O    ";
        TA1REC.TA1LOCAT[1] = "A        ";
        TA1REC.TA1LOCAT[2] = "KO0OS50  ";
        TA1REC.TA1LOCAT[3] = "IO0400   ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "KO0OM010";
        TA1REC.TA1DBASE = "DSLSMN";
        TA1REC.TA1TBLVU = "VRAGCY01";
        TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
        KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
        exit stack;
      end
    end
  end


end // end KO0OS50

// get 'to' agency name
Function KO0OS55()


  set SM1REC empty;
  SM1REC.SM1AGYID = KOHREC.KOHADTAG;

  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0)
    KO0OM010.SM1AGYNM[2] = SM1REC.SM1AGYNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KO0OM010.SM1AGYNM[2] = " ";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "KO0O    ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "KO0OS55  ";
      TA1REC.TA1LOCAT[3] = "IO0050   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "KO0OM010";
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VSAGCY01";
      TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end


end // end KO0OS55

// get 'to' rep name
Function KO0OS60()


  set VRAGCY02 empty;
  VRAGCY02.SM1AGYID = KOHREC.KOHADTAG;
  VRAGCY02.SM4REPID = KOHREC.KOHADTRP;
  VRAGCY02.XXXSTAT = "A"; /* check active reps first*/

  call "IO0400" ("S ", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0)
    KO0OM010.XXXFSTNM[2] = VRAGCY02.XXXFSTNM;
    KO0OM010.XXXLSTNM[2] = VRAGCY02.XXXLSTNM;
    KO0OM010.XXXMDINT[2] = VRAGCY02.XXXMDINT;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "KO0O    ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "KO0OS60  ";
      TA1REC.TA1LOCAT[3] = "IO0400   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "KO0OM010";
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VRAGCY02";
      TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      XSPF4();
      KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
      exit stack;
    end
  end


  if (SQLCA.VAGen_SQLCODE == 100)

    VRAGCY02.XXXSTAT = "I"; /* check inactive reps*/

    call "IO0400" ("S3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};


    if (SQLCA.VAGen_SQLCODE == 0)
      call "IO0400" ("N3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
      KO0OM010.XXXFSTNM[2] = VRAGCY02.XXXFSTNM;
      KO0OM010.XXXLSTNM[2] = VRAGCY02.XXXLSTNM;
      KO0OM010.XXXMDINT[2] = VRAGCY02.XXXMDINT;
      call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        KO0OM010.XXXFSTNM[2] = " ";
        KO0OM010.XXXLSTNM[2] = " ";
        KO0OM010.XXXMDINT[2] = " ";
        call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "KO0O    ";
        TA1REC.TA1LOCAT[1] = "A        ";
        TA1REC.TA1LOCAT[2] = "KO0OS60  ";
        TA1REC.TA1LOCAT[3] = "IO0400   ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "KO0OM010";
        TA1REC.TA1DBASE = "DSLSMN";
        TA1REC.TA1TBLVU = "VRAGCY02";
        TA1REC.TA1TBLKE = KO0OW01.KO0OWERR;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        XSPF4();
        KO0OM010.VAGen_EZEMSG = COMMAREA.CAMSG;
        exit stack;
      end
    end
  end


end // end KO0OS60

//*** RECORD=KO0OW01 ****
// this is the working storage record for application ko0o.
// ***********************
Record KO0OW01 type basicRecord
  10 KO0OWERR KO0OWERR ; 
    15 KOHADJID KOHADJID ; 
  10 KO0OWDT1 KO0OWDT1 ; 
    15 KO0OWCC1 KO0OWCC1 ; 
    15 KO0OWYY1 KO0OWYY1 ; 
    15 KO0OWMM1 KO0OWMM1 ; 
  10 KO0OWDT2 KO0OWDT2 ; 
    15 KO0OWCC2 KO0OWCC2 ; 
    15 KO0OWYY2 KO0OWYY2 ; 
    15 KO0OWMM2 KO0OWMM2 ; 
end // end KO0OW01

// century for comm stmt mo
DataItem KO0OWCC1 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// century xactn mo & yr
DataItem KO0OWCC2 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// separate processing stmt date
DataItem KO0OWDT1 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// separate transaction mo & yr
DataItem KO0OWDT2 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// comm. adj. id. for ta1rec
DataItem KO0OWERR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// comm processing stmt month
DataItem KO0OWMM1 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xactn month
DataItem KO0OWMM2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// comm processing stmt year
DataItem KO0OWYY1 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xactn year
DataItem KO0OWYY2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

