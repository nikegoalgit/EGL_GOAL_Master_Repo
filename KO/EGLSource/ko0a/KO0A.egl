package ko0a;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
//*** PROGRAM=KO0A ****
// this is the commissions main menu program
// 
// 
// 
// date created:        july 25, 1986
// 
// maintenance:
// 
// init   date      reason
// -------------------------------------------------------
// dsm 07-28-87     removed order type bonus schedule from
//                  application menu
// jbw 12-16-88     CHECKED FOR NONCSP OPTION USAGE
// jbw 12-16-88     added xssegtr logic
// jab 03-30-90     removed ko0d from processing options.
// jab 02-11-91     removed note from screen
// jab 05-21-91     removed major account options.
// jab 03-06-92     removed special style comm. options
// jab 10-31-92     added rate forecasting (kf0a) option
// *********************
Program KO0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CO00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KO0AT {deleteAfterUse = yes}; // table
  use KO0AM.KO0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KO0A001: KO0A001();
    KO0A005: KO0A005();
    ;
    ;
        /* go to the top of application no matter what.*/
    ;
    ;
    goto KO0A005;
    ;
    ;
  end // end main
end // end KO0A

// security check,first time thru
Function KO0A001()
  XSENTRY();
  XSSEGTR(); /* SET SEGMENTED TRANSACTION ID*/
  KO0AS1A();
end // end KO0A001

// converse the commissions menu
Function KO0A005()
  ;
  ;
           /* nothing to do in the before stage*/
  ;
  ;
   /* ***********************************************************/
  converse KO0AM001 ;
   /* ***********************************************************/
  ;
  ;
       /* check pfkeys and menu selection*/
  ;
  ;
  KO0AS2A();
  ;
  ;
  ;
end // end KO0A005

// first time thru
Function KO0AS1A()
  ;
  ;
     /* first time thru check to see if a sales agency*/
     /* number was passed from calling program.*/
     /* if so get sales agency and move data to screens.*/
  ;
  KO0AM001.XXXCURDT = VGVar.currentShortGregorianDate;
  COMMAREA.CAUSERA = " ";
  ;
end // end KO0AS1A

// check pfkeys and selection
Function KO0AS2A()
  ;
  ;
  ;
      /* check for valid pfkeys and valid use of opt: and item:*/
      /* fields*/
  ;
  ;
  ;
  ;
  if (converseVar.eventKey is pa2)
    XSPF4();
  else
    if (KO0AM001.CATOAP > " "
     && converseVar.eventKey is pf3)
          /* 'SORRY, YOU MAY NOT USE OPT: OR ITEM: WITH PFKEYS'*/
      converseLib.validationFailed(1);
    else
      if (KO0AM001.CATOAP > " "
       && converseVar.eventKey is pf4)
            /* 'SORRY, YOU MAY NOT USE OPT: OR ITEM: WITH PFKEYS'*/
        converseLib.validationFailed(1);
      else
        if (converseVar.eventKey is enter
         || converseVar.eventKey is pf1
         || converseVar.eventKey is pf3
         || converseVar.eventKey is pf4)
             /* next sentence*/
        else
          converseLib.validationFailed(2);
            /* invalid pfkey*/
        end
      end
    end
  end
  ;
  ;
  ;
  if (converseVar.validationMsgNum > 0)
       /* next sentence*/
  else
    if (KO0AM001.CATOAP > " ")
      COMMAREA.CATOAP = KO0AM001.CATOAP;
      COMMAREA.CAITEM = KO0AM001.CAITEM;
      XSEXIT();
      KO0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    else
      if (converseVar.eventKey is pf1)
        XSPF1();
        KO0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      else
        if (converseVar.eventKey is pf3)
          XSPF4();
          KO0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
        else
          if (converseVar.eventKey is pf4)
            XSPF4();
            KO0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
          else
            if (KO0AM001.KO0AMSEL in KO0AT.KO0AMELT)
              COMMAREA.CATOAP = KO0AT.KO0AMPRM[sysVar.arrayIndex];
            end
            if (sysVar.arrayIndex == 0)
              converseLib.validationFailed(127);
            else
              XSEXIT();
              KO0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
            end
          end
        end
      end
    end
  end
  ;
  ;
  ;
end // end KO0AS2A

