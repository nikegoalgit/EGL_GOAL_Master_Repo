package ko0y;

import corpcom1.CAITEM;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSKO001;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.*;
import corpcom6.SQLCA;
import corpcom7.XXXFSTNM;
import corpcom7.XXXLSTNM;
import corpcom7.XXXMDINT;
import corpx1.XDVCD;
import corpx1.XDVDESC;
import corpx1.XDVTBL;
import corpx1.XGPCD;
import corpx1.XGPDESC;
import corpx1.XGPTBL;
import corpx1.XOBTBL;
import corpx1.XPRTBL;
import corpx2.XOBCD;
import corpx2.XOBDESC;
import corpx2.XPRCD;
import corpy2.YSCCD;
import corpy2.YSCTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZSDT;
import ko.common.KOAREC;
import ko.common.KOBCOPCT;
import ko.common.KOBPCTED;
import ko.common.KOBPCTXD;
import ko.common.KOBREC;
import ko.common.KOZCSTMO;
import ko.common.KOZREC;
import ku.common.KUCCOID;
import ku.common.KUCREC;
import sm.common.SM1AGYID;
import sm.common.SM1AGYNM;
import sm.common.SM1REC;
import sm.common.SM4REPID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VRAGCY02;
//*** PROGRAM=KO0Y ****
//      this application will allow the user to add and change
// the commission rate earned for the various exception levels
// for an agency/rep (i.e, prod typ/cust/base ot rate).
// 
// 
// 06-19-89   dmeier  installed
// 09-06-89   jbecke  changed to set koarec.koatblcd to 50
//                    instead of 05.
// 09-09-89   jbecke  added koarec.xrccd update in s40,41,42.
// 11-13-89   jbecke  changed ypgcd to xprcd s1l,s40,s41,s42.
// 10-02-90   jbecke  changed s4w to check entire array for
//                    duplicate.  was not checking anything.
// 06-20-91   jbecke  fixed delete processing.
// 04-09-92   aivers  regen for april database changes
// 06-04-92   aivers  regen for JUNE database changes
// 10-09-92   aivers  database changes. get rep's name from
//                    vragcy02 instead of sm5rec.
// 09-21-93   dluck   fix data exception error for conversion
//                    to CSPv4.  s2a, s2b, ko0yw01.
// 02-24-94   RPATTE  TBLCHG DELETE XRCCD FROM RECDS,TBLS
//                    AND MAPS.
// 02-02-98   ORICHA  Y2K MODIFICATIONS:  ADD CENTURY WINDOWING
//                    TO KO0YS4B, S4I, S4V, S4Z.
// *********************
Program KO0Y type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CO00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KO0YW01 KO0YW01; // record
  KO0YW02 KO0YW02; // record
  KOAREC KOAREC; // record
  KOBREC KOBREC; // record
  KOZREC KOZREC; // record
  KUCREC KUCREC; // record
  SM1REC SM1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VRAGCY02 VRAGCY02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XDVTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use XPRTBL {deleteAfterUse = yes}; // table
  use YSCTBL {deleteAfterUse = yes}; // table
  use KO0YM.KO0YM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KO0Y000: KO0Y000();
    ;
    ;
    goto KO0Y005;
    ;
    ;
    KO0Y005: KO0Y005();
    ;
    ;
    goto KO0Y005;
    ;
    ;
  end // end main
end // end KO0Y

// initialize application
Function KO0Y000()
  ;
  ;
  set KO0YW01 empty; /* ; initialize ws rec*/
  set KO0YW02 empty; /* ; initialize ws rec*/
  ;
  XSENTRY(); /* ; check security*/
  XSSEGTR(); /* ; set segmented trans id*/
  KO0YS0A(); /* ; get current stmt mo*/
  ;
  if (COMMAREA.CAITEM != " ") /* ; fast path item used*/
    KO0YW01.CAITEM = COMMAREA.CAITEM; /* ; move item to w.s.*/
    KO0YW01.SM1AGYID = KO0YW01.KO0YWID1; /* ; build w.s. agency*/
    KO0YW01.SM4REPID = KO0YW01.KO0YWID2; /* ; build w.s. rep*/
    KO0YW01.XDVCD = KO0YW01.KO0YWID3; /* ; build w.s. div*/
    KO0YW01.XGPCD = KO0YW01.KO0YWID4; /* ; build w.s. gpc*/
    KO0YW01.KO0YWEKF = "Y"; /* ; set edit key flag*/
  end
  ;
  KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
  KO0YW01.KO0YWNKF = "Y"; /* ; set new key flag*/
  KO0YW01.KO0YWNAF = "Y"; /* ; set new array flag*/
  ;
  ;
  ;
   /* *************************************************************/
end // end KO0Y000

// converse split sched screen
Function KO0Y005()
  ;
  ;
  if (KO0YW01.KO0YWBMF == "Y") /* ; build map flag = 'y'*/
    KO0YW01.KO0YWBMF = "N"; /* ; reset build map flag*/
    KO0Y006(); /* ; build map codes*/
    KO0Y007(); /* ; build map desc*/
  end
  ;
  KO0YM001.XXXPRCNM = "KO0Y005";
  KO0YM001.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  if (KO0YW01.KO0YWFN2 == "C") /* ; function 2 = 'current'*/
    KO0YM001.KO0YMP14 = "14:HISTORY"; /* ; set pf14 to history*/
    KO0YM001.KO0YMTTL = "       "; /* ; set title to history*/
  else
    KO0YM001.KO0YMP14 = "14:CURRENT"; /* ; set pf14 to current*/
    KO0YM001.KO0YMTTL = "HISTORY"; /* ; set title to blanks*/
  end
  ;
  KO0YM001.KO0YMMSG = KO0YW01.KO0YWMSG;
  if (KO0YW01.KO0YWMNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(KO0YW01.KO0YWMNO);
  end
  KO0YW01.KO0YWMSG = " ";
  KO0YW01.KO0YWMNO = 0;
  ;
  ;
   /* *************************************************************/
  ;
  converse KO0YM001 ;
  ;
   /* *************************************************************/
  ;
  KO0Y007(); /* ; reset map attributes*/
  KO0Y008(); /* ; edit pf/pa key*/
  ;
  if (KO0YW01.KO0YWMSG == " " /* ; no system messages*/
   && KO0YW01.KO0YWMNO == 0)  /* ; no error messages*/
    KO0Y009(); /* ; edit map*/
  end
  ;
  ;
   /* *************************************************************/
end // end KO0Y005

// build screen
Function KO0Y006()
  ;
  ;
  converseLib.clearScreen();
  set KO0YM001 initial; /* ; reset screen*/
  ;
  if (KO0YW01.KO0YWNKF == "Y") /* ; new key flag = 'y'*/
    KO0YW01.KO0YWNKF = "N"; /* ; reset new key flag*/
    KO0YS1A(); /* ; build new key*/
  end
  ;
  if (KO0YW01.KO0YWNAF == "Y") /* ; new array flag = 'y'*/
    KO0YW01.KO0YWNAF = "N"; /* ; reset new array flag*/
    KO0YS1J(); /* ; build new array*/
  end
  ;
  KO0YS1M(); /* ; move sched to screen*/
  KO0YS1O(); /* ; set pf key attributes*/
  ;
  KO0YM001.SM1AGYID = KO0YW01.SM1AGYID;
  KO0YM001.SM1AGYNM = KO0YW01.SM1AGYNM;
  KO0YM001.SM4REPID = KO0YW01.SM4REPID;
  KO0YM001.XXXLSTNM = KO0YW01.XXXLSTNM;
  KO0YM001.XXXFSTNM = KO0YW01.XXXFSTNM;
  KO0YM001.XXXMDINT = KO0YW01.XXXMDINT;
  KO0YM001.XDVCD = KO0YW01.XDVCD;
  KO0YM001.XDVDESC = KO0YW01.XDVDESC;
  KO0YM001.XGPCD = KO0YW01.XGPCD;
  KO0YM001.XGPDESC = KO0YW01.XGPDESC;
  ;
  ;
  ;
end // end KO0Y006

// set map attributes
Function KO0Y007()
  ;
  ;
  KO0YW01.KO0YWSB1 = 4; /* ; set array subscript*/
  while (KO0YW01.KO0YWSB1 > 0) /* ; until top of array*/
    ;
    KO0YS2A(); /* ; get begin date*/
    KO0YS2B(); /* ; get end date*/
    ;
    if (KO0YM001.XPRCD[KO0YWSB1] == " "    /* ; no map prod group*/
     && KO0YM001.YSCCD[KO0YWSB1] == "  "   /* ; no map sales cat*/
     && KO0YM001.KO0YMCID[KO0YWSB1] == 0   /* ; no map cust*/
     && KO0YM001.XOBCD[KO0YWSB1] == "  "   /* ; no map base ot*/
     && KO0YM001.KO0YMPCT[KO0YWSB1] == 0   /* ; no map pct*/
     && KO0YM001.KO0YMEDT[KO0YWSB1] == " " /* ; no map begin date*/
     && KO0YM001.KO0YMXDT[KO0YWSB1] == " " /* ; no map end date*/
     && KO0YM001.KO0YMMCD[KO0YWSB1] == " ") /* ; no map maint code*/
      KO0YM001.XPRABRV[KO0YWSB1] = " ";
      KO0YM001.YSCABRV[KO0YWSB1] = " ";
      KO0YM001.KUCCONM[KO0YWSB1] = " ";
      KO0YM001.XOBABRV[KO0YWSB1] = " ";
    else
      KO0YS2C(); /* ; get prod grp abrv*/
      KO0YS2D(); /* ; get sales cat abrv*/
      KO0YS2E(); /* ; get cust name*/
      KO0YS2F(); /* ; get ord typ abrv*/
    end
    ;
    KO0YS2G(); /* ; set row attributes*/
    ;
    KO0YW01.KO0YWSB1 = KO0YW01.KO0YWSB1 - 1; /* ; increment array*/
    ;
  end
  ;
  ;
end // end KO0Y007

// validate attention key
Function KO0Y008()
  ;
  ;
  set KO0YM001.CATOAP normal; /* ; reset map to appl*/
  set KO0YM001.CAITEM normal; /* ; reset map to item*/
  ;
  COMMAREA.CATOAP = " "; /* ; reset commarea to appl*/
  COMMAREA.CAITEM = " "; /* ; reset commarea to item*/
  KO0YW01.KO0YWFN1 = " "; /* ; reset function*/
  ;
  if (KO0YM001.CATOAP != " ") /* ; fast path used*/
    KO0YS3A(); /* ; edit fast path*/
  else
    if (converseVar.eventKey is enter /* ; attention key = enter*/
     || converseVar.eventKey is pf7   /* ; or pf7*/
     || converseVar.eventKey is pf8   /* ; or pf8*/
     || converseVar.eventKey is pf12  /* ; or pf12*/
     || converseVar.eventKey is pf14  /* ; or pf14*/
     || converseVar.eventKey is pf19  /* ; or pf14*/
     || converseVar.eventKey is pf20) /* ; or pf14*/
      KO0YS3B(); /* ; set function key*/
    else
      if (converseVar.eventKey is pf1) /* ; attention key = pf1*/
        XSPF1(); /* ; call help*/
      else
        if (converseVar.eventKey is pf3 /* ; attention key = pf3*/
         || converseVar.eventKey is pa2) /* ; or pa2*/
          COMMAREA.CATOAP = "KO0A"; /* ; call comm menu*/
          XSEXIT();
        else
          if (converseVar.eventKey is pf4) /* ; attention key = pf4*/
            XSPF4(); /* ; call main menu*/
          else
            KO0YW01.KO0YWMNO = 2; /* ; invalid attenion key*/
          end
        end
      end
    end
  end
  ;
  KO0YW01.KO0YWMSG = COMMAREA.CAMSG; /* ; save comm mssg*/
  COMMAREA.CAMSG = " "; /* ; reset comm mssg*/
  ;
  ;
end // end KO0Y008

// edit map
Function KO0Y009()
  ;
  ;
  KO0YW01.KO0YWKCF = "N"; /* ; reset key change flag*/
  KO0YW01.KO0YWSCF = "N"; /* ; reset sched change flag*/
  ;
  KO0YS4A(); /* ; check for changes*/
  ;
  if (KO0YW01.KO0YWKCF == "Y") /* ; key changes were made*/
    KO0YS4F(); /* ; process key changes*/
  else
    if (KO0YW01.KO0YWSCF == "Y") /* ; sched changes were made*/
      KO0YS4G(); /* ; process sched changes*/
    else
      KO0YS44(); /* ; process no changes*/
    end
  end
  ;
  ;
end // end KO0Y009

// get current stmt mo
Function KO0YS0A()
  ;
  ;
  set SQLCA empty;
  set KOZREC empty;
  ;
  call "IO0640" ("S ", SQLCA, KOZREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    KO0YW01.KO0YWDT3 = KOZREC.KOZCSTMO;
    KO0YW01.KO0YWCD4 = KO0YW01.KO0YWCD3;
    KO0YW01.KO0YWDD4 = 0;
    KO0YW01.KOZCSTMO = KO0YW01.KO0YWDT4;
  else
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VCOCTL01";
    TA1REC.TA1LOCAT[1] = "KO0YS0A";
    TA1REC.TA1LOCAT[2] = "IO0640";
    XSKO001();
  end
  ;
  ;
  if (KO0YW01.KO0YWMMB < 12)
    KO0YW01.KO0YWMMB = KO0YW01.KO0YWMMB + 1;
  else
    KO0YW01.KO0YWMMB = 1;
    KO0YW01.KO0YWYYB = KO0YW01.KO0YWYYB + 1;
    if (KO0YW01.KO0YWYYB == 0)
      KO0YW01.KO0YWCCB = KO0YW01.KO0YWCCB + 1;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS0A

// build new key
Function KO0YS1A()
  ;
  ;
  KO0YS1B(); /* ; reset w.s. fields*/
  ;
  if (KO0YW01.KO0YWEKF == "Y") /* ; edit key flag = 'y'*/
    KO0YW01.KO0YWEKF = "N"; /* ; reset edit key flag*/
    KO0YS1C(); /* ; edit key data*/
  end
  ;
  ;
   /* *************************************************************/
end // end KO0YS1A

// reset working storage
Function KO0YS1B()
  ;
  ;
  KO0YW01.KO0YWFN2 = "C"; /* ; set function to current*/
  KO0YW01.KO0YWKEF = "N"; /* ; set key error flag*/
  KO0YW01.KO0YWSFF = "N"; /* ; set sched found flag*/
  KO0YW01.KO0YWSAF = "N"; /* ; set scroll allowed flag*/
  KO0YW01.KO0YWEAF = "N"; /* ; set edit allowed flag*/
  KO0YW01.SM1AGYNM = " "; /* ; set w.s. agcy name*/
  KO0YW01.XXXLSTNM = " "; /* ; set w.s. rep last name*/
  KO0YW01.XXXFSTNM = " "; /* ; set w.s. rep first name*/
  KO0YW01.XXXMDINT = " "; /* ; set w.s. rep mid init*/
  KO0YW01.XDVDESC = " "; /* ; set w.s. div desc*/
  KO0YW01.XGPDESC = " "; /* ; set w.s. gpc desc*/
  KO0YW01.XOBDESC = " "; /* ; set w.s. base ot desc*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1B

// edit key data
Function KO0YS1C()
  ;
  ;
  KO0YS1E(); /* ; edit gpc*/
  KO0YS1F(); /* ; edit division*/
  KO0YS1G(); /* ; edit rep id*/
  KO0YS1I(); /* ; edit agcy id*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1C

// edit gpc
Function KO0YS1E()
  ;
  ;
  if (KO0YW01.XGPCD == "**" /* ;       ; all gpcs*/
   || KO0YW01.XGPCD == " ") /* ; no gpc entered*/
    KO0YW01.XGPCD = "**"; /* ; set xgpcd to 'all'*/
    KO0YW01.XGPDESC = "ALL GPCS";
  else
    if (KO0YW01.XGPCD in XGPTBL.XGPCD) /* ; valid gpc*/
      KO0YW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      if (XGPTBL.XXXSTAT[sysVar.arrayIndex] != "A") /* ; status not = 'a'*/
        set KO0YM001.XGPCD cursor, bold; /* ; highlight gpc*/
        KO0YW01.KO0YWKEF = "Y"; /* ; set error flag*/
        KO0YW01.KO0YWMNO = 92; /* ; inactive gpc*/
      end
      if (XGPTBL.COCMFL[sysVar.arrayIndex] != "Y") /* ; comm flag not 'yes'*/
        set KO0YM001.XGPCD cursor, bold; /* ; highlight gpc*/
        KO0YW01.KO0YWKEF = "Y"; /* ; set error flag*/
        KO0YW01.KO0YWMNO = 169; /* ; non-comm gpc*/
      end
    else
      set KO0YM001.XGPCD cursor, bold; /* ; highligt gpc*/
      KO0YW01.KO0YWKEF = "Y"; /* ; set error flag*/
      KO0YW01.KO0YWMNO = 93; /* ; invalid gpc*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1E

// edit division
Function KO0YS1F()
  ;
  ;
  if (KO0YW01.XDVCD == "**" /* ; all divs*/
   || KO0YW01.XDVCD == " ") /* ; no div entered*/
    KO0YW01.XDVCD = "**"; /* ; set div code*/
    KO0YW01.XDVDESC = "ALL DIVISIONS";
  else
    if (KO0YW01.XDVCD in XDVTBL.XDVCD) /* ; valid div*/
      KO0YW01.XDVDESC = XDVTBL.XDVDESC[sysVar.arrayIndex];
      if (XDVTBL.XXXSTAT[sysVar.arrayIndex] != "A") /* ; inactive div*/
        set KO0YM001.XDVCD cursor, bold;
        KO0YW01.KO0YWKEF = "Y";
        KO0YW01.KO0YWMNO = 185;
      end
    else
      set KO0YM001.XDVCD cursor, bold; /* ; invalid div*/
      KO0YW01.KO0YWKEF = "Y";
      KO0YW01.KO0YWMNO = 175;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1F

// edit rep id
Function KO0YS1G()
  ;
  ;
  if (KO0YW01.SM4REPID == 0) /* ; no rep id entenred*/
    KO0YW01.XXXLSTNM = "ALL REPS"; /* ; set rep name*/
  else
    ;
    set SQLCA empty;
    set VRAGCY02 empty;
    ;
    VRAGCY02.SM1AGYID = KO0YW01.SM1AGYID;
    VRAGCY02.SM4REPID = KO0YW01.SM4REPID;
    call "IO0400" ("S3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* ; sucessful open*/
      KO0YS1H(); /* ; fetch rep rec*/
    else
      KO0YW01.KO0YWKEF = "Y"; /* ; set key error flag*/
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VRAGCY02";
      TA1REC.TA1LOCAT[1] = "KO0YS1G";
      TA1REC.TA1LOCAT[2] = "IO0400";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1G

// fetch sm5rec
Function KO0YS1H()
  ;
  ;
  set SQLCA empty;
  ;
  call "IO0400" ("N3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    KO0YW01.XXXLSTNM = VRAGCY02.XXXLSTNM;
    KO0YW01.XXXFSTNM = VRAGCY02.XXXFSTNM;
    KO0YW01.XXXMDINT = VRAGCY02.XXXMDINT;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set KO0YM001.SM4REPID cursor, bold;
      set KO0YM001.SM1AGYID bold;
      KO0YW01.KO0YWKEF = "Y";
      KO0YW01.KO0YWMNO = 6;
    else
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VRAGCY02";
      TA1REC.TA1LOCAT[1] = "KO0YS1H";
      TA1REC.TA1LOCAT[2] = "IO0400";
      XSKO001(); /* abort*/
    end
  end
  ;
  call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1H

// edit agcy id
Function KO0YS1I()
  ;
  ;
  if (KO0YW01.SM1AGYID == " ") /* ; no agcy id entered*/
    set KO0YM001.SM1AGYID cursor, bold; /* ; highlight agcy id*/
    KO0YW01.KO0YWKEF = "Y"; /* ; set key error flag*/
    KO0YW01.KO0YWMNO = 38; /* ; required field*/
  else
    ;
    set SQLCA empty;
    set SM1REC empty;
    ;
    SM1REC.SM1AGYID = KO0YW01.SM1AGYID;
    ;
    call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      KO0YW01.SM1AGYNM = SM1REC.SM1AGYNM;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        set KO0YM001.SM1AGYID cursor, bold;
        KO0YW01.KO0YWKEF = "Y";
        KO0YW01.KO0YWMNO = 4;
      else
        TA1REC.TA1DBASE = "DSLSMN";
        TA1REC.TA1TBLVU = "VSAGCY01";
        TA1REC.TA1LOCAT[1] = "KO0YS1I";
        TA1REC.TA1LOCAT[2] = "IO0050";
        XSKO001(); /* abort*/
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1I

// build comm rate schedule
Function KO0YS1J()
  ;
  ;
  set KO0YW02 empty; /* ; reset array*/
  ;
  if (KO0YW01.SM1AGYID != "    " /* ; agency not = ' '*/
   && KO0YW01.KO0YWKEF != "Y")   /* ; no key errors*/
    ;
    set SQLCA empty;
    set KOBREC empty;
    ;
    KOBREC.SM1AGYID = KO0YW01.SM1AGYID;
    KOBREC.SM4REPID = KO0YW01.SM4REPID;
    ;
    call "IO0690" ("S1", SQLCA, KOBREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      ;
      KO0YW02.KO0YWTOT = 1; /* ; reset sched total*/
      ;
      while (KO0YW02.KO0YWTOT <= 100
       && SQLCA.VAGen_SQLCODE == 0)
        KO0YS1K();
      end
      ;
      call "IO0690" ("C1", SQLCA, KOBREC) {isNoRefresh = yes, isExternal = yes};
      ;
      if (KO0YW02.KO0YWTOT == 1) /* no records found*/
        if (KO0YW01.KO0YWFN2 == "H")
          KO0YW01.KO0YWMNO = 133;
        else
          KO0YW01.KO0YWMNO = 126;
        end
      else
        if (KO0YW01.KO0YWFN3 == "Y" /* at bottom*/
         && KO0YW01.KO0YWKEF != "Y" /* no errors*/
         && KO0YW01.KO0YWERR != "Y") /* no errors*/
          KO0YS48(); /* scroll to bottom*/
        end
      end
      ;
    else
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VOTSCH01";
      TA1REC.TA1LOCAT[1] = "KO0YS1J";
      TA1REC.TA1LOCAT[2] = "IO0690";
      XSKO001(); /* abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1J

// fetch comm rate rec
Function KO0YS1K()
  ;
  ;
  set SQLCA empty;
  set KOBREC empty;
  ;
  call "IO0690" ("N1", SQLCA, KOBREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; successful fetch*/
    ;
    if (KO0YW01.XDVCD == KOBREC.XDVCD
     && KO0YW01.XGPCD == KOBREC.XGPCD
     && KOBREC.XOTCD == "**")
      KO0YS1L(); /* ; move kobrec to array*/
    end
    ;
  else
    if (SQLCA.VAGen_SQLCODE != 100) /* ; not at end of array*/
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VOTSCH01";
      TA1REC.TA1LOCAT[1] = "KO0YS1K";
      TA1REC.TA1LOCAT[2] = "IO0690";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1K

// move kobrec to array
Function KO0YS1L()
  ;
  ;
  if (KOBREC.KOBPCTXD >= KO0YW01.KOZCSTMO /* ; term date in curr range*/
   && KO0YW01.KO0YWFN2 == "H")            /* ; function = history*/
    return; /* ; skip record*/
  else
    if (KOBREC.KOBPCTXD == 0 /* ; term date = 0*/
     && KO0YW01.KO0YWFN2 == "H") /* ;      ; function = history*/
      return; /* ; skip record*/
    else
      if (KOBREC.KOBPCTXD < KO0YW01.KOZCSTMO /* ; term date < curr stmt*/
       && KOBREC.KOBPCTXD > 0                /* ;      ; term date > 0*/
       && KO0YW01.KO0YWFN2 == "C")           /* ; function = current*/
        return; /* ; skip record*/
      end
    end
  end
  ;
  KO0YW02.XPRCD[KO0YWTOT] = KOBREC.XPRCD;
  KO0YW02.YSCCD[KO0YWTOT] = KOBREC.YSCCD;
  KO0YW02.KUCCOID[KO0YWTOT] = KOBREC.KUCCOID;
  KO0YW02.XOBCD[KO0YWTOT] = KOBREC.XOBCD;
  KO0YW02.KOBPCTED[KO0YWTOT] = KOBREC.KOBPCTED;
  KO0YW02.KOBPCTXD[KO0YWTOT] = KOBREC.KOBPCTXD;
  KO0YW02.KOBCOPCT[KO0YWTOT] = KOBREC.KOBCOPCT;
  KO0YW02.ZZZSDT[KO0YWTOT] = KOBREC.ZZZSDT;
  KO0YW02.ZZZCHGCT[KO0YWTOT] = KOBREC.ZZZCHGCT;
  ;
  KO0YW02.KO0YWTOT = KO0YW02.KO0YWTOT + 1;
  ;
  if (KO0YW02.KO0YWTOT > 100
   && KO0YW01.KO0YWFN2 == "H")
    KO0YW01.KO0YWMNO = 206;
  end
  ;
   /* *************************************************************/
  ;
end // end KO0YS1L

// move sched to screen
Function KO0YS1M()
  ;
  ;
  KO0YW01.KO0YWSB1 = 4; /* ; reset map subscript*/
  while (KO0YW01.KO0YWSB1 > 0) /* ; until top of map sched*/
    KO0YS1N(); /* ; move row to row*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1M

// move sched row to map row
Function KO0YS1N()
  ;
  ;
  KO0YW01.KO0YWSB2 = KO0YW01.KO0YWSB1 + KO0YW02.KO0YWPOS;
  ;
  KO0YM001.XPRCD[KO0YWSB1] = KO0YW02.XPRCD[KO0YWSB2];
  KO0YM001.YSCCD[KO0YWSB1] = KO0YW02.YSCCD[KO0YWSB2];
  KO0YM001.KO0YMCID[KO0YWSB1] = KO0YW02.KUCCOID[KO0YWSB2];
  KO0YM001.XOBCD[KO0YWSB1] = KO0YW02.XOBCD[KO0YWSB2];
  KO0YM001.KO0YMPCT[KO0YWSB1] = KO0YW02.KOBCOPCT[KO0YWSB2];
  ;
  if (KO0YW02.KOBPCTED[KO0YWSB2] == 0)
    KO0YM001.KO0YMEDT[KO0YWSB1] = " ";
  else
    KO0YW01.KO0YWDTB = KO0YW02.KOBPCTED[KO0YWSB2];
    KO0YW01.KO0YWYYA = KO0YW01.KO0YWYYB;
    KO0YW01.KO0YWMMA = KO0YW01.KO0YWMMB;
    KO0YW01.KO0YWDDA = KO0YW01.KO0YWDDB;
    KO0YW01.KO0YWFA1 = "-";
    KO0YW01.KO0YWFA2 = "-";
    KO0YM001.KO0YMEDT[KO0YWSB1] = KO0YW01.KO0YWDTA;
  end
  ;
  if (KO0YW02.KOBPCTXD[KO0YWSB2] == 0)
    KO0YM001.KO0YMXDT[KO0YWSB1] = " ";
  else
    KO0YW01.KO0YWDTB = KO0YW02.KOBPCTXD[KO0YWSB2];
    KO0YW01.KO0YWYYA = KO0YW01.KO0YWYYB;
    KO0YW01.KO0YWMMA = KO0YW01.KO0YWMMB;
    KO0YW01.KO0YWDDA = KO0YW01.KO0YWDDB;
    KO0YW01.KO0YWFA1 = "-";
    KO0YW01.KO0YWFA2 = "-";
    KO0YM001.KO0YMXDT[KO0YWSB1] = KO0YW01.KO0YWDTA;
  end
  ;
  KO0YM001.KO0YMMCD[KO0YWSB1] = " ";
  KO0YW01.KO0YWSB1 = KO0YW01.KO0YWSB1 - 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1N

// set pf key attributes
Function KO0YS1O()
  ;
  ;
  if (KO0YW01.SM1AGYID == " ") /* ; no map agency id*/
    KO0YW01.KO0YWSAF = "N"; /* ; scroll allowed = n*/
    set KO0YM001.KO0YMP07 skip, invisible;
    set KO0YM001.KO0YMP08 skip, invisible;
    set KO0YM001.KO0YMP14 skip, invisible;
    set KO0YM001.KO0YMP19 skip, invisible;
    set KO0YM001.KO0YMP20 skip, invisible;
  else
    if (KO0YW01.KO0YWKEF == "Y" /* ; key errors exist*/
     && KO0YW01.KO0YWSFF == "N") /* ; no sched recs found*/
      KO0YW01.KO0YWSAF = "N"; /* ; scroll allowed = 'n'*/
      set KO0YM001.KO0YMP07 skip, invisible;
      set KO0YM001.KO0YMP08 skip, invisible;
      set KO0YM001.KO0YMP14 initialAttributes;
      set KO0YM001.KO0YMP19 skip, invisible;
      set KO0YM001.KO0YMP20 skip, invisible;
    else
      KO0YW01.KO0YWSAF = "Y"; /* ; scroll allowed = 'y'*/
      set KO0YM001.KO0YMP07 initialAttributes;
      set KO0YM001.KO0YMP08 initialAttributes;
      set KO0YM001.KO0YMP14 initialAttributes;
      set KO0YM001.KO0YMP19 initialAttributes;
      set KO0YM001.KO0YMP20 initialAttributes;
    end
  end
  ;
  if (KO0YW01.SM1AGYID != " " /* ; map has agency id*/
   && KO0YW01.KO0YWKEF == "N" /* ; no map errors*/
   && KO0YW01.KO0YWFN2 != "H") /* ; not history*/
    KO0YW01.KO0YWEAF = "Y"; /* ; edit allowed = yes*/
    set KO0YM001.KO0YMP12 initialAttributes;
  else
    KO0YW01.KO0YWEAF = "N"; /* ; edit allowed = no*/
    set KO0YM001.KO0YMP12 skip, invisible;
  end
  ;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS1O

// set effective date
Function KO0YS2A()
  ;
  ;
  if (KO0YM001.KO0YMEDT[KO0YWSB1] != " ") /* ; map has begin date*/
    KO0YW01.KO0YWDT1 = KO0YM001.KO0YMEDT[KO0YWSB1];
    if (KO0YW01.KO0YWF11 == "-"
     && KO0YW01.KO0YWF12 == "-")
      KO0YW01.KO0YWMMA = KO0YW01.KO0YWMM1;
      KO0YW01.KO0YWDDA = KO0YW01.KO0YWDD1;
      KO0YW01.KO0YWYYA = KO0YW01.KO0YWYY1;
      KO0YW01.KO0YWFA1 = "-";
      KO0YW01.KO0YWFA2 = "-";
      KO0YM001.KO0YMEDT[KO0YWSB1] = KO0YW01.KO0YWDTA;
    else
      if (KO0YW01.KO0YWF11 == "/"
       && KO0YW01.KO0YWF12 == "/")
        KO0YW01.KO0YWMMA = KO0YW01.KO0YWMM1;
        KO0YW01.KO0YWDDA = KO0YW01.KO0YWDD1;
        KO0YW01.KO0YWYYA = KO0YW01.KO0YWYY1;
        KO0YW01.KO0YWFA1 = "-";
        KO0YW01.KO0YWFA2 = "-";
        KO0YM001.KO0YMEDT[KO0YWSB1] = KO0YW01.KO0YWDTA;
      else
        KO0YW01.KO0YWDT2 = KO0YM001.KO0YMEDT[KO0YWSB1];
        if (KO0YW01.KO0YWBB2 == " ")
          KO0YW01.KO0YWMMA = KO0YW01.KO0YWMM2;
          KO0YW01.KO0YWDDA = KO0YW01.KO0YWDD2;
          KO0YW01.KO0YWYYA = KO0YW01.KO0YWYY2;
          KO0YW01.KO0YWFA1 = "-";
          KO0YW01.KO0YWFA2 = "-";
          KO0YM001.KO0YMEDT[KO0YWSB1] = KO0YW01.KO0YWDTA;
        else
          set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
          KO0YW01.KO0YWERR = "Y";
          KO0YW01.KO0YWMNO = 046;
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS2A

// set termination date
Function KO0YS2B()
  ;
  ;
  if (KO0YM001.KO0YMXDT[KO0YWSB1] != " ") /* ; map has begin date*/
    KO0YW01.KO0YWDT1 = KO0YM001.KO0YMXDT[KO0YWSB1];
    if (KO0YW01.KO0YWF11 == "-"
     && KO0YW01.KO0YWF12 == "-")
      KO0YW01.KO0YWMMA = KO0YW01.KO0YWMM1;
      KO0YW01.KO0YWDDA = KO0YW01.KO0YWDD1;
      KO0YW01.KO0YWYYA = KO0YW01.KO0YWYY1;
      KO0YW01.KO0YWFA1 = "-";
      KO0YW01.KO0YWFA2 = "-";
      KO0YM001.KO0YMXDT[KO0YWSB1] = KO0YW01.KO0YWDTA;
    else
      if (KO0YW01.KO0YWF11 == "/"
       && KO0YW01.KO0YWF12 == "/")
        KO0YW01.KO0YWMMA = KO0YW01.KO0YWMM1;
        KO0YW01.KO0YWDDA = KO0YW01.KO0YWDD1;
        KO0YW01.KO0YWYYA = KO0YW01.KO0YWYY1;
        KO0YW01.KO0YWFA1 = "-";
        KO0YW01.KO0YWFA2 = "-";
        KO0YM001.KO0YMXDT[KO0YWSB1] = KO0YW01.KO0YWDTA;
      else
        KO0YW01.KO0YWDT2 = KO0YM001.KO0YMXDT[KO0YWSB1];
        if (KO0YW01.KO0YWBB2 == " ")
          KO0YW01.KO0YWMMA = KO0YW01.KO0YWMM2;
          KO0YW01.KO0YWDDA = KO0YW01.KO0YWDD2;
          KO0YW01.KO0YWYYA = KO0YW01.KO0YWYY2;
          KO0YW01.KO0YWFA1 = "-";
          KO0YW01.KO0YWFA2 = "-";
          KO0YM001.KO0YMXDT[KO0YWSB1] = KO0YW01.KO0YWDTA;
        else
          set KO0YM001.KO0YMXDT[KO0YWSB1] cursor, bold;
          KO0YW01.KO0YWERR = "Y";
          KO0YW01.KO0YWMNO = 046;
        end
      end
    end
  end
  ;
   /* *************************************************************/
end // end KO0YS2B

// get prod group abrv
Function KO0YS2C()
  ;
  ;
  KO0YM001.XPRABRV[KO0YWSB1] = " "; /* ; reset prod grp abrv*/
  ;
  if (KO0YM001.XPRCD[KO0YWSB1] == " "
   || KO0YM001.XPRCD[KO0YWSB1] == "**")
    KO0YM001.XPRCD[KO0YWSB1] = "**";
    KO0YM001.XPRABRV[KO0YWSB1] = "ALL";
  else
    if (KO0YM001.XPRCD[KO0YWSB1] in XPRTBL.XPRCD) /* prod grp in table*/
      KO0YM001.XPRABRV[KO0YWSB1] = XPRTBL.XPRABRV[sysVar.arrayIndex];
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS2C

// get sales catg abrv
Function KO0YS2D()
  ;
  ;
  KO0YM001.YSCABRV[KO0YWSB1] = " "; /* ; reset sls cat abrv*/
  ;
  if (KO0YM001.YSCCD[KO0YWSB1] == " "
   || KO0YM001.YSCCD[KO0YWSB1] == "**")
    KO0YM001.YSCCD[KO0YWSB1] = "**";
    KO0YM001.YSCABRV[KO0YWSB1] = "ALL";
  else
    if (KO0YM001.YSCCD[KO0YWSB1] in YSCTBL.YSCCD) /* sls cat in table*/
      KO0YM001.YSCABRV[KO0YWSB1] = YSCTBL.YSCABRV[sysVar.arrayIndex];
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS2D

// get cust name
Function KO0YS2E()
  ;
  ;
  KO0YM001.KUCCONM[KO0YWSB1] = " "; /* ; reset cust name*/
  ;
  if (KO0YM001.KO0YMCID[KO0YWSB1] == 0
   || KO0YM001.KO0YMCID[KO0YWSB1] == -1)
    KO0YM001.KO0YMCID[KO0YWSB1] = -1;
    KO0YM001.KUCCONM[KO0YWSB1] = "ALL COMPANIES";
  else
    ;
    set KUCREC empty;
    set SQLCA empty;
    ;
    KUCREC.KUCCOID = KO0YM001.KO0YMCID[KO0YWSB1];
    ;
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      KO0YM001.KUCCONM[KO0YWSB1] = KUCREC.KUCCONM;
    else
      if (SQLCA.VAGen_SQLCODE != 100)
        TA1REC.TA1DBASE = "DCUST   ";
        TA1REC.TA1TBLVU = "VCMPNY01";
        TA1REC.TA1LOCAT[1] = "KO0YS2E";
        TA1REC.TA1LOCAT[2] = "IO0240";
        XSKO001(); /* ; abort*/
      end
    end
  end
  ;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS2E

// get base ot abrv
Function KO0YS2F()
  ;
  ;
  KO0YM001.XOBABRV[KO0YWSB1] = " "; /* ; reset ord typ abrv*/
  ;
  if (KO0YM001.XOBCD[KO0YWSB1] == " "
   || KO0YM001.XOBCD[KO0YWSB1] == "**")
    KO0YM001.XOBCD[KO0YWSB1] = "**";
    KO0YM001.XOBABRV[KO0YWSB1] = "ALL";
  else
    if (KO0YM001.XOBCD[KO0YWSB1] in XOBTBL.XOBCD) /* ord typ in table*/
      KO0YM001.XOBABRV[KO0YWSB1] = XOBTBL.XOBABRV[sysVar.arrayIndex];
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS2F

// set row attributes
Function KO0YS2G()
  ;
  ;
  KO0YW01.KO0YWSB2 = KO0YW01.KO0YWSB1 + KO0YW02.KO0YWPOS;
  ;
  if (KO0YW02.XPRCD[KO0YWSB2] == " " /* ; no array prod group*/
   && KO0YW02.YSCCD[KO0YWSB2] == " " /* ; no array sls cat*/
   && KO0YW02.KUCCOID[KO0YWSB2] == 0) /* ; no array cust*/
    KO0YS2H(); /* ; set add attributes*/
  else
    KO0YS2I(); /* ; set change attributes*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS2G

// set add attributes
Function KO0YS2H()
  ;
  ;
  if (KO0YW01.KO0YWEAF == "Y") /* ; edits are allowed*/
    set KO0YM001.XPRCD[KO0YWSB1] cursor, normal;
    set KO0YM001.YSCCD[KO0YWSB1] normal;
    set KO0YM001.KO0YMCID[KO0YWSB1] normal;
    set KO0YM001.XOBCD[KO0YWSB1] normal;
    set KO0YM001.KO0YMPCT[KO0YWSB1] normal;
    set KO0YM001.KO0YMEDT[KO0YWSB1] normal;
    set KO0YM001.KO0YMXDT[KO0YWSB1] normal;
  else
    set KO0YM001.XPRCD[KO0YWSB1] skip, invisible;
    set KO0YM001.YSCCD[KO0YWSB1] skip, invisible;
    set KO0YM001.KO0YMCID[KO0YWSB1] skip, invisible;
    set KO0YM001.XOBCD[KO0YWSB1] skip, invisible;
    set KO0YM001.KO0YMPCT[KO0YWSB1] skip, invisible;
    set KO0YM001.KO0YMEDT[KO0YWSB1] skip, invisible;
    set KO0YM001.KO0YMXDT[KO0YWSB1] skip, invisible;
  end
  ;
  set KO0YM001.KO0YMMCD[KO0YWSB1] skip, invisible;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS2H

// set change attributes
Function KO0YS2I()
  ;
  ;
  if (KO0YW01.KO0YWEAF == "Y") /* ; edits are allowed*/
    set KO0YM001.KO0YMPCT[KO0YWSB1] cursor, normal;
    set KO0YM001.XPRCD[KO0YWSB1] normal;
    set KO0YM001.YSCCD[KO0YWSB1] normal;
    set KO0YM001.KO0YMCID[KO0YWSB1] normal;
    set KO0YM001.XOBCD[KO0YWSB1] normal;
    set KO0YM001.KO0YMEDT[KO0YWSB1] normal;
    set KO0YM001.KO0YMXDT[KO0YWSB1] normal;
    set KO0YM001.KO0YMMCD[KO0YWSB1] normal;
  else
    set KO0YM001.XPRCD[KO0YWSB1] initialAttributes;
    set KO0YM001.YSCCD[KO0YWSB1] initialAttributes;
    set KO0YM001.KO0YMCID[KO0YWSB1] initialAttributes;
    set KO0YM001.XOBCD[KO0YWSB1] initialAttributes;
    set KO0YM001.KO0YMPCT[KO0YWSB1] initialAttributes;
    set KO0YM001.KO0YMEDT[KO0YWSB1] initialAttributes;
    set KO0YM001.KO0YMXDT[KO0YWSB1] initialAttributes;
    set KO0YM001.KO0YMMCD[KO0YWSB1] skip, invisible;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS2I

// edit fast path
Function KO0YS3A()
  ;
  ;
  if (converseVar.eventKey is enter)
    COMMAREA.CATOAP = KO0YM001.CATOAP;
    COMMAREA.CAITEM = KO0YM001.CAITEM;
    XSEXIT();
    set KO0YM001.CATOAP cursor, bold;
  else
    set KO0YM001.CATOAP cursor, bold;
    KO0YW01.KO0YWMNO = 1;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS3A

// edit function
Function KO0YS3B()
  ;
  ;
  if (converseVar.eventKey is enter) /* ; user pressed enter*/
    KO0YW01.KO0YWFN1 = "U"; /* ; function = update*/
  else
    if (converseVar.eventKey is pf7 /* ; user pressed pf7*/
     && KO0YW01.KO0YWSAF == "Y")    /* ; scrolling is allowed*/
      KO0YW01.KO0YWFN1 = "B"; /* ; function = back*/
    else
      if (converseVar.eventKey is pf8 /* ; user pressed pf8*/
       && KO0YW01.KO0YWSAF == "Y")    /* ; scrolling is allowed*/
        KO0YW01.KO0YWFN1 = "F"; /* ; function = frwd*/
      else
        if (converseVar.eventKey is pf12 /* ; user pressed pf12*/
         && KO0YW01.KO0YWEAF == "Y")     /* ; edits are allowed*/
          KO0YW01.KO0YWFN1 = "E"; /* ; function = edit*/
        else
          if (converseVar.eventKey is pf14 /* ; user pressed pf14*/
           && KO0YW01.KO0YWFN2 == "C")     /* ; function = current*/
            KO0YW01.KO0YWFN1 = "H"; /* ; function = history*/
          else
            if (converseVar.eventKey is pf14 /* ; user pressed pf14*/
             && KO0YW01.KO0YWFN2 == "H")     /* ; function = history*/
              KO0YW01.KO0YWFN1 = "C"; /* ; function = current*/
            else
              if (converseVar.eventKey is pf19 /* user pressed pf19*/
               && KO0YW01.KO0YWSAF == "Y")     /* scrolling allowed*/
                KO0YW01.KO0YWFN1 = "T"; /* scroll to top*/
              else
                if (converseVar.eventKey is pf20 /* user pressed pf19*/
                 && KO0YW01.KO0YWSAF == "Y")     /* scrolling allowed*/
                  KO0YW01.KO0YWFN1 = "Z"; /* scroll to bottom*/
                else
                  KO0YW01.KO0YWMNO = 2; /* ; invalid pf key*/
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS3B

// delete kobrec
Function KO0YS40()
  ;
  ;
  set SQLCA empty;
  set KOBREC empty;
  ;
  KOBREC.SM1AGYID = KO0YM001.SM1AGYID;
  KOBREC.SM4REPID = KO0YM001.SM4REPID;
  KOBREC.XPRCD = KO0YW02.XPRCD[KO0YWSB2];
  KOBREC.YSCCD = KO0YW02.YSCCD[KO0YWSB2];
  KOBREC.KUCCOID = KO0YW02.KUCCOID[KO0YWSB2];
  KOBREC.XDVCD = KO0YW01.XDVCD;
  KOBREC.XGPCD = KO0YW01.XGPCD;
  KOBREC.XOBCD = KO0YW02.XOBCD[KO0YWSB2];
  KOBREC.XSOCD = "**";
  KOBREC.XOTCD = "**";
  KOBREC.KOBPCTED = KO0YW02.KOBPCTED[KO0YWSB2];
  ;
  call "IO0690" ("D ", SQLCA, KOBREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; delete unsuccessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0YS40";
    TA1REC.TA1LOCAT[2] = "IO0690";
    XSKO001(); /* ; abort*/
  end
  ;
  set KOAREC empty;
  set SQLCA empty;
  ;
  KOAREC.KOATBLCD = 50; /* chg from 05 09/06/89*/
  KOAREC.KOAACTTY = "4";
  KOAREC.XXXTBLNM = "VOTSCH01";
  KOAREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOAREC.ZZHHMMSS = TA2REC.TA2TIMEN;
  KOAREC.SM1AGYID = KO0YM001.SM1AGYID;
  KOAREC.SM4REPID = KO0YM001.SM4REPID;
   /* ***MOVE KO0YM001.KO0YMMCD(KO0YWSB1) TO KOAREC.XRCCD;   /* 02-24-94*/
  KOAREC.XDVCD = KO0YW01.XDVCD;
  KOAREC.XGPCD = KO0YW01.XGPCD;
  KOAREC.XOBCD = KO0YW02.XOBCD[KO0YWSB2];
  KOAREC.XPRCD = KO0YW02.XPRCD[KO0YWSB2];
  KOAREC.YSCCD = KO0YW02.YSCCD[KO0YWSB2];
  KOAREC.KUCCOID = KO0YW02.KUCCOID[KO0YWSB2];
  KOAREC.KOBPCTED = KO0YW02.KOBPCTED[KO0YWSB2];
  KOAREC.KOBPCTXD = KO0YW02.KOBPCTXD[KO0YWSB2];
  KOAREC.KOBCOPCT = KO0YW02.KOBCOPCT[KO0YWSB2];
  KOAREC.XXXUSRID = COMMAREA.CAUSERID;
  KOAREC.KOACRSDT = KO0YW02.ZZZSDT[KO0YWSB2];
  ;
  call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != +0)
    TA1REC.TA1DBASE = "DCOMM ";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0YS40  ";
    TA1REC.TA1LOCAT[1] = "IO0630   ";
    XSKO001(); /* abort*/
  end
  ;
  KO0YW02.KO0YWOPT[KO0YWSB2] = "D";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS40

// add kobrec
Function KO0YS41()
  ;
  ;
  set SQLCA empty;
  set KOBREC empty;
  ;
  KOBREC.SM1AGYID = KO0YM001.SM1AGYID;
  KOBREC.SM4REPID = KO0YM001.SM4REPID;
  KOBREC.XPRCD = KO0YM001.XPRCD[KO0YWSB1];
  KOBREC.YSCCD = KO0YM001.YSCCD[KO0YWSB1];
  KOBREC.KUCCOID = KO0YM001.KO0YMCID[KO0YWSB1];
  KOBREC.XDVCD = KO0YM001.XDVCD;
  KOBREC.XGPCD = KO0YM001.XGPCD;
  KOBREC.XOBCD = KO0YM001.XOBCD[KO0YWSB1];
  KOBREC.XSOCD = "**";
  KOBREC.XOTCD = "**";
  KOBREC.KOBPCTED = KO0YW01.KOBPCTED;
  KOBREC.KOBPCTXD = KO0YW01.KOBPCTXD;
  KOBREC.KOBCOPCT = KO0YW01.KOBCOPCT;
  KOBREC.XXXUSRID = COMMAREA.CAUSERID;
  KOBREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOBREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  KOBREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  KOBREC.ZZZCHGCT = 0;
  ;
  call "IO0690" ("A ", SQLCA, KOBREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; add not sucessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0YS41";
    TA1REC.TA1LOCAT[2] = "IO0690";
    XSKO001(); /* ; abort*/
  end
  ;
  set KOAREC empty; /* ; reset audit rec*/
  set SQLCA empty; /* ; reset sql rec*/
  ;
  KOAREC.KOATBLCD = 50; /* chg from 05 09/06/89*/
  KOAREC.KOAACTTY = "1";
  KOAREC.XXXTBLNM = "VAASCH01";
  KOAREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOAREC.ZZHHMMSS = TA2REC.TA2TIMEN;
  KOAREC.SM1AGYID = KO0YM001.SM1AGYID;
  KOAREC.SM4REPID = KO0YM001.SM4REPID;
  KOAREC.XDVCD = KO0YM001.XDVCD;
  KOAREC.XGPCD = KO0YM001.XGPCD;
  KOAREC.XOBCD = KO0YM001.XOBCD;
  KOAREC.XPRCD = KO0YM001.XPRCD[KO0YWSB1];
  KOAREC.YSCCD = KO0YM001.YSCCD[KO0YWSB1];
  KOAREC.KUCCOID = KO0YM001.KO0YMCID[KO0YWSB1];
  KOAREC.XOBCD = KO0YM001.XOBCD[KO0YWSB1];
   /* ***MOVE KO0YM001.KO0YMMCD(KO0YWSB1) TO KOAREC.XRCCD;    /* 02-24-94*/
  KOAREC.KOBPCTED = KO0YW01.KOBPCTED;
  KOAREC.KOBPCTXD = KO0YW01.KOBPCTXD;
  KOAREC.KOBCOPCT = KO0YW01.KOBCOPCT;
  KOAREC.XXXUSRID = COMMAREA.CAUSERID;
  KOAREC.KOACRSDT = TA2REC.TA2GRGGN;
  ;
  call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != +0)
    TA1REC.TA1DBASE = "DCOMM.";
    TA1REC.TA1TBLVU = "VCOAUD01";
    TA1REC.TA1LOCAT[1] = "KO0YS41";
    TA1REC.TA1LOCAT[2] = "IO0630";
    XSKO001();
  end
  ;
  KO0YW02.KO0YWOPT[KO0YWSB2] = "A";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS41

// change kobrec
Function KO0YS42()
  ;
  ;
  set SQLCA empty;
  set KOBREC empty;
  ;
  KOBREC.SM1AGYID = KO0YM001.SM1AGYID;
  KOBREC.SM4REPID = KO0YM001.SM4REPID;
  KOBREC.XPRCD = KO0YM001.XPRCD[KO0YWSB1];
  KOBREC.YSCCD = KO0YM001.YSCCD[KO0YWSB1];
  KOBREC.KUCCOID = KO0YM001.KO0YMCID[KO0YWSB1];
  KOBREC.XDVCD = KO0YM001.XDVCD;
  KOBREC.XGPCD = KO0YM001.XGPCD;
  KOBREC.XOBCD = KO0YM001.XOBCD[KO0YWSB1];
  KOBREC.XSOCD = "**";
  KOBREC.XOTCD = "**";
  KOBREC.KOBPCTED = KO0YW01.KOBPCTED;
  KOBREC.KOBCOPCT = KO0YW01.KOBCOPCT;
  KOBREC.KOBPCTXD = KO0YW01.KOBPCTXD;
  KOBREC.XXXUSRID = COMMAREA.CAUSERID;
  KOBREC.ZZZSDT = KO0YW02.ZZZSDT[KO0YWSB2];
  KOBREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  KOBREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  KOBREC.ZZZCHGCT = KO0YW02.ZZZCHGCT[KO0YWSB2];
  ;
  call "IO0690" ("U ", SQLCA, KOBREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; update unsuccessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VOTSCH01";
    TA1REC.TA1LOCAT[1] = "KO0YS42";
    TA1REC.TA1LOCAT[2] = "IO0690";
    XSKO001(); /* abort*/
  end
  ;
  set KOAREC empty;
  set SQLCA empty;
  ;
  KOAREC.KOATBLCD = 50; /* chg from 05 09/06/89*/
  KOAREC.KOAACTTY = "2";
  KOAREC.XXXTBLNM = "VOTSCH01";
  KOAREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOAREC.ZZHHMMSS = TA2REC.TA2TIMEN;
  KOAREC.SM1AGYID = KO0YM001.SM1AGYID;
  KOAREC.SM4REPID = KO0YM001.SM4REPID;
   /* ****MOVE KO0YM001.KO0YMMCD(KO0YWSB1) TO KOAREC.XRCCD;  /* 02-24-94*/
  KOAREC.XDVCD = KO0YW01.XDVCD;
  KOAREC.XGPCD = KO0YW01.XGPCD;
  KOAREC.XOBCD = KO0YW02.XOBCD[KO0YWSB2];
  KOAREC.XPRCD = KO0YW02.XPRCD[KO0YWSB2];
  KOAREC.YSCCD = KO0YW02.YSCCD[KO0YWSB2];
  KOAREC.KUCCOID = KO0YW02.KUCCOID[KO0YWSB2];
  KOAREC.KOBPCTED = KO0YW02.KOBPCTED[KO0YWSB2];
  KOAREC.KOBPCTXD = KO0YW02.KOBPCTXD[KO0YWSB2];
  KOAREC.KOBCOPCT = KO0YW02.KOBCOPCT[KO0YWSB2];
  KOAREC.XXXUSRID = COMMAREA.CAUSERID;
  KOAREC.KOACRSDT = KO0YW02.ZZZSDT[KO0YWSB2];
  ;
  call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != +0)
    TA1REC.TA1DBASE = "DCOMM ";
    TA1REC.TA1TBLVU = "VOTSCH01";
    TA1REC.TA1LOCAT[1] = "KO0YS42  ";
    TA1REC.TA1LOCAT[1] = "IO0630   ";
    XSKO001(); /* abort*/
  end
  ;
  set SQLCA empty;
  KOAREC.KOAACTTY = "3";
  KOAREC.XPRCD = KO0YM001.XPRCD[KO0YWSB1];
  KOAREC.YSCCD = KO0YM001.YSCCD[KO0YWSB1];
  KOAREC.KUCCOID = KO0YM001.KO0YMCID[KO0YWSB1];
  KOAREC.KOBPCTED = KO0YW01.KOBPCTED;
  KOAREC.KOBPCTXD = KO0YW01.KOBPCTXD;
  KOAREC.KOBCOPCT = KO0YW01.KOBCOPCT;
  ;
  call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != +0)
    TA1REC.TA1DBASE = "DCOMM ";
    TA1REC.TA1TBLVU = "VOTSCH01";
    TA1REC.TA1LOCAT[1] = "KO0YS42  ";
    TA1REC.TA1LOCAT[1] = "IO0630   ";
    XSKO001(); /* ; abort*/
  end
  ;
  KO0YW02.KO0YWOPT[KO0YWSB2] = "C";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS42

// update array
Function KO0YS43()
  ;
  ;
  KO0YW02.XPRCD[KO0YWSB2] = KO0YM001.XPRCD[KO0YWSB1];
  KO0YW02.YSCCD[KO0YWSB2] = KO0YM001.YSCCD[KO0YWSB1];
  KO0YW02.KUCCOID[KO0YWSB2] = KO0YM001.KO0YMCID[KO0YWSB1];
  KO0YW02.XOBCD[KO0YWSB2] = KO0YM001.XOBCD[KO0YWSB1];
  KO0YW02.KOBPCTED[KO0YWSB2] = KO0YW01.KOBPCTED;
  KO0YW02.KOBPCTXD[KO0YWSB2] = KO0YW01.KOBPCTXD;
  KO0YW02.KOBCOPCT[KO0YWSB2] = KO0YW01.KOBCOPCT;
  ;
  if (KO0YW02.KO0YWOPT[KO0YWSB2] == "A") /* ; array option = 'a'*/
    KO0YW02.ZZZSDT[KO0YWSB2] = TA2REC.TA2GRGGN;
    KO0YW02.ZZZCHGCT[KO0YWSB2] = 0;
  else
    if (KO0YW02.KO0YWOPT[KO0YWSB2] == "D") /* ; array option = 'd'*/
      KO0YW02.ZZZSDT[KO0YWSB2] = 0;
      KO0YW02.ZZZCHGCT[KO0YWSB2] = 0;
    else
      if (KO0YW02.KO0YWOPT[KO0YWSB2] == "C")
        KO0YW02.ZZZCHGCT[KO0YWSB2] = KO0YW02.ZZZCHGCT[KO0YWSB2] + 1;
      end
    end
  end
  ;
  KO0YW02.KO0YWOPT[KO0YWSB2] = " ";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS43

// process no changes
Function KO0YS44()
  ;
  ;
  if (KO0YW01.KO0YWFN1 == "U") /* ; function 1 = update*/
    KO0YS45(); /* ; process enter key*/
  else
    if (KO0YW01.KO0YWFN1 == "B") /* ; function 1 = scroll back*/
      KO0YW01.KO0YWFN3 = "N"; /* ; not scroll to bottom*/
      KO0YS46(); /* ; scroll back*/
    else
      if (KO0YW01.KO0YWFN1 == "F") /* ; function 1 = scroll frwd*/
        KO0YW01.KO0YWFN3 = "N"; /* ; not scroll to bottom*/
        KO0YS47(); /* ; scroll frwd*/
      else
        if (KO0YW01.KO0YWFN1 == "T") /* ; function 1 = scroll top*/
          KO0YW01.KO0YWFN3 = "N"; /* ; not scroll to bottom*/
          KO0YS49(); /* ; scroll to top*/
        else
          if (KO0YW01.KO0YWFN1 == "Z") /* ; function 1 = scroll bottom*/
            KO0YS48(); /* ; scroll to bottom*/
          else
            if (KO0YW01.KO0YWFN1 == "H" /* ; function = history*/
             || KO0YW01.KO0YWFN1 == "C") /* ; function = current*/
              KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
              KO0YW01.KO0YWNAF = "Y"; /* ; set new array flag*/
              KO0YW01.KO0YWFN2 = KO0YW01.KO0YWFN1;
            else
              KO0YW01.KO0YWMNO = 63; /* ; no changes were made*/
            end
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS44

// process enter key
Function KO0YS45()
  ;
  ;
  if (KO0YW01.SM1AGYID == " " /* ; no w.s. agency*/
   && KO0YW01.SM4REPID == 0   /* ; no w.s. rep*/
   && KO0YW01.XDVCD == " "    /* ; no w.s div*/
   && KO0YW01.XGPCD == " ")   /* ; no w.s. gpc*/
    KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
    KO0YW01.KO0YWNKF = "Y"; /* ; set new key flag*/
    KO0YW01.KO0YWEKF = "Y"; /* ; set edit key flag*/
    KO0YW01.KO0YWNAF = "Y"; /* ; set new array flag*/
  else
    KO0YW01.SM1AGYID = " "; /* ; reset w.s. agency*/
    KO0YW01.SM4REPID = 0; /* ;     ; reset w.s. rep*/
    KO0YW01.XDVCD = " "; /* ; reset w.s. div*/
    KO0YW01.XGPCD = " "; /* ; reset w.s. gpc*/
    KO0YW01.KO0YWBMF = "Y"; /* ;     ; set build map flag*/
    KO0YW01.KO0YWNKF = "Y"; /* ;     ; set new key flag*/
    KO0YW01.KO0YWNAF = "Y"; /* ;     ; set new array flag*/
  end
  ;
  KO0YW01.KO0YWFN2 = "C"; /* ; set function 2 current*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS45

// scroll back
Function KO0YS46()
  ;
  ;
  if (KO0YW02.KO0YWPOS == 0) /* ; array pos at top*/
    KO0YW01.KO0YWMNO = 70;
  else
    KO0YW02.KO0YWPOS = KO0YW02.KO0YWPOS - 4; /* ; set position in array*/
    KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
    if (KO0YW02.KO0YWPOS < 0) /* ; if less than zero*/
      KO0YW02.KO0YWPOS = 0; /* ; set to zero*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS46

// scroll frwd
Function KO0YS47()
  ;
  ;
  if (KO0YW02.KO0YWPOS == 96) /* ; already at bottom*/
    KO0YW01.KO0YWMNO = 68;
  else
    ;
    KO0YW01.KO0YWSB1 = KO0YW02.KO0YWPOS + 3; /* ; check last map line*/
    ;
    if (KO0YW02.XPRCD[KO0YWSB1] == " ") /* ; no prod grp in array*/
      KO0YW01.KO0YWMNO = 68;
    else
      ;
      KO0YW01.KO0YWSB1 = KO0YW01.KO0YWSB1 + 1; /* ; check next page*/
      ;
      if (KO0YW02.XPRCD[KO0YWSB1] == " " /* ; no prod grp in array*/
       && KO0YW01.KO0YWKEF == "Y")       /* ; adds not allowed*/
        KO0YW01.KO0YWMNO = 68;
      else
        KO0YW02.KO0YWPOS = KO0YW02.KO0YWPOS + 4; /* ; set array position*/
        KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
        if (KO0YW02.KO0YWPOS > 96)
          KO0YW02.KO0YWPOS = 96;
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS47

// SCROLL TO BOTTOM
Function KO0YS48()
  ;
  ;
  KO0YW01.KO0YWBMF = "Y"; /* ; build new map*/
  ;
  if (KO0YW01.KO0YWFN3 == "Y"
   && KO0YW01.KO0YWFN1 != "U")
    KO0YW01.KO0YWMNO = 68; /* ; already at bottom*/
  else
    if (KO0YW01.KO0YWFN1 == "U")
      KO0YW02.KO0YWPOS = KO0YW02.KO0YWTOT + 1; /* ; set array pointer*/
      if (KO0YW02.KO0YWPOS > 96) /* ; if past bottom*/
        KO0YW02.KO0YWPOS = 96; /* ; set at bottom*/
      end
    else
      if (KO0YW01.KO0YWFN3 != "Y")
        KO0YW02.KO0YWPOS = KO0YW02.KO0YWTOT + 1; /* ; set array pointer*/
        if (KO0YW02.KO0YWPOS > 96) /* ; if past bottom*/
          KO0YW02.KO0YWPOS = 96; /* ; set at bottom*/
        end
      else
        if (KO0YW01.KO0YWKEF == "Y" /* ; adds not allowed*/
         || KO0YW01.KO0YWEAF == "N")
          KO0YW02.KO0YWPOS = KO0YW02.KO0YWTOT; /* ; set to last entry*/
          KO0YW01.KO0YWMNO = 68;
        end
      end
    end
  end
  ;
  KO0YW01.KO0YWFN3 = "Y"; /* ; set function*/
end // end KO0YS48

// SCROLL TO TOP
Function KO0YS49()
  ;
  ;
  if (KO0YW02.KO0YWPOS == 0)
    KO0YW01.KO0YWMNO = 70;
  else
    KO0YW01.KO0YWBMF = "Y";
    KO0YW02.KO0YWPOS = 0;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS49

// check for data changes
Function KO0YS4A()
  ;
  ;
  KO0YW01.KO0YWSB1 = 1; /* ; reset map subscript*/
  while (KO0YW01.KO0YWSB1 <= 4) /* ; until top of map sched*/
    KO0YS4B(); /* ; check for sched changes*/
  end
  ;
  if (KO0YM001.SM1AGYID != KO0YW01.SM1AGYID /* ; new map agcy*/
   || KO0YM001.SM4REPID != KO0YW01.SM4REPID /* ; new map rep*/
   || KO0YM001.XDVCD != KO0YW01.XDVCD       /* ; new map div code*/
   || KO0YM001.XGPCD != KO0YW01.XGPCD)      /* ; new map gpc*/
    KO0YW01.KO0YWKCF = "Y"; /* ; set key change flag*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4A

// check for sched changes
Function KO0YS4B()
  ;
  ;
  if (KO0YM001.KO0YMEDT[KO0YWSB1] == " ")
    KO0YW01.KOBPCTED = 0;
  else
    KO0YW01.KO0YWDTA = KO0YM001.KO0YMEDT[KO0YWSB1];
    KO0YW01.KO0YWDDB = KO0YW01.KO0YWDDA;
    KO0YW01.KO0YWMMB = KO0YW01.KO0YWMMA;
    KO0YW01.KO0YWYYB = KO0YW01.KO0YWYYA;
    /* --------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0YW01.KO0YWCCB;*/
    /* --------- Y2K OUT END ----------*/
    /* --------- Y2K IN  BEGIN --------*/
    if (KO0YW01.KO0YWYYB > 60)
      KO0YW01.KO0YWCCB = 19;
    else
      KO0YW01.KO0YWCCB = 20;
    end
    /* --------- Y2K IN END -----------*/
    KO0YW01.KOBPCTED = KO0YW01.KO0YWDTB;
  end
  ;
  if (KO0YM001.KO0YMXDT[KO0YWSB1] == " ")
    KO0YW01.KOBPCTXD = 0;
  else
    KO0YW01.KO0YWDTA = KO0YM001.KO0YMXDT[KO0YWSB1];
    KO0YW01.KO0YWDDB = KO0YW01.KO0YWDDA;
    KO0YW01.KO0YWMMB = KO0YW01.KO0YWMMA;
    KO0YW01.KO0YWYYB = KO0YW01.KO0YWYYA;
    /* --------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0YW01.KO0YWCCB;*/
    /* --------- Y2K OUT END ----------*/
    /* --------- Y2K IN  BEGIN --------*/
    if (KO0YW01.KO0YWYYB > 60)
      KO0YW01.KO0YWCCB = 19;
    else
      KO0YW01.KO0YWCCB = 20;
    end
    /* --------- Y2K IN END -----------*/
    KO0YW01.KOBPCTXD = KO0YW01.KO0YWDTB;
  end
  ;
  KO0YW01.KO0YWSB2 = KO0YW01.KO0YWSB1 + KO0YW02.KO0YWPOS;
  ;
  if (KO0YM001.XPRCD[KO0YWSB1] == KO0YW02.XPRCD[KO0YWSB2]
   && KO0YM001.YSCCD[KO0YWSB1] == KO0YW02.YSCCD[KO0YWSB2]
   && KO0YM001.KO0YMCID[KO0YWSB1] == KO0YW02.KUCCOID[KO0YWSB2]
   && KO0YM001.XOBCD[KO0YWSB1] == KO0YW02.XOBCD[KO0YWSB2]
   && KO0YM001.KO0YMPCT[KO0YWSB1] == KO0YW02.KOBCOPCT[KO0YWSB2]
   && KO0YW01.KOBPCTED == KO0YW02.KOBPCTED[KO0YWSB2]
   && KO0YW01.KOBPCTXD == KO0YW02.KOBPCTXD[KO0YWSB2])
    KO0YW02.KO0YWOPT[KO0YWSB2] = " "; /* ; clear array option*/
  else
    KO0YS4C(); /* ; set add flag*/
    KO0YS4D(); /* ; set delete flag*/
    KO0YS4E(); /* ; set change flag*/
  end
  ;
  KO0YW01.KO0YWSB1 = KO0YW01.KO0YWSB1 + 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4B

// set sched add flag
Function KO0YS4C()
  ;
  ;
  if (KO0YW02.XPRCD[KO0YWSB2] == " " /* ; no array prod grp*/
   && KO0YW02.YSCCD[KO0YWSB2] == " " /* ; no array sls cat*/
   && KO0YW02.KUCCOID[KO0YWSB2] == 0 /* ; no array cust*/
   && KO0YW02.XOBCD[KO0YWSB2] == " ") /* ; no array xob*/
    if (KO0YM001.KO0YMPCT[KO0YWSB1] != 0   /* ; map has comm pct*/
     || KO0YM001.KO0YMEDT[KO0YWSB1] != " " /* ; map has begin date*/
     || KO0YM001.KO0YMXDT[KO0YWSB1] != " ") /* ; map has end date*/
      KO0YW02.KO0YWOPT[KO0YWSB2] = "A"; /* ; set array add flag*/
      KO0YW01.KO0YWSCF = "Y"; /* ; ; set sched change flag*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4C

// set sched delete flag
Function KO0YS4D()
  ;
  ;
  if (KO0YW02.XPRCD[KO0YWSB2] != " " /* ; array has prod grp*/
   || KO0YW02.YSCCD[KO0YWSB2] != " " /* ; array has sls cat*/
   || KO0YW02.KUCCOID[KO0YWSB2] != 0 /* ; array has cust*/
   || KO0YW02.XOBCD[KO0YWSB2] != " ") /* ; array has ord typ*/
    if (KO0YM001.XPRCD[KO0YWSB1] == " "    /* ; map prod grp = ' '*/
     && KO0YM001.YSCCD[KO0YWSB1] == " "    /* ; map sls cat = ' '*/
     && KO0YM001.KO0YMCID[KO0YWSB1] == 0   /* ; map cust = 0*/
     && KO0YM001.XOBCD[KO0YWSB1] == " "    /* ; map xob = ' '*/
     && KO0YM001.KO0YMPCT[KO0YWSB1] == 0   /* ; map pct = 0*/
     && KO0YM001.KO0YMEDT[KO0YWSB1] == " " /* ; map eff date = ' '*/
     && KO0YM001.KO0YMXDT[KO0YWSB1] == " ") /* ; map term date = ' '*/
      KO0YW02.KO0YWOPT[KO0YWSB2] = "D"; /* ; set array delete flag*/
      KO0YW01.KO0YWSCF = "Y"; /* ; set sched change flag*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4D

// set sched change flag
Function KO0YS4E()
  ;
  ;
  if (KO0YW02.KO0YWOPT[KO0YWSB2] != "A" /* ; array option not add*/
   && KO0YW02.KO0YWOPT[KO0YWSB2] != "D") /* ; array option not delete*/
    KO0YW02.KO0YWOPT[KO0YWSB2] = "C"; /* ; set array change flag*/
    KO0YW01.KO0YWSCF = "Y"; /* ; set sched change flag*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4E

// process key changes
Function KO0YS4F()
  ;
  ;
  if (KO0YW01.KO0YWFN1 != "U") /* ; function not = update*/
    KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
    KO0YW01.KO0YWMNO = 161; /* ; set w.s. messg*/
  else
    if (KO0YW01.KO0YWSCF == "Y") /* ; sched changes made*/
      KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
      KO0YW01.KO0YWMNO = 163; /* ; set w.s. mssg*/
    else
      KO0YW01.SM1AGYID = KO0YM001.SM1AGYID;
      KO0YW01.SM4REPID = KO0YM001.SM4REPID;
      KO0YW01.XDVCD = KO0YM001.XDVCD;
      KO0YW01.XGPCD = KO0YM001.XGPCD;
      KO0YW01.KO0YWBMF = "Y";
      KO0YW01.KO0YWNKF = "Y";
      KO0YW01.KO0YWEKF = "Y";
      KO0YW01.KO0YWNAF = "Y";
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4F

// process sched changes
Function KO0YS4G()
  ;
  ;
  if (KO0YW01.KO0YWFN1 == "B" /* ; function = scroll back*/
   || KO0YW01.KO0YWFN1 == "F" /* ; function = scroll frwd*/
   || KO0YW01.KO0YWFN1 == "T" /* ; function = scroll top*/
   || KO0YW01.KO0YWFN1 == "Z")
                                   /* ; function = scroll bottom*/
    KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
    KO0YW01.KO0YWMNO = 174; /* ; invalid function*/
  else
    if (KO0YW01.KO0YWFN1 == "H" /* ; function = history*/
     || KO0YW01.KO0YWFN1 == "C") /* ; function = current*/
      KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
      KO0YW01.KO0YWMNO = 193; /* ; invalid function*/
    else
      ;
      KO0YW01.KO0YWSB1 = 4; /* ; reset subscript*/
      while (KO0YW01.KO0YWSB1 > 0) /* ; until top of map*/
        KO0YS4H(); /* ; edit map*/
      end
      ;
      if (KO0YW01.KO0YWMNO == 0) /* ; no map errors*/
        if (KO0YW01.KO0YWFN1 == "E") /* ; function = edit*/
          KO0YW01.KO0YWMNO = 76;
        else
          KO0YS4Y(); /* ; update database*/
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4G

// edit map row
Function KO0YS4H()
  ;
  ;
  KO0YW01.KO0YWSB2 = KO0YW01.KO0YWSB1 + KO0YW02.KO0YWPOS;
  ;
  if (KO0YW02.KO0YWOPT[KO0YWSB2] != " ") /* ; array option not = ' '*/
    if (KO0YW02.KO0YWOPT[KO0YWSB2] != "D") /* ; option not delete*/
      ;
      KO0YS4I(); /* ;     ; build work fields*/
      KO0YS4J(); /* ; edit maint code*/
      KO0YS4K(); /* ; edit dates*/
      KO0YS4N(); /* ; edit comm rate*/
      KO0YS4O(); /* ; edit base ot*/
      KO0YS4P(); /* ; edit customer*/
      KO0YS4Q(); /* ; edit sales cat*/
      KO0YS4R(); /* ; edit prod grp*/
      KO0YS4S(); /* ; edit key*/
    end
    ;
  end
  ;
  KO0YW01.KO0YWSB1 = KO0YW01.KO0YWSB1 - 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4H

// build work fields
Function KO0YS4I()
  ;
  ;
  KO0YW01.KOBPCTXD = 0; /* ;     ; ws end date = 0*/
  KO0YW01.KOBPCTED = 0; /* ;     ; ws begin date = 0*/
  ;
  if (KO0YM001.KO0YMXDT[KO0YWSB1] != " ") /* ; map has end date*/
    KO0YW01.KO0YWDT1 = KO0YM001.KO0YMXDT[KO0YWSB1];
    KO0YW01.KO0YWDDB = KO0YW01.KO0YWDD1;
    KO0YW01.KO0YWMMB = KO0YW01.KO0YWMM1;
    KO0YW01.KO0YWYYB = KO0YW01.KO0YWYY1;
    /* ------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0YW01.KO0YWCCB;*/
    /* ------- Y2K OUT END ----------*/
    /* ------- Y2K IN  BEGIN --------*/
    if (KO0YW01.KO0YWYYB > 60)
      KO0YW01.KO0YWCCB = 19;
    else
      KO0YW01.KO0YWCCB = 20;
    end
    /* ------- Y2K IN END -----------*/
    KO0YW01.KOBPCTXD = KO0YW01.KO0YWDTB;
  end
  ;
  if (KO0YM001.KO0YMEDT[KO0YWSB1] != " ") /* ; map has begin date*/
    KO0YW01.KO0YWDT1 = KO0YM001.KO0YMEDT[KO0YWSB1];
    KO0YW01.KO0YWDDB = KO0YW01.KO0YWDD1;
    KO0YW01.KO0YWMMB = KO0YW01.KO0YWMM1;
    KO0YW01.KO0YWYYB = KO0YW01.KO0YWYY1;
    /* ------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0YW01.KO0YWCCB;*/
    /* ------- Y2K OUT END ----------*/
    /* ------- Y2K IN  BEGIN --------*/
    if (KO0YW01.KO0YWYYB > 60)
      KO0YW01.KO0YWCCB = 19;
    else
      KO0YW01.KO0YWCCB = 20;
    end
    /* ------- Y2K IN END -----------*/
    KO0YW01.KOBPCTED = KO0YW01.KO0YWDTB;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4I

// edit maint code
Function KO0YS4J()
  ;
  ;
  if (KO0YW02.XPRCD[KO0YWSB2] == " " /* ; array has no prod grp*/
   && KO0YW02.YSCCD[KO0YWSB2] == " " /* ; array has no sls cat*/
   && KO0YW02.KUCCOID[KO0YWSB2] == 0 /* ; array has no cust*/
   && KO0YW02.XOBCD[KO0YWSB2] == "  ") /* ; array has no base ot*/
    return;
  else
    if (KO0YW02.XPRCD[KO0YWSB2] == KO0YM001.XPRCD[KO0YWSB1]
     && KO0YW02.YSCCD[KO0YWSB2] == KO0YM001.YSCCD[KO0YWSB1]
     && KO0YW02.XOBCD[KO0YWSB2] == KO0YM001.XOBCD[KO0YWSB1]
     && KO0YW02.KUCCOID[KO0YWSB2] == KO0YM001.KO0YMCID[KO0YWSB1]
     && KO0YW02.KOBPCTED[KO0YWSB2] == KO0YW01.KOBPCTED
     && KO0YM001.KO0YMMCD[KO0YWSB1] != "CH")
      set KO0YM001.KO0YMMCD[KO0YWSB1] cursor, bold;
      KO0YW01.KO0YWMNO = 182;
    else
      if (KO0YW02.XPRCD[KO0YWSB2] != KO0YM001.XPRCD[KO0YWSB1]
       || KO0YW02.YSCCD[KO0YWSB2] != KO0YM001.YSCCD[KO0YWSB1]
       || KO0YW02.KUCCOID[KO0YWSB2] != KO0YM001.KO0YMCID[KO0YWSB1]
       || KO0YW02.XOBCD[KO0YWSB2] != KO0YM001.XOBCD[KO0YWSB1]
       || KO0YW02.KOBPCTED[KO0YWSB2] != KO0YW01.KOBPCTED)
        if (KO0YM001.KO0YMMCD[KO0YWSB1] != "EA"
         && KO0YM001.KO0YMMCD[KO0YWSB1] != "EB")
          set KO0YM001.KO0YMMCD[KO0YWSB1] cursor, bold;
          KO0YW01.KO0YWMNO = 181;
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4J

// edit dates
Function KO0YS4K()
  ;
  ;
  if (KO0YM001.KO0YMXDT[KO0YWSB1] != " ") /* ; map has end date*/
    KO0YS4L(); /* ; edit end date*/
  end
  ;
  if (KO0YM001.KO0YMEDT[KO0YWSB1] != " ") /* ; map has begin date*/
    KO0YS4M(); /* ; edit begin date*/
  end
  ;
  if (KO0YM001.KO0YMEDT[KO0YWSB1] != " " /* map has begin date*/
   && KO0YM001.KO0YMXDT[KO0YWSB1] != " " /* map has end date*/
   && KO0YW01.KOBPCTED > KO0YW01.KOBPCTXD)
    set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
    set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
    KO0YW01.KO0YWMNO = 184;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4K

// edit end date
Function KO0YS4L()
  ;
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = KO0YW01.KOBPCTXD;
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* ; validate date*/
  ;
  if (TA2REC.TA2RTNCD != 0) /* ; invalid date*/
    set KO0YM001.KO0YMXDT[KO0YWSB1] cursor, bold;
    KO0YW01.KO0YWMNO = 183;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4L

// edit begin date
Function KO0YS4M()
  ;
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = KO0YW01.KOBPCTED;
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* ; validate date*/
  ;
  if (TA2REC.TA2RTNCD != 0) /* ; invalid date*/
    set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
    KO0YW01.KO0YWMNO = 183;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4M

// edit comm rate
Function KO0YS4N()
  ;
  ;
  if (KO0YM001.KO0YMPCT[KO0YWSB1] > 25) /* ; map rate > 25%*/
    set KO0YM001.KO0YMPCT[KO0YWSB1] cursor, bold;
    KO0YW01.KO0YWMNO = 78;
  else
    if (KO0YM001.KO0YMPCT[KO0YWSB1] == 0) /* ; map rate eq 0*/
      if (KO0YM001.XPRCD[KO0YWSB1] != " "    /* ; map has prod grp*/
       || KO0YM001.YSCCD[KO0YWSB1] != " "    /* ; map has sls cat*/
       || KO0YM001.KO0YMCID[KO0YWSB1] != 0   /* ; map has cust*/
       || KO0YM001.KO0YMEDT[KO0YWSB1] != " " /* ; map has begin date*/
       || KO0YM001.KO0YMXDT[KO0YWSB1] != " ") /* ; map has end date*/
        set KO0YM001.KO0YMPCT[KO0YWSB1] cursor, bold;
        KO0YW01.KO0YWMNO = 19;
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4N

// edit base ot
Function KO0YS4O()
  ;
  ;
  if (KO0YM001.XOBABRV[KO0YWSB1] != "ALL") /* ; all prod grps*/
    if (KO0YM001.XOBABRV[KO0YWSB1] == " ") /* ; no map prod grp abrv*/
      set KO0YM001.XOBCD[KO0YWSB1] cursor, bold;
      KO0YW01.KO0YWMNO = 175;
    else
      if (KO0YM001.XOBCD[KO0YWSB1] in XOBTBL.XOBCD)
        if (XOBTBL.XXXSTAT[sysVar.arrayIndex] != "A")
          set KO0YM001.XOBCD[KO0YWSB1] cursor, bold;
          KO0YW01.KO0YWMNO = 186;
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4O

// edit customer
Function KO0YS4P()
  ;
  ;
  if (KO0YM001.KUCCONM[KO0YWSB1] == " ") /* ; no map cust name*/
    set KO0YM001.KO0YMCID[KO0YWSB1] cursor, bold;
    KO0YW01.KO0YWMNO = 172;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4P

// edit sales cat
Function KO0YS4Q()
  ;
  ;
  if (KO0YM001.YSCABRV[KO0YWSB1] != "ALL") /* ; all sls cats*/
    if (KO0YM001.YSCABRV[KO0YWSB1] == " ") /* ; no map sls cat abrv*/
      set KO0YM001.YSCCD[KO0YWSB1] cursor, bold;
      KO0YW01.KO0YWMNO = 187;
    else
      if (KO0YM001.YSCCD[KO0YWSB1] in YSCTBL.YSCCD)
        if (YSCTBL.XXXSTAT[sysVar.arrayIndex] != "A")
          set KO0YM001.YSCCD[KO0YWSB1] cursor, bold;
          KO0YW01.KO0YWMNO = 188;
        end
        if (KO0YM001.XGPCD != YSCTBL.XGPCD[sysVar.arrayIndex]
         && KO0YM001.XGPCD != "**")
          set KO0YM001.YSCCD[KO0YWSB1] cursor, bold;
          KO0YW01.KO0YWMNO = 189;
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4Q

// edit prod grp
Function KO0YS4R()
  ;
  ;
  if (KO0YM001.XPRABRV[KO0YWSB1] != "ALL") /* ; all prod grps*/
    if (KO0YM001.XPRABRV[KO0YWSB1] == " ") /* ; no map prod grp abrv*/
      set KO0YM001.XPRCD[KO0YWSB1] cursor, bold;
      KO0YW01.KO0YWMNO = 190;
    else
      if (KO0YM001.XPRCD[KO0YWSB1] in XPRTBL.XPRCD)
        if (XPRTBL.XXXSTAT[sysVar.arrayIndex] != "A")
          set KO0YM001.XPRCD[KO0YWSB1] cursor, bold;
          KO0YW01.KO0YWMNO = 191;
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4R

// edit key
Function KO0YS4S()
  ;
  ;
  KO0YW01.KO0YWERR = "N"; /* ; set error flag*/
  KO0YW01.KO0YWSB2 = 1; /* ; set subscript 2*/
  ;
  while (KO0YW01.KO0YWERR == "N" /* ; until error = yes*/
   && KO0YW01.KO0YWSB2 <= 4) /* ; until map end*/
    KO0YS4T(); /* ; compare to map*/
  end
  ;
  if (KO0YW01.KO0YWERR == "N") /* ; error flag = 'n'*/
    KO0YW01.KO0YWSB2 = 1; /* ; set subscript 2*/
    KO0YW01.KO0YWSB3 = KO0YW01.KO0YWSB1 + KO0YW02.KO0YWPOS; /* curr entry*/
    while (KO0YW01.KO0YWSB2 <= KO0YW02.KO0YWTOT /* until array end*/
     && KO0YW01.KO0YWERR == "N") /* ; until error = yes*/
      KO0YS4W(); /* ; compare to array*/
    end
  end
  ;
   /* *************************************************************/
  ;
end // end KO0YS4S

// compare to map
Function KO0YS4T()
  ;
  ;
  if (KO0YW01.KO0YWSB2 != KO0YW01.KO0YWSB1)
    if (KO0YM001.XPRCD[KO0YWSB2] == KO0YM001.XPRCD[KO0YWSB1]
     && KO0YM001.YSCCD[KO0YWSB2] == KO0YM001.YSCCD[KO0YWSB1]
     && KO0YM001.KO0YMCID[KO0YWSB2] == KO0YM001.KO0YMCID[KO0YWSB1]
     && KO0YM001.XOBCD[KO0YWSB2] == KO0YM001.XOBCD[KO0YWSB1])
      if (KO0YM001.XPRCD[KO0YWSB2] != " "
       || KO0YM001.YSCCD[KO0YWSB2] != " "
       || KO0YM001.KO0YMCID[KO0YWSB2] != 0
       || KO0YM001.KO0YMPCT[KO0YWSB2] != 0
       || KO0YM001.KO0YMEDT[KO0YWSB2] != " "
       || KO0YM001.KO0YMXDT[KO0YWSB2] != " ")
        KO0YS4U(); /* ; compare map dates*/
      end
    end
  end
  ;
  KO0YW01.KO0YWSB2 = KO0YW01.KO0YWSB2 + 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4T

// compare map dates
Function KO0YS4U()
  ;
  ;
  KO0YS4V(); /* build work dates*/
  ;
  if (KO0YW01.KOBPCTED < KO0YW01.KO0YWDTB
   && KO0YW01.KOBPCTXD < KO0YW01.KO0YWDTB
   && KO0YW01.KOBPCTXD == 0)
    set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
    set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
    KO0YW01.KO0YWMNO = 192;
    KO0YW01.KO0YWERR = "Y";
  else
    if (KO0YW01.KOBPCTED < KO0YW01.KO0YWDTB
     && KO0YW01.KOBPCTXD >= KO0YW01.KO0YWDTB)
      set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
      set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
      KO0YW01.KO0YWMNO = 192;
      KO0YW01.KO0YWERR = "Y";
    else
      if (KO0YW01.KO0YWDTB < KO0YW01.KOBPCTED
       && KO0YW01.KO0YWDTC < KO0YW01.KOBPCTED
       && KO0YW01.KO0YWDTC == 0)
        set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
        set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
        KO0YW01.KO0YWMNO = 192;
        KO0YW01.KO0YWERR = "Y";
      else
        if (KO0YW01.KO0YWDTB < KO0YW01.KOBPCTED
         && KO0YW01.KO0YWDTC >= KO0YW01.KOBPCTED)
          set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
          set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
          KO0YW01.KO0YWMNO = 192;
          KO0YW01.KO0YWERR = "Y";
        else
          if (KO0YW01.KO0YWDTB == KO0YW01.KOBPCTED)
            set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
            set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
            KO0YW01.KO0YWMNO = 192;
            KO0YW01.KO0YWERR = "Y";
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4U

// build work dates
Function KO0YS4V()
  ;
  ;
  if (KO0YM001.KO0YMEDT[KO0YWSB2] == " ")
    KO0YW01.KO0YWDTB = 0;
  else
    KO0YW01.KO0YWDT1 = KO0YM001.KO0YMEDT[KO0YWSB2];
    KO0YW01.KO0YWDDB = KO0YW01.KO0YWDD1;
    KO0YW01.KO0YWMMB = KO0YW01.KO0YWMM1;
    KO0YW01.KO0YWYYB = KO0YW01.KO0YWYY1;
    /* ------- Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0YW01.KO0YWCCB;*/
    /* ------- Y2K OUT END ---------*/
    /* ------- Y2K IN  BEGIN -------*/
    if (KO0YW01.KO0YWYYB > 60)
      KO0YW01.KO0YWCCB = 19;
    else
      KO0YW01.KO0YWCCB = 20;
    end
    /* ------- Y2K IN END ----------*/
  end
  ;
  if (KO0YM001.KO0YMXDT[KO0YWSB2] == " ")
    KO0YW01.KO0YWDTC = 0;
  else
    KO0YW01.KO0YWDT1 = KO0YM001.KO0YMXDT[KO0YWSB2];
    KO0YW01.KO0YWDDC = KO0YW01.KO0YWDD1;
    KO0YW01.KO0YWMMC = KO0YW01.KO0YWMM1;
    KO0YW01.KO0YWYYC = KO0YW01.KO0YWYY1;
    /* ------- Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0YW01.KO0YWCCB;*/
    /* ------- Y2K OUT END ---------*/
    /* ------- Y2K IN  BEGIN -------*/
    if (KO0YW01.KO0YWYYB > 60)
      KO0YW01.KO0YWCCB = 19;
    else
      KO0YW01.KO0YWCCB = 20;
    end
    /* ------- Y2K IN END ----------*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4V

// compare to array
Function KO0YS4W()
  ;
  ;
  ;
  if (KO0YW01.KO0YWSB2 != KO0YW01.KO0YWSB3)
    if (KO0YM001.XPRCD[KO0YWSB1] == KO0YW02.XPRCD[KO0YWSB2]
     && KO0YM001.YSCCD[KO0YWSB1] == KO0YW02.YSCCD[KO0YWSB2]
     && KO0YM001.KO0YMCID[KO0YWSB1] == KO0YW02.KUCCOID[KO0YWSB2]
     && KO0YM001.XOBCD[KO0YWSB1] == KO0YW02.XOBCD[KO0YWSB2])
      KO0YS4X(); /* ; compare array dates*/
    end
  end
  ;
  KO0YW01.KO0YWSB2 = KO0YW01.KO0YWSB2 + 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4W

// compare array dates
Function KO0YS4X()
  ;
  ;
  if (KO0YW01.KOBPCTED < KO0YW02.KOBPCTED[KO0YWSB2]
   && KO0YW01.KOBPCTXD < KO0YW02.KOBPCTED[KO0YWSB2]
   && KO0YW01.KOBPCTXD == 0)
    set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
    set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
    KO0YW01.KO0YWMNO = 192;
    KO0YW01.KO0YWERR = "Y";
  else
    if (KO0YW01.KOBPCTED < KO0YW02.KOBPCTED[KO0YWSB2]
     && KO0YW01.KOBPCTXD >= KO0YW02.KOBPCTED[KO0YWSB2])
      set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
      set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
      KO0YW01.KO0YWMNO = 192;
      KO0YW01.KO0YWERR = "Y";
    else
      if (KO0YW02.KOBPCTED[KO0YWSB2] < KO0YW01.KOBPCTED
       && KO0YW02.KOBPCTXD[KO0YWSB2] < KO0YW01.KOBPCTED
       && KO0YW02.KOBPCTXD[KO0YWSB2] == 0)
        set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
        set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
        KO0YW01.KO0YWMNO = 192;
        KO0YW01.KO0YWERR = "Y";
      else
        if (KO0YW02.KOBPCTED[KO0YWSB2] < KO0YW01.KOBPCTED
         && KO0YW02.KOBPCTXD[KO0YWSB2] >= KO0YW01.KOBPCTED)
          set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
          set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
          KO0YW01.KO0YWMNO = 192;
          KO0YW01.KO0YWERR = "Y";
        else
          if (KO0YW02.KOBPCTED[KO0YWSB2] == KO0YW01.KOBPCTED)
            set KO0YM001.KO0YMEDT[KO0YWSB1] cursor, bold;
            set KO0YM001.KO0YMXDT[KO0YWSB1] bold;
            KO0YW01.KO0YWMNO = 192;
            KO0YW01.KO0YWERR = "Y";
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4X

// update sched recs
Function KO0YS4Y()
  ;
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "KO0YS4Y";
    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    COMMAREA.CATOAP = "KO0A";
    XSEXIT();
    exit program;
  end
  ;
  KO0YW01.KO0YWSB1 = 4; /* ; reset map subscript*/
  while (KO0YW01.KO0YWSB1 > 0) /* ; until top of map*/
    ;
    KO0YW01.KO0YWSB2 = KO0YW01.KO0YWSB1 + KO0YW02.KO0YWPOS;
    ;
    if (KO0YW02.KO0YWOPT[KO0YWSB2] != " ") /* ; option not = ' '*/
      ;
      KO0YS4Z(); /* ; build work fields*/
      ;
      if (KO0YM001.KO0YMMCD[KO0YWSB1] == "EA" /* ; maint code = 'ea'*/
       || KO0YM001.KO0YMMCD[KO0YWSB1] == "EB" /* ; maint code = 'eb'*/
       || KO0YW02.KO0YWOPT[KO0YWSB2] == "D")  /* ; option = 'delete'*/
        KO0YS40(); /* ;     ; delete sched row*/
      end
    end
    ;
    if (KO0YW01.KOBCOPCT != 0) /* ; total pct not = 0*/
      if (KO0YM001.KO0YMMCD[KO0YWSB1] == "EA" /* ; maint code = 'ea'*/
       || KO0YM001.KO0YMMCD[KO0YWSB1] == "EB" /* ; maint code = 'eb'*/
       || KO0YW02.KO0YWOPT[KO0YWSB2] == "A")  /* ; option = 'add'*/
        KO0YS41(); /* ; add sched row*/
      else
        if (KO0YM001.KO0YMMCD[KO0YWSB1] == "CH" /* ; maint code = 'ch'*/
         || KO0YW02.KO0YWOPT[KO0YWSB2] == "C")  /* ; option = 'change'*/
          KO0YS42(); /* ;     ; update sched row*/
        end
      end
    end
    ;
    KO0YS43(); /* ;     ; update array*/
    ;
    KO0YW01.KO0YWSB1 = KO0YW01.KO0YWSB1 - 1; /* ; increment subscript*/
    ;
  end
  ;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* ; commit db changes*/
  ;
  KO0YW01.KO0YWBMF = "Y"; /* ; set build map flag*/
  KO0YW01.KO0YWNAF = "Y"; /* ; set new array flag*/
  KO0YW01.KO0YWMNO = 80; /* ; set w.s. mssg nbr*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4Y

// build work fields
Function KO0YS4Z()
  ;
  ;
  KO0YW01.KOBCOPCT = KO0YM001.KO0YMPCT[KO0YWSB1];
  ;
  if (KO0YM001.KO0YMEDT[KO0YWSB1] == " ")
    KO0YW01.KOBPCTED = 0;
  else
    KO0YW01.KO0YWDTA = KO0YM001.KO0YMEDT[KO0YWSB1];
    KO0YW01.KO0YWDDB = KO0YW01.KO0YWDDA;
    KO0YW01.KO0YWMMB = KO0YW01.KO0YWMMA;
    KO0YW01.KO0YWYYB = KO0YW01.KO0YWYYA;
    /* -------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0YW01.KO0YWCCB;*/
    /* -------- Y2K OUT END ----------*/
    /* -------- Y2K IN  BEGIN --------*/
    if (KO0YW01.KO0YWYYB > 60)
      KO0YW01.KO0YWCCB = 19;
    else
      KO0YW01.KO0YWCCB = 20;
    end
    /* -------- Y2K IN END -- --------*/
    KO0YW01.KOBPCTED = KO0YW01.KO0YWDTB;
  end
  ;
  if (KO0YM001.KO0YMXDT[KO0YWSB1] == " ")
    KO0YW01.KOBPCTXD = 0;
  else
    KO0YW01.KO0YWDTA = KO0YM001.KO0YMXDT[KO0YWSB1];
    KO0YW01.KO0YWDDB = KO0YW01.KO0YWDDA;
    KO0YW01.KO0YWMMB = KO0YW01.KO0YWMMA;
    KO0YW01.KO0YWYYB = KO0YW01.KO0YWYYA;
    /* -------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0YW01.KO0YWCCB;*/
    /* -------- Y2K OUT END ----------*/
    /* -------- Y2K IN  BEGIN --------*/
    if (KO0YW01.KO0YWYYB > 60)
      KO0YW01.KO0YWCCB = 19;
    else
      KO0YW01.KO0YWCCB = 20;
    end
    /* -------- Y2K IN END -- --------*/
    KO0YW01.KOBPCTXD = KO0YW01.KO0YWDTB;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0YS4Z

Record KO0YW01 type basicRecord
  10 CAITEM CAITEM ; 
    15 KO0YWID1 KO0YWID1 ; 
    15 KO0YWID2 KO0YWID2 ; 
    15 KO0YWID3 KO0YWID3 ; 
    15 KO0YWID4 KO0YWID4 ; 
    15 * char(8) ; 
  10 KO0YWMNO KO0YWMNO ; 
  10 KO0YWMSG KO0YWMSG ; 
  10 KOZCSTMO KOZCSTMO ; 
  10 SM1AGYID SM1AGYID ; 
  10 SM4REPID SM4REPID ; 
  10 XDVCD XDVCD ; 
  10 XGPCD XGPCD ; 
  10 KO0YWBMF KO0YWBMF ; 
  10 KO0YWNKF KO0YWNKF ; 
  10 KO0YWNAF KO0YWNAF ; 
  10 KO0YWEKF KO0YWEKF ; 
  10 KO0YWFN1 KO0YWFN1 ; 
  10 KO0YWFN2 KO0YWFN2 ; 
  10 KO0YWFN3 KO0YWFN3 ; 
  10 KO0YWKEF KO0YWKEF ; 
  10 KO0YWSFF KO0YWSFF ; 
  10 KO0YWEAF KO0YWEAF ; 
  10 KO0YWSAF KO0YWSAF ; 
  10 KO0YWSCF KO0YWSCF ; 
  10 KO0YWKCF KO0YWKCF ; 
  10 KO0YWERR KO0YWERR ; 
  10 SM1AGYNM SM1AGYNM ; 
  10 XXXLSTNM XXXLSTNM ; 
  10 XXXFSTNM XXXFSTNM ; 
  10 XXXMDINT XXXMDINT ; 
  10 XDVDESC XDVDESC ; 
  10 XGPDESC XGPDESC ; 
  10 XOBDESC XOBDESC ; 
  10 KOBPCTED KOBPCTED ; 
  10 KOBPCTXD KOBPCTXD ; 
  10 KOBCOPCT KOBCOPCT ; 
  10 KO0YWDTA KO0YWDTA ; 
    15 KO0YWMMA KO0YWMMA ; 
    15 KO0YWFA1 KO0YWFA1 ; 
    15 KO0YWDDA KO0YWDDA ; 
    15 KO0YWFA2 KO0YWFA2 ; 
    15 KO0YWYYA KO0YWYYA ; 
  10 KO0YWDTB KO0YWDTB ; 
    15 KO0YWCCB KO0YWCCB ; 
    15 KO0YWYYB KO0YWYYB ; 
    15 KO0YWMMB KO0YWMMB ; 
    15 KO0YWDDB KO0YWDDB ; 
  10 KO0YWDTC KO0YWDTC ; 
    15 KO0YWCCC KO0YWCCC ; 
    15 KO0YWYYC KO0YWYYC ; 
    15 KO0YWMMC KO0YWMMC ; 
    15 KO0YWDDC KO0YWDDC ; 
  10 KO0YWDT1 KO0YWDT1 ; 
    15 KO0YWMM1 KO0YWMM1 ; 
    15 KO0YWF11 KO0YWF11 ; 
    15 KO0YWDD1 KO0YWDD1 ; 
    15 KO0YWF12 KO0YWF12 ; 
    15 KO0YWYY1 KO0YWYY1 ; 
  10 KO0YWDT2 KO0YWDT2 ; 
    15 KO0YWMM2 KO0YWMM2 ; 
    15 KO0YWDD2 KO0YWDD2 ; 
    15 KO0YWYY2 KO0YWYY2 ; 
    15 KO0YWBB2 char(2) ; // work date 2 blanks
  10 KO0YWDT3 KO0YWDT3 ; 
    15 KO0YWF13 KO0YWF13 ; 
    15 KO0YWCD3 KO0YWCD3 ; 
  10 KO0YWDT4 KO0YWDT4 ; 
    15 KO0YWCD4 KO0YWCD4 ; 
    15 KO0YWDD4 KO0YWDD4 ; 
  10 KO0YWSB1 KO0YWSB1 ; 
  10 KO0YWSB2 KO0YWSB2 ; 
  10 KO0YWSB3 KO0YWSB3 ; 
end // end KO0YW01

//*** RECORD=KO0YW02 ****
// this will set-up one area for adding zzz-stuff to each
// db2 table.
// ***********************
Record KO0YW02 type basicRecord
  10 KO0YWTBL KO0YWTBL [100] ; 
    15 KO0YWOPT KO0YWOPT ; 
    15 XPRCD XPRCD ; 
    15 YSCCD YSCCD ; 
    15 KUCCOID KUCCOID ; 
    15 XOBCD XOBCD ; 
    15 KOBPCTED KOBPCTED ; 
    15 KOBPCTXD KOBPCTXD ; 
    15 KOBCOPCT KOBCOPCT ; 
    15 ZZZSDT ZZZSDT ; 
    15 ZZZCHGCT ZZZCHGCT ; 
  10 KO0YWTOT KO0YWTOT ; 
  10 KO0YWPOS KO0YWPOS ; 
end // end KO0YW02

// build map flag
DataItem KO0YWBMF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date b century
DataItem KO0YWCCB num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date c century
DataItem KO0YWCCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 3 0ccyymm
DataItem KO0YWCD3 num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 4 0ccyymm
DataItem KO0YWCD4 num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 1 day
DataItem KO0YWDD1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 2 day
DataItem KO0YWDD2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 3 00
DataItem KO0YWDD4 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date a day
DataItem KO0YWDDA num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date b day
DataItem KO0YWDDB num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date c day
DataItem KO0YWDDC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 1
DataItem KO0YWDT1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date 2
DataItem KO0YWDT2 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date 3 000ccyymm
DataItem KO0YWDT3 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 4 0ccyymm00
DataItem KO0YWDT4 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date a
DataItem KO0YWDTA char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date b
DataItem KO0YWDTB num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date c
DataItem KO0YWDTC num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// edit allowed flag
DataItem KO0YWEAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// edit key flag
DataItem KO0YWEKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem KO0YWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date 1 filler 1
DataItem KO0YWF11 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date 1 filler 2
DataItem KO0YWF12 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date 3 00
DataItem KO0YWF13 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date a filler 1
DataItem KO0YWFA1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date a filler 2
DataItem KO0YWFA2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function 1
DataItem KO0YWFN1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function 2
DataItem KO0YWFN2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function 3
DataItem KO0YWFN3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// f.p. sales agency id
DataItem KO0YWID1 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// f.p. sales rep id
DataItem KO0YWID2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// f.p. division code
DataItem KO0YWID3 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// f.p. gpc
DataItem KO0YWID4 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key change flag
DataItem KO0YWKCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key error flag
DataItem KO0YWKEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date 1 month
DataItem KO0YWMM1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 2 month
DataItem KO0YWMM2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date a month
DataItem KO0YWMMA num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date b month
DataItem KO0YWMMB num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date c month
DataItem KO0YWMMC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. mssg nbr
DataItem KO0YWMNO num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. mssg
DataItem KO0YWMSG char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new array flag
DataItem KO0YWNAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new key flag
DataItem KO0YWNKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// option flag
DataItem KO0YWOPT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gpc array pos
DataItem KO0YWPOS num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// scroll allowed flag
DataItem KO0YWSAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w.s. subscript 1
DataItem KO0YWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. subscript 2
DataItem KO0YWSB2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. subscript 3
DataItem KO0YWSB3 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// schedule change flag
DataItem KO0YWSCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// schedule found flag
DataItem KO0YWSFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table
DataItem KO0YWTBL char(28)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gpc array total
DataItem KO0YWTOT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 1 year
DataItem KO0YWYY1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 2 year
DataItem KO0YWYY2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date a year
DataItem KO0YWYYA num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date b year
DataItem KO0YWYYB num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date c year
DataItem KO0YWYYC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

