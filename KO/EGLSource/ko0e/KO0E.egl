package ko0e;

import corpcom1.CAITEM;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSKO001;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.*;
import corpcom6.SQLCA;
import corpcom7.XXXFSTNM;
import corpcom7.XXXLSTNM;
import corpcom7.XXXMDINT;
import corpx1.XDVCD;
import corpx1.XDVTBL;
import corpx1.XGPCD;
import corpx1.XGPDESC;
import corpx1.XGPTBL;
import corpx1.XOBTBL;
import corpx2.XOBCD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZSDT;
import ko.common.KOAREC;
import ko.common.KOEREC;
import ko.common.KOZREC;
import ku.common.KUCCOID;
import ku.common.KUCGRPID;
import ku.common.KUCREC;
import sm.common.SM1AGYID;
import sm.common.SM1AGYNM;
import sm.common.SM1REC;
import sm.common.SM4REPID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VRAGCY02;
//*** PROGRAM=KO0E ****
//      this application will allow the user to add and change
// the percentage of commission to be paid to the agency for
// commissions earned by reps of nike owned agencies.
// 
// 
// 12-16-88   jwood   added noncsp option on calls
// 12-16-88   jwood   added xssegtr logic
// 06-01-89   dmeier  restructure program / add cust, div,
//                    base ot, beginning month, ending month
//                    to agency split schedule
// 04-09-92   aivers  rename sm5stat to xxxstat.
// 06-04-92   aivers  REGEN FOR DATABASE CHANGES.
// 10-09-92   aivers  database changes.  Get rep's name from
//                    vragcy02 instead of sm5rec.
// 01-30-98   oricha  y2k modifications:  ko0esed, sej,ser, set
//                    sew, sey, sic, sih, sio, siq, sis, siv,
//                    smc, smh, smo, smp, sms, smu.
// *********************
Program KO0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CO00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KO0EW01 KO0EW01; // record
  KO0EW02 KO0EW02; // record
  KO0EW03 KO0EW03; // record
  KOAREC KOAREC; // record
  KOEREC KOEREC; // record
  KOZREC KOZREC; // record
  KUCREC KUCREC; // record
  SM1REC SM1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VRAGCY02 VRAGCY02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XDVTBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use KO0EM.KO0EM005,  // forms
      KO0EM.KO0EM010, 
      KO0EM.KO0EM015
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KO0E000: KO0E000();
    ;
    ;
    goto KO0E005;
    ;
    ;
    KO0E005: KO0E005();
    ;
    ;
    if (KO0EW01.KO0EWAPP == "KO0E010")
      goto KO0E010;
    else
      if (KO0EW01.KO0EWAPP == "KO0E015")
        goto KO0E015;
      else
        goto KO0E005;
      end
    end
    ;
    ;
    KO0E010: KO0E010();
    ;
    ;
    if (KO0EW01.KO0EWAPP == "KO0E010")
      goto KO0E010;
    else
      if (KO0EW01.KO0EWAPP == "KO0E015")
        goto KO0E015;
      else
        goto KO0E005;
      end
    end
    ;
    ;
    KO0E015: KO0E015();
    ;
    ;
    if (KO0EW01.KO0EWAPP == "KO0E010")
      goto KO0E010;
    else
      if (KO0EW01.KO0EWAPP == "KO0E015")
        goto KO0E015;
      else
        goto KO0E005;
      end
    end
    ;
    ;
  end // end main
end // end KO0E

// initialize application
Function KO0E000()
  ;
  ;
  set KO0EW01 empty; /* ; initialize ws rec*/
  set KO0EW02 empty; /* ; initialize ws rec*/
  set KO0EW03 empty; /* ; initialize ws rec*/
  ;
  XSENTRY(); /* ; check security*/
  XSSEGTR(); /* ; set segmented trans id*/
  KO0ESAA(); /* ; get current stmt mo*/
  ;
  KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  KO0EW01.KO0EWNKF = "Y"; /* ; set new key flag*/
  KO0EW01.KO0EWNAF = "Y"; /* ; set new array flag*/
  ;
  if (COMMAREA.CAITEM != " ") /* ; fast path item used*/
    KO0EW01.CAITEM = COMMAREA.CAITEM; /* ; move item to w.s.*/
    KO0EW01.SM1AGYID = KO0EW01.KO0EWID1; /* ; build w.s. agency*/
    KO0EW01.SM4REPID = KO0EW01.KO0EWID2; /* ; build w.s. rep*/
    KO0EW01.KO0EWEKF = "Y"; /* ; set edit key flag*/
  end
  ;
  KO0EW01.KO0EWAPP = "KO0E005"; /* set app proc name*/
  ;
  ;
   /* *************************************************************/
end // end KO0E000

// converse split sched screen
Function KO0E005()
  ;
  ;
  if (KO0EW01.KO0EWBMF == "Y") /* ; build map flag = 'y'*/
    KO0EW01.KO0EWBMF = "N"; /* ; reset build map flag*/
    KO0E006(); /* ; build map codes*/
    KO0E007(); /* ; build map desc*/
  else
    set KO0EM005.KO0EMMM1 skip, invisible; /* ; darken map mssg 1*/
    set KO0EM005.KO0EMMM2 skip, invisible; /* ; darken map mssg 2*/
  end
  ;
  KO0EM005.XXXPRCNM = "KO0E005";
  KO0EM005.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  if (KO0EW01.KO0EWMSG != " ")
    KO0EM005.VAGen_EZEMSG = KO0EW01.KO0EWMSG;
  else
    if (KO0EW01.KO0EWMNO != 0)
      if (KO0EW01.KO0EWMNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(KO0EW01.KO0EWMNO);
      end
    end
  end
  ;
  KO0EW01.KO0EWMNO = 0;
  ;
  ;
   /* *************************************************************/
  ;
  converse KO0EM005 ;
  ;
   /* *************************************************************/
  ;
  KO0E007(); /* ; reset map attributes*/
  KO0E008(); /* ; edit pf/pa key*/
  ;
  if (KO0EW01.KO0EWMSG == " " /* ; no system messages*/
   && KO0EW01.KO0EWMNO == 0)  /* ; no error messages*/
    KO0E009(); /* ; edit map*/
  end
  ;
  ;
   /* *************************************************************/
end // end KO0E005

// build screen
Function KO0E006()
  ;
  ;
  converseLib.clearScreen();
  set KO0EM005 initial; /* ; reset screen*/
  ;
  if (KO0EW01.KO0EWNKF == "Y") /* ; new key flag = 'y'*/
    KO0EW01.KO0EWNKF = "N"; /* ; reset new key flag*/
    KO0ESBA(); /* ; build new key*/
  end
  ;
  if (KO0EW01.KO0EWNAF == "Y") /* ; new array flag = 'y'*/
    KO0EW01.KO0EWNAF = "N"; /* ; reset new array flag*/
    KO0ESBI(); /* ; retrieve split sched*/
  else
    set KO0EM005.KO0EMMM1 skip, invisible; /* ; darken map mssg 1*/
    set KO0EM005.KO0EMMM2 skip, invisible; /* ; darken map mssg 2*/
  end
  ;
  KO0ESBN(); /* ; move sched to screen*/
  KO0ESBQ(); /* ; move prev sel codes*/
  KO0ESBR(); /* ; set pf key attributes*/
  ;
  KO0EM005.SM1AGYID = KO0EW01.SM1AGYID;
  KO0EM005.SM1AGYNM = KO0EW01.SM1AGYNM;
  KO0EM005.SM4REPID = KO0EW01.SM4REPID;
  KO0EM005.XXXLSTNM = KO0EW01.XXXLSTNM;
  KO0EM005.XXXFSTNM = KO0EW01.XXXFSTNM;
  KO0EM005.XXXMDINT = KO0EW01.XXXMDINT;
  ;
  ;
   /* *************************************************************/
end // end KO0E006

// set map attributes
Function KO0E007()
  ;
  ;
  set KO0EW03 empty; /* ; reset ko0ew03*/
  ;
  KO0EW01.KO0EWSB1 = 10; /* ; set array subscript*/
  while (KO0EW01.KO0EWSB1 > 0) /* ; until top of array*/
    ;
    if (KO0EM005.XGPCD[KO0EWSB1] == " "    /* ; no map gpc*/
     && KO0EM005.KO0EMRPC[KO0EWSB1] == 0   /* ; no map rep pct*/
     && KO0EM005.KO0EMAPC[KO0EWSB1] == 0   /* ; no map agcy pct*/
     && KO0EM005.KO0EMBMO[KO0EWSB1] == " " /* ; no map begin date*/
     && KO0EM005.KO0EMXMO[KO0EWSB1] == " ") /* ; no map end date*/
      KO0EM005.XGPDESC[KO0EWSB1] = " "; /* ; clear map gpc abrv*/
    else
      KO0ESCA(); /* ; get begin date*/
      KO0ESCB(); /* ; get end date*/
      KO0ESCC(); /* ; get gpc abrv*/
    end
    ;
    KO0ESCD(); /* ; set row attributes*/
    KO0ESCG(); /* ; build ko0ew03*/
    ;
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1; /* ; increment array*/
    ;
  end
  ;
  KO0EW03.SM1AGYID = KO0EM005.SM1AGYID;
  KO0EW03.SM4REPID = KO0EM005.SM4REPID;
  ;
  ;
end // end KO0E007

// validate attention key
Function KO0E008()
  ;
  ;
  set KO0EM005.CATOAP normal; /* ; reset map to appl*/
  set KO0EM005.CAITEM normal; /* ; reset map to item*/
  ;
  COMMAREA.CATOAP = " "; /* ; reset commarea to appl*/
  COMMAREA.CAITEM = " "; /* ; reset commarea to item*/
  ;
  if (KO0EM005.CATOAP != " ") /* ; fast path used*/
    KO0ESDA(); /* ; edit fast path*/
  else
    if (converseVar.eventKey is enter /* ; attention key = enter*/
     || converseVar.eventKey is pf7   /* ; or pf7*/
     || converseVar.eventKey is pf8   /* ; or pf8*/
     || converseVar.eventKey is pf12  /* ; or pf12*/
     || converseVar.eventKey is pf17) /* ; or pf17*/
      KO0ESDB(); /* ; set function key*/
    else
      if (converseVar.eventKey is pf1) /* ; attention key = pf1*/
        XSPF1(); /* ; call help*/
      else
        if (converseVar.eventKey is pf3 /* ; attention key = pf3*/
         || converseVar.eventKey is pa2) /* ; or pa2*/
          COMMAREA.CATOAP = "KO0A"; /* ; call comm menu*/
          XSEXIT();
        else
          if (converseVar.eventKey is pf4) /* ; attention key = pf4*/
            XSPF4(); /* ; call main menu*/
          else
            if (converseVar.eventKey is pf18) /* ; attention key = pf18*/
              KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
              KO0EW01.KO0EWMNO = 204; /* ; screen refreshed*/
            else
              KO0EW01.KO0EWMNO = 2; /* ; invalid attenion key*/
            end
          end
        end
      end
    end
  end
  ;
  KO0EW01.KO0EWMSG = COMMAREA.CAMSG; /* ; save comm mssg*/
  COMMAREA.CAMSG = " "; /* ; reset comm mssg*/
  ;
  ;
end // end KO0E008

// edit map
Function KO0E009()
  ;
  ;
  KO0EW01.KO0EWKCF = "N"; /* ; reset key change flag*/
  KO0EW01.KO0EWFCF = "N"; /* ; reset funct change flag*/
  KO0EW01.KO0EWSCF = "N"; /* ; reset sched change flag*/
  ;
  KO0ESEA(); /* ; check for changes*/
  ;
  if (KO0EW01.KO0EWKCF == "Y") /* ; key changes were made*/
    KO0ESEE(); /* ; process key changes*/
  else
    if (KO0EW01.KO0EWFCF == "Y") /* ; funct changes were made*/
      KO0ESEF();
                                   /* ; process function changes*/
    else
      if (KO0EW01.KO0EWSCF == "Y") /* ; sched changes were made*/
        KO0ESEG(); /* ; process sched changes*/
      else
        KO0ESE4(); /* ; process no changes*/
      end
    end
  end
  ;
  ;
end // end KO0E009

// converse split sched history
Function KO0E010()
  ;
  ;
  if (KO0EW01.KO0EWBMF == "Y") /* ; build map flag = 'y'*/
    KO0EW01.KO0EWBMF = "N"; /* ; reset build map flag*/
    KO0E011(); /* ; build map codes*/
    KO0E012(); /* ; build map desc*/
  else
    set KO0EM010.KO0EMMM1 skip, invisible; /* ; darken map mssg 1*/
    set KO0EM010.KO0EMMM2 skip, invisible; /* ; darken map mssg 2*/
  end
  ;
  KO0EM010.XXXPRCNM = "KO0E010";
  KO0EM010.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  if (KO0EW01.KO0EWMSG != " ")
    KO0EM010.VAGen_EZEMSG = KO0EW01.KO0EWMSG;
  else
    if (KO0EW01.KO0EWMNO != 0)
      if (KO0EW01.KO0EWMNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(KO0EW01.KO0EWMNO);
      end
    end
  end
  ;
  KO0EW01.KO0EWMSG = " ";
  KO0EW01.KO0EWMNO = 0;
  ;
  ;
   /* *************************************************************/
  ;
  converse KO0EM010 ;
  ;
   /* *************************************************************/
  ;
  KO0E012(); /* ; reset map attributes*/
  KO0E013(); /* ; edit pf/pa key*/
  ;
  if (KO0EW01.KO0EWMSG == " " /* ; no system messages*/
   && KO0EW01.KO0EWMNO == 0)  /* ; no error messages*/
    KO0E014(); /* ; edit map*/
  end
  ;
  ;
   /* *************************************************************/
end // end KO0E010

// build screen
Function KO0E011()
  ;
  ;
  converseLib.clearScreen();
  set KO0EM010 initial; /* ; reset screen*/
  ;
  if (KO0EW01.KO0EWNKF == "Y") /* ; new key flag = 'y'*/
    KO0EW01.KO0EWNKF = "N"; /* ; reset new key flag*/
    KO0ESFA(); /* ; build new key*/
  end
  ;
  if (KO0EW01.KO0EWNAF == "Y") /* ; new array flag = 'y'*/
    KO0EW01.KO0EWNAF = "N"; /* ; reset new array flag*/
    KO0ESFJ(); /* ; retrieve split sched*/
  else
    set KO0EM010.KO0EMMM1 skip, invisible; /* ; darken map mssg 1*/
    set KO0EM010.KO0EMMM2 skip, invisible; /* ; darken map mssg 2*/
  end
  ;
  KO0ESFQ(); /* ; move sched to screen*/
  KO0ESFS(); /* ; set pf key attributes*/
  ;
  KO0EM010.SM1AGYID = KO0EW01.SM1AGYID;
  KO0EM010.SM1AGYNM = KO0EW01.SM1AGYNM;
  KO0EM010.SM4REPID = KO0EW01.SM4REPID;
  KO0EM010.XXXLSTNM = KO0EW01.XXXLSTNM;
  KO0EM010.XXXFSTNM = KO0EW01.XXXFSTNM;
  KO0EM010.XXXMDINT = KO0EW01.XXXMDINT;
  KO0EM010.XGPCD = KO0EW01.XGPCD;
  KO0EM010.XGPDESC = KO0EW01.XGPDESC;
  ;
  ;
   /* *************************************************************/
end // end KO0E011

// set map attributes
Function KO0E012()
  ;
  ;
  KO0EW01.KO0EWSB1 = 10; /* ; set array subscript*/
  while (KO0EW01.KO0EWSB1 > 0) /* ; until top of array*/
    ;
    KO0ESGA(); /* ; get begin date*/
    KO0ESGB(); /* ; get end date*/
    KO0ESGC(); /* ; set row attribtues*/
    ;
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1; /* ; increment array*/
    ;
  end
  ;
  ;
end // end KO0E012

// validate attention key
Function KO0E013()
  ;
  ;
  set KO0EM010.CATOAP normal; /* ; reset map to appl*/
  set KO0EM010.CAITEM normal; /* ; reset map to item*/
  ;
  COMMAREA.CATOAP = " "; /* ; reset commarea to appl*/
  COMMAREA.CAITEM = " "; /* ; reset commarea to item*/
  ;
  if (KO0EM010.CATOAP != " ") /* ; fast path used*/
    KO0ESHA(); /* ; edit fast path*/
  else
    if (converseVar.eventKey is enter /* ; attention key = enter*/
     || converseVar.eventKey is pf3   /* ; or pf3*/
     || converseVar.eventKey is pf7   /* ; or pf7*/
     || converseVar.eventKey is pf8   /* ; or pf8*/
     || converseVar.eventKey is pf12  /* ; or pf12*/
     || converseVar.eventKey is pf17) /* ; or pf17*/
      KO0ESHB(); /* ; set function key*/
    else
      if (converseVar.eventKey is pf1) /* ; attention key = pf1*/
        XSPF1(); /* ; call help*/
      else
        if (converseVar.eventKey is pa2) /* ; or pa2*/
          COMMAREA.CATOAP = "KO0A"; /* ; call comm menu*/
          XSEXIT();
        else
          if (converseVar.eventKey is pf4) /* ; attention key = pf4*/
            XSPF4(); /* ; call main menu*/
          else
            if (converseVar.eventKey is pf18) /* ; attention key = pf18*/
              KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
              KO0EW01.KO0EWMNO = 204; /* ; screen refreshed*/
            else
              KO0EW01.KO0EWMNO = 2; /* ; invalid attenion key*/
            end
          end
        end
      end
    end
  end
  ;
  KO0EW01.KO0EWMSG = COMMAREA.CAMSG; /* ; save comm mssg*/
  COMMAREA.CAMSG = " "; /* ; reset comm mssg*/
  ;
  ;
end // end KO0E013

// edit map
Function KO0E014()
  ;
  ;
  KO0EW01.KO0EWKCF = "N"; /* ; reset key change flag*/
  KO0EW01.KO0EWSCF = "N"; /* ; reset sched change flag*/
  ;
  KO0ESIA(); /* ; check for changes*/
  ;
  if (KO0EW01.KO0EWKCF == "Y") /* ; key changes were made*/
    KO0ESID(); /* ; process key changes*/
  else
    if (KO0EW01.KO0EWSCF == "Y") /* ; sched changes were made*/
      KO0ESIE(); /* ; process sched changes*/
    else
      KO0ESI1(); /* ; process no changes*/
    end
  end
  ;
  ;
end // end KO0E014

// converse split sched excepts
Function KO0E015()
  ;
  ;
  if (KO0EW01.KO0EWBMF == "Y") /* ; build map flag = 'y'*/
    KO0EW01.KO0EWBMF = "N"; /* ; reset build map flag*/
    KO0E016(); /* ; build map codes*/
    KO0E017(); /* ; build map desc*/
  else
    set KO0EM015.KO0EMMM1 skip, invisible; /* ; darken map mssg 1*/
    set KO0EM015.KO0EMMM2 skip, invisible; /* ; darken map mssg 2*/
    set KO0EM015.KO0EMMM3 skip, invisible; /* ; darken map mssg 3*/
    set KO0EM015.KO0EMMM4 skip, invisible; /* ; darken map mssg 4*/
  end
  ;
  KO0EM015.XXXPRCNM = "KO0E015";
  ;
  if (KO0EW01.KO0EWCHF == "C") /* ; curr/history flag = 'c'*/
    KO0EM015.KO0EMTTL = "CURRENT"; /* ; map title = current*/
  else
    KO0EM015.KO0EMTTL = "HISTORY"; /* ; map title = history*/
  end
  ;
  KO0EM015.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  if (KO0EW01.KO0EWMSG != " ")
    KO0EM015.VAGen_EZEMSG = KO0EW01.KO0EWMSG;
  else
    if (KO0EW01.KO0EWMNO != 0)
      if (KO0EW01.KO0EWMNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(KO0EW01.KO0EWMNO);
      end
    end
  end
  ;
  KO0EW01.KO0EWMSG = " ";
  KO0EW01.KO0EWMNO = 0;
  ;
  ;
   /* *************************************************************/
  ;
  converse KO0EM015 ;
  ;
   /* *************************************************************/
  ;
  KO0E017(); /* ; reset map attributes*/
  KO0E018(); /* ; edit pf/pa key*/
  ;
  if (KO0EW01.KO0EWMSG == " " /* ; no system messages*/
   && KO0EW01.KO0EWMNO == 0)  /* ; no error messages*/
    KO0E019(); /* ; edit map*/
  end
  ;
  ;
   /* *************************************************************/
end // end KO0E015

// build screen
Function KO0E016()
  ;
  ;
  converseLib.clearScreen();
  set KO0EM015 initial; /* ; reset screen*/
  ;
  if (KO0EW01.KO0EWNKF == "Y") /* ; new key flag = 'y'*/
    KO0EW01.KO0EWNKF = "N"; /* ; reset new key flag*/
    KO0ESJA(); /* ; build new key*/
  end
  ;
  if (KO0EW01.KO0EWNAF == "Y") /* ; new array flag = 'y'*/
    KO0EW01.KO0EWNAF = "N"; /* ; reset new array flag*/
    KO0ESJJ(); /* ; retrieve split sched*/
  else
    set KO0EM015.KO0EMMM3 skip, invisible; /* ; darken map mssg 3*/
    set KO0EM015.KO0EMMM4 skip, invisible; /* ; darken map mssg 4*/
  end
  ;
  KO0ESJQ(); /* ; move sched to screen*/
  KO0ESJT(); /* ; set pf key attributes*/
  ;
  KO0EM015.SM1AGYID = KO0EW01.SM1AGYID;
  KO0EM015.SM1AGYNM = KO0EW01.SM1AGYNM;
  KO0EM015.SM4REPID = KO0EW01.SM4REPID;
  KO0EM015.XXXLSTNM = KO0EW01.XXXLSTNM;
  KO0EM015.XXXFSTNM = KO0EW01.XXXFSTNM;
  KO0EM015.XXXMDINT = KO0EW01.XXXMDINT;
  KO0EM015.XGPCD = KO0EW01.XGPCD;
  KO0EM015.XGPDESC = KO0EW01.XGPDESC;
  ;
  ;
   /* *************************************************************/
end // end KO0E016

// set map attributes
Function KO0E017()
  ;
  ;
  KO0EW01.KO0EWSB1 = 5; /* ; set array subscript*/
  while (KO0EW01.KO0EWSB1 > 0) /* ; until top of array*/
    ;
    KO0ESKA(); /* ; get begin date*/
    KO0ESKB(); /* ; get end date*/
    KO0ESKC(); /* ; get cust name*/
    KO0ESKD(); /* ; get div abrv*/
    KO0ESKE(); /* ; get bot abrv*/
    KO0ESKF(); /* ; set row attributes*/
    ;
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1; /* ; increment array*/
    ;
  end
  ;
  ;
end // end KO0E017

// validate attention key
Function KO0E018()
  ;
  ;
  set KO0EM015.CATOAP normal; /* ; reset map to appl*/
  set KO0EM015.CAITEM normal; /* ; reset map to item*/
  ;
  COMMAREA.CATOAP = " "; /* ; reset commarea to appl*/
  COMMAREA.CAITEM = " "; /* ; reset commarea to item*/
  ;
  if (KO0EM015.CATOAP != " ") /* ; fast path used*/
    KO0ESLA(); /* ; edit fast path*/
  else
    if (converseVar.eventKey is enter /* ; attention key = enter*/
     || converseVar.eventKey is pf3   /* ; or pf3*/
     || converseVar.eventKey is pf7   /* ; or pf7*/
     || converseVar.eventKey is pf8   /* ; or pf8*/
     || converseVar.eventKey is pf12  /* ; or pf12*/
     || converseVar.eventKey is pf16  /* ; or pf16*/
     || converseVar.eventKey is pf17) /* ; or pf17*/
      KO0ESLB(); /* ; set function key*/
    else
      if (converseVar.eventKey is pf1) /* ; attention key = pf1*/
        XSPF1(); /* ; call help*/
      else
        if (converseVar.eventKey is pa2) /* ; or pa2*/
          COMMAREA.CATOAP = "KO0A"; /* ; call comm menu*/
          XSEXIT();
        else
          if (converseVar.eventKey is pf4) /* ; attention key = pf4*/
            XSPF4(); /* ; call main menu*/
          else
            if (converseVar.eventKey is pf18) /* ; attention key = pf18*/
              KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
              KO0EW01.KO0EWMNO = 204; /* ; screen refresched*/
            else
              KO0EW01.KO0EWMNO = 2; /* ; invalid attenion key*/
            end
          end
        end
      end
    end
  end
  ;
  KO0EW01.KO0EWMSG = COMMAREA.CAMSG; /* ; save comm mssg*/
  COMMAREA.CAMSG = " "; /* ; reset comm mssg*/
  ;
  ;
end // end KO0E018

// edit map
Function KO0E019()
  ;
  ;
  KO0EW01.KO0EWKCF = "N"; /* ; reset key change flag*/
  KO0EW01.KO0EWSCF = "N"; /* ; reset sched change flag*/
  ;
  KO0ESMA(); /* ; check for changes*/
  ;
  if (KO0EW01.KO0EWKCF == "Y") /* ; key changes were made*/
    KO0ESMD(); /* ; process key changes*/
  else
    if (KO0EW01.KO0EWSCF == "Y") /* ; sched changes were made*/
      KO0ESME(); /* ; process sched changes*/
    else
      KO0ESM0(); /* ; process no changes*/
    end
  end
  ;
  ;
end // end KO0E019

// get current stmt mo
Function KO0ESAA()
  ;
  ;
  set SQLCA empty;
  set KOZREC empty;
  ;
  call "IO0640" ("S ", SQLCA, KOZREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VCOCTL01";
    TA1REC.TA1LOCAT[1] = "KO0ESAA";
    TA1REC.TA1LOCAT[2] = "IO0640";
    XSKO001();
  end
  ;
  KO0EW01.KO0EWCSM = KOZREC.KOZCSTMO;
  KO0EW01.KO0EWDTB = KOZREC.KOZCSTMO;
  ;
  if (KO0EW01.KO0EWMMB < 12)
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMB + 1;
  else
    KO0EW01.KO0EWMMB = 1;
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYB + 1;
    if (KO0EW01.KO0EWYYB == 0)
      KO0EW01.KO0EWCCB = KO0EW01.KO0EWCCB + 1;
    end
  end
  ;
  KO0EW01.KO0EWNSM = KO0EW01.KO0EWDTB;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESAA

// build new key
Function KO0ESBA()
  ;
  ;
  KO0ESBB(); /* ; reset w.s. fields*/
  ;
  if (KO0EW01.KO0EWEKF == "Y") /* ; edit key flag = 'y'*/
    KO0EW01.KO0EWEKF = "N"; /* ; reset edit key flag*/
    KO0ESBC(); /* ; edit key data*/
  end
  ;
  ;
   /* *************************************************************/
end // end KO0ESBA

// reset working storage
Function KO0ESBB()
  ;
  ;
  KO0EW01.KO0EWKEF = "N"; /* ; set key error flag*/
  KO0EW01.KO0EWKWF = "N"; /* ; set key warning flag*/
  KO0EW01.KO0EWSFF = "N"; /* ; set sched found flag*/
  KO0EW01.KO0EWSAF = "N"; /* ; set scroll allowed flag*/
  KO0EW01.KO0EWEAF = "N"; /* ; set edit allowed flag*/
  KO0EW01.KO0EWDAF = "N"; /* ; set delete allowed flag*/
  KO0EW01.SM1AGYNM = " "; /* ; set w.s. agcy name*/
  KO0EW01.XXXLSTNM = " "; /* ; set w.s. rep last name*/
  KO0EW01.XXXFSTNM = " "; /* ; set w.s. rep first name*/
  KO0EW01.XXXMDINT = " "; /* ; set w.s. rep mid init*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBB

// edit key data
Function KO0ESBC()
  ;
  ;
  if (KO0EW01.SM4REPID != 0) /* ; user entered rep id*/
    KO0ESBD(); /* ; edit rep id*/
  else
    set KO0EM005.SM4REPID cursor, bold; /* ; highlight rep id*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 38; /* ; required field*/
  end
  ;
  if (KO0EW01.SM1AGYID != " ") /* ; user entered agcy id*/
    KO0ESBG(); /* ; edit agcy id*/
  else
    set KO0EM005.SM1AGYID cursor, bold; /* ; highlight agcy id*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 38; /* ; required field*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBC

// edit rep id
Function KO0ESBD()
  ;
  ;
  set SQLCA empty;
  set VRAGCY02 empty;
  ;
  VRAGCY02.SM1AGYID = KO0EW01.SM1AGYID;
  VRAGCY02.SM4REPID = KO0EW01.SM4REPID;
  call "IO0400" ("S3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; sucessful open*/
    KO0ESBE(); /* ; fetch rep rec*/
  else
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    TA1REC.TA1DBASE = "DSLSMN";
    TA1REC.TA1TBLVU = "VRAGCY02";
    TA1REC.TA1LOCAT[1] = "KO0ESBD";
    TA1REC.TA1LOCAT[2] = "IO0400";
    XSKO001(); /* ; abort*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBD

// fetch sm5rec
Function KO0ESBE()
  ;
  ;
  set SQLCA empty;
  ;
  call "IO0400" ("N3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; successful fetch*/
    KO0ESBF(); /* ; edit comm rate ind*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set KO0EM005.SM4REPID cursor, bold;
      set KO0EM005.SM1AGYID bold;
      KO0EW01.KO0EWKEF = "Y";
      KO0EW01.KO0EWMNO = 6;
    else
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VRAGCY02";
      TA1REC.TA1LOCAT[1] = "KO0ESBE";
      TA1REC.TA1LOCAT[2] = "IO0400";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBE

// edit comm rate ind/status
Function KO0ESBF()
  ;
  ;
  KO0EW01.XXXFSTNM = VRAGCY02.XXXFSTNM;
  KO0EW01.XXXLSTNM = VRAGCY02.XXXLSTNM;
  KO0EW01.XXXMDINT = VRAGCY02.XXXMDINT;
  ;
  if (VRAGCY02.SM5COMIN != "Y") /* ; comm rate ind not 'y'*/
    set KO0EM005.SM4REPID cursor, bold; /* ; highlight rep*/
    set KO0EM005.SM1AGYID bold; /* ; highlight agcy*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 162; /* ; set error message*/
  else
    if (VRAGCY02.XXXSTAT != "A") /* ; status not 'a'*/
      KO0EW01.KO0EWKWF = "Y"; /* ; set key warning flag*/
      KO0EW01.KO0EWMNO = 202;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBF

// edit agcy id
Function KO0ESBG()
  ;
  ;
  set SQLCA empty;
  set SM1REC empty;
  ;
  SM1REC.SM1AGYID = KO0EW01.SM1AGYID;
  ;
  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; successful read*/
    KO0ESBH(); /* ; edit pay code*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set KO0EM005.SM1AGYID cursor, bold;
      KO0EW01.KO0EWKEF = "Y";
      KO0EW01.KO0EWMNO = 4;
    else
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VSAGCY01";
      TA1REC.TA1LOCAT[1] = "KO0ESBG";
      TA1REC.TA1LOCAT[2] = "IO0050";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBG

// edit agcy pay code/status
Function KO0ESBH()
  ;
  ;
  KO0EW01.SM1AGYNM = SM1REC.SM1AGYNM;
  ;
  if (SM1REC.SM1PAYCD != "NP") /* ; pay code not 'np'*/
    set KO0EM005.SM1AGYID cursor, bold; /* ; highlight agcy*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 168; /* ; set error message*/
  else
    if (SM1REC.SM1STAT != "A") /* ; status not 'a'*/
      KO0EW01.KO0EWKWF = "Y"; /* ; set key warning flag*/
      KO0EW01.KO0EWMNO = 203;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBH

// build agcy split schedule
Function KO0ESBI()
  ;
  ;
  KO0EW01.XGPCD = "**"; /* ; reset gpc code*/
  KO0EW01.KO0EWFF1 = " "; /* ; reset funct flag 1*/
  KO0EW01.KO0EWFF2 = " "; /* ; reset funct flag 2*/
  KO0EW01.KO0EWBMO = 0; /* ; reset begin month*/
  KO0EW01.KO0EWXMO = 0; /* ; reset end month*/
  ;
  set KO0EW02 empty;
  ;
  if (KO0EW01.SM1AGYID != "    "
   && KO0EW01.SM4REPID != 0)
    ;
    set SQLCA empty;
    set KOEREC empty;
    ;
    KOEREC.SM1AGYID = KO0EW01.SM1AGYID;
    KOEREC.SM4REPID = KO0EW01.SM4REPID;
    ;
    call "IO0700" ("SS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      ;
      KO0EW01.KO0EWSB1 = 1; /* ; reset subscript 1*/
      KO0EW02.KO0EWTOT = 1; /* ; reset sched total*/
      KO0EW02.KO0EWTTL = 0; /* ; reset rec total*/
      ;
      while (KO0EW02.KO0EWTOT <= 100 /* ; array is not full*/
       && SQLCA.VAGen_SQLCODE == 0) /* ; successful sql rtn*/
        KO0ESBJ(); /* ; fetch sched recs*/
      end
      ;
      call "IO0700" ("CS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
      ;
    else
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESBI";
      TA1REC.TA1LOCAT[2] = "IO0700";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency*/
   && KO0EW01.SM4REPID != 0)  /* ; map has rep*/
    KO0EM005.KO0EMMM1 = KO0EW02.KO0EWTTL; /* ; set map message 1*/
    set KO0EM005.KO0EMMM1 initialAttributes; /* ; show map mssg 1*/
    set KO0EM005.KO0EMMM2 initialAttributes; /* ; show map mssg 2*/
  else
    set KO0EM005.KO0EMMM1 initialAttributes; /* ; darken map mssg 1*/
    set KO0EM005.KO0EMMM2 initialAttributes; /* ; darken map mssg 2*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBI

// fetch agcy split rec
Function KO0ESBJ()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  call "IO0700" ("SN", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; fetch was successful*/
    KO0EW01.KO0EWSFF = "Y"; /* ; set sched found flag*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* ; at end of recs*/
      KOEREC.XGPCD = "99";
      KOEREC.KUCCOID = -1;
      KOEREC.XDVCD = "**";
      KOEREC.XOBCD = "**";
    end
  end
  ;
  if (KOEREC.XGPCD == KO0EW01.XGPCD) /* ; process same gpc*/
    KO0ESBK();
  else
    if (KO0EW01.KO0EWKEF == "N") /* ; no key errors*/
      if (KO0EW01.KO0EWSFF == "Y" /* ; split sched found*/
       || KO0EW01.KO0EWKWF == "N") /* ; no key warnings*/
        KO0ESBL(); /* ; move xgptbl to array*/
      end
    end
    ;
    if (KO0EW02.KO0EWTOT <= 100 /* ; array is not full*/
     && KOEREC.XGPCD != "99")   /* ; VALID KOEREC*/
      KO0ESBM(); /* ; move koerec to array*/
    end
  end
  ;
  KO0EW01.XGPCD = KOEREC.XGPCD; /* ; set w.s. gpc*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBJ

// process same gpc rec
Function KO0ESBK()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW02.KO0EWTOT - 2;
  ;
  if (KOEREC.KUCCOID != -1
   || KOEREC.XDVCD != "**"
   || KOEREC.XOBCD != "**")
    KO0EW02.KO0EWFF2[KO0EWSB2] = "*";
  else
    KO0EW02.KO0EWFF1[KO0EWSB2] = "*";
    if (KOEREC.KOEASBMO >= KO0EW02.KO0EWBMO[KO0EWSB2])
      if (KOEREC.KOEASXMO >= KO0EW01.KO0EWNSM
       || KOEREC.KOEASXMO == 0)
        KO0EW02.KO0EWRPC[KO0EWSB2] = 100 - KOEREC.KOEASPCT;
        KO0EW02.KO0EWAPC[KO0EWSB2] = 0 + KOEREC.KOEASPCT;
        KO0EW02.KO0EWBMO[KO0EWSB2] = KOEREC.KOEASBMO;
        KO0EW02.KO0EWXMO[KO0EWSB2] = KOEREC.KOEASXMO;
        KO0EW02.ZZZSDT[KO0EWSB2] = KOEREC.ZZZSDT;
        KO0EW02.ZZZCHGCT[KO0EWSB2] = KOEREC.ZZZCHGCT;
      else
        KO0EW01.KO0EWDTB = KOEREC.KOEASXMO;
        ;
        if (KO0EW01.KO0EWMMB < 12)
          KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMB + 1;
        else
          if (KO0EW01.KO0EWYYB < 99)
            KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYB + 1;
            KO0EW01.KO0EWMMB = 01;
          else
            KO0EW01.KO0EWCCB = KO0EW01.KO0EWCCB + 1;
            KO0EW01.KO0EWYYB = 00;
            KO0EW01.KO0EWMMB = 01;
          end
        end
        ;
        KO0EW02.KO0EWRPC[KO0EWSB2] = 100;
        KO0EW02.KO0EWAPC[KO0EWSB2] = 0;
        KO0EW02.KO0EWBMO[KO0EWSB2] = KO0EW01.KO0EWDTB;
        KO0EW02.KO0EWXMO[KO0EWSB2] = 0;
        KO0EW02.ZZZSDT[KO0EWSB2] = 0;
        KO0EW02.ZZZCHGCT[KO0EWSB2] = 0;
        ;
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBK

// move xgptbl to array
Function KO0ESBL()
  ;
  ;
  while (XGPTBL.XGPCD[KO0EWSB1] < KOEREC.XGPCD)
    ;
    if (XGPTBL.XGPCD[KO0EWSB1] > KO0EW01.XGPCD /* ; new gpc*/
     && XGPTBL.XXXSTAT[KO0EWSB1] == "A"        /* ; gpc is active*/
     && XGPTBL.COCMFL[KO0EWSB1] == "Y")        /* ; comm flag = y*/
      KO0EW02.KO0EWFF2[KO0EWTOT] = " ";
      KO0EW02.XGPCD[KO0EWTOT] = XGPTBL.XGPCD[KO0EWSB1];
      KO0EW02.KUCCOID[KO0EWTOT] = -1;
      KO0EW02.XDVCD[KO0EWTOT] = "**";
      KO0EW02.XOBCD[KO0EWTOT] = "**";
      KO0EW02.KO0EWRPC[KO0EWTOT] = 100;
      KO0EW02.KO0EWAPC[KO0EWTOT] = 0;
      KO0EW02.KO0EWBMO[KO0EWTOT] = 0;
      KO0EW02.KO0EWXMO[KO0EWTOT] = 0;
      KO0EW02.ZZZSDT[KO0EWTOT] = 0;
      KO0EW02.ZZZCHGCT[KO0EWTOT] = 0;
      KO0EW02.KO0EWTTL = KO0EW02.KO0EWTTL + 1;
      KO0EW02.KO0EWTOT = KO0EW02.KO0EWTOT + 2;
    end
    ;
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1; /* ; increment subscript*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBL

// move koerec to array
Function KO0ESBM()
  ;
  ;
  KO0EW02.XGPCD[KO0EWTOT] = KOEREC.XGPCD;
  KO0EW02.KUCCOID[KO0EWTOT] = -1;
  KO0EW02.XDVCD[KO0EWTOT] = "**";
  KO0EW02.XOBCD[KO0EWTOT] = "**";
  ;
  if (KOEREC.KUCCOID != -1
   || KOEREC.XDVCD != "**"
   || KOEREC.XOBCD != "**")
    KO0EW02.KO0EWFF2[KO0EWTOT] = "*";
    KO0EW02.KO0EWRPC[KO0EWTOT] = 100;
    KO0EW02.KO0EWAPC[KO0EWTOT] = 0;
    KO0EW02.KO0EWBMO[KO0EWTOT] = 0;
    KO0EW02.KO0EWXMO[KO0EWTOT] = 0;
    KO0EW02.ZZZSDT[KO0EWTOT] = 0;
    KO0EW02.ZZZCHGCT[KO0EWTOT] = 0;
  else
    if (KOEREC.KOEASXMO >= KO0EW01.KO0EWNSM
     || KOEREC.KOEASXMO == 0)
      KO0EW02.KO0EWRPC[KO0EWTOT] = 100 - KOEREC.KOEASPCT;
      KO0EW02.KO0EWAPC[KO0EWTOT] = 0 + KOEREC.KOEASPCT;
      KO0EW02.KO0EWBMO[KO0EWTOT] = KOEREC.KOEASBMO;
      KO0EW02.KO0EWXMO[KO0EWTOT] = KOEREC.KOEASXMO;
      KO0EW02.ZZZSDT[KO0EWTOT] = KOEREC.ZZZSDT;
      KO0EW02.ZZZCHGCT[KO0EWTOT] = KOEREC.ZZZCHGCT;
    else
      KO0EW01.KO0EWDTB = KOEREC.KOEASXMO;
      ;
      if (KO0EW01.KO0EWMMB < 12)
        KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMB + 1;
      else
        if (KO0EW01.KO0EWYYB < 99)
          KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYB + 1;
          KO0EW01.KO0EWMMB = 01;
        else
          KO0EW01.KO0EWCCB = KO0EW01.KO0EWCCB + 1;
          KO0EW01.KO0EWYYB = 00;
          KO0EW01.KO0EWMMB = 01;
        end
      end
      ;
      KO0EW02.KO0EWFF1[KO0EWTOT] = "*";
      KO0EW02.KO0EWRPC[KO0EWTOT] = 100;
      KO0EW02.KO0EWAPC[KO0EWTOT] = 0;
      KO0EW02.KO0EWBMO[KO0EWTOT] = KO0EW01.KO0EWDTB;
      KO0EW02.KO0EWXMO[KO0EWTOT] = 0;
      KO0EW02.ZZZSDT[KO0EWTOT] = 0;
      KO0EW02.ZZZCHGCT[KO0EWTOT] = 0;
      ;
    end
  end
  ;
  KO0EW02.KO0EWTTL = KO0EW02.KO0EWTTL + 1;
  KO0EW02.KO0EWTOT = KO0EW02.KO0EWTOT + 2;
  ;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBM

// move split sched to screen
Function KO0ESBN()
  ;
  ;
  KO0EW01.KO0EWEF1 = "N"; /* ; reset error flag 1*/
  while (KO0EW01.KO0EWEF1 == "N")
                                   /* ; until error flag 1 = 'y'*/
    KO0EW01.KO0EWSB1 = 10; /* ; reset map subscript*/
    while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map sched*/
      KO0ESBO(); /* ; move row to row*/
    end
    ;
    KO0EW01.KO0EWSB1 = 10; /* ; reset map subscript*/
    while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map sched*/
      KO0ESBP(); /* ; move row to row*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBN

// move array row to map row
Function KO0ESBO()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  KO0EM005.KO0EMFF1[KO0EWSB1] = KO0EW02.KO0EWFF1[KO0EWSB2];
  KO0EM005.KO0EMSC1[KO0EWSB1] = " ";
  KO0EM005.KO0EMFF2[KO0EWSB1] = KO0EW02.KO0EWFF2[KO0EWSB2];
  KO0EM005.KO0EMSC2[KO0EWSB1] = " ";
  KO0EM005.XGPCD[KO0EWSB1] = KO0EW02.XGPCD[KO0EWSB2];
  KO0EM005.KO0EMRPC[KO0EWSB1] = KO0EW02.KO0EWRPC[KO0EWSB2];
  KO0EM005.KO0EMAPC[KO0EWSB1] = KO0EW02.KO0EWAPC[KO0EWSB2];
  ;
  if (KO0EW02.KO0EWBMO[KO0EWSB2] == 0)
    KO0EM005.KO0EMBMO[KO0EWSB1] = " ";
  else
    KO0EW01.KO0EWDTB = KO0EW02.KO0EWBMO[KO0EWSB2];
    KO0EW01.KO0EWYYA = KO0EW01.KO0EWYYB;
    KO0EW01.KO0EWMMA = KO0EW01.KO0EWMMB;
    KO0EW01.KO0EWFLA = "/";
    KO0EM005.KO0EMBMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
  end
  ;
  if (KO0EW02.KO0EWXMO[KO0EWSB2] == 0)
    KO0EM005.KO0EMXMO[KO0EWSB1] = " ";
  else
    KO0EW01.KO0EWDTB = KO0EW02.KO0EWXMO[KO0EWSB2];
    KO0EW01.KO0EWYYA = KO0EW01.KO0EWYYB;
    KO0EW01.KO0EWMMA = KO0EW01.KO0EWMMB;
    KO0EW01.KO0EWFLA = "/";
    KO0EM005.KO0EMXMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
  end
  ;
  KO0EM005.KO0EMRCD[KO0EWSB1] = " ";
  ;
  KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBO

// compare map to ko0ew03
Function KO0ESBP()
  ;
  ;
  KO0EW01.KO0EWSB2 = 1; /* ; reset ko0ew03 subscript*/
  while (KO0EW01.KO0EWSB2 <= 10) /* ; until end of ko0ew03*/
    if (KO0EM005.XGPCD[KO0EWSB2] >= KO0EW03.XGPCD[KO0EWSB2])
      KO0EW01.KO0EWEF1 = "Y";
      KO0EW01.KO0EWSB2 = 11;
    else
      KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB2 + 1;
    end
  end
  ;
  if (KO0EW01.KO0EWEF1 == "N")
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1;
  else
    KO0EW01.KO0EWSB1 = 0;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBP

// move prev sel codes to map
Function KO0ESBQ()
  ;
  ;
  KO0EW01.KO0EWSB1 = 1; /* ; reset subscript 1*/
  while (KO0EW01.KO0EWSB1 <= 10) /* ; until subscript 1 > 10*/
    ;
    if (KO0EM005.XGPCD[KO0EWSB1] != " ") /* ; map has gpc*/
      KO0EW01.KO0EWSB2 = 1; /* ; reset subscript 2*/
      while (KO0EW01.KO0EWSB2 <= 10) /* ; until sub 2 > 10*/
        if (KO0EW03.XGPCD[KO0EWSB2] == KO0EM005.XGPCD[KO0EWSB1])
          KO0EM005.KO0EMSC1[KO0EWSB1] = KO0EW03.KO0EWSC1[KO0EWSB2];
          KO0EM005.KO0EMSC2[KO0EWSB1] = KO0EW03.KO0EWSC2[KO0EWSB2];
          KO0EW01.KO0EWSB2 = 11;
        else
          KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB2 + 1;
        end
      end
    end
    ;
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
    ;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBQ

// set pf key attributes
Function KO0ESBR()
  ;
  ;
  if (KO0EW01.SM1AGYID == " " /* ; no map agency id*/
   && KO0EW01.SM4REPID == 0)  /* ; no map rep id*/
    KO0EW01.KO0EWSAF = "N"; /* ; scroll allowed = n*/
    set KO0EM005.KO0EMP07 skip, invisible;
    set KO0EM005.KO0EMP08 skip, invisible;
  else
    if (KO0EW01.KO0EWKEF == "Y" /* ; key errors exist*/
     && KO0EW01.KO0EWSFF == "N") /* ; no sched recs found*/
      KO0EW01.KO0EWSAF = "N"; /* ; scroll allowed = 'n'*/
      set KO0EM005.KO0EMP07 skip, invisible;
      set KO0EM005.KO0EMP08 skip, invisible;
    else
      KO0EW01.KO0EWSAF = "Y"; /* ; scroll allowed = 'y'*/
      set KO0EM005.KO0EMP07 initialAttributes;
      set KO0EM005.KO0EMP08 initialAttributes;
    end
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency id*/
   && KO0EW01.SM4REPID != 0   /* ; map has rep id*/
   && KO0EW01.KO0EWKEF == "N") /* ; no map errors*/
    KO0EW01.KO0EWEAF = "Y"; /* ; edit allowed = yes*/
    set KO0EM005.KO0EMP12 initialAttributes;
  else
    KO0EW01.KO0EWEAF = "N"; /* ; edit allowed = no*/
    set KO0EM005.KO0EMP12 skip, invisible;
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency id*/
   && KO0EW01.SM4REPID != 0   /* ; map has rep id*/
   && KO0EW01.KO0EWSFF == "Y") /* ; sched recs found*/
    KO0EW01.KO0EWDAF = "Y"; /* ; deletes allowed = yes*/
    set KO0EM005.KO0EMP17 initialAttributes;
  else
    KO0EW01.KO0EWDAF = "N"; /* ; deletes allowed = no*/
    set KO0EM005.KO0EMP17 skip, invisible;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESBR

// get begin date
Function KO0ESCA()
  ;
  ;
  if (KO0EM005.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin date*/
    KO0EW01.KO0EWDT1 = KO0EM005.KO0EMBMO[KO0EWSB1];
    if (KO0EW01.KO0EWFL1 == "-"
     || KO0EW01.KO0EWFL1 == "/")
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM1;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY1;
      KO0EM005.KO0EMBMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    else
      KO0EW01.KO0EWDT2 = KO0EM005.KO0EMBMO[KO0EWSB1];
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM2;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY2;
      KO0EM005.KO0EMBMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESCA

// get end date
Function KO0ESCB()
  ;
  ;
  if (KO0EM005.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end date*/
    KO0EW01.KO0EWDT1 = KO0EM005.KO0EMXMO[KO0EWSB1];
    if (KO0EW01.KO0EWFL1 == "-"
     || KO0EW01.KO0EWFL1 == "/")
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM1;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY1;
      KO0EM005.KO0EMXMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    else
      KO0EW01.KO0EWDT2 = KO0EM005.KO0EMXMO[KO0EWSB1];
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM2;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY2;
      KO0EM005.KO0EMXMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESCB

// get gpc desc
Function KO0ESCC()
  ;
  ;
  KO0EM005.XGPDESC[KO0EWSB1] = " "; /* ; reset map gpc abrv*/
  ;
  if (KO0EM005.XGPCD[KO0EWSB1] != " ") /* ; map has gpc code*/
    if (KO0EM005.XGPCD[KO0EWSB1] in XGPTBL.XGPCD 
     /* gpc code is in gpc table*/
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A" /* ; gpc status is active*/
     && XGPTBL.COCMFL[sysVar.arrayIndex] == "Y") /* ; gpc is commissionable*/
      KO0EM005.XGPDESC[KO0EWSB1] = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESCC

// set row attributes
Function KO0ESCD()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] == " ") /* ; no array gpc code*/
    KO0ESCE(); /* ; set add attributes*/
  else
    KO0ESCF(); /* ; set change attributes*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESCD

// set add attributes
Function KO0ESCE()
  ;
  ;
  set KO0EM005.KO0EMSC1[KO0EWSB1] skip, invisible;
  set KO0EM005.KO0EMSC2[KO0EWSB1] skip, invisible;
  ;
  if (KO0EW01.KO0EWEAF == "Y") /* ; edits are allowed*/
    set KO0EM005.KO0EMSC1[KO0EWSB1] skip, invisible;
    set KO0EM005.KO0EMSC2[KO0EWSB1] skip, invisible;
    set KO0EM005.XGPCD[KO0EWSB1] cursor, normal;
    set KO0EM005.KO0EMRPC[KO0EWSB1] normal;
    set KO0EM005.KO0EMAPC[KO0EWSB1] normal;
    set KO0EM005.KO0EMBMO[KO0EWSB1] normal;
    set KO0EM005.KO0EMXMO[KO0EWSB1] normal;
  else
    set KO0EM005.XGPCD[KO0EWSB1] skip, invisible;
    set KO0EM005.KO0EMRPC[KO0EWSB1] skip, invisible;
    set KO0EM005.KO0EMAPC[KO0EWSB1] skip, invisible;
    set KO0EM005.KO0EMBMO[KO0EWSB1] skip, invisible;
    set KO0EM005.KO0EMXMO[KO0EWSB1] skip, invisible;
  end
  ;
  set KO0EM005.KO0EMRCD[KO0EWSB1] skip, invisible;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESCE

// set change attributes
Function KO0ESCF()
  ;
  ;
  set KO0EM005.KO0EMSC1[KO0EWSB1] cursor, normal;
  set KO0EM005.KO0EMSC2[KO0EWSB1] normal;
  set KO0EM005.XGPCD[KO0EWSB1] initialAttributes;
  ;
  if (KO0EW01.KO0EWEAF == "Y") /* ; edits are allowed*/
    set KO0EM005.KO0EMRPC[KO0EWSB1] cursor, normal;
    set KO0EM005.KO0EMAPC[KO0EWSB1] normal;
    set KO0EM005.KO0EMBMO[KO0EWSB1] normal;
    set KO0EM005.KO0EMXMO[KO0EWSB1] normal;
    set KO0EM005.KO0EMRCD[KO0EWSB1] normal;
  else
    set KO0EM005.KO0EMRPC[KO0EWSB1] initialAttributes;
    set KO0EM005.KO0EMAPC[KO0EWSB1] initialAttributes;
    set KO0EM005.KO0EMBMO[KO0EWSB1] initialAttributes;
    set KO0EM005.KO0EMXMO[KO0EWSB1] initialAttributes;
    set KO0EM005.KO0EMRCD[KO0EWSB1] skip, invisible;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESCF

// build ko0ew03
Function KO0ESCG()
  ;
  ;
  KO0EW03.KO0EWSC1[KO0EWSB1] = KO0EM005.KO0EMSC1[KO0EWSB1];
  KO0EW03.KO0EWSC2[KO0EWSB1] = KO0EM005.KO0EMSC2[KO0EWSB1];
  KO0EW03.XGPCD[KO0EWSB1] = KO0EM005.XGPCD[KO0EWSB1];
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESCG

// validate fast path
Function KO0ESDA()
  ;
  ;
  if (converseVar.eventKey is enter)
    COMMAREA.CATOAP = KO0EM005.CATOAP;
    COMMAREA.CAITEM = KO0EM005.CAITEM;
    XSEXIT();
    set KO0EM005.CATOAP cursor, bold;
  else
    set KO0EM005.CATOAP cursor, bold;
    KO0EW01.KO0EWMNO = 1;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESDA

// validate function
Function KO0ESDB()
  ;
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function*/
  ;
  if (converseVar.eventKey is enter) /* ; user pressed enter*/
    KO0EW01.KO0EWFN1 = "U"; /* ; function = update*/
  else
    if (converseVar.eventKey is pf7 /* ; user pressed pf7*/
     && KO0EW01.KO0EWSAF == "Y")    /* ; scrolling is allowed*/
      KO0EW01.KO0EWFN1 = "B"; /* ; function = back*/
    else
      if (converseVar.eventKey is pf8 /* ; user pressed pf8*/
       && KO0EW01.KO0EWSAF == "Y")    /* ; scrolling is allowed*/
        KO0EW01.KO0EWFN1 = "F"; /* ; function = frwd*/
      else
        if (converseVar.eventKey is pf12 /* ; user pressed pf12*/
         && KO0EW01.KO0EWEAF == "Y")     /* ; edits are allowed*/
          KO0EW01.KO0EWFN1 = "E"; /* ; function = edit*/
        else
          if (converseVar.eventKey is pf17 /* ; user pressed pf17*/
           && KO0EW01.KO0EWDAF == "Y")     /* ; deletes are allowed*/
            KO0EW01.KO0EWFN1 = "D"; /* ; function = delete*/
          else
            if (converseVar.eventKey is pf18) /* ; user pressed pf18*/
              KO0EW01.KO0EWFN1 = "R"; /* ; function = refresh*/
            else
              KO0EW01.KO0EWMNO = 2; /* ; invalid pf key*/
            end
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESDB

// add sched row
Function KO0ESE0()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM005.SM1AGYID;
  KOEREC.SM4REPID = KO0EM005.SM4REPID;
  KOEREC.XGPCD = KO0EM005.XGPCD[KO0EWSB1];
  KOEREC.KUCCOID = -1;
  KOEREC.XDVCD = "**";
  KOEREC.XOBCD = "**";
  KOEREC.KOEASBMO = KO0EW01.KO0EWBMO;
  KOEREC.KOEASXMO = KO0EW01.KO0EWXMO;
  KOEREC.KOEASPCT = KO0EM005.KO0EMAPC[KO0EWSB1];
  KOEREC.XXXUSRID = COMMAREA.CAUSERID;
  KOEREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOEREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  KOEREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  KOEREC.ZZZCHGCT = 0;
  ;
  call "IO0700" ("A ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; add not sucessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESE0";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* ; abort*/
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = "A";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE0

// update sched row
Function KO0ESE1()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM005.SM1AGYID;
  KOEREC.SM4REPID = KO0EM005.SM4REPID;
  KOEREC.XGPCD = KO0EM005.XGPCD[KO0EWSB1];
  KOEREC.KUCCOID = -1;
  KOEREC.XDVCD = "**";
  KOEREC.XOBCD = "**";
  KOEREC.KOEASBMO = KO0EW01.KO0EWBMO;
  KOEREC.KOEASXMO = KO0EW01.KO0EWXMO;
  KOEREC.KOEASPCT = KO0EM005.KO0EMAPC[KO0EWSB1];
  KOEREC.XXXUSRID = COMMAREA.CAUSERID;
  KOEREC.ZZZSDT = KO0EW02.ZZZSDT[KO0EWSB2];
  KOEREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  KOEREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  KOEREC.ZZZCHGCT = KO0EW02.ZZZCHGCT[KO0EWSB2];
  ;
  call "IO0700" ("U ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; update unsuccessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESE1";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* abort*/
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = "C";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE1

// write audit recs
Function KO0ESE2()
  ;
  ;
  set KOAREC empty;
  set SQLCA empty;
  ;
  KOAREC.KOATBLCD = 10;
  KOAREC.XXXTBLNM = "VASSCH01";
  KOAREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOAREC.ZZHHMMSS = TA2REC.TA2TIMEN;
  KOAREC.SM1AGYID = KO0EM005.SM1AGYID;
  KOAREC.SM4REPID = KO0EM005.SM4REPID;
   /* ***MOVE KO0EM005.KO0EMRCD(KO0EWSB1) TO KOAREC.XRCCD; /* 02-24-94*/
  KOAREC.XXXUSRID = COMMAREA.CAUSERID;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] != " ")
    ;
    if (KO0EM005.KO0EMRPC[KO0EWSB1] != 0
     || KO0EM005.KO0EMAPC[KO0EWSB1] != 0
     || KO0EM005.KO0EMBMO[KO0EWSB1] != " "
     || KO0EM005.KO0EMXMO[KO0EWSB1] != " ")
      KOAREC.KOAACTTY = "2";
    else
      KOAREC.KOAACTTY = "4";
    end
    ;
    KOAREC.XGPCD = KO0EW02.XGPCD[KO0EWSB2];
    KOAREC.KOEASPCT = KO0EW02.KO0EWAPC[KO0EWSB2];
    KOAREC.KOACRSDT = KO0EW02.ZZZSDT[KO0EWSB2];
    KOAREC.XXXUSRID = COMMAREA.CAUSERID;
    KOAREC.KUCCOID = -1;
    KOAREC.XDVCD = "**";
    KOAREC.XOBCD = "**";
    KOAREC.KOEASBMO = KO0EW02.KO0EWBMO[KO0EWSB2];
    KOAREC.KOEASXMO = KO0EW02.KO0EWXMO[KO0EWSB2];
    ;
    call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1DBASE = "DCOMM ";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESE2  ";
      TA1REC.TA1LOCAT[1] = "IO0630   ";
      XSKO001(); /* abort*/
    end
  end
  ;
  if (KO0EM005.XGPCD[KO0EWSB1] != " "
   || KO0EM005.KO0EMRPC[KO0EWSB1] != 0
   || KO0EM005.KO0EMAPC[KO0EWSB1] != 0
   || KO0EM005.KO0EMBMO[KO0EWSB1] != " "
   || KO0EM005.KO0EMXMO[KO0EWSB1] != " ")
    ;
    if (KO0EW02.XGPCD[KO0EWSB2] == " ")
      KOAREC.KOAACTTY = "1";
    else
      KOAREC.KOAACTTY = "3";
    end
    ;
    KOAREC.KUCCOID = -1;
    KOAREC.XDVCD = "**";
    KOAREC.XOBCD = "**";
    KOAREC.KOEASBMO = KO0EW01.KO0EWBMO;
    KOAREC.KOEASXMO = KO0EW01.KO0EWXMO;
    KOAREC.KOEASPCT = KO0EM005.KO0EMAPC[KO0EWSB1];
    ;
    call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1DBASE = "DCOMM ";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESE2  ";
      TA1REC.TA1LOCAT[1] = "IO0630   ";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE2

// update array
Function KO0ESE3()
  ;
  ;
  KO0EW02.XGPCD[KO0EWSB2] = KO0EM005.XGPCD[KO0EWSB1];
  KO0EW02.KO0EWRPC[KO0EWSB2] = KO0EM005.KO0EMRPC[KO0EWSB1];
  KO0EW02.KO0EWAPC[KO0EWSB2] = KO0EM005.KO0EMAPC[KO0EWSB1];
  KO0EW02.KO0EWBMO[KO0EWSB2] = KO0EW01.KO0EWBMO;
  KO0EW02.KO0EWXMO[KO0EWSB2] = KO0EW01.KO0EWXMO;
  ;
  if (KO0EW02.KO0EWOPT[KO0EWSB2] == "A") /* ; array option = 'a'*/
    KO0EW02.KUCCOID[KO0EWSB2] = -1;
    KO0EW02.XDVCD[KO0EWSB2] = "**";
    KO0EW02.XOBCD[KO0EWSB2] = "**";
    KO0EW02.ZZZSDT[KO0EWSB2] = TA2REC.TA2GRGGN;
    KO0EW02.ZZZCHGCT[KO0EWSB2] = 0;
  else
    if (KO0EW02.KO0EWOPT[KO0EWSB2] == "C") /* ; array option = 'c'*/
      KO0EW02.KUCCOID[KO0EWSB2] = -1;
      KO0EW02.XDVCD[KO0EWSB2] = "**";
      KO0EW02.XOBCD[KO0EWSB2] = "**";
      KO0EW02.ZZZCHGCT[KO0EWSB2] = KO0EW02.ZZZCHGCT[KO0EWSB2] + 1;
    else
      KO0EW02.KUCCOID[KO0EWSB2] = 0;
      KO0EW02.XDVCD[KO0EWSB2] = " ";
      KO0EW02.XOBCD[KO0EWSB2] = " ";
      KO0EW02.ZZZSDT[KO0EWSB2] = 0;
      KO0EW02.ZZZCHGCT[KO0EWSB2] = 0;
    end
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = " ";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE3

// process no changes
Function KO0ESE4()
  ;
  ;
  if (KO0EW01.KO0EWFN1 == "U") /* ; function 1 = update*/
    if (KO0EW01.KO0EWFN2 == "D")
                                   /* ; function flag 2 = delete*/
      KO0ESE5(); /* ; delete split sched*/
    else
      if (KO0EW01.SM1AGYID == " " /* ; no w.s. agency*/
       && KO0EW01.SM4REPID == 0)  /* ; no w.s. rep*/
        KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
        KO0EW01.KO0EWNKF = "Y"; /* ; set new key flag*/
        KO0EW01.KO0EWNAF = "Y"; /* ; set new key flag*/
        KO0EW01.KO0EWEKF = "Y"; /* ; set edit key flag*/
        KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
        KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
      else
        KO0EW01.SM1AGYID = " "; /* ; reset w.s. agency*/
        KO0EW01.SM4REPID = 0; /* ; reset w.s. rep*/
        KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
        KO0EW01.KO0EWNKF = "Y"; /* ; set new key flag*/
        KO0EW01.KO0EWNAF = "Y"; /* ; set new key flag*/
        KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
        KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
      end
    end
  else
    if (KO0EW01.KO0EWFN1 == "B")
                                   /* ; function 1 = scroll back*/
      KO0ESE8(); /* ; scroll back*/
    else
      if (KO0EW01.KO0EWFN1 == "F")
                                   /* ; function 1 = scroll frwd*/
        KO0ESE9(); /* ; scroll frwd*/
      else
        if (KO0EW01.KO0EWFN1 == "E") /* ;      ; function 1 = edit*/
          KO0EW01.KO0EWMNO = 63; /* ; no changes were made*/
          KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
          KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
        else
          if (KO0EW01.KO0EWFN1 == "D") /* ; function 1 = delete*/
            KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
            KO0EW01.KO0EWFN2 = "D"; /* ; set function 2*/
            KO0EW01.KO0EWMNO = 118; /* ; display delete mssg*/
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE4

// delete split sched recs
Function KO0ESE5()
  ;
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function 1 flag*/
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2 flag*/
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "KO0ESE5";
    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    COMMAREA.CATOAP = "KO0A";
    XSEXIT();
    exit program;
  end
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EW01.SM1AGYID;
  KOEREC.SM4REPID = KO0EW01.SM4REPID;
  ;
  call "IO0700" ("SS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    ;
    KO0EW01.KO0EWEF1 = "N"; /* ; reset err flag*/
    while (KO0EW01.KO0EWEF1 == "N") /* ; while err flag = 'n'*/
      KO0ESE6(); /* ; fetch next rec*/
    end
    ;
    call "IO0700" ("CS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
    ;
  else
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESE5";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* ; abort*/
  end
  ;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* ; commit db changes*/
  ;
  KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  KO0EW01.KO0EWNAF = "Y"; /* ; set new array flag*/
  KO0EW01.KO0EWMNO = 119; /* ; set w.s. mssg nbr*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE5

// fetch next koerec
Function KO0ESE6()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  call "IO0700" ("SN", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; fetch was successful*/
    KO0ESE7(); /* ; delete row*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* ; at end of recs*/
      KO0EW01.KO0EWEF1 = "Y"; /* ; set error flag*/
    else
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESE6";
      TA1REC.TA1LOCAT[2] = "IO0700";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE6

// delete array row
Function KO0ESE7()
  ;
  ;
  set KOAREC empty;
  ;
  KOAREC.KOATBLCD = 10;
  KOAREC.KOAACTTY = "4";
  KOAREC.XXXTBLNM = "VASSCH01";
  KOAREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOAREC.ZZHHMMSS = TA2REC.TA2TIMEN;
  KOAREC.SM1AGYID = KOEREC.SM1AGYID;
  KOAREC.SM4REPID = KOEREC.SM4REPID;
  KOAREC.XGPCD = KOEREC.XGPCD;
  KOAREC.KUCCOID = KOEREC.KUCCOID;
  KOAREC.XDVCD = KOEREC.XDVCD;
  KOAREC.XOBCD = KOEREC.XOBCD;
  KOAREC.KOEASPCT = KOEREC.KOEASPCT;
  KOAREC.KOACRSDT = KOEREC.ZZZSDT;
  KOAREC.XXXUSRID = COMMAREA.CAUSERID;
   /* ****MOVE 'MD' TO KOAREC.XRCCD; /* 02-24-94*/
  ;
  set SQLCA empty;
  ;
  call "IO0700" ("D ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESE7";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* abort*/
  else
    ;
    set SQLCA empty;
    ;
    call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1DBASE = "DCOMM ";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESE7  ";
      TA1REC.TA1LOCAT[1] = "IO0630   ";
      XSKO001(); /* abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE7

// scroll back
Function KO0ESE8()
  ;
  ;
  if (KO0EW02.KO0EWPOS == 0) /* ; array pos at top*/
    KO0EW01.KO0EWMNO = 70;
  else
    KO0EW02.KO0EWPOS = KO0EW02.KO0EWPOS - 10; /* ; set position in array*/
    KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  end
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function 1 flag*/
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2 flag*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE8

// scroll frwd
Function KO0ESE9()
  ;
  ;
  KO0EW01.KO0EWSB1 = KO0EW02.KO0EWPOS + 10; /* ; check last map line*/
  ;
  if (KO0EW01.KO0EWSB1 > 100) /* ; array is full*/
    KO0EW01.KO0EWMNO = 68;
  else
    if (KO0EW01.KO0EWSB1 > KO0EW02.KO0EWTOT /* ; at end of array*/
     && KO0EW01.KO0EWKEF == "Y")            /* ; adds are not allowed*/
      KO0EW01.KO0EWMNO = 68;
    else
      KO0EW01.KO0EWEF1 = "N"; /* ; reset error flag*/
      KO0EW01.KO0EWSB1 = 1; /* ;     ; reset subscript 1*/
      while (KO0EW01.KO0EWEF1 == "N" /* ; until error flag = 'y'*/
       && KO0EW01.KO0EWSB1 <= 10) /* ; and subscript > 10*/
        KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
        ;
        if (KO0EW02.XGPCD[KO0EWSB2] == " ")
          KO0EW01.KO0EWEF1 = "Y";
        else
          KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
        end
      end
      ;
      if (KO0EW01.KO0EWEF1 == "Y")
        KO0EW01.KO0EWMNO = 68;
      else
        KO0EW02.KO0EWPOS = KO0EW02.KO0EWPOS + 10;
        KO0EW01.KO0EWBMF = "Y";
      end
    end
  end
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESE9

// check for data changes
Function KO0ESEA()
  ;
  ;
  if (KO0EM005.SM1AGYID != KO0EW01.SM1AGYID /* ; new map agcy*/
   || KO0EM005.SM4REPID != KO0EW01.SM4REPID) /* ; new map rep*/
    KO0EW01.KO0EWKCF = "Y"; /* ; set key change flag*/
  end
  ;
  KO0EW01.KO0EWSB1 = 1; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 <= 10) /* ; until end of map sched*/
    KO0ESEB(); /* ; check for funct change*/
    KO0ESEC(); /* ; check for sched change*/
    ;
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1; /* ; increment subscript*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEA

// check for function change
Function KO0ESEB()
  ;
  ;
  if (KO0EM005.KO0EMSC1[KO0EWSB1] != " " /* ; select code 1 not ' '*/
   || KO0EM005.KO0EMSC2[KO0EWSB1] != " ") /* ; select code 2 not ' '*/
    KO0EW01.KO0EWFCF = "Y"; /* ; set funct change flag*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEB

// check for schedule change
Function KO0ESEC()
  ;
  ;
  KO0ESED(); /* ; set work dates*/
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  if (KO0EM005.XGPCD[KO0EWSB1] == KO0EW02.XGPCD[KO0EWSB2]
   && KO0EM005.KO0EMRPC[KO0EWSB1] == KO0EW02.KO0EWRPC[KO0EWSB2]
   && KO0EM005.KO0EMAPC[KO0EWSB1] == KO0EW02.KO0EWAPC[KO0EWSB2]
   && KO0EW01.KO0EWBMO == KO0EW02.KO0EWBMO[KO0EWSB2]
   && KO0EW01.KO0EWXMO == KO0EW02.KO0EWXMO[KO0EWSB2])
    KO0EW02.KO0EWOPT[KO0EWSB2] = " ";
  else
    if (KO0EW02.XGPCD[KO0EWSB2] == " ")
      KO0EW02.KO0EWOPT[KO0EWSB2] = "A";
      KO0EW01.KO0EWSCF = "Y";
    else
      if (KO0EM005.KO0EMRPC[KO0EWSB1] == 0
       && KO0EM005.KO0EMAPC[KO0EWSB1] == 0
       && KO0EM005.KO0EMBMO[KO0EWSB1] == " "
       && KO0EM005.KO0EMXMO[KO0EWSB1] == " ")
        KO0EW02.KO0EWOPT[KO0EWSB2] = "D";
        KO0EW01.KO0EWSCF = "Y";
      else
        KO0EW02.KO0EWOPT[KO0EWSB2] = "C";
        KO0EW01.KO0EWSCF = "Y";
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEC

// set work dates
Function KO0ESED()
  ;
  ;
  KO0EW01.KO0EWBMO = 0; /* ; reset w.s. begin month*/
  KO0EW01.KO0EWXMO = 0; /* ; reset w.s. end month*/
  ;
  if (KO0EM005.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin month*/
    KO0EW01.KO0EWDTA = KO0EM005.KO0EMBMO[KO0EWSB1];
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    /* ---------- Y2K OUT BEGIN ---------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ---------- Y2K OUT END -----------*/
    /* ---------- Y2K IN  BEGIN ---------*/
    if (KO0EW01.KO0EWYYB > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ---------- Y2K IN END ------------*/
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB;
  end
  ;
  if (KO0EM005.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end month*/
    KO0EW01.KO0EWDTA = KO0EM005.KO0EMXMO[KO0EWSB1];
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    /* ---------- Y2K OUT BEGIN ---------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ---------- Y2K OUT END -----------*/
    /* ---------- Y2K IN  BEGIN ---------*/
    if (KO0EW01.KO0EWYYB > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ---------- Y2K IN END ------------*/
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESED

// process key changes
Function KO0ESEE()
  ;
  ;
  if (KO0EW01.KO0EWFN1 != "U") /* ; function not = update*/
    set KO0EM005.SM1AGYID bold; /* ; highlight map agcy*/
    set KO0EM005.SM4REPID bold; /* ; highlight rep*/
    KO0EW01.KO0EWMNO = 161;
  else
    if (KO0EW01.KO0EWFCF == "Y") /* ; sched changes made*/
      set KO0EM005.SM1AGYID bold; /* ; highlight agcy*/
      set KO0EM005.SM4REPID bold; /* ; highlight rep*/
      KO0EW01.KO0EWMNO = 201;
    else
      if (KO0EW01.KO0EWSCF == "Y") /* ; sched changes made*/
        set KO0EM005.SM1AGYID bold; /* ; highlight agcy*/
        set KO0EM005.SM4REPID bold; /* ; highlight rep*/
        KO0EW01.KO0EWMNO = 163;
      else
        KO0EW01.SM1AGYID = KO0EM005.SM1AGYID;
        KO0EW01.SM4REPID = KO0EM005.SM4REPID;
        KO0EW01.KO0EWBMF = "Y";
        KO0EW01.KO0EWNKF = "Y";
        KO0EW01.KO0EWNAF = "Y";
        KO0EW01.KO0EWEKF = "Y";
      end
    end
  end
  ;
  KO0EM005.SM1AGYID = KO0EW01.SM1AGYID;
  KO0EM005.SM4REPID = KO0EW01.SM4REPID;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEE

// process function changes
Function KO0ESEF()
  ;
  ;
  if (KO0EW01.KO0EWFN1 != "U") /* ; function not = update*/
    KO0EW01.KO0EWMNO = 199; /* ; set error message*/
  else
    if (KO0EW01.KO0EWSCF == "Y") /* ; sched changes were made*/
      KO0EW01.KO0EWMNO = 200; /* ; set error message*/
    else
      KO0EW01.KO0EWSB1 = 1; /* ; reset subscript*/
      while (KO0EW01.KO0EWSB1 <= 10) /* ; until subscript > 10*/
        if (KO0EM005.KO0EMSC1[KO0EWSB1] != " ") /* ; history was selected*/
          KO0EW03.KO0EWSC1[KO0EWSB1] = " ";
          KO0EM005.KO0EMSC1[KO0EWSB1] = " ";
          KO0EW01.XGPCD = KO0EM005.XGPCD[KO0EWSB1];
          KO0EW01.KO0EWAPP = "KO0E010";
          KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
          KO0EW01.KO0EWNKF = "Y"; /* ; set new key flag*/
          KO0EW01.KO0EWEKF = "Y"; /* ; set edit key flag*/
          KO0EW01.KO0EWNAF = "Y"; /* ; set new array flag*/
          KO0EW01.KO0EWSB1 = 11; /* ; set subscript*/
        else
          if (KO0EM005.KO0EMSC2[KO0EWSB1] != " ") /* exceptions was selected*/
            KO0EW03.KO0EWSC2[KO0EWSB1] = " ";
            KO0EM005.KO0EMSC2[KO0EWSB1] = " ";
            KO0EW01.XGPCD = KO0EM005.XGPCD[KO0EWSB1];
            KO0EW01.KO0EWAPP = "KO0E015";
            KO0EW01.KO0EWCHF = "C";
            KO0EW01.KO0EWBMF = "Y";
            KO0EW01.KO0EWNKF = "Y";
            KO0EW01.KO0EWEKF = "Y";
            KO0EW01.KO0EWNAF = "Y";
            KO0EW01.KO0EWSB1 = 11; /* ; set subscript*/
          else
            KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEF

// process sched changes
Function KO0ESEG()
  ;
  ;
  KO0ESEH(); /* ; edit function*/
  ;
  if (KO0EW01.KO0EWMNO == 0) /* ; no errors*/
    KO0EW01.KO0EWSB1 = 10; /* ; reset subscript*/
    while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map*/
      KO0ESEI(); /* ; edit map*/
    end
    ;
    if (KO0EW01.KO0EWMNO == 0) /* ; no errors*/
      if (KO0EW01.KO0EWFN1 == "U") /* ; function = update*/
        KO0ESEX(); /* ; update sched*/
      else
        KO0EW01.KO0EWMNO = 76; /* ; edit is complete*/
      end
    end
    ;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEG

// edit function
Function KO0ESEH()
  ;
  ;
  if (KO0EW01.KO0EWFN1 == "D") /* ; function = delete*/
    KO0EW01.KO0EWMNO = 164;
  else
    if (KO0EW01.KO0EWFN1 == "B" /* ; function = scroll back*/
     || KO0EW01.KO0EWFN1 == "F") /* ; function = scroll frwd*/
      KO0EW01.KO0EWMNO = 174;
    end
  end
  ;
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2 flag*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEH

// edit map row
Function KO0ESEI()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  if (KO0EM005.XGPCD[KO0EWSB1] != " "    /* ; row has gpc code*/
   || KO0EM005.KO0EMRPC[KO0EWSB1] != 0   /* ; row has rep pct*/
   || KO0EM005.KO0EMAPC[KO0EWSB1] != 0   /* ; row has agcy pct*/
   || KO0EM005.KO0EMBMO[KO0EWSB1] != " " /* ; row has begin date*/
   || KO0EM005.KO0EMXMO[KO0EWSB1] != " " /* ; row has end date*/
   || KO0EM005.KO0EMRCD[KO0EWSB1] != " ") /* ; row has maint code*/
    ;
    KO0ESEJ(); /* ;     ; build work fields*/
    KO0ESEK(); /* ;     ; edit maint code*/
    KO0ESEL(); /* ;     ; edit dates*/
    KO0ESEO(); /* ;     ; edit splits*/
    KO0ESEP(); /* ; edit gpc*/
    ;
    if (KO0EM005.KO0EMRPC[KO0EWSB1] != 0
     || KO0EM005.KO0EMAPC[KO0EWSB1] != 0
     || KO0EM005.KO0EMBMO[KO0EWSB1] != " "
     || KO0EM005.KO0EMXMO[KO0EWSB1] != " ")
      KO0ESEQ(); /* ; edit key*/
    end
    ;
  end
  ;
  KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEI

// build work fields
Function KO0ESEJ()
  ;
  ;
  KO0EW01.KO0EWXMO = 0; /* ;     ; ws end date = 0*/
  KO0EW01.KO0EWBMO = 0; /* ;     ; ws begin date = 0*/
  KO0EW01.KO0EWPCT = 0; /* ;     ; reset pct total*/
  ;
  if (KO0EM005.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end date*/
    KO0EW01.KO0EWDT1 = KO0EM005.KO0EMXMO[KO0EWSB1];
    /* --------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* --------- Y2K OUT END ----------*/
    /* --------- Y2K IN  BEGIN --------*/
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* --------- Y2K IN  END ----------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB;
  end
  ;
  if (KO0EM005.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin date*/
    KO0EW01.KO0EWDT1 = KO0EM005.KO0EMBMO[KO0EWSB1];
    /* --------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* --------- Y2K OUT END ----------*/
    /* --------- Y2K IN  BEGIN --------*/
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* --------- Y2K IN  END ----------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB;
  end
  ;
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM005.KO0EMRPC[KO0EWSB1];
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM005.KO0EMAPC[KO0EWSB1];
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEJ

// edit maint code
Function KO0ESEK()
  ;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] != " ") /* ; array row has gpc*/
    if (KO0EW02.KO0EWBMO[KO0EWSB2] != KO0EW01.KO0EWBMO
     && KO0EM005.KO0EMRCD[KO0EWSB1] != "EA"
     && KO0EM005.KO0EMRCD[KO0EWSB1] != "EB")
      set KO0EM005.KO0EMRCD[KO0EWSB1] cursor, bold;
      KO0EW01.KO0EWMNO = 181;
    else
      if (KO0EW02.KO0EWBMO[KO0EWSB2] == KO0EW01.KO0EWBMO
       && KO0EW02.KO0EWRPC[KO0EWSB2] == KO0EM005.KO0EMRPC[KO0EWSB1]
       && KO0EW02.KO0EWAPC[KO0EWSB2] == KO0EM005.KO0EMAPC[KO0EWSB1]
       && KO0EW02.KO0EWXMO[KO0EWSB2] == KO0EW01.KO0EWXMO
       && KO0EM005.KO0EMRCD[KO0EWSB1] != " ")
        set KO0EM005.KO0EMRCD[KO0EWSB1] cursor, bold;
        KO0EW01.KO0EWMNO = 68;
      else
        if (KO0EW02.KO0EWBMO[KO0EWSB2] == KO0EW01.KO0EWBMO)
          if (KO0EW02.KO0EWRPC[KO0EWSB2] != KO0EM005.KO0EMRPC[KO0EWSB1]
           || KO0EW02.KO0EWAPC[KO0EWSB2] != KO0EM005.KO0EMAPC[KO0EWSB1]
           || KO0EW02.KO0EWXMO[KO0EWSB2] != KO0EW01.KO0EWXMO)
            if (KO0EM005.KO0EMRPC[KO0EWSB1] == 0
             && KO0EM005.KO0EMAPC[KO0EWSB1] == 0
             && KO0EM005.KO0EMBMO[KO0EWSB1] == " "
             && KO0EM005.KO0EMXMO[KO0EWSB1] == " "
             && KO0EM005.KO0EMRCD[KO0EWSB1] != "EA"
             && KO0EM005.KO0EMRCD[KO0EWSB1] != "EB")
              set KO0EM005.KO0EMRCD[KO0EWSB1] cursor, bold;
              KO0EW01.KO0EWMNO = 181;
            else
              if (KO0EM005.KO0EMRPC[KO0EWSB1] != 0
               || KO0EM005.KO0EMAPC[KO0EWSB1] != 0
               || KO0EM005.KO0EMBMO[KO0EWSB1] != " "
               || KO0EM005.KO0EMXMO[KO0EWSB1] != " ")
                if (KO0EM005.KO0EMRCD[KO0EWSB1] != "CH")
                  set KO0EM005.KO0EMRCD[KO0EWSB1] cursor, bold;
                  KO0EW01.KO0EWMNO = 182;
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEK

// edit date range
Function KO0ESEL()
  ;
  ;
  if (KO0EM005.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end date*/
    KO0ESEM(); /* ; edit end date*/
  end
  ;
  if (KO0EM005.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin date*/
    KO0ESEN(); /* ; edit begin date*/
  end
  ;
  if (KO0EM005.KO0EMBMO[KO0EWSB1] != " " /* ; map has begin date*/
   && KO0EM005.KO0EMXMO[KO0EWSB1] != " " /* ; map has end date*/
   && KO0EW01.KO0EWBMO > KO0EW01.KO0EWXMO)
    set KO0EM005.KO0EMBMO[KO0EWSB1] cursor, bold;
    set KO0EM005.KO0EMXMO[KO0EWSB1] bold;
    KO0EW01.KO0EWMNO = 184;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEL

// edit termination date
Function KO0ESEM()
  ;
  ;
  set TA2REC empty;
  ;
  KO0EW01.KO0EWDTB = KO0EW01.KO0EWXMO; /* ; build work date b*/
  KO0EW01.KO0EWCCD = KO0EW01.KO0EWCCB; /* ; build work date d - cc*/
  KO0EW01.KO0EWYYD = KO0EW01.KO0EWYYB; /* ; build work date d - yy*/
  KO0EW01.KO0EWMMD = KO0EW01.KO0EWMMB; /* ; build work date d - mm*/
  KO0EW01.KO0EWDDD = 1; /* ; build work date d - dd*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = KO0EW01.KO0EWDTD;
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* ; validate date*/
  ;
  if (TA2REC.TA2RTNCD != 0) /* ; invalid date*/
    set KO0EM005.KO0EMXMO[KO0EWSB1] cursor, bold;
    KO0EW01.KO0EWMNO = 183;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEM

// edit effective date
Function KO0ESEN()
  ;
  ;
  set TA2REC empty;
  ;
  KO0EW01.KO0EWDTB = KO0EW01.KO0EWBMO; /* ; build work date b*/
  KO0EW01.KO0EWCCD = KO0EW01.KO0EWCCB; /* ; build work date d - cc*/
  KO0EW01.KO0EWYYD = KO0EW01.KO0EWYYB; /* ; build work date d - yy*/
  KO0EW01.KO0EWMMD = KO0EW01.KO0EWMMB; /* ; build work date d - mm*/
  KO0EW01.KO0EWDDD = 1; /* ; build work date d - dd*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = KO0EW01.KO0EWDTD;
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* ; validate date*/
  ;
  if (TA2REC.TA2RTNCD != 0) /* ; invalid date*/
    set KO0EM005.KO0EMBMO[KO0EWSB1] cursor, bold;
    KO0EW01.KO0EWMNO = 183;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEN

// edit splits
Function KO0ESEO()
  ;
  ;
  if (KO0EW02.KO0EWOPT[KO0EWSB2] != "D" /* ; option not delete*/
   || KO0EW01.KO0EWPCT != 0)            /* ; total pct not = 0*/
    if (KO0EW01.KO0EWPCT != 100) /* ; total pct not = 100*/
      set KO0EM005.KO0EMRPC[KO0EWSB1] cursor, bold;
      set KO0EM005.KO0EMAPC[KO0EWSB1] bold;
      KO0EW01.KO0EWMNO = 165;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEO

// edit gpc code
Function KO0ESEP()
  ;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] != " "    /* ; gpc code in array*/
   && KO0EM005.XGPCD[KO0EWSB1] != " "   /* ; map has gpc code*/
   && KO0EM005.XGPDESC[KO0EWSB1] == " " /* ; no map gpc desc*/
   && KO0EW02.KO0EWOPT[KO0EWSB2] != "D") /* ; option not delete*/
    set KO0EM005.XGPCD[KO0EWSB1] bold;
    set KO0EM005.KO0EMRPC[KO0EWSB1] cursor, bold;
    set KO0EM005.KO0EMAPC[KO0EWSB1] bold;
    set KO0EM005.KO0EMBMO[KO0EWSB1] bold;
    set KO0EM005.KO0EMXMO[KO0EWSB1] bold;
    KO0EW01.KO0EWMNO = 170;
  else
    if (KO0EW02.XGPCD[KO0EWSB2] == " ") /* ; no array gpc code*/
      if (KO0EM005.XGPCD[KO0EWSB1] == " ") /* ; no map gpc code*/
        set KO0EM005.XGPCD[KO0EWSB1] cursor, bold;
        KO0EW01.KO0EWMNO = 38;
      else
        if (KO0EM005.XGPDESC[KO0EWSB1] == " ") /* ; no map gpc desc*/
          set KO0EM005.XGPCD[KO0EWSB1] cursor, bold;
          KO0EW01.KO0EWMNO = 173;
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEP

// edit key
Function KO0ESEQ()
  ;
  ;
  if (KO0EW02.KO0EWOPT[KO0EWSB2] != " " /* ; array has option*/
   && KO0EW02.KO0EWOPT[KO0EWSB2] != "D") /* ; option not delete*/
    ;
    KO0ESER(); /* ; build map dates*/
    ;
    KO0EW01.KO0EWEF1 = "N"; /* ; reset error flag*/
    KO0EW01.KO0EWSB3 = 1; /* ; reset subscript*/
    while (KO0EW01.KO0EWEF1 == "N" /* ; until error flag = 'y'*/
     && KO0EW01.KO0EWSB3 <= 10) /* ; until end of map*/
      KO0ESES(); /* ; compare map keys*/
    end
    ;
    if (KO0EW01.KO0EWEF1 == "N") /* ; error flag = 'n'*/
      KO0ESEU(); /* ; compare array keys*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEQ

// build map dates
Function KO0ESER()
  ;
  ;
  if (KO0EM005.KO0EMBMO[KO0EWSB1] == " ")
    KO0EW01.KO0EWBMA = 0;
  else
    KO0EW01.KO0EWDT1 = KO0EM005.KO0EMBMO[KO0EWSB1];
    /* ---------- Y2K OUT BEGIN ---------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ---------- Y2K OUT END -----------*/
    /* ---------- Y2K IN  BEGIN ---------*/
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ---------- Y2K IN END ------------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWBMA = KO0EW01.KO0EWDTB;
  end
  ;
   /* ---------- Y2K OUT BEGIN ---------*/
   /* IF KO0EM005.KO0EMXMO(KO0EWSB1) EQ ' ';*/
    /* MOVE 199999 TO KO0EW01.KO0EWXMA;*/
   /* ELSE;*/
    /* MOVE KO0EM005.KO0EMXMO(KO0EWSB1) TO KO0EW01.KO0EWDT1;*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* MOVE KO0EW01.KO0EWYY1 TO KO0EW01.KO0EWYYB;*/
    /* MOVE KO0EW01.KO0EWMM1 TO KO0EW01.KO0EWMMB;*/
    /* MOVE KO0EW01.KO0EWDTB TO KO0EW01.KO0EWXMA;*/
   /* END;*/
   /* ---------- Y2K OUT END -----------*/
  ;
   /* ---------- Y2K IN  BEGIN ---------*/
  if (KO0EM005.KO0EMXMO[KO0EWSB1] == " ")
    KO0EW01.KO0EWXMA = 204399;
      /* (MAX HIGH DATE TO USE IF MAPPER NEEDS IT)*/
  else
    KO0EW01.KO0EWDT1 = KO0EM005.KO0EMXMO[KO0EWSB1];
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWXMA = KO0EW01.KO0EWDTB;
  end
   /* ---------- Y2K IN  END -----------*/
  ;
   /* *************************************************************/
  ;
end // end KO0ESER

// compare to map keys
Function KO0ESES()
  ;
  ;
  if (KO0EM005.XGPCD[KO0EWSB3] == KO0EM005.XGPCD[KO0EWSB1]
   && KO0EW01.KO0EWSB3 != KO0EW01.KO0EWSB1)
    if (KO0EM005.KO0EMRPC[KO0EWSB3] != 0
     || KO0EM005.KO0EMAPC[KO0EWSB3] != 0
     || KO0EM005.KO0EMBMO[KO0EWSB3] != " "
     || KO0EM005.KO0EMXMO[KO0EWSB3] != " ")
      KO0ESET(); /* ; compare map dates*/
    end
  end
  ;
  KO0EW01.KO0EWSB3 = KO0EW01.KO0EWSB3 + 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESES

// compare to map dates
Function KO0ESET()
  ;
  ;
  if (KO0EM005.KO0EMBMO[KO0EWSB3] == " ")
    KO0EW01.KO0EWBMB = 0;
  else
    KO0EW01.KO0EWDT1 = KO0EM005.KO0EMBMO[KO0EWSB3];
    ;
    /* ------- Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ------- Y2K OUT END ---------*/
    /* ------- Y2K IN  BEGIN -------*/
    ;
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------- Y2K IN END ----------*/
    ;
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWBMB = KO0EW01.KO0EWDTB;
  end
  ;
   /* ------- Y2K OUT BEGIN -------*/
   /* IF KO0EM005.KO0EMXMO(KO0EWSB3) EQ ' ';*/
    /* MOVE 199999 TO KO0EW01.KO0EWXMB;*/
   /* ELSE;*/
    /* MOVE KO0EM005.KO0EMXMO(KO0EWSB3) TO KO0EW01.KO0EWDT1;*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* MOVE KO0EW01.KO0EWYY1 TO KO0EW01.KO0EWYYB;*/
    /* MOVE KO0EW01.KO0EWMM1 TO KO0EW01.KO0EWMMB;*/
    /* MOVE KO0EW01.KO0EWDTB TO KO0EW01.KO0EWXMB;*/
   /* END;*/
   /* ------- Y2K OUT END ---------*/
  ;
   /* ------- Y2K IN  BEGIN -------*/
  if (KO0EM005.KO0EMXMO[KO0EWSB3] == " ")
    KO0EW01.KO0EWXMB = 204399;
    /* (JUST A DATE HIGH ENOUGH THAT MAPPER CAN HANDLE IF NEEDED)*/
  else
    KO0EW01.KO0EWDT1 = KO0EM005.KO0EMXMO[KO0EWSB3];
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWXMB = KO0EW01.KO0EWDTB;
  end
   /* ------- Y2K IN END ----------*/
  ;
  if (KO0EW01.KO0EWBMA < KO0EW01.KO0EWBMB
   && KO0EW01.KO0EWXMA < KO0EW01.KO0EWBMB)
    return;
  else
    if (KO0EW01.KO0EWBMA > KO0EW01.KO0EWBMB
     && KO0EW01.KO0EWBMA > KO0EW01.KO0EWXMB)
      return;
    else
      set KO0EM005.KO0EMBMO[KO0EWSB1] cursor, bold;
      set KO0EM005.KO0EMXMO[KO0EWSB1] bold;
      KO0EW01.KO0EWMNO = 180;
      KO0EW01.KO0EWEF1 = "Y";
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESET

// compare record keys
Function KO0ESEU()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM005.SM1AGYID;
  KOEREC.SM4REPID = KO0EM005.SM4REPID;
  KOEREC.XGPCD = KO0EM005.XGPCD[KO0EWSB1];
  ;
  call "IO0700" ("SS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; successful return*/
    ;
    while (SQLCA.VAGen_SQLCODE == 0) /* ; until unsuccessful rtn*/
      KO0ESEV(); /* ; fetch next record*/
    end
    ;
    call "IO0700" ("CS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
    ;
  else
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESEU";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* abort*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEU

// fetch next koerec
Function KO0ESEV()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  call "IO0700" ("SN", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; fetch was successful*/
    ;
    if (KOEREC.KUCCOID == -1 /* ; rec for all custs*/
     && KOEREC.XDVCD == "**" /* ; rec for all divs*/
     && KOEREC.XOBCD == "**") /* ; rec for all bots*/
      KO0ESEW(); /* ; compare koerec dates*/
    end
    ;
  else
    if (SQLCA.VAGen_SQLCODE != 100) /* ; at end of recs*/
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESEV";
      TA1REC.TA1LOCAT[2] = "IO0700";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEV

// compare to record dates
Function KO0ESEW()
  ;
  ;
  KO0EW01.KO0EWEF2 = "N"; /* ; reset error flag 2*/
  KO0EW01.KO0EWSB2 = 1; /* ; reset subscript*/
  ;
  while (KO0EW01.KO0EWEF2 == "N"
   /* ; until error flag 2 = 'y'*/
   && KO0EW01.KO0EWSB2 <= 10) /* ; or end of map*/
    KO0EW01.KO0EWSB3 = KO0EW01.KO0EWSB2 + KO0EW02.KO0EWPOS;
    if (KOEREC.XGPCD == KO0EW02.XGPCD[KO0EWSB3]
     && KOEREC.KUCCOID == KO0EW02.KUCCOID[KO0EWSB3]
     && KOEREC.XDVCD == KO0EW02.XDVCD[KO0EWSB3]
     && KOEREC.XOBCD == KO0EW02.XOBCD[KO0EWSB3]
     && KOEREC.KOEASBMO == KO0EW02.KO0EWBMO[KO0EWSB3])
      KO0EW01.KO0EWEF2 = "Y"; /* ; set error flag 2*/
    else
      KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB2 + 1;
    end
  end
  ;
  if (KO0EW01.KO0EWEF2 == "N") /* ; record is not on map*/
    ;
    KO0EW01.KO0EWBMB = KOEREC.KOEASBMO;
    ;
   /* ---------- Y2K OUT BEGIN -------*/
   /* IF KOEREC.KOEASXMO EQ 0;*/
     /* MOVE 199999 TO KO0EW01.KO0EWXMB;*/
   /* ELSE;*/
     /* MOVE KOEREC.KOEASXMO TO KO0EW01.KO0EWXMB;*/
   /* END;*/
   /* ---------- Y2K OUT END ---------*/
    ;
   /* ---------- Y2K IN  BEGIN -------*/
    if (KOEREC.KOEASXMO == 0)
      KO0EW01.KO0EWXMB = 204399;
   /* (JUST A DATE HIGH ENOUGH THAT MAPPER CAN HANDLE IF NEEDED)*/
    else
      KO0EW01.KO0EWXMB = KOEREC.KOEASXMO;
    end
   /* ---------- Y2K IN  END ---------*/
    ;
    if (KO0EW01.KO0EWBMA < KO0EW01.KO0EWBMB
     && KO0EW01.KO0EWXMA < KO0EW01.KO0EWBMB)
      return;
    else
      if (KO0EW01.KO0EWBMA > KO0EW01.KO0EWBMB
       && KO0EW01.KO0EWBMA > KO0EW01.KO0EWXMB)
        return;
      else
        set KO0EM005.KO0EMBMO[KO0EWSB1] cursor, bold;
        set KO0EM005.KO0EMXMO[KO0EWSB1] bold;
        KO0EW01.KO0EWMNO = 180;
        KO0EW01.KO0EWEF1 = "Y";
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEW

// update sched recs
Function KO0ESEX()
  ;
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "KO0ESEX";
    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    COMMAREA.CATOAP = "KO0A";
    XSEXIT();
    exit program;
  end
  ;
  KO0EW01.KO0EWSB1 = 10; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map*/
    ;
    KO0ESEY(); /* ; build work fields*/
    ;
    KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
    ;
    if (KO0EM005.XGPCD[KO0EWSB1] != KO0EW02.XGPCD[KO0EWSB2]
     || KO0EM005.KO0EMRPC[KO0EWSB1] != KO0EW02.KO0EWRPC[KO0EWSB2]
     || KO0EM005.KO0EMAPC[KO0EWSB1] != KO0EW02.KO0EWAPC[KO0EWSB2]
     || KO0EW01.KO0EWBMO != KO0EW02.KO0EWBMO[KO0EWSB2]
     || KO0EW01.KO0EWXMO != KO0EW02.KO0EWXMO[KO0EWSB2])
      ;
      if (KO0EW02.KO0EWOPT[KO0EWSB2] == "D"   /* ; option = 'delete'*/
       || KO0EM005.KO0EMRCD[KO0EWSB1] == "EA" /* ; maint code = 'ea'*/
       || KO0EM005.KO0EMRCD[KO0EWSB1] == "EB" /* ; maint code = 'eb'*/
       || KO0EM005.KO0EMRPC[KO0EWSB1] == 100) /* ; map rep pct = 100*/
        if (KO0EW02.ZZZSDT[KO0EWSB2] != 0) /* ; row has setup date*/
          KO0ESEZ(); /* ; delete sched row*/
        end
      end
      ;
      if (KO0EW02.KO0EWOPT[KO0EWSB2] == "A"   /* ; option = 'add'*/
       || KO0EM005.KO0EMRCD[KO0EWSB1] == "EA" /* ; maint code = 'ea'*/
       || KO0EM005.KO0EMRCD[KO0EWSB1] == "EB" /* ; maint code = 'eb'*/
       || KO0EW02.ZZZSDT[KO0EWSB2] == 0)      /* ; row has no setup date*/
        if (KO0EM005.KO0EMRPC[KO0EWSB1] != 100 /* ; map rep pct not = 100*/
         && KO0EW01.KO0EWPCT != 0)             /* ; total pct not = 0*/
          KO0ESE0(); /* ; add sched row*/
        end
      end
      ;
      if (KO0EM005.KO0EMRCD[KO0EWSB1] == "CH" /* ; maint code = 'ch'*/
       || KO0EW02.KO0EWOPT[KO0EWSB2] == "C")  /* ; option = 'change'*/
        if (KO0EM005.KO0EMRPC[KO0EWSB1] != 100 /* ; map rep pct not = 100*/
         && KO0EW02.KO0EWRPC[KO0EWSB2] != 100) /* ; rep pct not = 100*/
          KO0ESE1(); /* ; update sched row*/
        end
      end
      ;
      KO0ESE2(); /* ; write audit recs*/
      KO0ESE3(); /* ; update array*/
      ;
    end
    ;
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1; /* ; increment subscript*/
    ;
  end
  ;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* ; commit db changes*/
  ;
  KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  KO0EW01.KO0EWNAF = "Y"; /* ; set new array flag*/
  KO0EW01.KO0EWMNO = 80; /* ; set w.s. mssg nbr*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEX

// build work dates
Function KO0ESEY()
  ;
  ;
  KO0EW01.KO0EWPCT = 0;
  KO0EW01.KO0EWBMO = 0;
  KO0EW01.KO0EWXMO = 0;
  ;
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM005.KO0EMRPC[KO0EWSB1];
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM005.KO0EMAPC[KO0EWSB1];
  ;
  if (KO0EM005.KO0EMBMO[KO0EWSB1] != " ")
    KO0EW01.KO0EWDTA = KO0EM005.KO0EMBMO[KO0EWSB1];
    /* ------- Y2K OUT BEGIN ------*/
    KO0EW01.KO0EWCCB = 19;
    /* ------- Y2K OUT END --------*/
    /* ------- Y2K IN  BEGIN ------*/
    if (KO0EW01.KO0EWYYA > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------- Y2K IN END ---------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB;
  end
  ;
  if (KO0EM005.KO0EMXMO[KO0EWSB1] != " ")
    KO0EW01.KO0EWDTA = KO0EM005.KO0EMXMO[KO0EWSB1];
    /* ------- Y2K OUT BEGIN ------*/
    KO0EW01.KO0EWCCB = 19;
    /* ------- Y2K OUT END --------*/
    /* ------- Y2K IN  BEGIN ------*/
    if (KO0EW01.KO0EWYYA > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------- Y2K IN END ---------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEY

// delete sched row
Function KO0ESEZ()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM005.SM1AGYID;
  KOEREC.SM4REPID = KO0EM005.SM4REPID;
  KOEREC.XGPCD = KO0EW02.XGPCD[KO0EWSB2];
  KOEREC.KUCCOID = -1;
  KOEREC.XDVCD = "**";
  KOEREC.XOBCD = "**";
  KOEREC.KOEASBMO = KO0EW02.KO0EWBMO[KO0EWSB2];
  ;
  call "IO0700" ("D ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; delete unsuccessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESEZ";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* ; abort*/
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = "D";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESEZ

// build new key
Function KO0ESFA()
  ;
  ;
  KO0ESFB(); /* ; reset w.s. fields*/
  ;
  if (KO0EW01.KO0EWEKF == "Y") /* ; edit key flag = 'y'*/
    KO0EW01.KO0EWEKF = "N"; /* ; reset edit key flag*/
    KO0ESFC(); /* ; edit key data*/
  end
  ;
  ;
   /* *************************************************************/
end // end KO0ESFA

// reset w.s. fields
Function KO0ESFB()
  ;
  ;
  KO0EW01.KO0EWKEF = "N"; /* ; set key error flag*/
  KO0EW01.KO0EWKWF = "N"; /* ; set key warning flag*/
  KO0EW01.KO0EWSFF = "N"; /* ; set sched found flag*/
  KO0EW01.KO0EWSAF = "N"; /* ; set scroll allowed flag*/
  KO0EW01.KO0EWEAF = "N"; /* ; set edit allowed flag*/
  KO0EW01.KO0EWDAF = "N"; /* ; set delete allowed flag*/
  KO0EW01.SM1AGYNM = " "; /* ; set w.s. agcy name*/
  KO0EW01.XXXLSTNM = " "; /* ; set w.s. rep last name*/
  KO0EW01.XXXFSTNM = " "; /* ; set w.s. rep first name*/
  KO0EW01.XXXMDINT = " "; /* ; set w.s. rep mid init*/
  KO0EW01.XGPDESC = " "; /* ; set w.s. gpc desc*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFB

// edit key data
Function KO0ESFC()
  ;
  ;
  if (KO0EW01.XGPCD != " ") /* ; edit gpc*/
    KO0ESFD(); /* ; edit gpc code*/
  else
    set KO0EM010.XGPCD cursor, bold; /* ; highlight gpc*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 38; /* ; required field*/
  end
  ;
  if (KO0EW01.SM4REPID != 0) /* ; user entered rep id*/
    KO0ESFE(); /* ; edit rep id*/
  else
    set KO0EM010.SM4REPID cursor, bold; /* ; highlight rep id*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 38; /* ; required field*/
  end
  ;
  if (KO0EW01.SM1AGYID != " ") /* ; user entered agcy id*/
    KO0ESFH(); /* ; edit agcy id*/
  else
    set KO0EM010.SM1AGYID cursor, bold; /* ; highlight agcy id*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 38; /* ; required field*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFC

// edit gpc
Function KO0ESFD()
  ;
  ;
  if (KO0EW01.XGPCD in XGPTBL.XGPCD) /* ; gpc code in table*/
    KO0EW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] != "A") /* ; gpc status not active*/
      set KO0EM010.XGPCD cursor, bold; /* ; highlight gpc*/
      KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
      KO0EW01.KO0EWMNO = 92; /* ; set w.s. error nbr*/
    else
      if (XGPTBL.COCMFL[sysVar.arrayIndex] != "Y") /* ; gpc is non-comm*/
        set KO0EM010.XGPCD cursor, bold; /* ; highlight gpc*/
        KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
        KO0EW01.KO0EWMNO = 169; /* ; set w.s. error nbr*/
      end
    end
  else
    set KO0EM010.XGPCD cursor, bold; /* ; highlight gpc*/
    KO0EW01.XGPDESC = " "; /* ;reset w.s. gpc desc*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 173; /* ; set w.s. error nbr*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFD

// edit rep
Function KO0ESFE()
  ;
  ;
  set SQLCA empty;
  set VRAGCY02 empty;
  ;
  VRAGCY02.SM1AGYID = KO0EW01.SM1AGYID;
  VRAGCY02.SM4REPID = KO0EW01.SM4REPID;
  call "IO0400" ("S3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; sucessful open*/
    KO0ESFF(); /* ; fetch rep rec*/
  else
    KO0EW01.KO0EWKEF = "Y"; /* ; set key err flag*/
    TA1REC.TA1DBASE = "DSLSMN";
    TA1REC.TA1TBLVU = "VRAGCY02";
    TA1REC.TA1LOCAT[1] = "KO0ESFE";
    TA1REC.TA1LOCAT[2] = "IO0400";
    XSKO001(); /* ; abort*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFE

// fetch sm5rec
Function KO0ESFF()
  ;
  ;
  set SQLCA empty;
  ;
  call "IO0400" ("N3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; successful fetch*/
    KO0ESFG(); /* ; edit com rate ind*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* ; rec not found*/
      set KO0EM010.SM4REPID cursor, bold;
      set KO0EM010.SM1AGYID bold;
      KO0EW01.KO0EWKEF = "Y";
      KO0EW01.KO0EWMNO = 6;
    else
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VRAGCY02";
      TA1REC.TA1LOCAT[1] = "KO0ESFF";
      TA1REC.TA1LOCAT[2] = "IO0400";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFF

// validate comm rate/status
Function KO0ESFG()
  ;
  ;
  KO0EW01.XXXFSTNM = VRAGCY02.XXXFSTNM;
  KO0EW01.XXXLSTNM = VRAGCY02.XXXLSTNM;
  KO0EW01.XXXMDINT = VRAGCY02.XXXMDINT;
  ;
  if (VRAGCY02.SM5COMIN != "Y") /* ; comm rate ind not 'y'*/
    set KO0EM010.SM4REPID cursor, bold; /* ; highlight rep*/
    set KO0EM010.SM1AGYID bold; /* ; highlight agcy*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 162; /* ; set error message*/
  else
    if (VRAGCY02.XXXSTAT != "A") /* ; status not 'a'*/
      KO0EW01.KO0EWKWF = "Y"; /* ; set key warning flag*/
      KO0EW01.KO0EWMNO = 202;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFG

// edit agcy
Function KO0ESFH()
  ;
  ;
  set SQLCA empty;
  set SM1REC empty;
  ;
  SM1REC.SM1AGYID = KO0EW01.SM1AGYID;
  ;
  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    KO0ESFI(); /* ; edit pay code/status*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set KO0EM010.SM1AGYID cursor, bold;
      KO0EW01.KO0EWKEF = "Y";
      KO0EW01.KO0EWMNO = 4;
    else
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VSAGCY01";
      TA1REC.TA1LOCAT[1] = "KO0ESFH";
      TA1REC.TA1LOCAT[2] = "IO0050";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFH

// edit pay code/status
Function KO0ESFI()
  ;
  ;
  KO0EW01.SM1AGYNM = SM1REC.SM1AGYNM;
  ;
  if (SM1REC.SM1PAYCD != "NP") /* ; pay code not 'np'*/
    set KO0EM010.SM1AGYID cursor, bold; /* ; highlight agcy*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 168; /* ; set error message*/
  else
    if (SM1REC.SM1STAT != "A") /* ; status not 'a'*/
      KO0EW01.KO0EWKWF = "Y"; /* ; set key warning flag*/
      KO0EW01.KO0EWMNO = 203;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFI

// get split sched
Function KO0ESFJ()
  ;
  ;
  set KO0EW02 empty; /* ; reset split sched array*/
  ;
  KO0EW01.KO0EWBMO = 0; /* ; set w.s. begin month*/
  KO0EW01.KO0EWXMO = 0; /* ; set w.s. end month*/
  ;
  if (KO0EW01.SM1AGYID != "    "
   && KO0EW01.SM4REPID != 0
   && KO0EW01.XGPCD != " ")
    ;
    set SQLCA empty;
    set KOEREC empty;
    ;
    KOEREC.SM1AGYID = KO0EW01.SM1AGYID;
    KOEREC.SM4REPID = KO0EW01.SM4REPID;
    KOEREC.XGPCD = KO0EW01.XGPCD;
    KO0EW02.KO0EWTOT = 1;
    ;
    call "IO0700" ("SS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      ;
      while (SQLCA.VAGen_SQLCODE == 0
       && KO0EW02.KO0EWTOT < 100)
        KO0ESFK();
      end
      ;
      call "IO0700" ("CS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
      ;
    else
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESFJ";
      TA1REC.TA1LOCAT[2] = "IO0700";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency*/
   && KO0EW01.SM4REPID != 0   /* ; map has rep*/
   && KO0EW01.XGPCD != " ")   /* ; map has gpc*/
    KO0EM010.KO0EMMM1 = KO0EW02.KO0EWTTL;
    set KO0EM010.KO0EMMM1 initialAttributes;
    set KO0EM010.KO0EMMM2 initialAttributes;
  else
    set KO0EM010.KO0EMMM1 skip, invisible;
    set KO0EM010.KO0EMMM2 skip, invisible;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFJ

// process koerec
Function KO0ESFK()
  ;
  ;
  KO0EW01.KO0EWEF1 = "N"; /* ; set error flag 1*/
  while (KO0EW01.KO0EWEF1 == "N") /* ; until error flag = 'y'*/
    KO0ESFL(); /* ; fetch next koerec*/
  end
  ;
  if (KO0EW01.KO0EWKEF == "N") /* ; no key errors*/
    if (KO0EW01.KO0EWSFF == "Y" /* ; split sched was found*/
     || KO0EW01.KO0EWKWF == "N") /* ; no key warnings*/
      KO0ESFN(); /* ; move xgptbl to array*/
    end
  end
  ;
  KO0ESFO(); /* ; move koerec to array*/
  KO0ESFP(); /* ; set next end month*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFK

// fetch next koerec
Function KO0ESFL()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  call "IO0700" ("SN", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* ; fetch was successful*/
   && KOEREC.KUCCOID == -1     /* ; rec for all customers*/
   && KOEREC.XDVCD == "**"     /* ;            ; rec for all divisions*/
   && KOEREC.XOBCD == "**")    /* ; rec for all bots*/
    KO0EW01.KO0EWEF1 = "Y"; /* ; set error flag #1*/
    KO0EW01.KO0EWSFF = "Y"; /* ; set sched found flag*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* ; at end of recs*/
      KOEREC.XGPCD = "99"; /* ; set rec xgp code*/
      KOEREC.KOEASXMO = -1; /* ; set rec end date*/
      KO0EW01.KO0EWEF1 = "Y"; /* ; set error flag #1*/
    end
  end
  ;
  KO0ESFM(); /* ; set next begin month*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFL

// set next begin month
Function KO0ESFM()
  ;
  ;
  if (KOEREC.XGPCD == "99"                /* ; invalid xgp code*/
   || KOEREC.KOEASXMO >= KO0EW01.KO0EWNSM /* ; end mo > next stmt*/
   || KOEREC.KOEASXMO == 0)               /* ; end mo = 0*/
    KO0EW01.KO0EWBMO = 0; /* ; set next begin month*/
  else
    ;
    KO0EW01.KO0EWDTB = KOEREC.KOEASXMO; /* ; set work date b*/
    ;
    if (KO0EW01.KO0EWMMB < 12) /* ; work date b < 12*/
      KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMB + 1; /* ; increment month*/
    else
      if (KO0EW01.KO0EWYYB < 99) /* ; work date b < 99*/
        KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYB + 1; /* increment year*/
        KO0EW01.KO0EWMMB = 01; /* ; set month*/
      else
        KO0EW01.KO0EWCCB = KO0EW01.KO0EWCCB + 1; /* increment century*/
        KO0EW01.KO0EWYYB = 00; /* ; set year*/
        KO0EW01.KO0EWMMB = 01; /* ; set month*/
      end
    end
    ;
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB; /* ; set next begin month*/
    ;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFM

// move xgptbl to array
Function KO0ESFN()
  ;
  ;
  if (KO0EW01.KO0EWBMO > KOEREC.KOEASXMO /* ; begin mo > rec end mo*/
   && KO0EW01.KO0EWXMO >= 0              /* ; end mo >= 0*/
   && KO0EW02.KO0EWTOT < 100)            /* ; array not full*/
    ;
    if (KO0EW01.KO0EWXMO >= KO0EW01.KO0EWBMO /* ; end mo > begin mo*/
     || KO0EW01.KO0EWXMO == 0)               /* ; end month = 0*/
      ;
      KO0EW02.KO0EWTOT = KO0EW02.KO0EWTOT + 1; /* ; increment array total*/
      KO0EW02.KO0EWTTL = KO0EW02.KO0EWTTL + 1; /* ; increment rec total*/
      ;
      KO0EW02.XGPCD[KO0EWTOT] = KO0EW01.XGPCD;
      KO0EW02.KUCCOID[KO0EWTOT] = -1;
      KO0EW02.XDVCD[KO0EWTOT] = "**";
      KO0EW02.XOBCD[KO0EWTOT] = "**";
      KO0EW02.KO0EWRPC[KO0EWTOT] = 100;
      KO0EW02.KO0EWAPC[KO0EWTOT] = 0;
      KO0EW02.KO0EWBMO[KO0EWTOT] = KO0EW01.KO0EWBMO;
      KO0EW02.KO0EWXMO[KO0EWTOT] = KO0EW01.KO0EWXMO;
      KO0EW02.ZZZSDT[KO0EWTOT] = 0;
      KO0EW02.ZZZCHGCT[KO0EWTOT] = 0;
      ;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFN

// move koerec to array
Function KO0ESFO()
  ;
  ;
  if (KOEREC.XGPCD != "99")
    if (KO0EW02.KO0EWTOT < 100)
      KO0EW02.KO0EWTOT = KO0EW02.KO0EWTOT + 1;
      KO0EW02.KO0EWTTL = KO0EW02.KO0EWTTL + 1;
      KO0EW02.XGPCD[KO0EWTOT] = KOEREC.XGPCD;
      KO0EW02.KUCCOID[KO0EWTOT] = KOEREC.KUCCOID;
      KO0EW02.XDVCD[KO0EWTOT] = KOEREC.XDVCD;
      KO0EW02.XOBCD[KO0EWTOT] = KOEREC.XOBCD;
      KO0EW02.KO0EWRPC[KO0EWTOT] = 100 - KOEREC.KOEASPCT;
      KO0EW02.KO0EWAPC[KO0EWTOT] = 0 + KOEREC.KOEASPCT;
      KO0EW02.KO0EWBMO[KO0EWTOT] = KOEREC.KOEASBMO;
      KO0EW02.KO0EWXMO[KO0EWTOT] = KOEREC.KOEASXMO;
      KO0EW02.ZZZSDT[KO0EWTOT] = KOEREC.ZZZSDT;
      KO0EW02.ZZZCHGCT[KO0EWTOT] = KOEREC.ZZZCHGCT;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFO

// set next end month
Function KO0ESFP()
  ;
  ;
  if (KOEREC.KOEASBMO == 0) /* ; rec begin mo = 0*/
    KO0EW01.KO0EWXMO = -1; /* ; set next end month*/
  else
    ;
    KO0EW01.KO0EWDTB = KOEREC.KOEASBMO; /* ; set work date b*/
    ;
    if (KO0EW01.KO0EWMMB > 1) /* ; work date b > 1*/
      KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMB - 1; /* ; decrement month*/
    else
      if (KO0EW01.KO0EWYYB > 00) /* ; work date b > 0*/
        KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYB - 1; /* decrement year*/
        KO0EW01.KO0EWMMB = 12; /* ; set month*/
      else
        KO0EW01.KO0EWCCB = KO0EW01.KO0EWCCB - 1; /* decrement century*/
        KO0EW01.KO0EWYYB = 99; /* ; set year*/
        KO0EW01.KO0EWMMB = 12; /* ; set month*/
      end
    end
    ;
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB; /* set next end month*/
    ;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFP

// move split sched to screen
Function KO0ESFQ()
  ;
  ;
  KO0EW01.KO0EWSB1 = 10; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map sched*/
    KO0ESFR(); /* ; move row to row*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFQ

// move sched row to map row
Function KO0ESFR()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  KO0EM010.KO0EMRPC[KO0EWSB1] = KO0EW02.KO0EWRPC[KO0EWSB2];
  KO0EM010.KO0EMAPC[KO0EWSB1] = KO0EW02.KO0EWAPC[KO0EWSB2];
  ;
  if (KO0EW02.KO0EWBMO[KO0EWSB2] == 0)
    KO0EM010.KO0EMBMO[KO0EWSB1] = " ";
  else
    KO0EW01.KO0EWDTB = KO0EW02.KO0EWBMO[KO0EWSB2];
    KO0EW01.KO0EWYYA = KO0EW01.KO0EWYYB;
    KO0EW01.KO0EWMMA = KO0EW01.KO0EWMMB;
    KO0EW01.KO0EWFLA = "/";
    KO0EM010.KO0EMBMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
  end
  ;
  if (KO0EW02.KO0EWXMO[KO0EWSB2] == 0)
    KO0EM010.KO0EMXMO[KO0EWSB1] = " ";
  else
    KO0EW01.KO0EWDTB = KO0EW02.KO0EWXMO[KO0EWSB2];
    KO0EW01.KO0EWYYA = KO0EW01.KO0EWYYB;
    KO0EW01.KO0EWMMA = KO0EW01.KO0EWMMB;
    KO0EW01.KO0EWFLA = "/";
    KO0EM010.KO0EMXMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
  end
  ;
  KO0EM010.KO0EMRCD[KO0EWSB1] = " ";
  ;
  KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFR

// set pfkey attributes
Function KO0ESFS()
  ;
  ;
  if (KO0EW01.SM1AGYID == " " /* ; no map agency id*/
   && KO0EW01.SM4REPID == 0   /* ; no map rep id*/
   && KO0EW01.XGPCD == " ")   /* ; no map gpc*/
    KO0EW01.KO0EWSAF = "N"; /* ; scroll allowed = n*/
    set KO0EM010.KO0EMP07 skip, invisible;
    set KO0EM010.KO0EMP08 skip, invisible;
  else
    if (KO0EW01.KO0EWKEF == "Y" /* ; key errors exist*/
     && KO0EW01.KO0EWSFF == "N") /* ; no sched recs found*/
      KO0EW01.KO0EWSAF = "N"; /* ; scroll allowed = 'n'*/
      set KO0EM010.KO0EMP07 skip, invisible;
      set KO0EM010.KO0EMP08 skip, invisible;
    else
      KO0EW01.KO0EWSAF = "Y"; /* ; scroll allowed = 'y'*/
      set KO0EM010.KO0EMP07 initialAttributes;
      set KO0EM010.KO0EMP08 initialAttributes;
    end
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency id*/
   && KO0EW01.SM4REPID != 0   /* ; map has rep id*/
   && KO0EW01.XGPCD != " "    /* ; map has gpc*/
   && KO0EW01.KO0EWKEF == "N") /* ; no map errors*/
    KO0EW01.KO0EWEAF = "Y"; /* ; edit allowed = yes*/
    set KO0EM010.KO0EMP12 initialAttributes;
  else
    KO0EW01.KO0EWEAF = "N"; /* ; edit allowed = no*/
    set KO0EM010.KO0EMP12 skip, invisible;
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency id*/
   && KO0EW01.SM4REPID != 0   /* ; map has rep id*/
   && KO0EW01.XGPCD != " "    /* ; map has gpc*/
   && KO0EW01.KO0EWSFF == "Y") /* ; sched recs found*/
    KO0EW01.KO0EWDAF = "Y"; /* ; deletes allowed = yes*/
    set KO0EM010.KO0EMP17 initialAttributes;
  else
    KO0EW01.KO0EWDAF = "N"; /* ; deletes allowed = no*/
    set KO0EM010.KO0EMP17 skip, invisible;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESFS

// get begin date
Function KO0ESGA()
  ;
  ;
  if (KO0EM010.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin date*/
    KO0EW01.KO0EWDT1 = KO0EM010.KO0EMBMO[KO0EWSB1];
    if (KO0EW01.KO0EWFL1 == "-"
     || KO0EW01.KO0EWFL1 == "/")
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM1;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY1;
      KO0EM010.KO0EMBMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    else
      KO0EW01.KO0EWDT2 = KO0EM010.KO0EMBMO[KO0EWSB1];
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM2;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY2;
      KO0EM010.KO0EMBMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESGA

// get end date
Function KO0ESGB()
  ;
  ;
  if (KO0EM010.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end date*/
    KO0EW01.KO0EWDT1 = KO0EM010.KO0EMXMO[KO0EWSB1];
    if (KO0EW01.KO0EWFL1 == "-"
     || KO0EW01.KO0EWFL1 == "/")
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM1;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY1;
      KO0EM010.KO0EMXMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    else
      KO0EW01.KO0EWDT2 = KO0EM010.KO0EMXMO[KO0EWSB1];
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM2;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY2;
      KO0EM010.KO0EMXMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESGB

// set row attributes
Function KO0ESGC()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] == " ") /* ; no array gpc code*/
    KO0ESGD(); /* ; set add attributes*/
  else
    KO0ESGE(); /* ; set change attributes*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESGC

// set add attributes
Function KO0ESGD()
  ;
  ;
  if (KO0EW01.KO0EWEAF == "Y") /* ; edits are allowed*/
    set KO0EM010.KO0EMRPC[KO0EWSB1] normal;
    set KO0EM010.KO0EMAPC[KO0EWSB1] normal;
    set KO0EM010.KO0EMBMO[KO0EWSB1] normal;
    set KO0EM010.KO0EMXMO[KO0EWSB1] normal;
  else
    set KO0EM010.KO0EMRPC[KO0EWSB1] skip, invisible;
    set KO0EM010.KO0EMAPC[KO0EWSB1] skip, invisible;
    set KO0EM010.KO0EMBMO[KO0EWSB1] skip, invisible;
    set KO0EM010.KO0EMXMO[KO0EWSB1] skip, invisible;
  end
  ;
  set KO0EM010.KO0EMRCD[KO0EWSB1] skip, invisible;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESGD

// set change attributes
Function KO0ESGE()
  ;
  ;
  if (KO0EW01.KO0EWEAF == "Y") /* ; edits are allowed*/
    set KO0EM010.KO0EMRPC[KO0EWSB1] cursor, normal;
    set KO0EM010.KO0EMAPC[KO0EWSB1] normal;
    set KO0EM010.KO0EMBMO[KO0EWSB1] normal;
    set KO0EM010.KO0EMXMO[KO0EWSB1] normal;
    set KO0EM010.KO0EMRCD[KO0EWSB1] normal;
  else
    set KO0EM010.KO0EMRPC[KO0EWSB1] initialAttributes;
    set KO0EM010.KO0EMAPC[KO0EWSB1] initialAttributes;
    set KO0EM010.KO0EMBMO[KO0EWSB1] initialAttributes;
    set KO0EM010.KO0EMXMO[KO0EWSB1] initialAttributes;
    set KO0EM010.KO0EMRCD[KO0EWSB1] skip, invisible;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESGE

// validate fast path
Function KO0ESHA()
  ;
  ;
  if (converseVar.eventKey is enter)
    COMMAREA.CATOAP = KO0EM010.CATOAP;
    COMMAREA.CAITEM = KO0EM010.CAITEM;
    XSEXIT();
    set KO0EM010.CATOAP cursor, bold;
  else
    set KO0EM010.CATOAP cursor, bold;
    KO0EW01.KO0EWMNO = 1;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESHA

// validate function
Function KO0ESHB()
  ;
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function*/
  ;
  if (converseVar.eventKey is enter) /* ; user pressed enter*/
    KO0EW01.KO0EWFN1 = "U"; /* ; function = update*/
  else
    if (converseVar.eventKey is pf3) /* ; user pressed pf3*/
      KO0EW01.KO0EWFN1 = "X"; /* ; function = exit*/
    else
      if (converseVar.eventKey is pf7 /* ; user pressed pf7*/
       && KO0EW01.KO0EWSAF == "Y")    /* ; scrolling allowed*/
        KO0EW01.KO0EWFN1 = "B"; /* ; function = back*/
      else
        if (converseVar.eventKey is pf8 /* ; user pressed pf8*/
         && KO0EW01.KO0EWSAF == "Y")    /* ; scrolling allowed*/
          KO0EW01.KO0EWFN1 = "F"; /* ; function = frwd*/
        else
          if (converseVar.eventKey is pf12 /* ; user pressed pf12*/
           && KO0EW01.KO0EWEAF == "Y")     /* ; edits are allowed*/
            KO0EW01.KO0EWFN1 = "E"; /* ; function = edit*/
          else
            if (converseVar.eventKey is pf17 /* ; user pressed pf17*/
             && KO0EW01.KO0EWDAF == "Y")     /* ; deletes are allowed*/
              KO0EW01.KO0EWFN1 = "D"; /* ; function = delete*/
            else
              KO0EW01.KO0EWMNO = 2; /* ; invalid pf key*/
            end
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESHB

// update array
Function KO0ESI0()
  ;
  ;
  KO0EW02.KO0EWRPC[KO0EWSB2] = KO0EM010.KO0EMRPC[KO0EWSB1];
  KO0EW02.KO0EWAPC[KO0EWSB2] = KO0EM010.KO0EMAPC[KO0EWSB1];
  KO0EW02.KO0EWBMO[KO0EWSB2] = KO0EW01.KO0EWBMO;
  KO0EW02.KO0EWXMO[KO0EWSB2] = KO0EW01.KO0EWXMO;
  ;
  if (KO0EW02.KO0EWOPT[KO0EWSB2] == "A") /* ; array option = 'a'*/
    KO0EW02.XGPCD[KO0EWSB2] = KO0EM010.XGPCD;
    KO0EW02.KUCCOID[KO0EWSB2] = -1;
    KO0EW02.XDVCD[KO0EWSB2] = "**";
    KO0EW02.XOBCD[KO0EWSB2] = "**";
    KO0EW02.ZZZSDT[KO0EWSB2] = TA2REC.TA2GRGGN;
    KO0EW02.ZZZCHGCT[KO0EWSB2] = 0;
  else
    if (KO0EW02.KO0EWOPT[KO0EWSB2] == "C") /* ; array option = 'c'*/
      KO0EW02.KUCCOID[KO0EWSB2] = -1;
      KO0EW02.XDVCD[KO0EWSB2] = "**";
      KO0EW02.XOBCD[KO0EWSB2] = "**";
      KO0EW02.ZZZCHGCT[KO0EWSB2] = KO0EW02.ZZZCHGCT[KO0EWSB2] + 1;
    else
      KO0EW02.XGPCD[KO0EWSB2] = " ";
      KO0EW02.KUCCOID[KO0EWSB2] = 0;
      KO0EW02.XDVCD[KO0EWSB2] = " ";
      KO0EW02.XOBCD[KO0EWSB2] = " ";
      KO0EW02.ZZZSDT[KO0EWSB2] = 0;
      KO0EW02.ZZZCHGCT[KO0EWSB2] = 0;
    end
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = " ";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESI0

// process no changes
Function KO0ESI1()
  ;
  ;
  if (KO0EW01.KO0EWFN1 == "B")
                                   /* ; function 1 = scroll back*/
    KO0ESI2(); /* ; scroll back*/
  else
    if (KO0EW01.KO0EWFN1 == "D") /* ; function 1 = delete*/
      KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
      KO0EW01.KO0EWFN2 = "D"; /* ; set function 2*/
      KO0EW01.KO0EWMNO = 118; /* ; display delete mssg*/
    else
      if (KO0EW01.KO0EWFN1 == "E") /* ;     ; function 1 = edit*/
        KO0EW01.KO0EWMNO = 63; /* ; no changes were made*/
        KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
        KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
      else
        if (KO0EW01.KO0EWFN1 == "F")
                                   /* ; function 1 = scroll frwd*/
          KO0ESI3(); /* ; scroll frwd*/
        else
          KO0ESI4(); /* ; update screen*/
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESI1

// scroll back
Function KO0ESI2()
  ;
  ;
  if (KO0EW02.KO0EWPOS == 0) /* ; array pos at top*/
    KO0EW01.KO0EWMNO = 70;
  else
    KO0EW02.KO0EWPOS = KO0EW02.KO0EWPOS - 10; /* ; set position in array*/
    KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  end
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function 1 flag*/
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2 flag*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESI2

// scroll frwd
Function KO0ESI3()
  ;
  ;
  KO0EW01.KO0EWSB1 = KO0EW02.KO0EWPOS + 10; /* ; check last map line*/
  ;
  if (KO0EW01.KO0EWSB1 > 100) /* ; array is full*/
    KO0EW01.KO0EWMNO = 68;
  else
    if (KO0EW01.KO0EWSB1 > KO0EW02.KO0EWTOT /* ; at end of array*/
     && KO0EW01.KO0EWKEF == "Y")            /* ; adds are not allowed*/
      KO0EW01.KO0EWMNO = 68;
    else
      KO0EW01.KO0EWEF1 = "N"; /* ; reset error flag*/
      KO0EW01.KO0EWSB1 = 1; /* ;     ; reset subscript 1*/
      while (KO0EW01.KO0EWEF1 == "N" /* ; until error flag = 'y'*/
       && KO0EW01.KO0EWSB1 <= 10) /* ; and subscript > 10*/
        KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
        ;
        if (KO0EW02.XGPCD[KO0EWSB2] == " ")
          KO0EW01.KO0EWEF1 = "Y";
        else
          KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
        end
      end
      ;
      if (KO0EW01.KO0EWEF1 == "Y")
        KO0EW01.KO0EWMNO = 68;
      else
        KO0EW02.KO0EWPOS = KO0EW02.KO0EWPOS + 10;
        KO0EW01.KO0EWBMF = "Y";
      end
    end
  end
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESI3

// update screen
Function KO0ESI4()
  ;
  ;
  if (KO0EW01.KO0EWFN1 == "X") /* ; function = exit*/
    KO0EW01.KO0EWAPP = "KO0E005"; /* ; set next application*/
    KO0EW01.XGPCD = " "; /* ; reset w.s. gpc*/
    KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
    KO0EW01.KO0EWNKF = "Y"; /* ; set new key flag*/
    KO0EW01.KO0EWEKF = "Y"; /* ; set edit key flag*/
    KO0EW01.KO0EWNAF = "Y"; /* ; set new key flag*/
    KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
    KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
  else
    if (KO0EW01.KO0EWFN2 == "D")
                                   /* ; function flag 2 = delete*/
      KO0ESI5(); /* ; delete split sched*/
    else
      KO0ESI8(); /* ; check ko0ew03*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESI4

// delete split sched recs
Function KO0ESI5()
  ;
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function 1 flag*/
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2 flag*/
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "KO0ESI5";
    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    COMMAREA.CATOAP = "KO0A";
    XSEXIT();
    exit program;
  end
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EW01.SM1AGYID;
  KOEREC.SM4REPID = KO0EW01.SM4REPID;
  KOEREC.XGPCD = KO0EW01.XGPCD;
  ;
  call "IO0700" ("SS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; if successful return*/
    ;
    while (SQLCA.VAGen_SQLCODE == 0) /* ; until unsuccessful rtn*/
      KO0ESI6(); /* ; fetch next rec*/
    end
    ;
    call "IO0700" ("CS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
    ;
  else
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESI5";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* abort*/
  end
  ;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* ; commit db changes*/
  ;
  KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  KO0EW01.KO0EWNKF = "Y"; /* ; set new key flag*/
  KO0EW01.KO0EWNAF = "Y"; /* ; set new array flag*/
  KO0EW01.KO0EWMNO = 119; /* ; set w.s. mssg nbr*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESI5

// fetch next koerec
Function KO0ESI6()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  call "IO0700" ("SN", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; fetch was successful*/
    if (KOEREC.KUCCOID == -1 /* ; rec for all cust*/
     && KOEREC.XDVCD == "**" /* ; rec for all div*/
     && KOEREC.XOBCD == "**") /* ; rec for all base ot*/
      KO0ESI7(); /* ; delete row*/
    end
  else
    if (SQLCA.VAGen_SQLCODE != 100) /* ; at end of recs*/
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESI6";
      TA1REC.TA1LOCAT[2] = "IO0700";
      XSKO001(); /* abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESI6

// delete koerec
Function KO0ESI7()
  ;
  ;
  set KOAREC empty;
  ;
  KOAREC.KOATBLCD = 10;
  KOAREC.KOAACTTY = "4";
  KOAREC.XXXTBLNM = "VASSCH01";
  KOAREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOAREC.ZZHHMMSS = TA2REC.TA2TIMEN;
  KOAREC.SM1AGYID = KOEREC.SM1AGYID;
  KOAREC.SM4REPID = KOEREC.SM4REPID;
  KOAREC.XGPCD = KOEREC.XGPCD;
  KOAREC.KUCCOID = KOEREC.KUCCOID;
  KOAREC.XDVCD = KOEREC.XDVCD;
  KOAREC.XOBCD = KOEREC.XOBCD;
  KOAREC.KOEASPCT = KOEREC.KOEASPCT;
  KOAREC.KOACRSDT = KOEREC.ZZZSDT;
  KOAREC.XXXUSRID = COMMAREA.CAUSERID;
   /* ****MOVE 'MD' TO KOAREC.XRCCD; /* 02-24-94*/
  ;
  set SQLCA empty;
  ;
  call "IO0700" ("D ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESI7";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* abort*/
  else
    ;
    set SQLCA empty;
    ;
    call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1DBASE = "DCOMM ";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESI7  ";
      TA1REC.TA1LOCAT[1] = "IO0630   ";
      XSKO001(); /* abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESI7

// check ko0ew03
Function KO0ESI8()
  ;
  ;
  KO0EW01.KO0EWEF1 = "N";
  KO0EW01.KO0EWSB1 = 1;
  ;
  while (KO0EW01.KO0EWEF1 == "N"
   && KO0EW01.KO0EWSB1 <= 10)
    if (KO0EW03.XGPCD[KO0EWSB1] != " "
     && KO0EW03.KO0EWSC1[KO0EWSB1] != " ")
      KO0EW03.KO0EWSC1[KO0EWSB1] = " ";
      KO0EW01.SM1AGYID = KO0EW03.SM1AGYID;
      KO0EW01.SM4REPID = KO0EW03.SM4REPID;
      KO0EW01.XGPCD = KO0EW03.XGPCD[KO0EWSB1];
      KO0EW01.KO0EWAPP = "KO0E010";
      KO0EW01.KO0EWBMF = "Y";
      KO0EW01.KO0EWNKF = "Y";
      KO0EW01.KO0EWEKF = "Y";
      KO0EW01.KO0EWNAF = "Y";
      KO0EW01.KO0EWEF1 = "Y";
    else
      if (KO0EW03.XGPCD[KO0EWSB1] != " "
       && KO0EW03.KO0EWSC2[KO0EWSB1] != " ")
        KO0EW03.KO0EWSC2[KO0EWSB1] = " ";
        KO0EW01.SM1AGYID = KO0EW03.SM1AGYID;
        KO0EW01.SM4REPID = KO0EW03.SM4REPID;
        KO0EW01.XGPCD = KO0EW03.XGPCD[KO0EWSB1];
        KO0EW01.KO0EWAPP = "KO0E015";
        KO0EW01.KO0EWCHF = "C";
        KO0EW01.KO0EWBMF = "Y";
        KO0EW01.KO0EWNKF = "Y";
        KO0EW01.KO0EWEKF = "Y";
        KO0EW01.KO0EWNAF = "Y";
        KO0EW01.KO0EWEF1 = "Y";
      else
        KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
      end
    end
  end
  ;
  if (KO0EW01.KO0EWEF1 == "N")
    KO0EW01.KO0EWAPP = "KO0E005";
    KO0EW01.KO0EWBMF = "Y";
    KO0EW01.KO0EWNKF = "Y";
    KO0EW01.KO0EWEKF = "Y";
    KO0EW01.KO0EWNAF = "Y";
    KO0EW01.KO0EWEF1 = "Y";
    KO0EW01.XGPCD = " ";
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESI8

// check for changes
Function KO0ESIA()
  ;
  ;
  if (KO0EM010.SM1AGYID != KO0EW01.SM1AGYID /* ; new map agcy*/
   || KO0EM010.SM4REPID != KO0EW01.SM4REPID /* ; new map rep*/
   || KO0EM010.XGPCD != KO0EW01.XGPCD)      /* ; new map gpc*/
    KO0EW01.KO0EWKCF = "Y"; /* ; set key change flag*/
  end
  ;
  KO0EW01.KO0EWSB1 = 1; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 <= 10) /* ; until end of map sched*/
    KO0ESIB(); /* ; check for sched change*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIA

// check for sched changes
Function KO0ESIB()
  ;
  ;
  KO0ESIC(); /* ; set work dates*/
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  if (KO0EM010.KO0EMRPC[KO0EWSB1] == KO0EW02.KO0EWRPC[KO0EWSB2]
   && KO0EM010.KO0EMAPC[KO0EWSB1] == KO0EW02.KO0EWAPC[KO0EWSB2]
   && KO0EW01.KO0EWBMO == KO0EW02.KO0EWBMO[KO0EWSB2]
   && KO0EW01.KO0EWXMO == KO0EW02.KO0EWXMO[KO0EWSB2])
    KO0EW02.KO0EWOPT[KO0EWSB2] = " ";
  else
    if (KO0EW02.XGPCD[KO0EWSB2] == " ")
      KO0EW02.KO0EWOPT[KO0EWSB2] = "A";
      KO0EW01.KO0EWSCF = "Y";
    else
      if (KO0EM010.KO0EMRPC[KO0EWSB1] == 0
       && KO0EM010.KO0EMAPC[KO0EWSB1] == 0
       && KO0EM010.KO0EMBMO[KO0EWSB1] == " "
       && KO0EM010.KO0EMXMO[KO0EWSB1] == " ")
        KO0EW02.KO0EWOPT[KO0EWSB2] = "D";
        KO0EW01.KO0EWSCF = "Y";
      else
        KO0EW02.KO0EWOPT[KO0EWSB2] = "C";
        KO0EW01.KO0EWSCF = "Y";
      end
    end
  end
  ;
  KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1; /* ; increment subscript*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIB

// set work dates
Function KO0ESIC()
  ;
  ;
  KO0EW01.KO0EWBMO = 0; /* ; reset w.s. begin month*/
  KO0EW01.KO0EWXMO = 0; /* ; reset w.s. end month*/
  ;
  if (KO0EM010.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin month*/
    KO0EW01.KO0EWDTA = KO0EM010.KO0EMBMO[KO0EWSB1];
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    /* -------- Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* -------- Y2K OUT END ---------*/
    /* -------- Y2K IN  BEGIN -------*/
    if (KO0EW01.KO0EWYYB > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* -------- Y2K IN END ----------*/
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB;
  end
  ;
  if (KO0EM010.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end month*/
    KO0EW01.KO0EWDTA = KO0EM010.KO0EMXMO[KO0EWSB1];
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    /* -------- Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* -------- Y2K OUT END ---------*/
    /* -------- Y2K IN  BEGIN -------*/
    if (KO0EW01.KO0EWYYB > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* -------- Y2K IN END ----------*/
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIC

// process key changes
Function KO0ESID()
  ;
  ;
  if (KO0EW01.KO0EWFN1 != "U") /* ; function not = update*/
    set KO0EM010.SM1AGYID bold; /* ; highlight agcy*/
    set KO0EM010.SM4REPID bold; /* ; highlight rep*/
    set KO0EM010.XGPCD bold; /* ; highlight gpc*/
    KO0EW01.KO0EWMNO = 161;
  else
    if (KO0EW01.KO0EWSCF == "Y") /* ; sched changes made*/
      set KO0EM010.SM1AGYID bold; /* ; highlight agcy*/
      set KO0EM010.SM4REPID bold; /* ; highlight rep*/
      KO0EW01.KO0EWMNO = 163;
    else
      KO0EW01.SM1AGYID = KO0EM010.SM1AGYID;
      KO0EW01.SM4REPID = KO0EM010.SM4REPID;
      KO0EW01.XGPCD = KO0EM010.XGPCD;
      KO0EW01.KO0EWBMF = "Y";
      KO0EW01.KO0EWNKF = "Y";
      KO0EW01.KO0EWNAF = "Y";
      KO0EW01.KO0EWEKF = "Y";
      if (KO0EW01.SM1AGYID != KO0EW03.SM1AGYID
       || KO0EW01.SM4REPID != KO0EW03.SM4REPID)
        set KO0EW03 empty;
      else
        if (KO0EW01.XGPCD in KO0EW03.XGPCD)
          KO0EW03.KO0EWSC1[sysVar.arrayIndex] = " ";
        end
      end
    end
  end
  ;
  KO0EM010.SM1AGYID = KO0EW01.SM1AGYID;
  KO0EM010.SM4REPID = KO0EW01.SM4REPID;
  KO0EM010.XGPCD = KO0EW01.XGPCD;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESID

// process sched changes
Function KO0ESIE()
  ;
  ;
  KO0ESIF(); /* ; edit function*/
  ;
  if (KO0EW01.KO0EWMNO == 0) /* ; no errors*/
    KO0EW01.KO0EWSB1 = 10; /* ; reset subscript*/
    while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map*/
      KO0ESIG(); /* ; edit map row*/
    end
    ;
    if (KO0EW01.KO0EWMNO == 0) /* ; no errors*/
      if (KO0EW01.KO0EWFN1 == "U") /* ; function = update*/
        KO0ESIU(); /* ; update sched*/
      else
        KO0EW01.KO0EWMNO = 76; /* ; edit is complete*/
      end
    end
    ;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIE

// edit function
Function KO0ESIF()
  ;
  ;
  if (KO0EW01.KO0EWFN1 == "X") /* ; function = exit*/
    KO0EW01.KO0EWMNO = 161;
  else
    if (KO0EW01.KO0EWFN1 == "D") /* ; function = delete*/
      KO0EW01.KO0EWMNO = 164;
    else
      if (KO0EW01.KO0EWFN1 == "B" /* ; function = scroll back*/
       || KO0EW01.KO0EWFN1 == "F") /* ; function = scroll frwd*/
        KO0EW01.KO0EWMNO = 174;
      end
    end
  end
  ;
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2 flag*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIF

// edit map row
Function KO0ESIG()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  if (KO0EM010.KO0EMRPC[KO0EWSB1] != 0   /* ; row has rep pct*/
   || KO0EM010.KO0EMAPC[KO0EWSB1] != 0   /* ; row has agcy pct*/
   || KO0EM010.KO0EMBMO[KO0EWSB1] != " " /* ; row has begin date*/
   || KO0EM010.KO0EMXMO[KO0EWSB1] != " " /* ; row has end date*/
   || KO0EM010.KO0EMRCD[KO0EWSB1] != " ") /* ; row has maint code*/
    ;
    KO0ESIH(); /* ; build work fields*/
    KO0ESII(); /* ; edit maint code*/
    KO0ESIJ(); /* ; edit dates*/
    KO0ESIM(); /* ; edit splits*/
    KO0ESIN(); /* ; edit key*/
    ;
  end
  ;
  KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIG

// build work fields
Function KO0ESIH()
  ;
  ;
  KO0EW01.KO0EWXMO = 0; /* ;     ; ws end date = 0*/
  KO0EW01.KO0EWBMO = 0; /* ;     ; ws begin date = 0*/
  KO0EW01.KO0EWPCT = 0; /* ;     ; reset pct total*/
  ;
  if (KO0EM010.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end date*/
    KO0EW01.KO0EWDT1 = KO0EM010.KO0EMXMO[KO0EWSB1];
    /* ---------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ---------- Y2K OUT END ----------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    /* ---------- Y2K IN  BEGIN --------*/
    if (KO0EW01.KO0EWYYB > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ---------- Y2K IN END -----------*/
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB;
  end
  ;
  if (KO0EM010.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin date*/
    KO0EW01.KO0EWDT1 = KO0EM010.KO0EMBMO[KO0EWSB1];
    ;
    /* ---------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ---------- Y2K OUT END ----------*/
    ;
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    ;
    /* ---------- Y2K IN  BEGIN --------*/
    if (KO0EW01.KO0EWYYB > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ---------- Y2K IN END -----------*/
    ;
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB;
  end
  ;
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM010.KO0EMRPC[KO0EWSB1];
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM010.KO0EMAPC[KO0EWSB1];
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIH

// edit maint code
Function KO0ESII()
  ;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] != " ") /* ; array row has gpc*/
    if (KO0EW02.KO0EWBMO[KO0EWSB2] != KO0EW01.KO0EWBMO
     && KO0EM010.KO0EMRCD[KO0EWSB1] != "EA"
     && KO0EM010.KO0EMRCD[KO0EWSB1] != "EB")
      set KO0EM010.KO0EMRCD[KO0EWSB1] cursor, bold;
      KO0EW01.KO0EWMNO = 181;
    else
      if (KO0EW02.KO0EWBMO[KO0EWSB2] == KO0EW01.KO0EWBMO
       && KO0EW02.KO0EWRPC[KO0EWSB2] == KO0EM010.KO0EMRPC[KO0EWSB1]
       && KO0EW02.KO0EWAPC[KO0EWSB2] == KO0EM010.KO0EMAPC[KO0EWSB1]
       && KO0EW02.KO0EWXMO[KO0EWSB2] == KO0EW01.KO0EWXMO
       && KO0EM010.KO0EMRCD[KO0EWSB1] != " ")
        set KO0EM010.KO0EMRCD[KO0EWSB1] cursor, bold;
        KO0EW01.KO0EWMNO = 68;
      else
        if (KO0EW02.KO0EWBMO[KO0EWSB2] == KO0EW01.KO0EWBMO)
          if (KO0EW02.KO0EWRPC[KO0EWSB2] != KO0EM010.KO0EMRPC[KO0EWSB1]
           || KO0EW02.KO0EWAPC[KO0EWSB2] != KO0EM010.KO0EMAPC[KO0EWSB1]
           || KO0EW02.KO0EWXMO[KO0EWSB2] != KO0EW01.KO0EWXMO)
            if (KO0EM010.KO0EMRPC[KO0EWSB1] == 0
             && KO0EM010.KO0EMAPC[KO0EWSB1] == 0
             && KO0EM010.KO0EMBMO[KO0EWSB1] == " "
             && KO0EM010.KO0EMXMO[KO0EWSB1] == " "
             && KO0EM010.KO0EMRCD[KO0EWSB1] != "EA"
             && KO0EM010.KO0EMRCD[KO0EWSB1] != "EB")
              set KO0EM010.KO0EMRCD[KO0EWSB1] cursor, bold;
              KO0EW01.KO0EWMNO = 181;
            else
              if (KO0EM010.KO0EMRPC[KO0EWSB1] != 0
               || KO0EM010.KO0EMAPC[KO0EWSB1] != 0
               || KO0EM010.KO0EMBMO[KO0EWSB1] != " "
               || KO0EM010.KO0EMXMO[KO0EWSB1] != " ")
                if (KO0EM010.KO0EMRCD[KO0EWSB1] != "CH")
                  set KO0EM010.KO0EMRCD[KO0EWSB1] cursor, bold;
                  KO0EW01.KO0EWMNO = 182;
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESII

// edit dates
Function KO0ESIJ()
  ;
  ;
  if (KO0EM010.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end date*/
    KO0ESIK(); /* ; edit end date*/
  end
  ;
  if (KO0EM010.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin date*/
    KO0ESIL(); /* ; edit begin date*/
  end
  ;
  if (KO0EM010.KO0EMBMO[KO0EWSB1] != " " /* ; map has begin date*/
   && KO0EM010.KO0EMXMO[KO0EWSB1] != " " /* ; map has end date*/
   && KO0EW01.KO0EWBMO > KO0EW01.KO0EWXMO)
    set KO0EM010.KO0EMBMO[KO0EWSB1] cursor, bold;
    set KO0EM010.KO0EMXMO[KO0EWSB1] bold;
    KO0EW01.KO0EWMNO = 184;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIJ

// edit end date
Function KO0ESIK()
  ;
  ;
  set TA2REC empty;
  ;
  KO0EW01.KO0EWDTB = KO0EW01.KO0EWXMO; /* ; build work date b*/
  KO0EW01.KO0EWCCD = KO0EW01.KO0EWCCB; /* ; build work date d - cc*/
  KO0EW01.KO0EWYYD = KO0EW01.KO0EWYYB; /* ; build work date d - yy*/
  KO0EW01.KO0EWMMD = KO0EW01.KO0EWMMB; /* ; build work date d - mm*/
  KO0EW01.KO0EWDDD = 1; /* ; build work date d - dd*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = KO0EW01.KO0EWDTD;
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* ; validate date*/
  ;
  if (TA2REC.TA2RTNCD != 0) /* ; invalid date*/
    set KO0EM010.KO0EMXMO[KO0EWSB1] cursor, bold;
    KO0EW01.KO0EWMNO = 183;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIK

// edit begin date
Function KO0ESIL()
  ;
  ;
  set TA2REC empty;
  ;
  KO0EW01.KO0EWDTB = KO0EW01.KO0EWBMO; /* ; build work date b*/
  KO0EW01.KO0EWCCD = KO0EW01.KO0EWCCB; /* ; build work date d - cc*/
  KO0EW01.KO0EWYYD = KO0EW01.KO0EWYYB; /* ; build work date d - yy*/
  KO0EW01.KO0EWMMD = KO0EW01.KO0EWMMB; /* ; build work date d - mm*/
  KO0EW01.KO0EWDDD = 1; /* ; build work date d - dd*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = KO0EW01.KO0EWDTD;
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* ; validate date*/
  ;
  if (TA2REC.TA2RTNCD != 0) /* ; invalid date*/
    set KO0EM010.KO0EMBMO[KO0EWSB1] cursor, bold;
    KO0EW01.KO0EWMNO = 183;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIL

// edit splits
Function KO0ESIM()
  ;
  ;
  if (KO0EW02.KO0EWOPT[KO0EWSB2] != "D" /* ; option not delete*/
   || KO0EW01.KO0EWPCT != 0)            /* ; total pct not = 0*/
    if (KO0EW01.KO0EWPCT != 100) /* ; total pct not = 100*/
      set KO0EM010.KO0EMRPC[KO0EWSB1] cursor, bold;
      set KO0EM010.KO0EMAPC[KO0EWSB1] bold;
      KO0EW01.KO0EWMNO = 165;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIM

// edit key
Function KO0ESIN()
  ;
  ;
  if (KO0EW02.KO0EWOPT[KO0EWSB2] != " " /* ; array has option*/
   && KO0EW02.KO0EWOPT[KO0EWSB2] != "D") /* ; option not delete*/
    ;
    KO0ESIO(); /* ; build map dates*/
    ;
    KO0EW01.KO0EWEF1 = "N"; /* ; reset error flag*/
    KO0EW01.KO0EWSB3 = 1; /* ; reset subscript*/
    while (KO0EW01.KO0EWEF1 == "N" /* ; until error flag = 'y'*/
     && KO0EW01.KO0EWSB3 <= 10) /* ; until end of map*/
      KO0ESIP(); /* ; compare map keys*/
    end
    ;
    if (KO0EW01.KO0EWEF1 == "N") /* ; error flag = 'n'*/
      KO0ESIR(); /* ; compare rec keys*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIN

// build map dates
Function KO0ESIO()
  ;
  ;
  if (KO0EM010.KO0EMBMO[KO0EWSB1] == " ")
    KO0EW01.KO0EWBMA = 0;
  else
    KO0EW01.KO0EWDT1 = KO0EM010.KO0EMBMO[KO0EWSB1];
    /* ---------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ---------- Y2K OUT END ----------*/
    /* ---------- Y2K IN  BEGIN --------*/
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ---------- Y2K IN END -----------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWBMA = KO0EW01.KO0EWDTB;
  end
  ;
  ;
    /* ---------- Y2K OUT BEGIN --------*/
   /* IF KO0EM010.KO0EMXMO(KO0EWSB1) EQ ' ';*/
    /* MOVE 199999 TO KO0EW01.KO0EWXMA;*/
   /* ELSE;*/
    /* MOVE KO0EM010.KO0EMXMO(KO0EWSB1) TO KO0EW01.KO0EWDT1;*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* MOVE KO0EW01.KO0EWYY1 TO KO0EW01.KO0EWYYB;*/
    /* MOVE KO0EW01.KO0EWMM1 TO KO0EW01.KO0EWMMB;*/
    /* MOVE KO0EW01.KO0EWDTB TO KO0EW01.KO0EWXMA;*/
   /* END;*/
    /* ---------- Y2K OUT END ----------*/
  ;
    /* ---------- Y2K IN  BEGIN --------*/
  if (KO0EM010.KO0EMXMO[KO0EWSB1] == " ")
    KO0EW01.KO0EWXMA = 204399;
    /* JUST A HIGH ENOUGH DATE MAPPER CAN HANDLE IF NEEDED*/
  else
    KO0EW01.KO0EWDT1 = KO0EM010.KO0EMXMO[KO0EWSB1];
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWXMA = KO0EW01.KO0EWDTB;
  end
    /* ---------- Y2K IN END -----------*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIO

// compare to map keys
Function KO0ESIP()
  ;
  ;
  if (KO0EW01.KO0EWSB3 != KO0EW01.KO0EWSB1)
    if (KO0EM010.KO0EMRPC[KO0EWSB3] != 0
     || KO0EM010.KO0EMAPC[KO0EWSB3] != 0
     || KO0EM010.KO0EMBMO[KO0EWSB3] != " "
     || KO0EM010.KO0EMXMO[KO0EWSB3] != " ")
      KO0ESIQ(); /* ; compare map dates*/
    end
  end
  ;
  KO0EW01.KO0EWSB3 = KO0EW01.KO0EWSB3 + 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIP

// compare map dates
Function KO0ESIQ()
  ;
  ;
  if (KO0EM010.KO0EMBMO[KO0EWSB3] == " ")
    KO0EW01.KO0EWBMB = 0;
  else
    KO0EW01.KO0EWDT1 = KO0EM010.KO0EMBMO[KO0EWSB3];
    /* ------- Y2K OUT BEGIN --------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ------- Y2K OUT END ----------*/
    /* ------- Y2K IN  BEGIN --------*/
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------- Y2K IN END -----------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWBMB = KO0EW01.KO0EWDTB;
  end
  ;
  ;
   /* --------  Y2K OUT BEGIN -------*/
   /* IF KO0EM010.KO0EMXMO(KO0EWSB3) EQ ' ';*/
    /* MOVE 199999 TO KO0EW01.KO0EWXMB;*/
   /* ELSE;*/
    /* MOVE KO0EM010.KO0EMXMO(KO0EWSB3) TO KO0EW01.KO0EWDT1;*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* MOVE KO0EW01.KO0EWYY1 TO KO0EW01.KO0EWYYB;*/
    /* MOVE KO0EW01.KO0EWMM1 TO KO0EW01.KO0EWMMB;*/
    /* MOVE KO0EW01.KO0EWDTB TO KO0EW01.KO0EWXMB;*/
   /* END;*/
   /* --------  Y2K OUT BEGIN -------*/
  ;
  ;
   /* --------  Y2K IN  BEGIN -------*/
  if (KO0EM010.KO0EMXMO[KO0EWSB3] == " ")
    KO0EW01.KO0EWXMB = 204399;
   /* JUST A DATE HIGH ENOUGH MAPPER CAN HANDLE IF NEEDED*/
  else
    KO0EW01.KO0EWDT1 = KO0EM010.KO0EMXMO[KO0EWSB3];
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWXMB = KO0EW01.KO0EWDTB;
  end
   /* --------  Y2K IN  END ---------*/
  ;
  ;
  ;
  if (KO0EW01.KO0EWBMA < KO0EW01.KO0EWBMB
   && KO0EW01.KO0EWXMA < KO0EW01.KO0EWBMB)
    return;
  else
    if (KO0EW01.KO0EWBMA > KO0EW01.KO0EWBMB
     && KO0EW01.KO0EWBMA > KO0EW01.KO0EWXMB)
      return;
    else
      set KO0EM010.KO0EMBMO[KO0EWSB1] cursor, bold;
      set KO0EM010.KO0EMXMO[KO0EWSB1] bold;
      KO0EW01.KO0EWMNO = 180;
      KO0EW01.KO0EWEF1 = "Y";
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIQ

// compare to array keys
Function KO0ESIR()
  ;
  ;
  KO0EW01.KO0EWSB3 = 1; /* ; reset subscript*/
  ;
  while (KO0EW01.KO0EWEF1 == "N" /* ; until error flag = 'y'*/
   && KO0EW01.KO0EWSB3 <= KO0EW02.KO0EWTOT) /* ; until end of array*/
    ;
    if (KO0EW01.KO0EWSB3 != KO0EW01.KO0EWSB2)
      if (KO0EW02.KO0EWOPT[KO0EWSB3] != " "
       && KO0EW02.KO0EWOPT[KO0EWSB3] != "D")
        if (KO0EW02.KUCCOID[KO0EWSB3] == KO0EM015.KO0EMCID[KO0EWSB1]
         && KO0EW02.XDVCD[KO0EWSB3] == KO0EM015.XDVCD[KO0EWSB1]
         && KO0EW02.XOBCD[KO0EWSB3] == KO0EM015.XOBCD[KO0EWSB1])
          KO0ESIS(); /* ; build array dates*/
          KO0ESIT(); /* ; compare array dates*/
        end
      end
    end
    ;
    KO0EW01.KO0EWSB3 = KO0EW01.KO0EWSB3 + 1;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIR

// build array dates
Function KO0ESIS()
  ;
  ;
  KO0EW01.KO0EWBMB = KO0EW02.KO0EWBMO[KO0EWSB3];
  ;
  if (KO0EW02.KO0EWXMO[KO0EWSB3] == 0)
    /* -------- Y2K OUT BEGIN -------*/
    /* MOVE 199999 TO KO0EW01.KO0EWXMB;*/
    /* -------- Y2K OUT BEGIN -------*/
    /* -------- Y2K IN  BEGIN -------*/
    /* MAPPER CAN HANDLE UP TO YEAR 2050; THIS DATE IS SET AS*/
    /* SUCH IN CASE MAPPER USES IT*/
    ;
    KO0EW01.KO0EWXMB = 204399;
    /* -------- Y2K IN END ----------*/
  else
    KO0EW01.KO0EWXMB = KO0EW02.KO0EWXMO[KO0EWSB3];
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIS

// compare to record dates
Function KO0ESIT()
  ;
  ;
  if (KO0EW01.KO0EWBMA < KO0EW01.KO0EWBMB
   && KO0EW01.KO0EWXMA < KO0EW01.KO0EWBMB)
    return;
  else
    if (KO0EW01.KO0EWBMA > KO0EW01.KO0EWBMB
     && KO0EW01.KO0EWBMA > KO0EW01.KO0EWXMB)
      return;
    else
      set KO0EM010.KO0EMBMO[KO0EWSB1] cursor, bold;
      set KO0EM010.KO0EMXMO[KO0EWSB1] bold;
      KO0EW01.KO0EWMNO = 180;
      KO0EW01.KO0EWEF1 = "Y";
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIT

// update sched recs
Function KO0ESIU()
  ;
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "KO0ESIU";
    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    COMMAREA.CATOAP = "KO0A";
    XSEXIT();
    exit program;
  end
  ;
  KO0EW01.KO0EWSB1 = 10; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map*/
    ;
    KO0ESIV(); /* ; build work fields*/
    ;
    KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
    ;
    if (KO0EM010.KO0EMRPC[KO0EWSB1] != KO0EW02.KO0EWRPC[KO0EWSB2]
     || KO0EM010.KO0EMAPC[KO0EWSB1] != KO0EW02.KO0EWAPC[KO0EWSB2]
     || KO0EW01.KO0EWBMO != KO0EW02.KO0EWBMO[KO0EWSB2]
     || KO0EW01.KO0EWXMO != KO0EW02.KO0EWXMO[KO0EWSB2])
      ;
      if (KO0EW02.KO0EWOPT[KO0EWSB2] == "D"   /* ; option = 'delete'*/
       || KO0EM010.KO0EMRCD[KO0EWSB1] == "EA" /* ; maint code = 'ea'*/
       || KO0EM010.KO0EMRCD[KO0EWSB1] == "EB" /* ; maint code = 'eb'*/
       || KO0EM010.KO0EMRPC[KO0EWSB1] == 100) /* ; map rep pct = 100*/
        if (KO0EW02.ZZZSDT[KO0EWSB2] != 0) /* ; row has setup date*/
          KO0ESIW(); /* ; delete sched row*/
        end
      end
      ;
      if (KO0EW02.KO0EWOPT[KO0EWSB2] == "A"   /* ; option = 'add'*/
       || KO0EM010.KO0EMRCD[KO0EWSB1] == "EA" /* ; maint code = 'ea'*/
       || KO0EM010.KO0EMRCD[KO0EWSB1] == "EB" /* ; maint code = 'eb'*/
       || KO0EW02.ZZZSDT[KO0EWSB2] == 0)      /* ; row has no setup date*/
        if (KO0EM010.KO0EMRPC[KO0EWSB1] != 100 /* ; rep pct not = 100*/
         && KO0EW01.KO0EWPCT != 0)             /* ; total pct not = 0*/
          KO0ESIX(); /* ; add sched row*/
        end
      end
      ;
      if (KO0EM010.KO0EMRCD[KO0EWSB1] == "CH" /* ; maint code = 'ch'*/
       || KO0EW02.KO0EWOPT[KO0EWSB2] == "C")  /* ; option = 'change'*/
        if (KO0EM010.KO0EMRPC[KO0EWSB1] != 100 /* ; map rep pct not = 100*/
         && KO0EW02.KO0EWRPC[KO0EWSB2] != 100) /* rep pct not = 100*/
          KO0ESIY(); /* ; update sched row*/
        end
      end
      ;
      KO0ESIZ(); /* ; write audit recs*/
      KO0ESI0(); /* ; update array*/
      ;
    end
    ;
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1; /* ; increment subscript*/
    ;
  end
  ;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* ; commit db changes*/
  ;
  KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  KO0EW01.KO0EWNAF = "Y"; /* ; set new array flag*/
  KO0EW01.KO0EWMNO = 80; /* ; set w.s. mssg nbr*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIU

// build work dates
Function KO0ESIV()
  ;
  ;
  KO0EW01.KO0EWPCT = 0;
  KO0EW01.KO0EWBMO = 0;
  KO0EW01.KO0EWXMO = 0;
  ;
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM010.KO0EMRPC[KO0EWSB1];
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM010.KO0EMAPC[KO0EWSB1];
  ;
  if (KO0EM010.KO0EMBMO[KO0EWSB1] != " ")
    KO0EW01.KO0EWDTA = KO0EM010.KO0EMBMO[KO0EWSB1];
    /* ------ Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ------ Y2K OUT END   -------*/
    /* ------ Y2K IN  BEGIN -------*/
    if (KO0EW01.KO0EWYYA > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------ Y2K IN END ----------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB;
  end
  ;
  ;
  if (KO0EM010.KO0EMXMO[KO0EWSB1] != " ")
    KO0EW01.KO0EWDTA = KO0EM010.KO0EMXMO[KO0EWSB1];
    /* ------ Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ------ Y2K OUT END   -------*/
    /* ------ Y2K IN  BEGIN -------*/
    if (KO0EW01.KO0EWYYA > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------ Y2K IN END ----------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIV

// delete sched row
Function KO0ESIW()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM010.SM1AGYID;
  KOEREC.SM4REPID = KO0EM010.SM4REPID;
  KOEREC.XGPCD = KO0EM010.XGPCD;
  KOEREC.KUCCOID = -1;
  KOEREC.XDVCD = "**";
  KOEREC.XOBCD = "**";
  KOEREC.KOEASBMO = KO0EW02.KO0EWBMO[KO0EWSB2];
  ;
  call "IO0700" ("D ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; delete unsuccessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESIW";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* ; abort*/
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = "D";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIW

// add sched row
Function KO0ESIX()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM010.SM1AGYID;
  KOEREC.SM4REPID = KO0EM010.SM4REPID;
  KOEREC.XGPCD = KO0EM010.XGPCD;
  KOEREC.KUCCOID = -1;
  KOEREC.XDVCD = "**";
  KOEREC.XOBCD = "**";
  KOEREC.KOEASBMO = KO0EW01.KO0EWBMO;
  KOEREC.KOEASXMO = KO0EW01.KO0EWXMO;
  KOEREC.KOEASPCT = KO0EM010.KO0EMAPC[KO0EWSB1];
  KOEREC.XXXUSRID = COMMAREA.CAUSERID;
  KOEREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOEREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  KOEREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  KOEREC.ZZZCHGCT = 0;
  ;
  call "IO0700" ("A ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; add not sucessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESIX";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* ; abort*/
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = "A";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIX

// update sched row
Function KO0ESIY()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM010.SM1AGYID;
  KOEREC.SM4REPID = KO0EM010.SM4REPID;
  KOEREC.XGPCD = KO0EM010.XGPCD;
  KOEREC.KUCCOID = -1;
  KOEREC.XDVCD = "**";
  KOEREC.XOBCD = "**";
  KOEREC.KOEASBMO = KO0EW01.KO0EWBMO;
  KOEREC.KOEASXMO = KO0EW01.KO0EWXMO;
  KOEREC.KOEASPCT = KO0EM010.KO0EMAPC[KO0EWSB1];
  KOEREC.XXXUSRID = COMMAREA.CAUSERID;
  KOEREC.ZZZSDT = KO0EW02.ZZZSDT[KO0EWSB2];
  KOEREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  KOEREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  KOEREC.ZZZCHGCT = KO0EW02.ZZZCHGCT[KO0EWSB2];
  ;
  call "IO0700" ("U ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; update unsuccessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESIY";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* ; abort*/
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = "C";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIY

// write audit recs
Function KO0ESIZ()
  ;
  ;
  set KOAREC empty;
  set SQLCA empty;
  ;
  KOAREC.KOATBLCD = 10;
  KOAREC.XXXTBLNM = "VASSCH01";
  KOAREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOAREC.ZZHHMMSS = TA2REC.TA2TIMEN;
  KOAREC.SM1AGYID = KO0EM010.SM1AGYID;
  KOAREC.SM4REPID = KO0EM010.SM4REPID;
   /* ***MOVE KO0EM010.KO0EMRCD(KO0EWSB1) TO KOAREC.XRCCD; /* 02-24-94*/
  KOAREC.XXXUSRID = COMMAREA.CAUSERID;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] != " ")
    ;
    if (KO0EM010.KO0EMRPC[KO0EWSB1] != 0
     || KO0EM010.KO0EMAPC[KO0EWSB1] != 0
     || KO0EM010.KO0EMBMO[KO0EWSB1] != " "
     || KO0EM010.KO0EMXMO[KO0EWSB1] != " ")
      KOAREC.KOAACTTY = "2";
    else
      KOAREC.KOAACTTY = "4";
    end
    ;
    KOAREC.XGPCD = KO0EW02.XGPCD[KO0EWSB2];
    KOAREC.KOEASPCT = KO0EW02.KO0EWAPC[KO0EWSB2];
    KOAREC.KOACRSDT = KO0EW02.ZZZSDT[KO0EWSB2];
    KOAREC.XXXUSRID = COMMAREA.CAUSERID;
    KOAREC.KUCCOID = -1;
    KOAREC.XDVCD = "**";
    KOAREC.XOBCD = "**";
    KOAREC.KOEASBMO = KO0EW02.KO0EWBMO[KO0EWSB2];
    KOAREC.KOEASXMO = KO0EW02.KO0EWXMO[KO0EWSB2];
    ;
    call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1DBASE = "DCOMM ";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESIZ  ";
      TA1REC.TA1LOCAT[1] = "IO0630   ";
      XSKO001(); /* abort*/
    end
  end
  ;
  if (KO0EM010.XGPCD != " "
   || KO0EM010.KO0EMRPC[KO0EWSB1] != 0
   || KO0EM010.KO0EMAPC[KO0EWSB1] != 0
   || KO0EM010.KO0EMBMO[KO0EWSB1] != " "
   || KO0EM010.KO0EMXMO[KO0EWSB1] != " ")
    ;
    if (KO0EW02.XGPCD[KO0EWSB2] == " ")
      KOAREC.KOAACTTY = "1";
    else
      KOAREC.KOAACTTY = "3";
    end
    ;
    KOAREC.KUCCOID = -1;
    KOAREC.XDVCD = "**";
    KOAREC.XOBCD = "**";
    KOAREC.KOEASBMO = KO0EW01.KO0EWBMO;
    KOAREC.KOEASXMO = KO0EW01.KO0EWXMO;
    KOAREC.KOEASPCT = KO0EM010.KO0EMAPC[KO0EWSB1];
    ;
    call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1DBASE = "DCOMM ";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESIZ  ";
      TA1REC.TA1LOCAT[1] = "IO0630   ";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESIZ

// build new key
Function KO0ESJA()
  ;
  ;
  KO0ESJB(); /* ; reset w.s. fields*/
  ;
  if (KO0EW01.KO0EWEKF == "Y") /* ; edit key flag = 'y'*/
    KO0EW01.KO0EWEKF = "N"; /* ; reset edit key flag*/
    KO0ESJC(); /* ; edit key data*/
  end
  ;
  ;
   /* *************************************************************/
end // end KO0ESJA

// reset w.s. fields
Function KO0ESJB()
  ;
  ;
  KO0EW01.KO0EWKEF = "N"; /* ; set key error flag*/
  KO0EW01.KO0EWKWF = "N"; /* ; set key warning flag*/
  KO0EW01.KO0EWSFF = "N"; /* ; set sched found flag*/
  KO0EW01.KO0EWSAF = "N"; /* ; set scroll allowed flag*/
  KO0EW01.KO0EWEAF = "N"; /* ; set edit allowed flag*/
  KO0EW01.KO0EWDAF = "N"; /* ; set delete allowed flag*/
  KO0EW01.SM1AGYNM = " "; /* ; set w.s. agcy name*/
  KO0EW01.XXXLSTNM = " "; /* ; set w.s. rep last name*/
  KO0EW01.XXXFSTNM = " "; /* ; set w.s. rep first name*/
  KO0EW01.XXXMDINT = " "; /* ; set w.s. rep mid init*/
  KO0EW01.XGPDESC = " "; /* ; set w.s. gpc desc*/
  KO0EW01.KUCCOID = -2; /* ; set w.s. cust id*/
  KO0EW01.KUCGRPID = -2; /* ; set w.s. group id*/
  KO0EW03.KUCCOID = 0; /* ; set w.s. last cust*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJB

// edit key data
Function KO0ESJC()
  ;
  ;
  if (KO0EW01.XGPCD != " ") /* ; edit gpc*/
    KO0ESJD(); /* ; edit gpc code*/
  else
    set KO0EM015.XGPCD cursor, bold; /* ; highlight gpc*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 38; /* ; required field*/
  end
  ;
  if (KO0EW01.SM4REPID != 0) /* ; user entered rep id*/
    KO0ESJE(); /* ; edit rep id*/
  else
    set KO0EM015.SM4REPID cursor, bold; /* ; highlight rep id*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 38; /* ; required field*/
  end
  ;
  if (KO0EW01.SM1AGYID != " ") /* ; user entered agcy id*/
    KO0ESJH(); /* ; edit agcy id*/
  else
    set KO0EM015.SM1AGYID cursor, bold; /* ; highlight agcy id*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 38; /* ; required field*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJC

// edit gpc
Function KO0ESJD()
  ;
  ;
  if (KO0EW01.XGPCD in XGPTBL.XGPCD) /* ; gpc code in table*/
    KO0EW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] != "A") /* ; gpc status not active*/
      set KO0EM015.XGPCD cursor, bold; /* ; highlight gpc*/
      KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
      KO0EW01.KO0EWMNO = 92; /* ; set w.s. error nbr*/
    else
      if (XGPTBL.COCMFL[sysVar.arrayIndex] != "Y") /* ; gpc is non-comm*/
        set KO0EM015.XGPCD cursor, bold; /* ; highlight gpc*/
        KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
        KO0EW01.KO0EWMNO = 169; /* ; set w.s. error nbr*/
      end
    end
  else
    set KO0EM015.XGPCD cursor, bold; /* ; highlight gpc*/
    KO0EW01.XGPDESC = " "; /* ;reset w.s. gpc desc*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 173; /* ; set w.s. error nbr*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJD

// edit rep
Function KO0ESJE()
  ;
  ;
  set SQLCA empty;
  set VRAGCY02 empty;
  ;
  VRAGCY02.SM1AGYID = KO0EW01.SM1AGYID;
  VRAGCY02.SM4REPID = KO0EW01.SM4REPID;
  call "IO0400" ("S3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; successful open*/
    KO0ESJF(); /* ; fetch rep rec*/
  else
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    TA1REC.TA1DBASE = "DSLSMN";
    TA1REC.TA1TBLVU = "VRAGCY02";
    TA1REC.TA1LOCAT[1] = "KO0ESJE";
    TA1REC.TA1LOCAT[2] = "IO0400";
    XSKO001(); /* abort*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJE

// fetch sm5rec
Function KO0ESJF()
  ;
  ;
  set SQLCA empty;
  ;
  call "IO0400" ("N3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; successful fetch*/
    KO0ESJG(); /* ; edit comm rate ind*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* ; rec not found*/
      set KO0EM015.SM4REPID cursor, bold;
      set KO0EM015.SM1AGYID bold;
      KO0EW01.KO0EWKEF = "Y";
      KO0EW01.KO0EWMNO = 6;
    else
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VRAGCY02";
      TA1REC.TA1LOCAT[1] = "KO0ESJF";
      TA1REC.TA1LOCAT[2] = "IO0400";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJF

// validate comm rate/status
Function KO0ESJG()
  ;
  ;
  KO0EW01.XXXFSTNM = VRAGCY02.XXXFSTNM;
  KO0EW01.XXXLSTNM = VRAGCY02.XXXLSTNM;
  KO0EW01.XXXMDINT = VRAGCY02.XXXMDINT;
  ;
  if (VRAGCY02.SM5COMIN != "Y") /* ; comm rate ind not 'y'*/
    set KO0EM015.SM4REPID cursor, bold; /* ; highlight rep*/
    set KO0EM015.SM1AGYID bold; /* ; highlight agcy*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 162; /* ; set error message*/
  else
    if (VRAGCY02.XXXSTAT != "A") /* ; status not 'a'*/
      KO0EW01.KO0EWKWF = "Y"; /* ; set key warning flag*/
      KO0EW01.KO0EWMNO = 202;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJG

// edit agcy
Function KO0ESJH()
  ;
  ;
  set SQLCA empty;
  set SM1REC empty;
  ;
  SM1REC.SM1AGYID = KO0EW01.SM1AGYID;
  ;
  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    KO0ESJI(); /* ; edit pay code/status*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set KO0EM015.SM1AGYID cursor, bold;
      KO0EW01.KO0EWKEF = "Y";
      KO0EW01.KO0EWMNO = 4;
    else
      TA1REC.TA1DBASE = "DSLSMN";
      TA1REC.TA1TBLVU = "VSAGCY01";
      TA1REC.TA1LOCAT[1] = "KO0ESJH";
      TA1REC.TA1LOCAT[2] = "IO0050";
      XSKO001(); /* abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJH

// edit pay code/status
Function KO0ESJI()
  ;
  ;
  KO0EW01.SM1AGYNM = SM1REC.SM1AGYNM;
  ;
  if (SM1REC.SM1PAYCD != "NP") /* ; pay code not 'np'*/
    set KO0EM015.SM1AGYID cursor, bold; /* ; highlight agcy*/
    KO0EW01.KO0EWKEF = "Y"; /* ; set key error flag*/
    KO0EW01.KO0EWMNO = 168; /* ; set error message*/
  else
    if (SM1REC.SM1STAT != "A") /* ; status not 'a'*/
      KO0EW01.KO0EWKWF = "Y"; /* ; set key warning flag*/
      KO0EW01.KO0EWMNO = 203;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJI

// get split sched
Function KO0ESJJ()
  ;
  ;
  KO0EW01.KO0EWHEF = "N"; /* ; set history exists flag*/
  ;
  set KO0EW02 empty; /* ; reset split sched array*/
  ;
  if (KO0EW01.SM1AGYID != "    "
   && KO0EW01.SM4REPID != 0
   && KO0EW01.XGPCD != " ")
    ;
    set SQLCA empty;
    set KOEREC empty;
    ;
    KOEREC.SM1AGYID = KO0EW01.SM1AGYID;
    KOEREC.SM4REPID = KO0EW01.SM4REPID;
    KOEREC.XGPCD = KO0EW01.XGPCD;
    KO0EW02.KO0EWTOT = 1;
    KO0EW02.KO0EWTTL = 0;
    KO0EW01.KO0EWSB1 = 0;
    KO0EW01.KO0EWSB2 = 0;
    ;
    call "IO0700" ("SS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      ;
      while (SQLCA.VAGen_SQLCODE == 0
       && KO0EW02.KO0EWTOT < 100)
        KO0ESJK();
      end
      ;
      call "IO0700" ("CS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
      ;
    else
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESJJ";
      TA1REC.TA1LOCAT[2] = "IO0700";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency*/
   && KO0EW01.SM4REPID != 0   /* ; map has rep*/
   && KO0EW01.XGPCD != " ")   /* ; map has gpc*/
    KO0EM015.KO0EMMM3 = KO0EW02.KO0EWTTL;
    set KO0EM015.KO0EMMM3 initialAttributes;
    set KO0EM015.KO0EMMM4 initialAttributes;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJJ

// fetch koerec
Function KO0ESJK()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  call "IO0700" ("SN", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; fetch was successful*/
    if (KOEREC.KUCCOID != -1 /* ; rec has customer*/
     || KOEREC.XDVCD != "**" /* ; rec has division*/
     || KOEREC.XOBCD != "**") /* ; rec has base ot*/
      KO0ESJL(); /* ; process koerec*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJK

// process koerec
Function KO0ESJL()
  ;
  ;
  if (KO0EW01.KO0EWCHF == "C"            
   /* ; current/history flag = c*/
   && KOEREC.KOEASXMO < KO0EW01.KO0EWCSM /* ; term mo < curr stmt mo*/
   && KOEREC.KOEASXMO != 0)              /* ; term mo > 0*/
    KO0EW01.KO0EWHEF = "Y"; /* ; set history exists flag*/
  else
    KO0ESJM(); /* ; move koerec to array*/
  end
  ;
   /* *************************************************************/
  ;
end // end KO0ESJL

// move koerec to array
Function KO0ESJM()
  ;
  ;
  if (KOEREC.KUCCOID != KO0EW01.KUCCOID) /* ; new customer*/
    KO0ESJN(); /* ; set array total*/
    KO0ESJP(); /* ; check ko0ew03*/
  end
  ;
  KO0EW02.KO0EWTOT = KO0EW02.KO0EWTOT + 1;
  KO0EW02.KO0EWTTL = KO0EW02.KO0EWTTL + 1;
  KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
  ;
  KO0EW02.XGPCD[KO0EWTOT] = KOEREC.XGPCD;
  KO0EW02.KUCCOID[KO0EWTOT] = KOEREC.KUCCOID;
  KO0EW02.XDVCD[KO0EWTOT] = KOEREC.XDVCD;
  KO0EW02.XOBCD[KO0EWTOT] = KOEREC.XOBCD;
  KO0EW02.KO0EWRPC[KO0EWTOT] = 100 - KOEREC.KOEASPCT;
  KO0EW02.KO0EWAPC[KO0EWTOT] = 0 + KOEREC.KOEASPCT;
  KO0EW02.KO0EWBMO[KO0EWTOT] = KOEREC.KOEASBMO;
  KO0EW02.KO0EWXMO[KO0EWTOT] = KOEREC.KOEASXMO;
  KO0EW02.ZZZSDT[KO0EWTOT] = KOEREC.ZZZSDT;
  KO0EW02.ZZZCHGCT[KO0EWTOT] = KOEREC.ZZZCHGCT;
  ;
  KO0EW01.KO0EWSFF = "Y";
  ;
  if (KO0EW01.KO0EWSB1 >= 5)
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 5;
    KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB2 + 5;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJM

// process new cust
Function KO0ESJN()
  ;
  ;
  if (KOEREC.KUCCOID != KO0EW01.KUCCOID) /* ; new customer*/
    ;
    KO0ESJO(); /* ; check kucgrpid*/
    ;
    if (KUCREC.KUCGRPID != KO0EW01.KUCGRPID /* ; new group id*/
     || KUCREC.KUCGRPID == 0)               /* ; no group id*/
      if (KO0EW02.KO0EWTOT > 1) /* ; not first rec in array*/
        while (KO0EW01.KO0EWSB1 < 5)
          KO0EW02.KO0EWTOT = KO0EW02.KO0EWTOT + 1;
          KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
        end
        ;
        KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB2 + 5;
        KO0EW01.KO0EWSB1 = 0;
        ;
      end
    end
  end
  ;
  KO0EW01.KUCCOID = KOEREC.KUCCOID;
  KO0EW01.KUCGRPID = KUCREC.KUCGRPID;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJN

// check kucgrpid
Function KO0ESJO()
  ;
  ;
  if (KOEREC.KUCCOID == -1)
    KUCREC.KUCGRPID = 0; /* ; set group id*/
  else
    set KUCREC empty;
    set SQLCA empty;
    ;
    KUCREC.KUCCOID = KOEREC.KUCCOID;
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE == 100)
      TA1REC.TA1DBASE = "DCUST   ";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1LOCAT[1] = "KO0ESJO";
      TA1REC.TA1LOCAT[2] = "IO0240";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJO

// check ko0ew03
Function KO0ESJP()
  ;
  ;
  if (KOEREC.KUCCOID == KO0EW03.KUCCOID)
    KO0EW02.KO0EWPOS = KO0EW01.KO0EWSB2;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJP

// move array to map map
Function KO0ESJQ()
  ;
  ;
  KO0EW01.KO0EWSB1 = 5; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map sched*/
    KO0ESJR(); /* ; move row to row*/
  end
  ;
  KO0ESJS();
  KO0EW01.KO0EWEF1 = "N"; /* ; reset error 1 flag*/
  KO0EW01.KO0EWSB1 = 1; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 <= 5 /* ; until top of map sched*/
   && KO0EW01.KO0EWEF1 == "N") /* ; or error flag 1 = 'y'*/
    if (KO0EM015.KO0EMCID[KO0EWSB1] != 0)
      KO0EW03.KUCCOID = KO0EM015.KO0EMCID[KO0EWSB1];
      KO0EW01.KO0EWEF1 = "Y";
    else
      KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
    end
  end
  ;
  if (KO0EW01.KO0EWEF1 == "N") /* ; no map cust id*/
    set KO0EM015.KO0EMMM1 skip, invisible; /* ; darken map mssg 1*/
    set KO0EM015.KO0EMMM2 skip, invisible; /* ; darken map mssg 2*/
  else
    KO0EW01.KO0EWSB1 = 0; /* ; reset subscript 1*/
    KO0EW01.KO0EWSB2 = 1; /* ; reset subscript 2*/
    KO0EW01.KO0EWEF2 = "N"; /* ; set error 2 flag*/
    while (KO0EW01.KO0EWSB2 <= KO0EW02.KO0EWTOT /* ; until end of array*/
     && KO0EW01.KO0EWEF2 == "N") /* ; error flag 2 = 'y'*/
      if (KO0EW02.KUCCOID[KO0EWSB2] != KO0EW03.KUCCOID)
        KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB2 + 1;
      else
        while (KO0EW01.KO0EWSB2 <= KO0EW02.KO0EWTOT
         && KO0EW02.KUCCOID[KO0EWSB2] != 0)
          KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
          KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB2 + 1;
          set KO0EM015.KO0EMMM1 initialAttributes;
          set KO0EM015.KO0EMMM2 initialAttributes;
          KO0EM015.KO0EMMM1 = KO0EW01.KO0EWSB1;
          KO0EW01.KO0EWEF2 = "Y";
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJQ

// move array row to map row
Function KO0ESJR()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  KO0EM015.KO0EMCID[KO0EWSB1] = KO0EW02.KUCCOID[KO0EWSB2];
  KO0EM015.XDVCD[KO0EWSB1] = KO0EW02.XDVCD[KO0EWSB2];
  KO0EM015.XOBCD[KO0EWSB1] = KO0EW02.XOBCD[KO0EWSB2];
  KO0EM015.KO0EMRPC[KO0EWSB1] = KO0EW02.KO0EWRPC[KO0EWSB2];
  KO0EM015.KO0EMAPC[KO0EWSB1] = KO0EW02.KO0EWAPC[KO0EWSB2];
  ;
  if (KO0EW02.KO0EWBMO[KO0EWSB2] == 0)
    KO0EM015.KO0EMBMO[KO0EWSB1] = " ";
  else
    KO0EW01.KO0EWDTB = KO0EW02.KO0EWBMO[KO0EWSB2];
    KO0EW01.KO0EWYYA = KO0EW01.KO0EWYYB;
    KO0EW01.KO0EWMMA = KO0EW01.KO0EWMMB;
    KO0EW01.KO0EWFLA = "/";
    KO0EM015.KO0EMBMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
  end
  ;
  if (KO0EW02.KO0EWXMO[KO0EWSB2] == 0)
    KO0EM015.KO0EMXMO[KO0EWSB1] = " ";
  else
    KO0EW01.KO0EWDTB = KO0EW02.KO0EWXMO[KO0EWSB2];
    KO0EW01.KO0EWYYA = KO0EW01.KO0EWYYB;
    KO0EW01.KO0EWMMA = KO0EW01.KO0EWMMB;
    KO0EW01.KO0EWFLA = "/";
    KO0EM015.KO0EMXMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
  end
  ;
  KO0EM015.KO0EMRCD[KO0EWSB1] = " ";
  ;
  KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJR

// move map cust to ko0ew03
Function KO0ESJS()
  ;
  ;
  set KO0EM015.KO0EMMM1 skip, invisible; /* ; darken map mssg 1*/
  set KO0EM015.KO0EMMM2 skip, invisible; /* ; darken map mssg 2*/
  ;
  KO0EW01.KO0EWSB1 = 1; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 <= 5) /* ; until end of map sched*/
    if (KO0EM015.KO0EMCID[KO0EWSB1] == 0)
      KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1; /* ; increment subscript*/
    else
      KO0EW03.KUCCOID = KO0EM015.KO0EMCID[KO0EWSB1];
      KO0EW01.KO0EWSB1 = 6;
      KO0EW01.KO0EWSB2 = 0;
      ;
      if (KO0EW03.KUCCOID in KO0EW02.KUCCOID)
        KO0EW01.KO0EWSB3 = sysVar.arrayIndex; /* no map cust id*/
        while (KO0EW02.KO0EWTOT >= KO0EW01.KO0EWSB3
         && KO0EW02.KUCCOID[KO0EWSB3] != 0)
          KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB2 + 1;
          KO0EW01.KO0EWSB3 = KO0EW01.KO0EWSB3 + 1;
        end
      end
      ;
      KO0EM015.KO0EMMM1 = KO0EW01.KO0EWSB2;
      set KO0EM015.KO0EMMM1 initialAttributes;
      set KO0EM015.KO0EMMM2 initialAttributes;
      ;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJS

// set pf key attributes
Function KO0ESJT()
  ;
  ;
  if (KO0EW01.SM1AGYID == " " /* ; no map agency id*/
   && KO0EW01.SM4REPID == 0   /* ; no map rep id*/
   && KO0EW01.XGPCD == " ")   /* ; no map gpc*/
    KO0EW01.KO0EWSAF = "N"; /* ; scroll allowed = n*/
    set KO0EM015.KO0EMP07 skip, invisible;
    set KO0EM015.KO0EMP08 skip, invisible;
  else
    if (KO0EW01.KO0EWKEF == "Y" /* ; key errors exist*/
     && KO0EW01.KO0EWSFF == "N") /* ; no sched recs found*/
      KO0EW01.KO0EWSAF = "N"; /* ; scroll allowed = 'n'*/
      set KO0EM015.KO0EMP07 skip, invisible;
      set KO0EM015.KO0EMP08 skip, invisible;
    else
      KO0EW01.KO0EWSAF = "Y"; /* ; scroll allowed = 'y'*/
      set KO0EM015.KO0EMP07 initialAttributes;
      set KO0EM015.KO0EMP08 initialAttributes;
    end
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency id*/
   && KO0EW01.SM4REPID != 0   /* ; map has rep id*/
   && KO0EW01.XGPCD != " "    /* ; map has gpc*/
   && KO0EW01.KO0EWKEF == "N") /* ; no map errors*/
    KO0EW01.KO0EWEAF = "Y"; /* ; edit allowed = yes*/
    set KO0EM015.KO0EMP12 initialAttributes;
  else
    KO0EW01.KO0EWEAF = "N"; /* ; edit allowed = no*/
    set KO0EM015.KO0EMP12 skip, invisible;
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency id*/
   && KO0EW01.SM4REPID != 0   /* ; map has rep id*/
   && KO0EW01.XGPCD != " ")   /* ; map has gpc*/
    if (KO0EW01.KO0EWCHF == "H")
                                   /* ; current/history flag = h*/
      KO0EW01.KO0EWFAF = "Y"; /* ; set funct allowed flag*/
      KO0EM015.KO0EMP16 = "16:CURRENT"; /* ; set pf16 key to CURRENT*/
      set KO0EM015.KO0EMP16 initialAttributes;
    else
      if (KO0EW01.KO0EWHEF == "Y")
        KO0EM015.KO0EMP16 = "16:HISTORY"; /* ; set pf16 to history*/
        KO0EW01.KO0EWFAF = "Y"; /* ; set funct allowed flag*/
        set KO0EM015.KO0EMP16 initialAttributes;
      else
        KO0EW01.KO0EWFAF = "N";
                                   /* ; reset funct allowed flag*/
        KO0EM015.KO0EMP16 = " "; /* ; set pf16 KEY blank*/
        set KO0EM015.KO0EMP16 skip, invisible;
      end
    end
  end
  ;
  if (KO0EW01.SM1AGYID != " " /* ; map has agency id*/
   && KO0EW01.SM4REPID != 0   /* ; map has rep id*/
   && KO0EW01.XGPCD != " "    /* ; map has gpc*/
   && KO0EW01.KO0EWSFF == "Y" /* ; sched recs found*/
   && KO0EW01.KO0EWCHF == "H")
                                   /* ; current/history flag = h*/
    KO0EW01.KO0EWDAF = "Y"; /* ; deletes allowed = yes*/
    set KO0EM015.KO0EMP17 initialAttributes;
  else
    KO0EW01.KO0EWDAF = "N"; /* ; deletes allowed = no*/
    set KO0EM015.KO0EMP17 skip, invisible;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESJT

// get begin date
Function KO0ESKA()
  ;
  ;
  if (KO0EM015.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin date*/
    KO0EW01.KO0EWDT1 = KO0EM015.KO0EMBMO[KO0EWSB1];
    if (KO0EW01.KO0EWFL1 == "-"
     || KO0EW01.KO0EWFL1 == "/")
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM1;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY1;
      KO0EM015.KO0EMBMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    else
      KO0EW01.KO0EWDT2 = KO0EM015.KO0EMBMO[KO0EWSB1];
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM2;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY2;
      KO0EM015.KO0EMBMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESKA

// get end date
Function KO0ESKB()
  ;
  ;
  if (KO0EM015.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end date*/
    KO0EW01.KO0EWDT1 = KO0EM015.KO0EMXMO[KO0EWSB1];
    if (KO0EW01.KO0EWFL1 == "-"
     || KO0EW01.KO0EWFL1 == "/")
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM1;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY1;
      KO0EM015.KO0EMXMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    else
      KO0EW01.KO0EWDT2 = KO0EM015.KO0EMXMO[KO0EWSB1];
      KO0EW01.KO0EWMMA = KO0EW01.KO0EWMM2;
      KO0EW01.KO0EWFLA = "-";
      KO0EW01.KO0EWYYA = KO0EW01.KO0EWYY2;
      KO0EM015.KO0EMXMO[KO0EWSB1] = KO0EW01.KO0EWDTA;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESKB

// get cust name
Function KO0ESKC()
  ;
  ;
  KO0EM015.KO0EMCNM[KO0EWSB1] = " ";
  ;
  if (KO0EM015.SM1AGYID != " " /* ; map has agcy*/
   && KO0EM015.SM4REPID != 0   /* ; map has rep*/
   && KO0EM015.XGPCD != " "    /* ; map has gpc*/
   && KO0EW01.KO0EWKEF == "N") /* ; map has no key errors*/
    if (KO0EM015.KO0EMCID[KO0EWSB1] != 0
     || KO0EM015.XDVCD[KO0EWSB1] != " "
     || KO0EM015.XOBCD[KO0EWSB1] != " "
     || KO0EM015.KO0EMRPC[KO0EWSB1] != 0
     || KO0EM015.KO0EMAPC[KO0EWSB1] != 0
     || KO0EM015.KO0EMBMO[KO0EWSB1] != " "
     || KO0EM015.KO0EMXMO[KO0EWSB1] != " ")
      if (KO0EM015.KO0EMCID[KO0EWSB1] == -1 /* ; cust = -1*/
       || KO0EM015.KO0EMCID[KO0EWSB1] == 0) /* ; cust = 0*/
        KO0EM015.KO0EMCID[KO0EWSB1] = -1;
        KO0EM015.KO0EMCNM[KO0EWSB1] = "ALL COMPANIES";
      else
        ;
        set KUCREC empty;
        set SQLCA empty;
        ;
        KUCREC.KUCCOID = KO0EM015.KO0EMCID[KO0EWSB1];
        ;
        call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
        ;
        if (SQLCA.VAGen_SQLCODE == 0)
          KO0EM015.KO0EMCNM[KO0EWSB1] = KUCREC.KUCCONM;
        else
          if (SQLCA.VAGen_SQLCODE != 100)
            TA1REC.TA1DBASE = "DCUST   ";
            TA1REC.TA1TBLVU = "VCMPNY01";
            TA1REC.TA1LOCAT[1] = "KO0ESKC";
            TA1REC.TA1LOCAT[2] = "IO0240";
            XSKO001(); /* ; abort*/
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESKC

// get div abrv
Function KO0ESKD()
  ;
  ;
  KO0EM015.XDVABRV[KO0EWSB1] = " ";
  ;
  if (KO0EM015.SM1AGYID != " " /* ; map has agency*/
   && KO0EM015.SM4REPID != " " /* ; map has rep*/
   && KO0EM015.XGPCD != " "    /* ; map has gpc*/
   && KO0EW01.KO0EWKEF == "N") /* ; map has no key errors*/
    if (KO0EM015.KO0EMCID[KO0EWSB1] != 0
     || KO0EM015.XDVCD[KO0EWSB1] != " "
     || KO0EM015.XOBCD[KO0EWSB1] != " "
     || KO0EM015.KO0EMRPC[KO0EWSB1] != 0
     || KO0EM015.KO0EMAPC[KO0EWSB1] != 0
     || KO0EM015.KO0EMBMO[KO0EWSB1] != " "
     || KO0EM015.KO0EMXMO[KO0EWSB1] != " ")
      if (KO0EM015.XDVCD[KO0EWSB1] == "**" /* ; map = all div codes*/
       || KO0EM015.XDVCD[KO0EWSB1] == "  ") /* ; map = no div code*/
        KO0EM015.XDVCD[KO0EWSB1] = "**";
        KO0EM015.XDVABRV[KO0EWSB1] = "ALL";
      else
        if (KO0EM015.XDVCD[KO0EWSB1] in XDVTBL.XDVCD)
          KO0EM015.XDVABRV[KO0EWSB1] = XDVTBL.XDVABRV[sysVar.arrayIndex];
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESKD

// get base ot abrv
Function KO0ESKE()
  ;
  ;
  KO0EM015.XOBABRV[KO0EWSB1] = " ";
  ;
  if (KO0EM015.SM1AGYID != " " /* ; map has agency*/
   && KO0EM015.SM4REPID != " " /* ; map has rep*/
   && KO0EM015.XGPCD != " "    /* ; map has gpc*/
   && KO0EW01.KO0EWKEF == "N") /* ; map has no key errors*/
    if (KO0EM015.KO0EMCID[KO0EWSB1] != 0
     || KO0EM015.XDVCD[KO0EWSB1] != " "
     || KO0EM015.XOBCD[KO0EWSB1] != " "
     || KO0EM015.KO0EMRPC[KO0EWSB1] != 0
     || KO0EM015.KO0EMAPC[KO0EWSB1] != 0
     || KO0EM015.KO0EMBMO[KO0EWSB1] != " "
     || KO0EM015.KO0EMXMO[KO0EWSB1] != " ")
      if (KO0EM015.XOBCD[KO0EWSB1] == "**" /* ; map = all bot codes*/
       || KO0EM015.XOBCD[KO0EWSB1] == "  ") /* ; map = no bot code*/
        KO0EM015.XOBCD[KO0EWSB1] = "**";
        KO0EM015.XOBABRV[KO0EWSB1] = "ALL";
      else
        if (KO0EM015.XOBCD[KO0EWSB1] in XOBTBL.XOBCD)
          KO0EM015.XOBABRV[KO0EWSB1] = XOBTBL.XOBABRV[sysVar.arrayIndex];
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESKE

// set row attributes
Function KO0ESKF()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] == " ") /* ; no array gpc code*/
    KO0ESKG(); /* ; set add attributes*/
  else
    KO0ESKH(); /* ; set change attributes*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESKF

// set add attributes
Function KO0ESKG()
  ;
  ;
  if (KO0EW01.KO0EWEAF == "Y") /* ; edits are allowed*/
    set KO0EM015.KO0EMCID[KO0EWSB1] cursor, normal;
    set KO0EM015.XDVCD[KO0EWSB1] normal;
    set KO0EM015.XOBCD[KO0EWSB1] normal;
    set KO0EM015.KO0EMRPC[KO0EWSB1] normal;
    set KO0EM015.KO0EMAPC[KO0EWSB1] normal;
    set KO0EM015.KO0EMBMO[KO0EWSB1] normal;
    set KO0EM015.KO0EMXMO[KO0EWSB1] normal;
  else
    set KO0EM015.KO0EMCID[KO0EWSB1] skip, invisible;
    set KO0EM015.XDVCD[KO0EWSB1] skip, invisible;
    set KO0EM015.XOBCD[KO0EWSB1] skip, invisible;
    set KO0EM015.KO0EMRPC[KO0EWSB1] skip, invisible;
    set KO0EM015.KO0EMAPC[KO0EWSB1] skip, invisible;
    set KO0EM015.KO0EMBMO[KO0EWSB1] skip, invisible;
    set KO0EM015.KO0EMXMO[KO0EWSB1] skip, invisible;
  end
  ;
  set KO0EM015.KO0EMRCD[KO0EWSB1] skip, invisible;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESKG

// set change attributes
Function KO0ESKH()
  ;
  ;
  if (KO0EW01.KO0EWEAF == "Y") /* ; edits are allowed*/
    set KO0EM015.KO0EMCID[KO0EWSB1] cursor, normal;
    set KO0EM015.XDVCD[KO0EWSB1] normal;
    set KO0EM015.XOBCD[KO0EWSB1] normal;
    set KO0EM015.KO0EMRPC[KO0EWSB1] normal;
    set KO0EM015.KO0EMAPC[KO0EWSB1] normal;
    set KO0EM015.KO0EMBMO[KO0EWSB1] normal;
    set KO0EM015.KO0EMXMO[KO0EWSB1] normal;
    set KO0EM015.KO0EMRCD[KO0EWSB1] normal;
  else
    set KO0EM015.KO0EMCID[KO0EWSB1] initialAttributes;
    set KO0EM015.XDVCD[KO0EWSB1] initialAttributes;
    set KO0EM015.XOBCD[KO0EWSB1] initialAttributes;
    set KO0EM015.KO0EMRPC[KO0EWSB1] initialAttributes;
    set KO0EM015.KO0EMAPC[KO0EWSB1] initialAttributes;
    set KO0EM015.KO0EMBMO[KO0EWSB1] initialAttributes;
    set KO0EM015.KO0EMXMO[KO0EWSB1] initialAttributes;
    set KO0EM015.KO0EMRCD[KO0EWSB1] skip, invisible;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESKH

// validate fast path
Function KO0ESLA()
  ;
  ;
  if (converseVar.eventKey is enter)
    COMMAREA.CATOAP = KO0EM015.CATOAP;
    COMMAREA.CAITEM = KO0EM015.CAITEM;
    XSEXIT();
    set KO0EM015.CATOAP cursor, bold;
  else
    set KO0EM015.CATOAP cursor, bold;
    KO0EW01.KO0EWMNO = 1;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESLA

// validate function
Function KO0ESLB()
  ;
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function*/
  ;
  if (converseVar.eventKey is enter) /* ; user pressed enter*/
    KO0EW01.KO0EWFN1 = "U"; /* ; function = update*/
  else
    if (converseVar.eventKey is pf3) /* ; user pressed pf3*/
      KO0EW01.KO0EWFN1 = "X"; /* ; function = exit*/
    else
      if (converseVar.eventKey is pf7 /* ; user pressed pf7*/
       && KO0EW01.KO0EWSAF == "Y")    /* ; scrolling allowed*/
        KO0EW01.KO0EWFN1 = "B"; /* ; function = back*/
      else
        if (converseVar.eventKey is pf8 /* ; user pressed pf8*/
         && KO0EW01.KO0EWSAF == "Y")    /* ; scrolling allowed*/
          KO0EW01.KO0EWFN1 = "F"; /* ; function = frwd*/
        else
          if (converseVar.eventKey is pf12 /* ; user pressed pf12*/
           && KO0EW01.KO0EWEAF == "Y")     /* ; edits are allowed*/
            KO0EW01.KO0EWFN1 = "E"; /* ; function = edit*/
          else
            if (converseVar.eventKey is pf16 /* ; user pressed pf16*/
             && KO0EW01.KO0EWFAF == "Y")     /* ; function is allowed*/
              KO0EW01.KO0EWFN1 = "H"; /* ; function = history*/
            else
              if (converseVar.eventKey is pf17 /* ; ; user pressed pf17*/
               && KO0EW01.KO0EWDAF == "Y")     /* ; deletes are allowed*/
                KO0EW01.KO0EWFN1 = "D"; /* ; function = delete*/
              else
                KO0EW01.KO0EWMNO = 2; /* ; invalid pf key*/
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESLB

// process no changes
Function KO0ESM0()
  ;
  ;
  if (KO0EW01.KO0EWFN1 == "B")
                                   /* ; function 1 = scroll back*/
    KO0ESM1(); /* ; scroll back*/
  else
    if (KO0EW01.KO0EWFN1 == "D") /* ; function 1 = delete*/
      KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
      KO0EW01.KO0EWFN2 = "D"; /* ; set function 2*/
      KO0EW01.KO0EWMNO = 118; /* ; display delete mssg*/
    else
      if (KO0EW01.KO0EWFN1 == "E") /* ;     ; function 1 = edit*/
        KO0EW01.KO0EWMNO = 63; /* ; no changes were made*/
        KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
        KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
      else
        if (KO0EW01.KO0EWFN1 == "F")
                                   /* ; function 1 = scroll frwd*/
          KO0ESM2(); /* ; scroll frwd*/
        else
          if (KO0EW01.KO0EWFN1 == "H") /* ; function 1 = history*/
            KO0ESM3();
          else
            KO0ESM4(); /* ; update screen*/
          end
        end
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESM0

// scroll back
Function KO0ESM1()
  ;
  ;
  if (KO0EW02.KO0EWPOS == 0) /* ; array pos at top*/
    KO0EW01.KO0EWMNO = 70;
  else
    KO0EW02.KO0EWPOS = KO0EW02.KO0EWPOS - 5; /* ; set position in array*/
    KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  end
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function 1 flag*/
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2 flag*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESM1

// scroll frwd
Function KO0ESM2()
  ;
  ;
  KO0EW01.KO0EWSB1 = KO0EW02.KO0EWPOS + 5; /* ; check last map line*/
  ;
  if (KO0EW01.KO0EWSB1 > 100) /* ; array is full*/
    KO0EW01.KO0EWMNO = 68;
  else
    if (KO0EW01.KO0EWSB1 > KO0EW02.KO0EWTOT /* ; at end of array*/
     && KO0EW01.KO0EWKEF == "Y")            /* ; adds are not allowed*/
      KO0EW01.KO0EWMNO = 68;
    else
      if (KO0EW01.KO0EWSB1 <= KO0EW02.KO0EWTOT)
        KO0EW02.KO0EWPOS = KO0EW02.KO0EWPOS + 5;
        KO0EW01.KO0EWBMF = "Y";
      else
        KO0EW01.KO0EWEF1 = "N"; /* ; reset error flag*/
        KO0EW01.KO0EWSB1 = 1; /* ; reset subscript 1*/
        while (KO0EW01.KO0EWEF1 == "N" /* ; until err flag = 'y'*/
         && KO0EW01.KO0EWSB1 <= 5) /* ; and subscript > 5*/
          KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
          ;
          if (KO0EW02.XGPCD[KO0EWSB2] != " ")
            KO0EW01.KO0EWEF1 = "Y";
          else
            KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
          end
        end
        ;
        if (KO0EW01.KO0EWEF1 == "N")
          KO0EW01.KO0EWMNO = 68;
        else
          KO0EW02.KO0EWPOS = KO0EW02.KO0EWPOS + 5;
          KO0EW01.KO0EWBMF = "Y";
        end
      end
    end
  end
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESM2

// change to history/current
Function KO0ESM3()
  ;
  ;
  KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  KO0EW01.KO0EWNAF = "Y"; /* ; set new array flag*/
  ;
  if (KO0EW01.KO0EWCHF == "C") /* ; function = exit*/
    KO0EW01.KO0EWCHF = "H";
                                   /* ; set current/history flag*/
    KO0EM015.KO0EMTTL = "HISTORY"; /* ; set map title*/
    KO0EM015.KO0EMP16 = "16:CURRENT"; /* ; set map pf16*/
  else
    KO0EW01.KO0EWCHF = "C";
                                   /* ; set current/history flag*/
    KO0EM015.KO0EMTTL = "CURRENT"; /* ; set map title*/
    KO0EM015.KO0EMP16 = "16:HISTORY"; /* ; set map pf16*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESM3

// update screen
Function KO0ESM4()
  ;
  ;
  if (KO0EW01.KO0EWFN1 == "X") /* ; function = exit*/
    KO0EW01.KO0EWAPP = "KO0E005"; /* ; set next application*/
    KO0EW01.XGPCD = " "; /* ; reset w.s. gpc*/
    KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
    KO0EW01.KO0EWNKF = "Y"; /* ; set new key flag*/
    KO0EW01.KO0EWEKF = "Y"; /* ; set edit key flag*/
    KO0EW01.KO0EWNAF = "Y"; /* ; set new key flag*/
    KO0EW01.KO0EWFN1 = " "; /* ; reset function 1*/
    KO0EW01.KO0EWFN2 = " "; /* ; reset function 2*/
  else
    if (KO0EW01.KO0EWFN2 == "D")
                                   /* ; function flag 2 = delete*/
      KO0ESM5(); /* ; delete split sched*/
    else
      KO0ESM8(); /* ; check ko0ew03*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESM4

// delete split sched recs
Function KO0ESM5()
  ;
  ;
  KO0EW01.KO0EWFN1 = " "; /* ; reset function 1 flag*/
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2 flag*/
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "KO0ESM5";
    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    COMMAREA.CATOAP = "KO0A";
    XSEXIT();
    exit program;
  end
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EW01.SM1AGYID;
  KOEREC.SM4REPID = KO0EW01.SM4REPID;
  KOEREC.XGPCD = KO0EW01.XGPCD;
  ;
  call "IO0700" ("SS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; if successful return*/
    ;
    while (SQLCA.VAGen_SQLCODE == 0) /* ; until unsuccessful rtn*/
      KO0ESM6(); /* ; fetch next rec*/
    end
    ;
    call "IO0700" ("CS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
    ;
  else
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESM5";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* abort*/
  end
  ;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* ; commit db changes*/
  ;
  KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  KO0EW01.KO0EWNKF = "Y"; /* ; set new key flag*/
  KO0EW01.KO0EWNAF = "Y"; /* ; set new array flag*/
  KO0EW01.KO0EWMNO = 119; /* ; set w.s. mssg nbr*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESM5

// fetch next koerec
Function KO0ESM6()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  call "IO0700" ("SN", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; fetch was successful*/
    if (KOEREC.KUCCOID != -1 /* ; rec has cust*/
     || KOEREC.XDVCD != "**" /* ; rec has div*/
     || KOEREC.XOBCD != "**") /* ; rec has base ot*/
      KO0ESM7(); /* ; delete row*/
    end
  else
    if (SQLCA.VAGen_SQLCODE != 100) /* ; at end of recs*/
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESM6";
      TA1REC.TA1LOCAT[2] = "IO0700";
      XSKO001(); /* abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESM6

// delete koerec
Function KO0ESM7()
  ;
  ;
  set KOAREC empty;
  ;
  KOAREC.KOATBLCD = 10;
  KOAREC.KOAACTTY = "4";
  KOAREC.XXXTBLNM = "VASSCH01";
  KOAREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOAREC.ZZHHMMSS = TA2REC.TA2TIMEN;
  KOAREC.SM1AGYID = KOEREC.SM1AGYID;
  KOAREC.SM4REPID = KOEREC.SM4REPID;
  KOAREC.XGPCD = KOEREC.XGPCD;
  KOAREC.KUCCOID = KOEREC.KUCCOID;
  KOAREC.XDVCD = KOEREC.XDVCD;
  KOAREC.XOBCD = KOEREC.XOBCD;
  KOAREC.KOEASPCT = KOEREC.KOEASPCT;
  KOAREC.KOACRSDT = KOEREC.ZZZSDT;
  KOAREC.XXXUSRID = COMMAREA.CAUSERID;
   /* ***MOVE 'MD' TO KOAREC.XRCCD;  /* 02-24-94*/
  ;
  set SQLCA empty;
  ;
  call "IO0700" ("D ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESM7";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* abort*/
  else
    ;
    set SQLCA empty;
    ;
    call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1DBASE = "DCOMM ";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESM7  ";
      TA1REC.TA1LOCAT[1] = "IO0630   ";
      XSKO001(); /* abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESM7

// check ko0ew03
Function KO0ESM8()
  ;
  ;
  KO0EW01.KO0EWEF1 = "N";
  KO0EW01.KO0EWSB1 = 1;
  ;
  while (KO0EW01.KO0EWEF1 == "N"
   && KO0EW01.KO0EWSB1 <= 10)
    if (KO0EW03.XGPCD[KO0EWSB1] != " "
     && KO0EW03.KO0EWSC1[KO0EWSB1] != " ")
      KO0EW03.KO0EWSC1[KO0EWSB1] = " ";
      KO0EW01.SM1AGYID = KO0EW03.SM1AGYID;
      KO0EW01.SM4REPID = KO0EW03.SM4REPID;
      KO0EW01.XGPCD = KO0EW03.XGPCD[KO0EWSB1];
      KO0EW01.KO0EWAPP = "KO0E010";
      KO0EW01.KO0EWBMF = "Y";
      KO0EW01.KO0EWNKF = "Y";
      KO0EW01.KO0EWEKF = "Y";
      KO0EW01.KO0EWNAF = "Y";
      KO0EW01.KO0EWEF1 = "Y";
    else
      if (KO0EW03.XGPCD[KO0EWSB1] != " "
       && KO0EW03.KO0EWSC2[KO0EWSB1] != " ")
        KO0EW03.KO0EWSC2[KO0EWSB1] = " ";
        KO0EW01.SM1AGYID = KO0EW03.SM1AGYID;
        KO0EW01.SM4REPID = KO0EW03.SM4REPID;
        KO0EW01.XGPCD = KO0EW03.XGPCD[KO0EWSB1];
        KO0EW01.KO0EWAPP = "KO0E015";
        KO0EW01.KO0EWCHF = "C";
        KO0EW01.KO0EWBMF = "Y";
        KO0EW01.KO0EWNKF = "Y";
        KO0EW01.KO0EWEKF = "Y";
        KO0EW01.KO0EWNAF = "Y";
        KO0EW01.KO0EWEF1 = "Y";
      else
        KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1;
      end
    end
  end
  ;
  if (KO0EW01.KO0EWEF1 == "N")
    KO0EW01.KO0EWAPP = "KO0E005";
    KO0EW01.KO0EWBMF = "Y";
    KO0EW01.KO0EWNKF = "Y";
    KO0EW01.KO0EWEKF = "Y";
    KO0EW01.KO0EWNAF = "Y";
    KO0EW01.KO0EWEF1 = "Y";
    KO0EW01.XGPCD = " ";
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESM8

// check for changes
Function KO0ESMA()
  ;
  ;
  if (KO0EM015.SM1AGYID != KO0EW01.SM1AGYID /* ; new map agcy*/
   || KO0EM015.SM4REPID != KO0EW01.SM4REPID /* ; new map rep*/
   || KO0EM015.XGPCD != KO0EW01.XGPCD)      /* ; new map gpc*/
    KO0EW01.KO0EWKCF = "Y"; /* ; set key change flag*/
  end
  ;
  KO0EW01.KO0EWSB1 = 1; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 <= 5) /* ; until end of map sched*/
    KO0ESMB(); /* ; check for sched change*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMA

// check for sched changes
Function KO0ESMB()
  ;
  ;
  KO0ESMC(); /* ; set work dates*/
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  if (KO0EM015.KO0EMCID[KO0EWSB1] == KO0EW02.KUCCOID[KO0EWSB2]
   && KO0EM015.XDVCD[KO0EWSB1] == KO0EW02.XDVCD[KO0EWSB2]
   && KO0EM015.XOBCD[KO0EWSB1] == KO0EW02.XOBCD[KO0EWSB2]
   && KO0EM015.KO0EMRPC[KO0EWSB1] == KO0EW02.KO0EWRPC[KO0EWSB2]
   && KO0EM015.KO0EMAPC[KO0EWSB1] == KO0EW02.KO0EWAPC[KO0EWSB2]
   && KO0EW01.KO0EWBMO == KO0EW02.KO0EWBMO[KO0EWSB2]
   && KO0EW01.KO0EWXMO == KO0EW02.KO0EWXMO[KO0EWSB2])
    KO0EW02.KO0EWOPT[KO0EWSB2] = " ";
  else
    if (KO0EW02.XGPCD[KO0EWSB2] == " ")
      KO0EW02.KO0EWOPT[KO0EWSB2] = "A";
      KO0EW01.KO0EWSCF = "Y";
    else
      if (KO0EM015.KO0EMRPC[KO0EWSB1] == 0
       && KO0EM015.KO0EMAPC[KO0EWSB1] == 0
       && KO0EM015.KO0EMBMO[KO0EWSB1] == " "
       && KO0EM015.KO0EMXMO[KO0EWSB1] == " ")
        KO0EW02.KO0EWOPT[KO0EWSB2] = "D";
        KO0EW01.KO0EWSCF = "Y";
      else
        KO0EW02.KO0EWOPT[KO0EWSB2] = "C";
        KO0EW01.KO0EWSCF = "Y";
      end
    end
  end
  ;
  KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 + 1; /* ; increment subscript*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMB

// set work dates
Function KO0ESMC()
  ;
  ;
  KO0EW01.KO0EWBMO = 0; /* ; reset w.s. begin month*/
  KO0EW01.KO0EWXMO = 0; /* ; reset w.s. end month*/
  ;
  if (KO0EM015.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin month*/
    KO0EW01.KO0EWDTA = KO0EM015.KO0EMBMO[KO0EWSB1];
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    /* ------ Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ------ Y2K OUT END ---------*/
    /* ------ Y2K IN  BEGIN -------*/
    if (KO0EW01.KO0EWYYB > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------ Y2K IN END ----------*/
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB;
  end
  ;
  if (KO0EM015.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end month*/
    KO0EW01.KO0EWDTA = KO0EM015.KO0EMXMO[KO0EWSB1];
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    /* ------ Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ------ Y2K OUT END ---------*/
    /* ------ Y2K IN  BEGIN -------*/
    if (KO0EW01.KO0EWYYB > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------ Y2K IN END ----------*/
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMC

// process key changes
Function KO0ESMD()
  ;
  ;
  if (KO0EW01.KO0EWFN1 != "U") /* ; function not = update*/
    set KO0EM015.SM1AGYID bold; /* ; highlight agcy*/
    set KO0EM015.SM4REPID bold; /* ; highlight rep*/
    set KO0EM015.XGPCD bold; /* ; highlight gpc*/
    KO0EW01.KO0EWMNO = 161;
  else
    if (KO0EW01.KO0EWSCF == "Y") /* ; sched changes made*/
      set KO0EM015.SM1AGYID bold; /* ; highlight agcy*/
      set KO0EM015.SM4REPID bold; /* ; highlight rep*/
      KO0EW01.KO0EWMNO = 163;
    else
      KO0EW01.SM1AGYID = KO0EM015.SM1AGYID;
      KO0EW01.SM4REPID = KO0EM015.SM4REPID;
      KO0EW01.XGPCD = KO0EM015.XGPCD;
      KO0EW01.KO0EWBMF = "Y";
      KO0EW01.KO0EWNKF = "Y";
      KO0EW01.KO0EWNAF = "Y";
      KO0EW01.KO0EWEKF = "Y";
      if (KO0EW01.SM1AGYID != KO0EW03.SM1AGYID
       || KO0EW01.SM4REPID != KO0EW03.SM4REPID)
        set KO0EW03 empty;
      else
        if (KO0EW01.XGPCD in KO0EW03.XGPCD)
          KO0EW03.KO0EWSC2[sysVar.arrayIndex] = " ";
        end
      end
    end
  end
  ;
  KO0EM015.SM1AGYID = KO0EW01.SM1AGYID;
  KO0EM015.SM4REPID = KO0EW01.SM4REPID;
  KO0EM015.XGPCD = KO0EW01.XGPCD;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMD

// process sched changes
Function KO0ESME()
  ;
  ;
  KO0ESMF(); /* ; edit function*/
  ;
  if (KO0EW01.KO0EWMNO == 0) /* ; no errors*/
    KO0EW01.KO0EWSB1 = 5; /* ; reset subscript*/
    while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map*/
      KO0ESMG(); /* ; edit map row*/
    end
    ;
    if (KO0EW01.KO0EWMNO == 0) /* ; no errors*/
      if (KO0EW01.KO0EWFN1 == "U") /* ; function = update*/
        KO0ESMT(); /* ; update sched*/
      else
        KO0EW01.KO0EWMNO = 76; /* ; edit is complete*/
      end
    end
    ;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESME

// edit function
Function KO0ESMF()
  ;
  ;
  if (KO0EW01.KO0EWFN1 == "X") /* ; function = exit*/
    KO0EW01.KO0EWMNO = 161;
  else
    if (KO0EW01.KO0EWFN1 == "D") /* ; function = delete*/
      KO0EW01.KO0EWMNO = 164;
    else
      if (KO0EW01.KO0EWFN1 == "B" /* ; function = scroll back*/
       || KO0EW01.KO0EWFN1 == "F") /* ; function = scroll frwd*/
        KO0EW01.KO0EWMNO = 174;
      end
    end
  end
  ;
  KO0EW01.KO0EWFN2 = " "; /* ; reset function 2 flag*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMF

// edit map row
Function KO0ESMG()
  ;
  ;
  KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
  ;
  if (KO0EM015.KO0EMCID[KO0EWSB1] != 0   /* ; row has cust*/
   || KO0EM015.XDVCD[KO0EWSB1] != " "    /* ; row has div*/
   || KO0EM015.XOBCD[KO0EWSB1] != " "    /* ; row has base ot*/
   || KO0EM015.KO0EMRPC[KO0EWSB1] != 0   /* ; row has rep pct*/
   || KO0EM015.KO0EMAPC[KO0EWSB1] != 0   /* ; row has agcy pct*/
   || KO0EM015.KO0EMBMO[KO0EWSB1] != " " /* ; row has begin date*/
   || KO0EM015.KO0EMXMO[KO0EWSB1] != " " /* ; row has end date*/
   || KO0EM015.KO0EMRCD[KO0EWSB1] != " ") /* ; row has maint code*/
    ;
    KO0ESMH(); /* ; build work fields*/
    KO0ESMI(); /* ; edit maint code*/
    KO0ESMJ(); /* ; edit dates*/
    KO0ESMM(); /* ; edit splits*/
    KO0ESMN(); /* ; edit key*/
  end
  ;
  KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1;
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMG

// build work fields
Function KO0ESMH()
  ;
  ;
  KO0EW01.KO0EWXMO = 0; /* ;     ; ws end date = 0*/
  KO0EW01.KO0EWBMO = 0; /* ;     ; ws begin date = 0*/
  KO0EW01.KO0EWPCT = 0; /* ;     ; reset pct total*/
  ;
  if (KO0EM015.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end date*/
    KO0EW01.KO0EWDT1 = KO0EM015.KO0EMXMO[KO0EWSB1];
    /* --------- Y2K OUT BEGIN ------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* --------- Y2K OUT END --------*/
    /* --------- Y2K IN  BEGIN ------*/
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* --------- Y2K IN END ---------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB;
  end
  ;
  if (KO0EM015.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin date*/
    KO0EW01.KO0EWDT1 = KO0EM015.KO0EMBMO[KO0EWSB1];
    /* --------- Y2K OUT BEGIN ------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* --------- Y2K OUT END --------*/
    /* --------- Y2K IN  BEGIN ------*/
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* --------- Y2K IN END ---------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB;
  end
  ;
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM015.KO0EMRPC[KO0EWSB1];
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM015.KO0EMAPC[KO0EWSB1];
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMH

// edit maint code
Function KO0ESMI()
  ;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] != " ") /* ; array has gpc code*/
    if (KO0EW02.KUCCOID[KO0EWSB2] == KO0EM015.KO0EMCID[KO0EWSB1]
     && KO0EW02.XDVCD[KO0EWSB2] == KO0EM015.XDVCD[KO0EWSB1]
     && KO0EW02.XOBCD[KO0EWSB2] == KO0EM015.XOBCD[KO0EWSB1]
     && KO0EW02.KO0EWBMO[KO0EWSB2] == KO0EW01.KO0EWBMO
     && KO0EW02.KO0EWRPC[KO0EWSB2] == KO0EM015.KO0EMRPC[KO0EWSB1]
     && KO0EW02.KO0EWAPC[KO0EWSB2] == KO0EM015.KO0EMAPC[KO0EWSB1]
     && KO0EW02.KO0EWXMO[KO0EWSB2] == KO0EW01.KO0EWXMO
     && KO0EM015.KO0EMRCD[KO0EWSB1] != " ")
      set KO0EM015.KO0EMRCD[KO0EWSB1] cursor, bold;
      KO0EW01.KO0EWMNO = 68;
    else
      if (KO0EW02.KUCCOID[KO0EWSB2] == KO0EM015.KO0EMCID[KO0EWSB1]
       && KO0EW02.XDVCD[KO0EWSB2] == KO0EM015.XDVCD[KO0EWSB1]
       && KO0EW02.XOBCD[KO0EWSB2] == KO0EM015.XOBCD[KO0EWSB1]
       && KO0EW02.KO0EWBMO[KO0EWSB2] == KO0EW01.KO0EWBMO)
        if (KO0EW02.KO0EWRPC[KO0EWSB2] != KO0EM015.KO0EMRPC[KO0EWSB1]
         || KO0EW02.KO0EWAPC[KO0EWSB2] != KO0EM015.KO0EMAPC[KO0EWSB1]
         || KO0EW02.KO0EWXMO[KO0EWSB2] != KO0EW01.KO0EWXMO)
          if (KO0EM015.KO0EMRCD[KO0EWSB1] != "CH")
            set KO0EM015.KO0EMRCD[KO0EWSB1] cursor, bold;
            KO0EW01.KO0EWMNO = 182;
          end
        end
      end
    end
  end
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] != " ") /* ; array has gpc code*/
    if (KO0EW02.KUCCOID[KO0EWSB2] != KO0EM015.KO0EMCID[KO0EWSB1]
     || KO0EW02.XDVCD[KO0EWSB2] != KO0EM015.XDVCD[KO0EWSB1]
     || KO0EW02.XOBCD[KO0EWSB2] != KO0EM015.XOBCD[KO0EWSB1]
     || KO0EW02.KO0EWBMO[KO0EWSB2] != KO0EW01.KO0EWBMO)
      if (KO0EM015.KO0EMRCD[KO0EWSB1] != "EA"
       && KO0EM015.KO0EMRCD[KO0EWSB1] != "EB")
        set KO0EM015.KO0EMRCD[KO0EWSB1] cursor, bold;
        KO0EW01.KO0EWMNO = 181;
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMI

// edit dates
Function KO0ESMJ()
  ;
  ;
  if (KO0EM015.KO0EMXMO[KO0EWSB1] != " ") /* ; map has end date*/
    KO0ESMK(); /* ; edit end date*/
  end
  ;
  if (KO0EM015.KO0EMBMO[KO0EWSB1] != " ") /* ; map has begin date*/
    KO0ESML(); /* ; edit begin date*/
  end
  ;
  if (KO0EM015.KO0EMBMO[KO0EWSB1] != " " /* ; map has begin date*/
   && KO0EM015.KO0EMXMO[KO0EWSB1] != " " /* ; map has end date*/
   && KO0EW01.KO0EWBMO > KO0EW01.KO0EWXMO)
    set KO0EM015.KO0EMBMO[KO0EWSB1] cursor, bold;
    set KO0EM015.KO0EMXMO[KO0EWSB1] bold;
    KO0EW01.KO0EWMNO = 184;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMJ

// edit end date
Function KO0ESMK()
  ;
  ;
  set TA2REC empty;
  ;
  KO0EW01.KO0EWDTB = KO0EW01.KO0EWXMO; /* ; build work date b*/
  KO0EW01.KO0EWCCD = KO0EW01.KO0EWCCB; /* ; build work date d - cc*/
  KO0EW01.KO0EWYYD = KO0EW01.KO0EWYYB; /* ; build work date d - yy*/
  KO0EW01.KO0EWMMD = KO0EW01.KO0EWMMB; /* ; build work date d - mm*/
  KO0EW01.KO0EWDDD = 1; /* ; build work date d - dd*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = KO0EW01.KO0EWDTD;
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* ; validate date*/
  ;
  if (TA2REC.TA2RTNCD != 0) /* ; invalid date*/
    set KO0EM015.KO0EMXMO[KO0EWSB1] cursor, bold;
    KO0EW01.KO0EWMNO = 183;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMK

// edit begin date
Function KO0ESML()
  ;
  ;
  set TA2REC empty;
  ;
  KO0EW01.KO0EWDTB = KO0EW01.KO0EWBMO; /* ; build work date b*/
  KO0EW01.KO0EWCCD = KO0EW01.KO0EWCCB; /* ; build work date d - cc*/
  KO0EW01.KO0EWYYD = KO0EW01.KO0EWYYB; /* ; build work date d - yy*/
  KO0EW01.KO0EWMMD = KO0EW01.KO0EWMMB; /* ; build work date d - mm*/
  KO0EW01.KO0EWDDD = 1; /* ; build work date d - dd*/
  ;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = KO0EW01.KO0EWDTD;
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* ; validate date*/
  ;
  if (TA2REC.TA2RTNCD != 0) /* ; invalid date*/
    set KO0EM015.KO0EMBMO[KO0EWSB1] cursor, bold;
    KO0EW01.KO0EWMNO = 183;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESML

// edit splits
Function KO0ESMM()
  ;
  ;
  if (KO0EW01.KO0EWPCT != 100) /* ; total pct not = 100*/
    if (KO0EW01.KO0EWPCT != 0 /* ; total pct = 0*/
     || KO0EW02.KO0EWOPT[KO0EWSB2] != "D") /* ; option = delete*/
      set KO0EM015.KO0EMRPC[KO0EWSB1] cursor, bold;
      set KO0EM015.KO0EMAPC[KO0EWSB1] bold;
      KO0EW01.KO0EWMNO = 165;
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMM

// edit key
Function KO0ESMN()
  ;
  ;
  if (KO0EM015.XOBCD[KO0EWSB1] != "**" /* ; all bot codes*/
   && KO0EM015.XOBCD[KO0EWSB1] != " ") /* ; no bot code*/
    if (KO0EM015.XOBCD[KO0EWSB1] in XOBTBL.XOBCD /* valid base ot*/
     && XOBTBL.XXXSTAT[sysVar.arrayIndex] != "A") /* ; inactive base ot*/
      set KO0EM015.XOBCD[KO0EWSB1] cursor, bold;
      KO0EW01.KO0EWMNO = 186;
    else
      if (sysVar.arrayIndex == 0)
        set KO0EM015.XOBCD[KO0EWSB1] cursor, bold;
        KO0EW01.KO0EWMNO = 175;
      end
    end
  end
  ;
  if (KO0EM015.XDVCD[KO0EWSB1] != "**" /* ; all div code*/
   && KO0EM015.XDVCD[KO0EWSB1] != " ") /* ; no div code*/
    if (KO0EM015.XDVCD[KO0EWSB1] in XDVTBL.XDVCD /* valid division*/
     && XDVTBL.XXXSTAT[sysVar.arrayIndex] != "A") /* ; inactive division*/
      set KO0EM015.XDVCD[KO0EWSB1] cursor, bold;
      KO0EW01.KO0EWMNO = 185;
    else
      if (sysVar.arrayIndex == 0)
        set KO0EM015.XDVCD[KO0EWSB1] cursor, bold;
        KO0EW01.KO0EWMNO = 176;
      end
    end
  end
  ;
  if (KO0EM015.KO0EMCID[KO0EWSB1] != -1 /* ; all map cust id*/
   && KO0EM015.KO0EMCID[KO0EWSB1] != 0) /* ; no map cust id*/
    if (KO0EM015.KO0EMCNM[KO0EWSB1] == " ") /* ; no cust name*/
      set KO0EM015.KO0EMCID[KO0EWSB1] cursor, bold;
      KO0EW01.KO0EWMNO = 172;
    end
  end
  ;
  if (KO0EW02.KO0EWOPT[KO0EWSB2] != " " /* ; array has option*/
   && KO0EW02.KO0EWOPT[KO0EWSB2] != "D") /* ; option not delete*/
    ;
    KO0ESMO(); /* ; build map dates*/
    ;
    KO0EW01.KO0EWEF1 = "N"; /* ; reset error flag*/
    KO0EW01.KO0EWSB3 = 1; /* ; reset subscript*/
    while (KO0EW01.KO0EWEF1 == "N" /* ; until error flag = 'y'*/
     && KO0EW01.KO0EWSB3 <= 5) /* ; until end of map*/
      ;
      if (KO0EW01.KO0EWSB3 != KO0EW01.KO0EWSB1)
        if (KO0EM015.KO0EMCID[KO0EWSB3] == KO0EM015.KO0EMCID[KO0EWSB1]
         && KO0EM015.XDVCD[KO0EWSB3] == KO0EM015.XDVCD[KO0EWSB1]
         && KO0EM015.XOBCD[KO0EWSB3] == KO0EM015.XOBCD[KO0EWSB1])
          KO0ESMP();
        end
      end
      ;
      KO0EW01.KO0EWSB3 = KO0EW01.KO0EWSB3 + 1;
      ;
    end
    ;
    if (KO0EW01.KO0EWEF1 == "N") /* ; error flag = 'n'*/
      while (KO0EW01.KO0EWEF1 == "N") /* ; until error flay = 'y'*/
        KO0ESMQ(); /* ; compare rec dates*/
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMN

// build map dates
Function KO0ESMO()
  ;
  ;
  if (KO0EM015.KO0EMBMO[KO0EWSB1] == " ")
    KO0EW01.KO0EWBMA = 0;
  else
    KO0EW01.KO0EWDT1 = KO0EM015.KO0EMBMO[KO0EWSB1];
    /* ------- Y2K OUT BEGIN -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ------- Y2K OUT END ---------*/
    /* ------- Y2K IN  BEGIN -------*/
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------- Y2K IN END -- -------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWBMA = KO0EW01.KO0EWDTB;
  end
  ;
  ;
   /* --------- Y2K OUT BEGIN ---------*/
   /* IF KO0EM015.KO0EMXMO(KO0EWSB1) EQ ' ';*/
    /* MOVE 199999 TO KO0EW01.KO0EWXMA;*/
   /* ELSE;*/
    /* MOVE KO0EM015.KO0EMXMO(KO0EWSB1) TO KO0EW01.KO0EWDT1;*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* MOVE KO0EW01.KO0EWYY1 TO KO0EW01.KO0EWYYB;*/
    /* MOVE KO0EW01.KO0EWMM1 TO KO0EW01.KO0EWMMB;*/
    /* MOVE KO0EW01.KO0EWDTB TO KO0EW01.KO0EWXMA;*/
   /* END;*/
   /* --------- Y2K OUT END -----------*/
   /* --------- Y2K IN  BEGIN ---------*/
  if (KO0EM015.KO0EMXMO[KO0EWSB1] == " ")
    KO0EW01.KO0EWXMA = 204399;
    /* HIGH MAX DATE THAT MAPPER COULD HANDLE IF NEEDED (< 205099)*/
  else
    KO0EW01.KO0EWDT1 = KO0EM015.KO0EMXMO[KO0EWSB1];
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWXMA = KO0EW01.KO0EWDTB;
  end
   /* --------- Y2K OUT BEGIN ---------*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMO

// compare map dates
Function KO0ESMP()
  ;
  ;
  if (KO0EM015.KO0EMBMO[KO0EWSB3] == " ")
    KO0EW01.KO0EWBMB = 0;
  else
    KO0EW01.KO0EWDT1 = KO0EM015.KO0EMBMO[KO0EWSB3];
    /* --------- y2k out begin -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* --------- y2k out end ---------*/
    /* --------- y2k in  begin -------*/
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* --------- y2k in end -- -------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWBMB = KO0EW01.KO0EWDTB;
  end
  ;
  ;
   /* --------- y2k out begin ---------*/
   /* IF KO0EM015.KO0EMXMO(KO0EWSB3) EQ ' ';*/
    /* MOVE 199999 TO KO0EW01.KO0EWXMB;*/
   /* ELSE;*/
    /* MOVE KO0EM015.KO0EMXMO(KO0EWSB3) TO KO0EW01.KO0EWDT1;*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* MOVE KO0EW01.KO0EWYY1 TO KO0EW01.KO0EWYYB;*/
    /* MOVE KO0EW01.KO0EWMM1 TO KO0EW01.KO0EWMMB;*/
    /* MOVE KO0EW01.KO0EWDTB TO KO0EW01.KO0EWXMB;*/
   /* END;*/
   /* --------- y2k out end -----------*/
  ;
   /* --------- y2k in  begin ---------*/
  if (KO0EM015.KO0EMXMO[KO0EWSB3] == " ")
    KO0EW01.KO0EWXMB = 204399;
    /* high max date mapper can handle if needed (<205099)*/
  else
    KO0EW01.KO0EWDT1 = KO0EM015.KO0EMXMO[KO0EWSB3];
    if (KO0EW01.KO0EWYY1 > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYY1;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMM1;
    KO0EW01.KO0EWXMB = KO0EW01.KO0EWDTB;
  end
   /* --------- y2k in end ------------*/
  ;
  if (KO0EW01.KO0EWBMA < KO0EW01.KO0EWBMB
   && KO0EW01.KO0EWXMA < KO0EW01.KO0EWBMB)
    return;
  else
    if (KO0EW01.KO0EWBMA > KO0EW01.KO0EWBMB
     && KO0EW01.KO0EWBMA > KO0EW01.KO0EWXMB)
      return;
    else
      set KO0EM015.KO0EMBMO[KO0EWSB1] cursor, bold;
      set KO0EM015.KO0EMXMO[KO0EWSB1] bold;
      KO0EW01.KO0EWMNO = 180;
      KO0EW01.KO0EWEF1 = "Y";
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMP

// compare array dates
Function KO0ESMQ()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM015.SM1AGYID;
  KOEREC.SM4REPID = KO0EM015.SM4REPID;
  KOEREC.XGPCD = KO0EM015.XGPCD;
  ;
  call "IO0700" ("SS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; successful return*/
    ;
    while (SQLCA.VAGen_SQLCODE == 0) /* ; until unsuccessful rtn*/
      KO0ESMR(); /* ; fetch next record*/
    end
    ;
    call "IO0700" ("CS", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
    ;
  else
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESMQ";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* abort*/
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMQ

// fetch next record
Function KO0ESMR()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  call "IO0700" ("SN", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* ; fetch was successful*/
    ;
    if (KOEREC.KUCCOID == KO0EM015.KO0EMCID[KO0EWSB1]
     && KOEREC.XDVCD == KO0EM015.XDVCD[KO0EWSB1]
     && KOEREC.XOBCD == KO0EM015.XOBCD[KO0EWSB1])
      KO0ESMS(); /* ; compare koerec dates*/
    end
    ;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* ; at end of recs*/
      KO0EW01.KO0EWEF1 = "Y"; /* ; set error flag 1*/
    else
      TA1REC.TA1DBASE = "DCOMM";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESMR";
      TA1REC.TA1LOCAT[2] = "IO0700";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMR

// compare to record dates
Function KO0ESMS()
  ;
  ;
  KO0EW01.KO0EWEF2 = "N"; /* ; reset error flag 2*/
  KO0EW01.KO0EWSB2 = 1; /* ; reset subscript*/
  ;
  while (KO0EW01.KO0EWEF2 == "N"
   /* ; until error flag 2 = 'y'*/
   && KO0EW01.KO0EWSB2 <= 5) /* ; or end of map*/
    KO0EW01.KO0EWSB3 = KO0EW01.KO0EWSB2 + KO0EW02.KO0EWPOS;
    if (KOEREC.XGPCD == KO0EW02.XGPCD[KO0EWSB3]
     && KOEREC.KUCCOID == KO0EW02.KUCCOID[KO0EWSB3]
     && KOEREC.XDVCD == KO0EW02.XDVCD[KO0EWSB3]
     && KOEREC.XOBCD == KO0EW02.XOBCD[KO0EWSB3]
     && KOEREC.KOEASBMO == KO0EW02.KO0EWBMO[KO0EWSB3])
      KO0EW01.KO0EWEF2 = "Y"; /* ; set error flag 2*/
    else
      KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB2 + 1;
    end
  end
  ;
  if (KO0EW01.KO0EWEF2 == "N") /* ; record is not on map*/
    ;
    KO0EW01.KO0EWBMB = KOEREC.KOEASBMO;
    ;
   /* -------- y2k out begin -------*/
    /* IF KOEREC.KOEASXMO EQ 0;*/
      /* MOVE 199999 TO KO0EW01.KO0EWXMB;*/
    /* ELSE;*/
      /* MOVE KOEREC.KOEASXMO TO KO0EW01.KO0EWXMB;*/
    /* END;*/
   /* -------- y2k out end ---------*/
   /* -------- y2k in  begin -------*/
    if (KOEREC.KOEASXMO == 0)
      KO0EW01.KO0EWXMB = 204399;
   /* highest max date mapper can handle if needed (<205099)*/
    else
      KO0EW01.KO0EWXMB = KOEREC.KOEASXMO;
    end
   /* -------- y2k in end ----------*/
    ;
    if (KO0EW01.KO0EWBMA < KO0EW01.KO0EWBMB
     && KO0EW01.KO0EWXMA < KO0EW01.KO0EWBMB)
      return;
    else
      if (KO0EW01.KO0EWBMA > KO0EW01.KO0EWBMB
       && KO0EW01.KO0EWBMA > KO0EW01.KO0EWXMB)
        return;
      else
        set KO0EM015.KO0EMBMO[KO0EWSB1] cursor, bold;
        set KO0EM015.KO0EMXMO[KO0EWSB1] bold;
        KO0EW01.KO0EWMNO = 180;
        KO0EW01.KO0EWEF1 = "Y";
      end
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMS

// update sched recs
Function KO0ESMT()
  ;
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "KO0ESMT";
    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    COMMAREA.CATOAP = "KO0A";
    XSEXIT();
    exit program;
  end
  ;
  KO0EW01.KO0EWSB1 = 5; /* ; reset map subscript*/
  while (KO0EW01.KO0EWSB1 > 0) /* ; until top of map*/
    ;
    KO0ESMU(); /* ; build work fields*/
    ;
    KO0EW01.KO0EWSB2 = KO0EW01.KO0EWSB1 + KO0EW02.KO0EWPOS;
    ;
    if (KO0EM015.KO0EMCID[KO0EWSB1] != KO0EW02.KUCCOID[KO0EWSB2]
     || KO0EM015.XDVCD[KO0EWSB1] != KO0EW02.XDVCD[KO0EWSB2]
     || KO0EM015.XOBCD[KO0EWSB1] != KO0EW02.XOBCD[KO0EWSB2]
     || KO0EM015.KO0EMRPC[KO0EWSB1] != KO0EW02.KO0EWRPC[KO0EWSB2]
     || KO0EM015.KO0EMAPC[KO0EWSB1] != KO0EW02.KO0EWAPC[KO0EWSB2]
     || KO0EW01.KO0EWBMO != KO0EW02.KO0EWBMO[KO0EWSB2]
     || KO0EW01.KO0EWXMO != KO0EW02.KO0EWXMO[KO0EWSB2])
      ;
      if (KO0EW02.KO0EWOPT[KO0EWSB2] == "D"   /* ; option = 'delete'*/
       || KO0EM015.KO0EMRCD[KO0EWSB1] == "EA" /* ; maint code = 'ea'*/
       || KO0EM015.KO0EMRCD[KO0EWSB1] == "EB") /* ; maint code = 'eb'*/
        if (KO0EW02.ZZZSDT[KO0EWSB2] != 0) /* ; row has setup date*/
          KO0ESMV(); /* ; delete sched row*/
        end
      end
      ;
      if (KO0EW02.KO0EWOPT[KO0EWSB2] == "A"   /* ; option = 'add'*/
       || KO0EM015.KO0EMRCD[KO0EWSB1] == "EA" /* ; maint code = 'ea'*/
       || KO0EM015.KO0EMRCD[KO0EWSB1] == "EB") /* ; maint code = 'eb'*/
        if (KO0EW01.KO0EWPCT != 0) /* ;      ; total pct not = 0*/
          KO0ESMW(); /* ; add sched row*/
        end
      end
      ;
      if (KO0EM015.KO0EMRCD[KO0EWSB1] == "CH" /* ; maint code = 'ch'*/
       || KO0EW02.KO0EWOPT[KO0EWSB2] == "C")  /* ; option = 'change'*/
        KO0ESMX(); /* ; update sched row*/
      end
      ;
      KO0ESMY(); /* ; write audit recs*/
      KO0ESMZ(); /* ; update array*/
      ;
    end
    ;
    KO0EW01.KO0EWSB1 = KO0EW01.KO0EWSB1 - 1; /* ; increment subscript*/
    ;
  end
  ;
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* ; commit db changes*/
  ;
  KO0EW01.KO0EWBMF = "Y"; /* ; set build map flag*/
  KO0EW01.KO0EWNAF = "Y"; /* ; set new array flag*/
  KO0EW01.KO0EWMNO = 80; /* ; set w.s. mssg nbr*/
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMT

// build work dates
Function KO0ESMU()
  ;
  ;
  KO0EW01.KO0EWPCT = 0;
  KO0EW01.KO0EWBMO = 0;
  KO0EW01.KO0EWXMO = 0;
  ;
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM015.KO0EMRPC[KO0EWSB1];
  KO0EW01.KO0EWPCT = KO0EW01.KO0EWPCT + KO0EM015.KO0EMAPC[KO0EWSB1];
  ;
  if (KO0EM015.KO0EMBMO[KO0EWSB1] != " ")
    KO0EW01.KO0EWDTA = KO0EM015.KO0EMBMO[KO0EWSB1];
    /* ------ y2k out begin -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ------ y2k out end ---------*/
    /* ------ y2k in  begin -------*/
    if (KO0EW01.KO0EWYYA > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------ y2k in end ----------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWBMO = KO0EW01.KO0EWDTB;
  end
  ;
  if (KO0EM015.KO0EMXMO[KO0EWSB1] != " ")
    KO0EW01.KO0EWDTA = KO0EM015.KO0EMXMO[KO0EWSB1];
    /* ------ y2k out begin -------*/
    /* MOVE 19 TO KO0EW01.KO0EWCCB;*/
    /* ------ y2k out end ---------*/
    /* ------ y2k in  begin -------*/
    if (KO0EW01.KO0EWYYA > 60)
      KO0EW01.KO0EWCCB = 19;
    else
      KO0EW01.KO0EWCCB = 20;
    end
    /* ------ y2k in end ----------*/
    KO0EW01.KO0EWYYB = KO0EW01.KO0EWYYA;
    KO0EW01.KO0EWMMB = KO0EW01.KO0EWMMA;
    KO0EW01.KO0EWXMO = KO0EW01.KO0EWDTB;
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMU

// delete sched row
Function KO0ESMV()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM015.SM1AGYID;
  KOEREC.SM4REPID = KO0EM015.SM4REPID;
  KOEREC.XGPCD = KO0EM015.XGPCD;
  KOEREC.KUCCOID = KO0EW02.KUCCOID[KO0EWSB2];
  KOEREC.XDVCD = KO0EW02.XDVCD[KO0EWSB2];
  KOEREC.XOBCD = KO0EW02.XOBCD[KO0EWSB2];
  KOEREC.KOEASBMO = KO0EW02.KO0EWBMO[KO0EWSB2];
  ;
  call "IO0700" ("D ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; delete unsuccessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESMV";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* ; abort*/
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = "D";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMV

// add sched row
Function KO0ESMW()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM015.SM1AGYID;
  KOEREC.SM4REPID = KO0EM015.SM4REPID;
  KOEREC.XGPCD = KO0EM015.XGPCD;
  KOEREC.KUCCOID = KO0EM015.KO0EMCID[KO0EWSB1];
  KOEREC.XDVCD = KO0EM015.XDVCD[KO0EWSB1];
  KOEREC.XOBCD = KO0EM015.XOBCD[KO0EWSB1];
  KOEREC.KOEASBMO = KO0EW01.KO0EWBMO;
  KOEREC.KOEASXMO = KO0EW01.KO0EWXMO;
  KOEREC.KOEASPCT = KO0EM015.KO0EMAPC[KO0EWSB1];
  KOEREC.XXXUSRID = COMMAREA.CAUSERID;
  KOEREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOEREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  KOEREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  KOEREC.ZZZCHGCT = 0;
  ;
  call "IO0700" ("A ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; add not sucessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESMW";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* ; abort*/
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = "A";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMW

// update sched row
Function KO0ESMX()
  ;
  ;
  set SQLCA empty;
  set KOEREC empty;
  ;
  KOEREC.SM1AGYID = KO0EM015.SM1AGYID;
  KOEREC.SM4REPID = KO0EM015.SM4REPID;
  KOEREC.XGPCD = KO0EM015.XGPCD;
  KOEREC.KUCCOID = KO0EM015.KO0EMCID[KO0EWSB1];
  KOEREC.XDVCD = KO0EM015.XDVCD[KO0EWSB1];
  KOEREC.XOBCD = KO0EM015.XOBCD[KO0EWSB1];
  KOEREC.KOEASBMO = KO0EW01.KO0EWBMO;
  KOEREC.KOEASXMO = KO0EW01.KO0EWXMO;
  KOEREC.KOEASPCT = KO0EM015.KO0EMAPC[KO0EWSB1];
  KOEREC.XXXUSRID = COMMAREA.CAUSERID;
  KOEREC.ZZZSDT = KO0EW02.ZZZSDT[KO0EWSB2];
  KOEREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  KOEREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  KOEREC.ZZZCHGCT = KO0EW02.ZZZCHGCT[KO0EWSB2];
  ;
  call "IO0700" ("U ", SQLCA, KOEREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* ; update unsuccessful*/
    TA1REC.TA1DBASE = "DCOMM";
    TA1REC.TA1TBLVU = "VASSCH01";
    TA1REC.TA1LOCAT[1] = "KO0ESMX";
    TA1REC.TA1LOCAT[2] = "IO0700";
    XSKO001(); /* abort*/
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = "C";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMX

// write audit recs
Function KO0ESMY()
  ;
  ;
  set KOAREC empty;
  set SQLCA empty;
  ;
  KOAREC.KOATBLCD = 10;
  KOAREC.XXXTBLNM = "VASSCH01";
  KOAREC.ZZZSDT = TA2REC.TA2GRGGN;
  KOAREC.ZZHHMMSS = TA2REC.TA2TIMEN;
  KOAREC.SM1AGYID = KO0EM015.SM1AGYID;
  KOAREC.SM4REPID = KO0EM015.SM4REPID;
   /* ***MOVE KO0EM015.KO0EMRCD(KO0EWSB1) TO KOAREC.XRCCD; /* 02-24-94*/
  KOAREC.XXXUSRID = COMMAREA.CAUSERID;
  ;
  if (KO0EW02.XGPCD[KO0EWSB2] != " ")
    ;
    if (KO0EM015.KO0EMRPC[KO0EWSB1] != 0
     || KO0EM015.KO0EMAPC[KO0EWSB1] != 0
     || KO0EM015.KO0EMBMO[KO0EWSB1] != " "
     || KO0EM015.KO0EMXMO[KO0EWSB1] != " ")
      KOAREC.KOAACTTY = "2";
    else
      KOAREC.KOAACTTY = "4";
    end
    ;
    KOAREC.XGPCD = KO0EW02.XGPCD[KO0EWSB2];
    KOAREC.KOEASPCT = KO0EW02.KO0EWAPC[KO0EWSB2];
    KOAREC.KOACRSDT = KO0EW02.ZZZSDT[KO0EWSB2];
    KOAREC.XXXUSRID = COMMAREA.CAUSERID;
    KOAREC.KUCCOID = KO0EW02.KUCCOID[KO0EWSB2];
    KOAREC.XDVCD = KO0EW02.XDVCD[KO0EWSB2];
    KOAREC.XOBCD = KO0EW02.XOBCD[KO0EWSB2];
    KOAREC.KOEASBMO = KO0EW02.KO0EWBMO[KO0EWSB2];
    KOAREC.KOEASXMO = KO0EW02.KO0EWXMO[KO0EWSB2];
    ;
    call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1DBASE = "DCOMM ";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESMY  ";
      TA1REC.TA1LOCAT[1] = "IO0630   ";
      XSKO001(); /* abort*/
    end
  end
  ;
  if (KO0EM015.KO0EMCID[KO0EWSB1] != 0
   || KO0EM015.XDVCD[KO0EWSB1] != " "
   || KO0EM015.XOBCD[KO0EWSB1] != " "
   || KO0EM015.KO0EMRPC[KO0EWSB1] != 0
   || KO0EM015.KO0EMAPC[KO0EWSB1] != 0
   || KO0EM015.KO0EMBMO[KO0EWSB1] != " "
   || KO0EM015.KO0EMXMO[KO0EWSB1] != " ")
    ;
    if (KO0EW02.XGPCD[KO0EWSB2] == " ")
      KOAREC.KOAACTTY = "1";
    else
      KOAREC.KOAACTTY = "3";
    end
    ;
    KOAREC.KUCCOID = KO0EM015.KO0EMCID[KO0EWSB1];
    KOAREC.XDVCD = KO0EM015.XDVCD[KO0EWSB1];
    KOAREC.XOBCD = KO0EM015.XOBCD[KO0EWSB1];
    KOAREC.KOEASBMO = KO0EW01.KO0EWBMO;
    KOAREC.KOEASXMO = KO0EW01.KO0EWXMO;
    KOAREC.KOEASPCT = KO0EM015.KO0EMAPC[KO0EWSB1];
    ;
    call "IO0630" ("A ", SQLCA, KOAREC) {isNoRefresh = yes, isExternal = yes};
    ;
    if (SQLCA.VAGen_SQLCODE != +0)
      TA1REC.TA1DBASE = "DCOMM ";
      TA1REC.TA1TBLVU = "VASSCH01";
      TA1REC.TA1LOCAT[1] = "KO0ESMY  ";
      TA1REC.TA1LOCAT[1] = "IO0630   ";
      XSKO001(); /* ; abort*/
    end
  end
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMY

// update array
Function KO0ESMZ()
  ;
  ;
  KO0EW02.KUCCOID[KO0EWSB2] = KO0EM015.KO0EMCID[KO0EWSB1];
  KO0EW02.XDVCD[KO0EWSB2] = KO0EM015.XDVCD[KO0EWSB1];
  KO0EW02.XOBCD[KO0EWSB2] = KO0EM015.XOBCD[KO0EWSB1];
  KO0EW02.KO0EWRPC[KO0EWSB2] = KO0EM015.KO0EMRPC[KO0EWSB1];
  KO0EW02.KO0EWAPC[KO0EWSB2] = KO0EM015.KO0EMAPC[KO0EWSB1];
  KO0EW02.KO0EWBMO[KO0EWSB2] = KO0EW01.KO0EWBMO;
  KO0EW02.KO0EWXMO[KO0EWSB2] = KO0EW01.KO0EWXMO;
  ;
  if (KO0EW02.KO0EWOPT[KO0EWSB2] == "A") /* ; array option = 'a'*/
    KO0EW02.XGPCD[KO0EWSB2] = KO0EM015.XGPCD;
    KO0EW02.ZZZSDT[KO0EWSB2] = TA2REC.TA2GRGGN;
    KO0EW02.ZZZCHGCT[KO0EWSB2] = 0;
  else
    if (KO0EW02.KO0EWOPT[KO0EWSB2] == "C") /* ; array option = 'c'*/
      KO0EW02.ZZZCHGCT[KO0EWSB2] = KO0EW02.ZZZCHGCT[KO0EWSB2] + 1;
    else
      KO0EW02.XGPCD[KO0EWSB2] = " ";
      KO0EW02.ZZZSDT[KO0EWSB2] = 0;
      KO0EW02.ZZZCHGCT[KO0EWSB2] = 0;
    end
  end
  ;
  KO0EW02.KO0EWOPT[KO0EWSB2] = " ";
  ;
  ;
   /* *************************************************************/
  ;
end // end KO0ESMZ

Record KO0EW01 type basicRecord
  10 KO0EWAPP KO0EWAPP ; 
  10 KO0EWCSM KO0EWCSM ; 
  10 KO0EWNSM KO0EWNSM ; 
  10 CAITEM CAITEM ; 
    15 KO0EWID1 KO0EWID1 ; 
    15 KO0EWID2 KO0EWID2 ; 
    15 * char(12) ; 
  10 KO0EWCHF KO0EWCHF ; 
  10 KO0EWBMF KO0EWBMF ; 
  10 KO0EWNKF KO0EWNKF ; 
  10 KO0EWNAF KO0EWNAF ; 
  10 KO0EWEKF KO0EWEKF ; 
  10 KO0EWKEF KO0EWKEF ; 
  10 KO0EWKWF KO0EWKWF ; 
  10 KO0EWSFF KO0EWSFF ; 
  10 KO0EWHEF KO0EWHEF ; 
  10 KO0EWEAF KO0EWEAF ; 
  10 KO0EWSAF KO0EWSAF ; 
  10 KO0EWFAF KO0EWFAF ; 
  10 KO0EWDAF KO0EWDAF ; 
  10 KO0EWKCF KO0EWKCF ; 
  10 KO0EWSCF KO0EWSCF ; 
  10 KO0EWFCF KO0EWFCF ; 
  10 SM1AGYID SM1AGYID ; 
  10 SM1AGYNM SM1AGYNM ; 
  10 SM4REPID SM4REPID ; 
  10 XXXLSTNM XXXLSTNM ; 
  10 XXXFSTNM XXXFSTNM ; 
  10 XXXMDINT XXXMDINT ; 
  10 KO0EWPCT KO0EWPCT ; 
  10 KO0EWFN1 KO0EWFN1 ; 
  10 KO0EWFN2 KO0EWFN2 ; 
  10 KO0EWMNO KO0EWMNO ; 
  10 KO0EWMSG KO0EWMSG ; 
  10 KO0EWBMO KO0EWBMO ; 
  10 KO0EWXMO KO0EWXMO ; 
  10 KO0EWBMA KO0EWBMA ; 
  10 KO0EWXMA KO0EWXMA ; 
  10 KO0EWBMB KO0EWBMB ; 
  10 KO0EWXMB KO0EWXMB ; 
  10 XGPCD XGPCD ; 
  10 XGPDESC XGPDESC ; 
  10 KUCCOID KUCCOID ; 
  10 KUCGRPID KUCGRPID ; 
  10 KO0EWDTA KO0EWDTA ; 
    15 KO0EWMMA KO0EWMMA ; 
    15 KO0EWFLA KO0EWFLA ; 
    15 KO0EWYYA KO0EWYYA ; 
  10 KO0EWDTB KO0EWDTB ; 
    15 KO0EWCCB KO0EWCCB ; 
    15 KO0EWYYB KO0EWYYB ; 
    15 KO0EWMMB KO0EWMMB ; 
  10 KO0EWDTD KO0EWDTD ; 
    15 KO0EWCCD KO0EWCCD ; 
    15 KO0EWYYD KO0EWYYD ; 
    15 KO0EWMMD KO0EWMMD ; 
    15 KO0EWDDD KO0EWDDD ; 
  10 KO0EWDT1 KO0EWDT1 ; 
    15 KO0EWMM1 KO0EWMM1 ; 
    15 KO0EWFL1 KO0EWFL1 ; 
    15 KO0EWYY1 KO0EWYY1 ; 
  10 KO0EWDT2 KO0EWDT2 ; 
    15 KO0EWMM2 KO0EWMM2 ; 
    15 KO0EWYY2 KO0EWYY2 ; 
    15 * char(1) ; 
  10 KO0EWEF1 KO0EWEF1 ; 
  10 KO0EWEF2 KO0EWEF2 ; 
  10 KO0EWSB1 KO0EWSB1 ; 
  10 KO0EWSB2 KO0EWSB2 ; 
  10 KO0EWSB3 KO0EWSB3 ; 
  10 KO0EWFF1 KO0EWFF1 ; 
  10 KO0EWFF2 KO0EWFF2 ; 
end // end KO0EW01

//*** RECORD=KO0EW02 ****
// this will set-up one area for adding zzz-stuff to each
// db2 table.
// ***********************
Record KO0EW02 type basicRecord
  10 KO0EWTB2 KO0EWTB2 [100] ; 
    15 KO0EWOPT KO0EWOPT ; 
    15 KO0EWFF1 KO0EWFF1 ; 
    15 KO0EWFF2 KO0EWFF2 ; 
    15 XGPCD XGPCD ; 
    15 KUCCOID KUCCOID ; 
    15 XDVCD XDVCD ; 
    15 XOBCD XOBCD ; 
    15 KO0EWRPC KO0EWRPC ; 
    15 KO0EWAPC KO0EWAPC ; 
    15 KO0EWBMO KO0EWBMO ; 
    15 KO0EWXMO KO0EWXMO ; 
    15 ZZZSDT ZZZSDT ; 
    15 ZZZCHGCT ZZZCHGCT ; 
  10 KO0EWTOT KO0EWTOT ; 
  10 KO0EWTTL KO0EWTTL ; 
  10 KO0EWPOS KO0EWPOS ; 
end // end KO0EW02

//*** RECORD=KO0EW03 ****
// this will set-up one area for adding zzz-stuff to each
// db2 table.
// ***********************
Record KO0EW03 type basicRecord
  10 SM1AGYID SM1AGYID ; 
  10 SM4REPID SM4REPID ; 
  10 KO0EWTB3 KO0EWTB3 [10] ; 
    15 XGPCD XGPCD ; 
    15 KO0EWSC1 KO0EWSC1 ; 
    15 KO0EWSC2 KO0EWSC2 ; 
  10 KUCCOID KUCCOID ; 
end // end KO0EW03

// pct to agcy
DataItem KO0EWAPC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. application proc
DataItem KO0EWAPP char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// beginning month a
DataItem KO0EWBMA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// beginning month b
DataItem KO0EWBMB int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// build map flag
DataItem KO0EWBMF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// beginning month
DataItem KO0EWBMO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date b century
DataItem KO0EWCCB num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date d century
DataItem KO0EWCCD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current/history flag
DataItem KO0EWCHF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current statement month
DataItem KO0EWCSM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// delete allowed flag
DataItem KO0EWDAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date d day
DataItem KO0EWDDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 1
DataItem KO0EWDT1 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date 2
DataItem KO0EWDT2 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date a
DataItem KO0EWDTA char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date b
DataItem KO0EWDTB num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date d
DataItem KO0EWDTD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// edit allowed flag
DataItem KO0EWEAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag 1
DataItem KO0EWEF1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag 2
DataItem KO0EWEF2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// edit key flag
DataItem KO0EWEKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function allowed flag
DataItem KO0EWFAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function change flag
DataItem KO0EWFCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function flag 1
DataItem KO0EWFF1 char(1)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// function flag 2
DataItem KO0EWFF2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date 1 filler
DataItem KO0EWFL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date a filler
DataItem KO0EWFLA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function 1
DataItem KO0EWFN1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function 2
DataItem KO0EWFN2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// history exists flag
DataItem KO0EWHEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sales agency id
DataItem KO0EWID1 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sales rep id
DataItem KO0EWID2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// key change flag
DataItem KO0EWKCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key error flag
DataItem KO0EWKEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key warning flag
DataItem KO0EWKWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work date 1 month
DataItem KO0EWMM1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 2 month
DataItem KO0EWMM2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date a month
DataItem KO0EWMMA num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date b month
DataItem KO0EWMMB num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date d month
DataItem KO0EWMMD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. mssg nbr
DataItem KO0EWMNO num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. mssg
DataItem KO0EWMSG char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new array flag
DataItem KO0EWNAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new key flag
DataItem KO0EWNKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// next statment month
DataItem KO0EWNSM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// option flag
DataItem KO0EWOPT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w.s. pct total
DataItem KO0EWPCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gpc array pos
DataItem KO0EWPOS num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pct to rep
DataItem KO0EWRPC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// scroll allowed flag
DataItem KO0EWSAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w.s. subscript 1
DataItem KO0EWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. subscript 2
DataItem KO0EWSB2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. subscript 3
DataItem KO0EWSB3 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// selection code 1
DataItem KO0EWSC1 char(1)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// selection code 2
DataItem KO0EWSC2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// schedule change flag
DataItem KO0EWSCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// schedule found flag
DataItem KO0EWSFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KO0EWTB2 char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KO0EWTB3 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gpc array total 1
DataItem KO0EWTOT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gpc array total 2
DataItem KO0EWTTL num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ending month a
DataItem KO0EWXMA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ending month b
DataItem KO0EWXMB int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ending month
DataItem KO0EWXMO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 1 year
DataItem KO0EWYY1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date 2 year
DataItem KO0EWYY2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date a year
DataItem KO0EWYYA num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date b year
DataItem KO0EWYYB num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date d year
DataItem KO0EWYYD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

